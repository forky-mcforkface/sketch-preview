//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct BCEdgePaddings {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct BCPixel {
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct FBBezierCurveData {
    struct CGPoint endPoint1;
    struct CGPoint controlPoint1;
    struct CGPoint controlPoint2;
    struct CGPoint endPoint2;
    char isStraightLine;
    char looksLikeStraightLine;
    double length;
    struct CGRect bounds;
    char isPoint;
    struct CGRect boundingRect;
};

struct FBBezierCurveLocation {
    double _field1;
    double _field2;
};

struct FBBezierPathElement {
    int _field1;
    struct CGPoint _field2;
    struct CGPoint _field3[2];
};

struct FBEdgeOverlapRunStartStopInsides {
    char isValid;
    char startInside;
    char stopInside;
};

struct FBEdgeOverlapRunTestPoints {
    char isValid;
    struct CGPoint startPoint;
    struct CGPoint stopPoint;
};

struct FBRange {
    double minimum;
    double maximum;
};

struct MSModelObject {
    Class _field1;
    id _field2;
    id _field3;
    id _field4;
    char _field5;
};

struct MSPresetIteratorStruct {
    long long _field1;
    long long _field2;
    long long _field3;
};

struct MSTangent {
    double _field1;
    double _field2;
    double _field3;
};

struct NSBezierElement {
    unsigned long long _field1;
    struct CGPoint _field2;
    struct CGPoint _field3[2];
};

struct NSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _CHTransformStruct {
    double _field1;
    char _field2;
    char _field3;
    char _field4;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct addrinfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    char *_field6;
    struct sockaddr *_field7;
    struct addrinfo *_field8;
};

struct sockaddr;

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long numberOfRows;
    unsigned long long numberOfColumns;
    long long horizontalPadding;
    long long verticalPadding;
    char hasHorizontalPadding;
    char hasVerticalPadding;
    char skipFillingHoles;
} CDStruct_ec0e0888;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long byEvent[6];
} CDStruct_aac06691;

typedef struct {
    char *_field1;
    unsigned int _field2;
    char *_field3;
    char *_field4;
} CDStruct_5b5d1a5d;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
} CDStruct_8727d297;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

#pragma mark -

//
// File: /Applications/Sketch.app/Contents/MacOS/Sketch
// UUID: B8E2B1EC-23DC-3B06-B3D7-F1441D65CCC1
//
//                           Arch: x86_64
//                 Source version: 0.0.0.0.0
//       Minimum Mac OS X version: 10.11.2
//                    SDK version: 10.13.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/../Frameworks
//                               = /Applications/Sketch.app/Contents/Frameworks
//                       Run path: @executable_path/Frameworks
//                               = /Applications/Sketch.app/Contents/MacOS/Frameworks
//                       Run path: @loader_path/Frameworks
//                               = /Applications/Sketch.app/Contents/MacOS/Frameworks
//

@protocol AFMultipartFormData
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(NSDictionary *)arg1 body:(NSData *)arg2;
- (void)appendPartWithFormData:(NSData *)arg1 name:(NSString *)arg2;
- (void)appendPartWithFileData:(NSData *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4;
- (void)appendPartWithInputStream:(NSInputStream *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 length:(long long)arg4 mimeType:(NSString *)arg5;
- (BOOL)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4 error:(id *)arg5;
- (BOOL)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 error:(id *)arg3;
@end

@protocol AFURLRequestSerialization <NSObject, NSSecureCoding, NSCopying>
- (NSURLRequest *)requestBySerializingRequest:(NSURLRequest *)arg1 withParameters:(id)arg2 error:(id *)arg3;
@end

@protocol AFURLResponseSerialization <NSObject, NSSecureCoding, NSCopying>
- (id)responseObjectForResponse:(NSURLResponse *)arg1 data:(NSData *)arg2 error:(id *)arg3;
@end

@protocol BCColorPreviewDelegate <NSObject>
- (NSColorSpace *)colorPreviewColorSpace:(BCColorPreview *)arg1;
@end

@protocol BCHSBColorPickerDelegate <NSObject>
- (NSColorSpace *)hsbColorPickerPreviewColorSpace:(BCHSBColorPicker *)arg1;
- (NSColorSpace *)hsbColorPickerDocumentColorSpace:(BCHSBColorPicker *)arg1;
@end

@protocol BCJSONDecoderDelegate <NSObject>
- (BOOL)decoder:(BCJSONDecoder *)arg1 shouldInstantiateObjectOfClass:(Class)arg2;
@end

@protocol BCJSONEncoding <NSObject>
- (id)initWithJSONDecoder:(BCJSONDecoder *)arg1;
- (void)encodeAsJSON:(BCJSONEncoder *)arg1;

@optional
- (NSObject *)replacementObjectForJSONEncoder:(BCJSONEncoder *)arg1;
@end

@protocol BCMagnifierButtonDelegate
- (NSColorSpace *)magnifierButtonDocumentColorSpace:(BCMagnifierButton *)arg1;
@end

@protocol BCOutlineViewDataSource <NSObject>
- (id)rootObject;
- (NSArray *)dataController:(BCOutlineViewDataController *)arg1 childrenOfNode:(id)arg2;
@end

@protocol BCOutlineViewDelegate <NSObject>
- (void)dataController:(BCOutlineViewDataController *)arg1 refreshPreviewsOnNodes:(NSArray *)arg2;
- (void)dataController:(BCOutlineViewDataController *)arg1 handleBadgePressedOnNode:(id)arg2 withAltState:(BOOL)arg3;
- (BOOL)dataController:(BCOutlineViewDataController *)arg1 copyFromPasteboard:(NSPasteboard *)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)dataController:(BCOutlineViewDataController *)arg1 moveFromPasteboard:(NSPasteboard *)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)dataController:(BCOutlineViewDataController *)arg1 canCopyFromPasteboard:(NSPasteboard *)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)dataController:(BCOutlineViewDataController *)arg1 canMoveFromPasteboard:(NSPasteboard *)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)dataController:(BCOutlineViewDataController *)arg1 writeNodes:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (NSArray *)dragTypesForDataController:(BCOutlineViewDataController *)arg1;
- (NSArray *)dataController:(BCOutlineViewDataController *)arg1 exportNodes:(NSArray *)arg2 toFolder:(NSURL *)arg3;
- (void)dataController:(BCOutlineViewDataController *)arg1 updateNode:(id)arg2 expandedState:(unsigned long long)arg3;
- (BOOL)dataController:(BCOutlineViewDataController *)arg1 isNodeExpandable:(id)arg2;
- (BOOL)dataController:(BCOutlineViewDataController *)arg1 isNodeExpanded:(id)arg2;
- (void)dataController:(BCOutlineViewDataController *)arg1 changeSelectionTo:(NSArray *)arg2;
- (BOOL)dataController:(BCOutlineViewDataController *)arg1 isNodeSelected:(id)arg2;

@optional
- (void)dataController:(BCOutlineViewDataController *)arg1 hoverNodeDidChangeTo:(id)arg2;
- (NSArray *)dataController:(BCOutlineViewDataController *)arg1 menuItemsForSelectedObjects:(NSArray *)arg2;
@end

@protocol BCOutlineViewNode <NSObject>
@property(readonly, nonatomic) unsigned long long selectedBadgeMenuItem;
@property(readonly, nonatomic) NSMenu *badgeMenu;
@property(readonly, nonatomic) NSDictionary *previewImages;
@property(readonly, nonatomic) NSDictionary *badgeMap;
@property(readonly, nonatomic) unsigned long long badgeType;
@property(readonly, nonatomic) BOOL hasHighlight;
@property(readonly, nonatomic) BOOL isActive;
@property(retain, nonatomic) NSString *nodeName;
@property(readonly, nonatomic) unsigned long long filterType;
@property(readonly, nonatomic) unsigned long long displayType;
@end

@protocol BCPopoverDelegate <NSObject>

@optional
- (BOOL)popoverShouldTrackSuperviewOfAttachedToView:(BCPopover *)arg1;
- (NSUndoManager *)popoverWillReturnUndoManager:(BCPopover *)arg1;
- (BOOL)popoverShouldCauseExistingPopoversToClose:(BCPopover *)arg1;
- (BOOL)popoverShouldCloseWhenNewPopoverOpens:(BCPopover *)arg1 newPopover:(BCPopover *)arg2;
- (void)popoverWindowDidMove:(BCPopover *)arg1;
- (void)popoverWindowSizeDidChange:(BCPopover *)arg1;
- (void)popoverWillClose:(BCPopover *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (double)minimumPopoverContentViewHeight:(BCPopover *)arg1;
@end

@protocol BCSideBarViewControllerDelegate <NSObject>
@property(nonatomic) double pageListHeight;
@end

@protocol BCSketchFileMigrator <NSObject>
- (void)migrateResourcesNamed:(NSArray *)arg1 inFolderAtBookmark:(NSData *)arg2 withReply:(void (^)(BCSketchFileMigratorError *))arg3;
- (void)migrateDocumentAtBookmark:(NSData *)arg1 intoFolderAtBookmark:(NSData *)arg2 withReply:(void (^)(BCSketchFileMigratorError *))arg3;
- (void)validateDocumentAtBookmark:(NSData *)arg1 withReply:(void (^)(BCSketchFileMigratorError *))arg2;
@end

@protocol BCSortable <NSObject>
@property(readonly, nonatomic) NSString *name;
@end

@protocol BCTableCellViewDelegate <NSObject>
- (NSWindow *)tableCellViewDestinationWindow:(BCTableCellView *)arg1;
- (void)tableCellViewDidBeginEditing:(BCTableCellView *)arg1;
- (void)tableCellViewMouseExited:(BCTableCellView *)arg1;
- (void)tableCellViewMouseEntered:(BCTableCellView *)arg1;
- (void)tableCellViewHandleBadgePressed:(BCTableCellView *)arg1;
- (BOOL)isTableCellViewNodeSelected:(BCTableCellView *)arg1;
@end

@protocol BCTableRowViewDelegate <NSObject>
- (unsigned long long)tableRowView:(BCTableRowView *)arg1 displayTypeOfRowAtIndex:(long long)arg2;
- (long long)indexOfTableRowView:(BCTableRowView *)arg1;
- (BOOL)isNodeExpandedInTableRowView:(BCTableRowView *)arg1;
- (BOOL)isNodeSelectedInTableRowView:(BCTableRowView *)arg1;
@end

@protocol BITCrashManagerDelegate <NSObject>

@optional
- (void)crashManagerDidFinishSendingCrashReport:(BITCrashManager *)arg1;
- (void)crashManager:(BITCrashManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)crashManagerWillSendCrashReport:(BITCrashManager *)arg1;
- (void)crashManagerWillCancelSendingCrashReport:(BITCrashManager *)arg1;
- (void)crashManagerWillShowSubmitCrashReportAlert:(BITCrashManager *)arg1;
- (BITHockeyAttachment *)attachmentForCrashManager:(BITCrashManager *)arg1;
- (NSString *)applicationLogForCrashManager:(BITCrashManager *)arg1;
- (void)showMainApplicationWindowForCrashManager:(BITCrashManager *)arg1;
@end

@protocol BITHockeyManagerDelegate <NSObject, BITCrashManagerDelegate>

@optional
- (NSString *)userEmailForHockeyManager:(BITHockeyManager *)arg1 componentManager:(BITHockeyBaseManager *)arg2;
- (NSString *)userNameForHockeyManager:(BITHockeyManager *)arg1 componentManager:(BITHockeyBaseManager *)arg2;
- (NSString *)userIDForHockeyManager:(BITHockeyManager *)arg1 componentManager:(BITHockeyBaseManager *)arg2;
@end

@protocol CAAnimationDelegate <NSObject>

@optional
- (void)animationDidStop:(CAAnimation *)arg1 finished:(BOOL)arg2;
- (void)animationDidStart:(CAAnimation *)arg1;
@end

@protocol CALayerDelegate <NSObject>

@optional
- (id <CAAction>)actionForLayer:(CALayer *)arg1 forKey:(NSString *)arg2;
- (void)layoutSublayersOfLayer:(CALayer *)arg1;
- (void)layerWillDraw:(CALayer *)arg1;
- (void)drawLayer:(CALayer *)arg1 inContext:(struct CGContext *)arg2;
- (void)displayLayer:(CALayer *)arg1;
@end

@protocol CODebugController
- (void)output:(NSString *)arg1 args:(struct __va_list_tag [1])arg2;
@end

@protocol ECIODelegate <NSObject>
- (void)closeInfoGroup;
- (void)openInfoGroupWithKey:(NSString *)arg1;
- (void)outputInfo:(id)arg1 withKey:(NSString *)arg2;
- (void)outputFormat:(NSString *)arg1;
- (void)outputError:(NSError *)arg1;
- (void)outputErrorWithDomain:(NSString *)arg1 code:(unsigned long long)arg2 info:(NSDictionary *)arg3 format:(NSString *)arg4;
- (NSURL *)urlOptionForKey:(NSString *)arg1 defaultingToWorkingDirectory:(BOOL)arg2;
- (double)doubleOptionForKey:(NSString *)arg1;
- (NSArray *)arrayOptionForKey:(NSString *)arg1 separator:(NSString *)arg2;
- (BOOL)boolOptionForKey:(NSString *)arg1;
- (NSString *)stringOptionForKey:(NSString *)arg1;
- (id)optionForKey:(NSString *)arg1;
@end

@protocol GCDWebServerDelegate <NSObject>

@optional
- (void)webServerDidStop:(GCDWebServer *)arg1;
- (void)webServerDidDisconnect:(GCDWebServer *)arg1;
- (void)webServerDidConnect:(GCDWebServer *)arg1;
- (void)webServerDidUpdateNATPortMapping:(GCDWebServer *)arg1;
- (void)webServerDidCompleteBonjourRegistration:(GCDWebServer *)arg1;
- (void)webServerDidStart:(GCDWebServer *)arg1;
@end

@protocol MSActionObserver <NSObject>
- (void)actionController:(MSActionController *)arg1 didInstantActionWithID:(NSString *)arg2 context:(id)arg3;
- (void)actionController:(MSActionController *)arg1 didFinishActionWithID:(NSString *)arg2 context:(id)arg3;
- (void)actionController:(MSActionController *)arg1 willBeginActionWithID:(NSString *)arg2 context:(id)arg3;
@end

@protocol MSAllRenderers <MSLayerRenderer, MSPathRenderer, MSFillRenderer, MSBackgroundBlurRenderer, MSShadowRenderer, MSPageOverlayRenderer, MSGridRenderer>
@end

@protocol MSAltButtonTarget <NSObject>

@optional
- (BOOL)altButtonCanShowAltImage:(MSAltButton *)arg1;
@end

@protocol MSArtboardGroup <MSLayer>
@end

@protocol MSArtboardPresetsViewControllerDelegate <NSObject>
- (void)artboardPresetsViewController:(MSArtboardPresetsViewController *)arg1 didSelectPreset:(MSArtboardPreset *)arg2;

@optional
- (void)showCustomPresetSheet:(MSArtboardPresetsViewController *)arg1;
- (void)artboardPresetsViewController:(MSArtboardPresetsViewController *)arg1 didSelectOrientation:(long long)arg2;
@end

@protocol MSAsset <NSObject, NSCopying>
- (BOOL)isAssetEqual:(id <MSAsset>)arg1;
- (unsigned long long)assetType;
@end

@protocol MSAssetLibraryDelegate <NSObject>
- (void)assetLibraryEnableStateChanged:(MSAssetLibrary *)arg1;
- (void)assetLibraryChangedOnDisk:(MSAssetLibrary *)arg1;
@end

@protocol MSAssetPickerHeaderViewDelegate <NSObject>
- (void)assetHeaderViewDidClick:(MSAssetPickerHeaderView *)arg1;
@end

@protocol MSAssetPreferenceItemDelegate <NSObject>
- (void)preferenceItemHasUpdated:(MSAssetPreferenceItem *)arg1;
@end

@protocol MSAssetSyncSheetItem <NSObject>
@property(readonly, nonatomic) NSString *displayName;
@property(retain, nonatomic) MSAssetLibrary *library;
@property(readonly, nonatomic) unsigned long long type;
@end

@protocol MSBackgroundBlurRenderer <MSRenderer>
- (void)renderBackgroundBlurBehindShape:(MSImmutableShapeGroup *)arg1 context:(MSRenderingContext *)arg2 clippedToPath:(MSPath *)arg3;
@end

@protocol MSCloudExportableDocument <NSObject>
@property(readonly, nonatomic) NSString *cloudName;
@property(retain, nonatomic) SCKShare *cloudShare;
@property(readonly, nonatomic) MSCacheManager *cacheManager;
@property(readonly, nonatomic) MSDocumentData *documentData;
@end

@protocol MSCloudLoginWindowControllerDelegate <NSObject>
- (void)cloudLoginControllerDidCancel:(MSCloudLoginWindowController *)arg1;
- (void)cloudLoginControllerDidOpenBrowser:(MSCloudLoginWindowController *)arg1;
- (void)cloudLoginControllerDidSignIn:(MSCloudLoginWindowController *)arg1;
@end

@protocol MSCloudShareUploadControllerDelegate <NSObject>
- (void)cloudShareController:(MSCloudShareUploadController *)arg1 didUploadShare:(SCKShare *)arg2;

@optional
- (void)cloudShareController:(MSCloudShareUploadController *)arg1 willUploadShareAsNew:(BOOL)arg2;
- (void)cloudShareController:(MSCloudShareUploadController *)arg1 didChangeProgress:(NSProgress *)arg2;
- (void)cloudShareController:(MSCloudShareUploadController *)arg1 uploadDidFailWithError:(NSError *)arg2;
@end

@protocol MSCoding
- (id)initWithUnarchiver:(MSBaseUnarchiver *)arg1;
- (void)encodeWithArchiver:(MSBaseArchiver *)arg1;

@optional
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
- (id)initWithUnarchiver:(MSBaseUnarchiver *)arg1 migratingFrom:(long long)arg2 toVersion:(long long)arg3;
@end

@protocol MSColor <NSObject>
@property(readonly, nonatomic) double red;
@property(readonly, nonatomic) double green;
@property(readonly, nonatomic) double blue;
@property(readonly, nonatomic) double alpha;
@end

@protocol MSColorConverter <NSObject>
- (BOOL)shouldConvertImmutableColor:(MSImmutableColor *)arg1;
- (BOOL)shouldConvertColor:(MSColor *)arg1;
- (MSImmutableColor *)convertImmutableColor:(MSImmutableColor *)arg1;
- (MSColor *)convertColor:(MSColor *)arg1;
@end

@protocol MSColorConvertible <NSObject>
- (void)convertColorsUsing:(id <MSColorConverter>)arg1;
@end

@protocol MSColorInspectorDelegate <NSObject>
- (void)colorInspector:(MSColorInspector *)arg1 didChangeToColor:(MSColor *)arg2;

@optional
- (NSUndoManager *)colorInspectorUndoManager:(MSColorInspector *)arg1;
- (BOOL)colorInspectorShouldAdjustInspectorToPopover:(MSColorInspector *)arg1;
- (void)colorInspectorWillClose:(MSColorInspector *)arg1;
- (void)colorInspectorDidChange:(MSColorInspector *)arg1;
- (void)inspectorDidChangeType:(MSColorInspector *)arg1;
@end

@protocol MSColorInspectorSectionDelegate <NSObject>
@property(readonly, nonatomic) MSDocument *document;
- (NSTouchBar *)touchBar;
- (void)didRemoveAssetOfType:(unsigned long long)arg1;
- (void)didAddAsset:(id <MSAsset>)arg1;
- (void)stack;
- (MSEventHandlerManager *)eventHandlerManager;
- (MSPersistentAssetCollection *)globalAssets;
- (MSAssetCollection *)documentAssets;
- (void)inspectorSectionDidUpdate:(MSColorInspectorSectionPattern *)arg1;
- (void)colorDidChangeTo:(MSColor *)arg1;
@end

@protocol MSColorUser <NSObject>
- (void)updateColorCounter:(MSColorCounter *)arg1;
@end

@protocol MSContentDrawViewDelegate <NSObject>
@property(nonatomic) double zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin;
@end

@protocol MSCurvePoint <NSObject>
@end

@protocol MSDataMenuProviderDelegate <NSObject>
- (void)dataMenuProvider:(MSDataMenuProvider *)arg1 didChooseData:(MSDataSupplier *)arg2;
- (BOOL)dataMenuProviderIsInspectorPopupMenu:(MSDataMenuProvider *)arg1;
- (unsigned long long)dataMenuProviderDataTypeForMenuBuilding:(MSDataMenuProvider *)arg1;
- (BOOL)dataMenuProvider:(MSDataMenuProvider *)arg1 canChooseDataOfType:(unsigned long long)arg2;
@end

@protocol MSDataSupplierManagerDelegate <NSObject>
- (void)requestDataFromPluginDataSupplier:(MSPluginDataSupplier *)arg1 pluginContext:(NSDictionary *)arg2;
@end

@protocol MSDocumentData
@property(readonly, nonatomic) NSArray *pages;
@end

@protocol MSDocumentDataDelegate <NSObject>
- (void)determineCurrentArtboard;
- (void)layerSelectionMightHaveChanged;
- (void)refreshOverlay;
- (void)refreshOverlayInRect:(struct CGRect)arg1;
- (void)layerTreeLayoutDidChange;
- (id)documentData:(MSDocumentData *)arg1 metadataForKey:(NSString *)arg2 object:(MSModelObject *)arg3;
- (void)documentData:(MSDocumentData *)arg1 storeMetadata:(id)arg2 forKey:(NSString *)arg3 object:(MSModelObject *)arg4;
- (void)documentDidChange:(MSDocumentData *)arg1;
- (void)documentDataImmediatelyShowSelectionForAllLayers:(MSDocumentData *)arg1;
- (void)documentData:(MSDocumentData *)arg1 temporarilyHideSelectionForLayers:(NSArray *)arg2;
- (void)documentData:(MSDocumentData *)arg1 sharedObjectDidChange:(id <MSSharedObjectInstance>)arg2;
- (void)documentData:(MSDocumentData *)arg1 didChangeToPage:(MSPage *)arg2;
@end

@protocol MSDocumentPreviewGeneration <NSObject>
- (NSDictionary *)generatePreviewsForDocument:(MSImmutableDocumentData *)arg1;
@end

@protocol MSDropableViewDelegate <NSObject>
- (BOOL)view:(NSView *)arg1 performDragOperation:(id <NSDraggingInfo>)arg2;
- (NSArray *)draggedTypesForView:(NSView *)arg1;

@optional
- (void)view:(NSView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)viewWantsPeriodicDraggingUpdates:(NSView *)arg1;
- (void)view:(NSView *)arg1 concludeDragOperation:(id <NSDraggingInfo>)arg2;
- (BOOL)view:(NSView *)arg1 prepareForDragOperation:(id <NSDraggingInfo>)arg2;
- (void)view:(NSView *)arg1 draggingEnded:(id <NSDraggingInfo>)arg2;
- (void)view:(NSView *)arg1 draggingExited:(id <NSDraggingInfo>)arg2;
- (unsigned long long)view:(NSView *)arg1 draggingUpdated:(id <NSDraggingInfo>)arg2;
- (unsigned long long)view:(NSView *)arg1 draggingEntered:(id <NSDraggingInfo>)arg2;
@end

@protocol MSEditArtboardPresetViewControllerDelegate <NSObject>
- (void)editArtboardPresetViewController:(MSEditArtboardPresetViewController *)arg1 savePreset:(MSArtboardPreset *)arg2;
@end

@protocol MSEventHandlerManagerDelegate <NSObject>
- (void)eventHandlerManager:(MSEventHandlerManager *)arg1 didChangeCurrentHandler:(MSEventHandler *)arg2;
@end

@protocol MSExportFormatContainer
- (void)removeExportFormat:(MSExportFormat *)arg1;
- (NSArray *)exportFormats;
- (MSLayer *)containingLayer;
@end

@protocol MSFillRenderer <MSRenderer>
- (void)renderFill:(MSImmutableStyleFill *)arg1 path:(MSPath *)arg2 layer:(MSImmutableStyledLayer *)arg3 index:(long long)arg4 rect:(struct CGRect)arg5 hasInnerStroke:(BOOL)arg6 context:(MSRenderingContext *)arg7;
@end

@protocol MSFirstLineTypesetterDelegate <NSObject>
- (double)baselineAdjustmentForLayoutManager:(NSLayoutManager *)arg1;
@end

@protocol MSFlowContainmentCheck
- (BOOL)containsFlowWithSymbolsFromDocument:(MSImmutableDocumentData *)arg1;
@end

@protocol MSFlowMenuBuilderTarget

@optional
- (void)flowTargetAction:(id)arg1;
- (void)removeFlowAction:(id)arg1;
- (void)flowBackAction:(id)arg1;
@end

@protocol MSForeignObjectProvider
@property(readonly, nonatomic) unsigned long long objectType;
@property(readonly, nonatomic) MSAssetLibraryController *libraryController;
@property(readonly, nonatomic) MSDocumentData *currentDocument;
@property(readonly, nonatomic) NSArray *foreignObjects;
- (struct MSModelObject *)masterObjectForInstance:(MSModelObject *)arg1;
- (BOOL)currentDocumentIsLibrary:(MSAssetLibrary *)arg1;
- (NSArray *)localObjectsForDocument:(MSDocumentData *)arg1;
@end

@protocol MSGestureRecognizerDelegate <NSObject>

@optional
- (BOOL)gestureRecognizer:(MSGestureRecognizer *)arg1 shouldAttemptToRecognizeAtPoint:(struct CGPoint)arg2 modifierFlags:(unsigned long long)arg3;
@end

@protocol MSGradientBarViewDelegate <NSObject>
- (void)gradientBarChanged:(MSGradientBarView *)arg1;
- (NSColorSpace *)gradientBarViewPreviewColorSpace:(MSGradientBarView *)arg1;
@end

@protocol MSGradientEventHandlerDelegate <NSObject>
- (void)gradientHandlerWillLoseFocus:(MSGradientEventHandler *)arg1;
- (void)gradientHandlerDidChangeGradient:(MSGradientEventHandler *)arg1;
- (void)gradientHandlerDidChangeCurrentPoint:(MSGradientEventHandler *)arg1;
@end

@protocol MSGradientPointArrayDelegate <NSObject>
- (void)gradientPointArray:(MSGradientPointArray *)arg1 replacePointAtIndex:(unsigned long long)arg2 withPoint:(struct CGPoint)arg3;
@end

@protocol MSGridRenderer <MSRenderer>
- (void)renderGrid:(MSImmutableBaseGrid *)arg1 in:(struct CGRect)arg2 origin:(struct CGPoint)arg3 context:(MSRenderingContext *)arg4;
@end

@protocol MSHighLevelExportDelegate <ECIODelegate>
@end

@protocol MSImageOwner
@property(readonly, nonatomic) BOOL canReduceImageSize;
@property(readonly, nonatomic) struct CGSize targetSizeForReduction;
@property(retain, nonatomic) MSImageData *image;
- (void)setReducedImage:(MSImageData *)arg1;
@end

@protocol MSImmutableRootLayer <MSLayerTraits>
@property(readonly, copy, nonatomic) MSImmutableRulerData *verticalRulerData;
@property(readonly, copy, nonatomic) MSImmutableRulerData *horizontalRulerData;
@property(readonly, copy, nonatomic) MSImmutableLayoutGrid *layout;
@property(readonly, copy, nonatomic) MSImmutableSimpleGrid *grid;
@property(readonly, nonatomic) struct CGRect contentBounds;
@end

@protocol MSImporter <NSObject>
- (MSLayer *)importAsLayer;
- (BOOL)shouldCollapseSinglePage;
- (BOOL)shouldExpandPages;
- (NSString *)secondPhaseSubtitleForValue:(long long)arg1 maximum:(long long)arg2;
- (NSString *)firstPhaseSubtitle;
- (void)finishImporting;
- (void)importIntoPage:(MSPage *)arg1 name:(NSString *)arg2 progress:(void (^)(void))arg3;
- (unsigned long long)prepareToImportFromURL:(NSURL *)arg1;
- (unsigned long long)prepareToImportFromData:(NSData *)arg1;
@end

@protocol MSInspectorChildController <MSInspectorSection>
- (void)selectionDidChangeTo:(NSArray *)arg1;
- (void)prepareForDisplay;

@optional
- (void)layerPositionPossiblyChanged;
@end

@protocol MSInspectorSection <NSObject>
- (NSArray *)views;

@optional
- (BOOL)wantsSeparatorAfterViews;
@end

@protocol MSInterfaceTheme <NSObject>
- (BOOL)isMainWindow;
@end

@protocol MSJSONArchiverAlternativeFileReference <NSObject>
+ (id)decodeReferenceFromJSONZipArchive:(BCJSONZippedDecoder *)arg1 withReference:(NSString *)arg2;
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
- (void)encodeReferenceInJSONZipArchive:(BCJSONZippedEncoder *)arg1;
@end

@protocol MSLayer <NSObject>
@property(readonly, nonatomic) BOOL isLayerExportable;
@property(readonly, nonatomic) struct CGPoint origin;
@property(readonly, nonatomic) struct BCEdgePaddings influenceRectEdgePaddingsThatCascadeToContainedLayers;
@property(readonly, nonatomic) struct CGAffineTransform CGTransformForFrame;
@property(readonly, nonatomic) BOOL hasTransforms;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, nonatomic) struct CGRect rect;
@property(readonly, nonatomic) NSString *objectID;
@property(readonly, nonatomic) double rotation;
@property(readonly, nonatomic) BOOL isFlippedVertical;
@property(readonly, nonatomic) BOOL isFlippedHorizontal;
- (NSArray *)childrenIncludingSelf:(BOOL)arg1;
- (NSArray *)children;
- (id)layerWithID:(NSString *)arg1;
- (struct CGRect)overlayInfluenceRectForFrame;
- (struct CGRect)overlayInfluenceRectForBounds;
- (struct CGRect)influenceRectForFrame;
- (struct CGRect)influenceRectForBounds;
- (NSAffineTransform *)transformForRect:(struct CGRect)arg1;
@end

@protocol MSLayerContainment
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 block:(void (^)(id, char *))arg2;
- (void)enumerateLayers:(void (^)(id))arg1;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (BOOL)containsMultipleLayers;
- (BOOL)containsOneLayer;
- (BOOL)containsLayers;
- (BOOL)containsNoOrOneLayers;
- (BOOL)canBeContainedByDocument;
- (BOOL)canBeContainedByGroup;
- (BOOL)canContainLayer:(MSLayer *)arg1;
- (id)lastLayer;
- (id)firstLayer;
- (unsigned long long)containedLayersCount;
- (NSArray *)containedLayers;
@end

@protocol MSLayerGroup
@property(readonly, nonatomic) NSArray *layers;
@end

@protocol MSLayerRenderer <MSRenderer>
- (void)renderLayerUncached:(MSImmutableLayer *)arg1 ignoreDrawingArea:(BOOL)arg2 context:(MSRenderingContext *)arg3;
- (void)renderLayer:(MSImmutableLayer *)arg1 ignoreDrawingArea:(BOOL)arg2 context:(MSRenderingContext *)arg3;
@end

@protocol MSLayerTraits <NSObject>
+ (unsigned long long)traits;
- (unsigned long long)traits;
@end

@protocol MSLayerWithBackgroundColor <NSObject>
@property(nonatomic) BOOL hasBackgroundColor;
- (MSImmutableColor *)immutableBackgroundColor;
@end

@protocol MSLibraryObject <NSObject>
@property(readonly, nonatomic) NSString *libraryID;
@property(readonly, nonatomic) NSString *name;
- (MSSymbolMaster *)symbolWithID:(NSString *)arg1;
@end

@protocol MSLocalDataSupplierDelegate
- (void)locaDataSupplierDataChanged:(MSLocalDataSupplier *)arg1;
@end

@protocol MSMenuBuilderDelegate
- (NSColorSpace *)previewColorSpaceForItem:(NSMenuItem *)arg1;
@end

@protocol MSMirrorWindowControllerContent
@property(retain, nonatomic) WKWebView *webView;
@end

@protocol MSModeModePickerDelegate <NSObject>
- (NSString *)pickerView:(MSModePickerView *)arg1 labelForMode:(long long)arg2;
- (void)pickerViewChanged:(MSModePickerView *)arg1;
- (void)pickerViewWillChange:(MSModePickerView *)arg1;
@end

@protocol MSModelObject <MSModelObjectCommon>
@end

@protocol MSModelObjectCommon <NSObject>
@property(readonly, copy, nonatomic) NSString *objectID;
@end

@protocol MSOverlayRendererDelegate <NSObject>
- (void)refreshOverlayInRect:(struct CGRect)arg1;
@end

@protocol MSPageOverlayRenderer <MSRenderer>
- (void)renderOverlayForPage:(MSImmutablePage *)arg1 selectedLayers:(MSLayerArray *)arg2 selectedArtboard:(MSImmutableArtboardGroup *)arg3 options:(unsigned long long)arg4 rect:(struct CGRect)arg5 context:(MSRenderingContext *)arg6;
- (void)renderBackgroundForPage:(MSImmutablePage *)arg1 rect:(struct CGRect)arg2 origin:(struct CGPoint)arg3 zoom:(double)arg4 context:(struct CGContext *)arg5;
@end

@protocol MSPasteboardReader <NSObject>
- (MSPasteboardLayers *)pasteboardDataFromPasteboard:(NSPasteboard *)arg1 colorSpace:(NSColorSpace *)arg2 options:(unsigned long long)arg3 sender:(id <NSDraggingInfo>)arg4;
- (NSArray *)supportedPasteboardTypes;
@end

@protocol MSPasteboardWriter <NSObject>
- (void)writeData:(MSPasteboardLayers *)arg1 toPasteboard:(NSPasteboard *)arg2;
- (NSArray *)supportedPasteboardTypes;
- (BOOL)canWriteDataToPasteboard:(NSPasteboard *)arg1;
@end

@protocol MSPathRenderer <MSRenderer>
- (void)renderBordersForPath:(MSPath *)arg1 style:(MSImmutableStyle *)arg2 rect:(struct CGRect)arg3 context:(MSRenderingContext *)arg4;
- (void)renderFillsForPath:(MSPath *)arg1 style:(MSImmutableStyle *)arg2 layer:(MSImmutableStyledLayer *)arg3 rect:(struct CGRect)arg4 context:(MSRenderingContext *)arg5;
- (void)renderPath:(MSPath *)arg1 layer:(MSImmutableStyledLayer *)arg2 inRect:(struct CGRect)arg3 fallbackColor:(NSColor *)arg4 context:(MSRenderingContext *)arg5;
@end

@protocol MSPopToolbarItemActionObject <NSObject>
- (BOOL)toolbarItemShouldDrawWithArrow:(MSPopUpToolbarItem *)arg1;
@end

@protocol MSPresetPickerViewDelegate <NSObject>
- (void)pickerView:(MSAssetPickerView *)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)pickerView:(MSAssetPickerView *)arg1 removePresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(MSAssetPickerView *)arg1;
- (unsigned long long)numberOfPresetsInPickerView:(MSAssetPickerView *)arg1;

@optional
- (NSString *)pickerView:(MSAssetPickerView *)arg1 tooltipForPresetButtonAtIndex:(unsigned long long)arg2;
- (void)pickerView:(MSAssetPickerView *)arg1 didStopHoverPresetAtIndex:(long long)arg2;
- (void)pickerView:(MSAssetPickerView *)arg1 didHoverPresetAtIndex:(long long)arg2;
- (void)presetPickerFinishedDragging:(MSAssetPickerView *)arg1;
- (id)pickerView:(id)arg1 dragRepresentationForItemAtIndex:(unsigned long long)arg2;
- (BOOL)pickerView:(MSAssetPickerView *)arg1 insertPresetFromDragRepresentation:(id)arg2 atIndex:(unsigned long long)arg3;
- (BOOL)pickerView:(MSAssetPickerView *)arg1 didDragPresetAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (BOOL)pickerView:(MSAssetPickerView *)arg1 shouldShowMenuForItemAtIndex:(unsigned long long)arg2;
- (BOOL)pickerViewSupportsDrop:(MSAssetPickerView *)arg1;
- (BOOL)pickerViewSupportsDrag:(MSAssetPickerView *)arg1 fromIndex:(unsigned long long)arg2;
- (BOOL)shouldShowAddPresetButton:(MSAssetPickerView *)arg1;
- (void)drawContentForCellInPickerView:(MSAssetPickerView *)arg1 withFrame:(BOOL)arg2 atIndex:(unsigned long long)arg3 inRect:(struct CGRect)arg4;
@end

@protocol MSPreviewGeneration <NSObject>
- (void)generatePreviewWithImageSize:(struct CGSize)arg1 previewSize:(struct CGSize)arg2 colorSpace:(NSColorSpace *)arg3 completionBlock:(void (^)(NSImage *))arg4;
@end

@protocol MSRect
@property(readonly, nonatomic) struct CGPoint origin;
@property(readonly, nonatomic) struct CGSize size;
@property(readonly, nonatomic) struct CGRect rect;
@end

@protocol MSRectDelegate <NSObject>
- (void)rect:(MSRect *)arg1 didChangeFromRect:(struct CGRect)arg2;
@end

@protocol MSRenderer <NSObject>
@end

@protocol MSRenderingContextCacheProvider <NSObject>
@property(readonly, nonatomic) BCCache *zoomIndependentCache;
- (BCCache *)cacheForZoomLevel:(double)arg1;
@end

@protocol MSReorderingContainerDelegate <NSObject>
- (void)containerBackground:(MSReorderingContainerView *)arg1 dragDidReorderChildAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;

@optional
- (unsigned long long)numberOfReorderableSubviewsForContainerBackground:(MSReorderingContainerView *)arg1;
- (double)startingOffsetForStackingContainerBackground:(MSReorderingContainerView *)arg1;
@end

@protocol MSReplaceColorActionDetails <NSObject>
@property(readonly, nonatomic) MSColor *replacementColor;
@property(readonly, nonatomic) BOOL replaceAlphaOfOriginalColor;
@property(readonly, nonatomic) MSColor *originalColor;
@property(readonly, nonatomic) BOOL ignoreAlphaWhenMatchingOriginalColor;
@end

@protocol MSRootLayer <MSLayerTraits>
@property(readonly, nonatomic) struct CGRect rect;
@property(readonly, nonatomic) struct CGRect contentBounds;
@property(nonatomic) struct CGPoint rulerBase;
@property(copy, nonatomic) MSRulerData *verticalRulerData;
@property(copy, nonatomic) MSRulerData *horizontalRulerData;
@property(copy, nonatomic) MSLayoutGrid *layout;
@property(copy, nonatomic) MSSimpleGrid *grid;
@end

@protocol MSSelectVectorHandleGestureRecognizerDelegate <MSGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldDelaySelectionUntilMouseUp:(MSSelectVectorHandleGestureRecognizer *)arg1;
@end

@protocol MSShadowRenderer <MSRenderer>
- (void)renderInnerShadow:(MSImmutableStyleInnerShadow *)arg1 path:(MSPath *)arg2 windingRule:(unsigned long long)arg3 context:(MSRenderingContext *)arg4;
- (void)renderShadow:(MSImmutableStyleShadow *)arg1 rect:(struct CGRect)arg2 context:(MSRenderingContext *)arg3 block:(void (^)(void))arg4;
- (void)renderShadow:(MSImmutableStyleShadow *)arg1 path:(MSPath *)arg2 cacheObject:(MSModelObjectCommon *)arg3 windingRule:(unsigned long long)arg4 options:(MSImmutableStyleBorderOptions *)arg5 type:(unsigned long long)arg6 strokeType:(long long)arg7 fillShouldClip:(BOOL)arg8 lineWidth:(double)arg9 context:(MSRenderingContext *)arg10;
@end

@protocol MSShapeGroup
@property(readonly, nonatomic) BOOL isPartOfClippingMask;
@property(readonly, nonatomic) BOOL hasDecorations;
@property(readonly, nonatomic) NSBezierPath *decoratedBezierPathInBounds;
@property(readonly, nonatomic) NSBezierPath *bezierPathInBounds;
@property(readonly, nonatomic) NSBezierPath *bezierPath;
@property(readonly, nonatomic) MSPath *pathInBounds;
- (void)applyPropertiesToBezier:(NSBezierPath *)arg1;
- (MSPath *)pathWithTransformsUsingCache:(BCCache *)arg1;
- (NSBezierPath *)bezierPathOfSubPath:(MSShapePathLayer *)arg1 inRect:(struct CGRect)arg2;
- (NSBezierPath *)bezierPathInRect:(struct CGRect)arg1;
@end

@protocol MSSharedObjectInstance <NSObject>
@property(retain, nonatomic) NSString *sharedObjectID;
- (unsigned long long)type;
@end

@protocol MSSharedObjectStyling <NSObject>
- (void)applyStyleToMenuItem:(NSMenuItem *)arg1 withColorSpace:(NSColorSpace *)arg2;
- (NSImage *)generatePreviewForManageSheetWithCompletionBlock:(void (^)(NSImage *))arg1;
- (NSImage *)generatePreviewForPopup:(NSPopUpButtonCell *)arg1 completionBlock:(void (^)(NSImage *))arg2;
- (NSImage *)generatePreviewForMenuItem:(NSMenuItem *)arg1 withColorSpace:(NSColorSpace *)arg2 completionBlock:(void (^)(NSImage *))arg3;
@end

@protocol MSSidebarControllerDelegate <NSObject>
@property(readonly, nonatomic) NSColorSpace *colorSpace;
@property(readonly, nonatomic) MSDocumentData *documentData;
- (void)sidebarController:(MSSidebarListController *)arg1 hoveredLayerDidChangeTo:(MSLayer *)arg2;
- (NSArray *)sidebarControllerContextMenuItemsForCurrentSelection:(MSSidebarListController *)arg1;
- (void)sidebarController:(MSSidebarListController *)arg1 validateRemovalOfPages:(NSArray *)arg2 withRemovalBlock:(void (^)(void))arg3;
- (void)sidebarController:(MSSidebarListController *)arg1 didChangeSelection:(NSArray *)arg2;
- (void)sidebarControllerDidUpdate:(MSSidebarListController *)arg1;
@end

@protocol MSSliceLayerWatcher <NSObject>
- (void)sliceLayerDidChange:(id <MSLayerWithBackgroundColor>)arg1;
@end

@protocol MSStylePart
@property(readonly, nonatomic) BOOL isEnabled;
@end

@protocol MSStylePartInspectorDelegate <NSObject>

@optional
- (void)reload;
- (NSArray *)layers;
- (id)switchToEventHandlerWithName:(NSString *)arg1;
@end

@protocol MSStylePartPreviewButtonDelegate <NSObject>
- (NSColorSpace *)stylePartPreviewButtonPreviewColorSpace:(MSStylePartPreviewButton *)arg1;
@end

@protocol MSTextLayerEditingDelegate <NSObject>
- (void)adjustForegroundColor;
- (void)adjustTextViewFrame;
@end

@protocol MSTextLayerTextViewDelegate <NSObject>
- (NSColorSpace *)documentColorSpaceForTextLayerTextView:(MSTextLayerTextView *)arg1;
@end

@protocol MSTilePlacerDelegate <NSObject>
- (void)tilePlacer:(MSTilePlacer *)arg1 requiresRedrawInRect:(struct CGRect)arg2;
@end

@protocol MSTiledLayerDelegate <NSObject>
- (void)tiledLayerDidRefreshTileContent:(MSTiledLayer *)arg1 finishTime:(unsigned long long)arg2;
- (void)tiledLayer:(MSTiledLayer *)arg1 requiresRedrawInRect:(struct CGRect)arg2;
- (void)tiledLayer:(MSTiledLayer *)arg1 didChangeToState:(unsigned long long)arg2;
@end

@protocol MSTiledLayerPileHostView <NSObject>
- (void)tiledLayerPileDidRefreshTileContent:(MSTiledLayerPile *)arg1 finishTime:(unsigned long long)arg2;
- (void)tiledLayerPile:(MSTiledLayerPile *)arg1 requiresRedrawInRect:(struct CGRect)arg2;
- (MSRenderingDriver *)driver;
@end

@protocol MSUpDownProtocol <NSObject>
@property(readonly, nonatomic) MSUpDownController *upDownController;
- (NSNumber *)maximum;
- (NSNumber *)minimum;
- (double)incrementValue;
@end

@protocol MSVectorCanvasDelegate <NSObject>
- (void)vectorCanvasDidEditPoints:(MSVectorCanvas *)arg1;
- (void)vectorCanvas:(MSVectorCanvas *)arg1 didSelectLayers:(NSArray *)arg2;
- (void)vectorCanvasDidFinishInteractiveSelection:(MSVectorCanvas *)arg1;
- (void)vectorCanvas:(MSVectorCanvas *)arg1 didDeselectHandlesAtIndexPaths:(NSArray *)arg2;
- (void)vectorCanvas:(MSVectorCanvas *)arg1 didSelectHandlesAtIndexPaths:(NSArray *)arg2;
- (void)vectorCanvas:(MSVectorCanvas *)arg1 didUnhighlightHandleAtIndexPath:(NSIndexPath *)arg2;
- (void)vectorCanvas:(MSVectorCanvas *)arg1 didHighlightHandleAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol MSWebExportableRootLayer <MSImmutableRootLayer>
@property(readonly, nonatomic) BOOL isFlowHome;
@property(readonly, nonatomic) BOOL webExporterShouldIncludeBackgroundColor;
@property(readonly, nonatomic) MSImmutableColor *webExporterBackgoundColor;
- (MSExporter *)exporterForWebOnPage:(MSImmutablePage *)arg1 document:(MSImmutableDocumentData *)arg2 scale:(double)arg3;
@end

@protocol MSWelcomeCollectionItemPreviewImageLoading
@property(readonly, nonatomic) BOOL providesPreviewImage;

@optional
@property(readonly, nonatomic) NSURL *URL;
- (void)fetchPreviewImageWithMaximumPixelSize:(double)arg1 completionHandler:(void (^)(NSImage *, NSError *))arg2;
@end

@protocol MSWelcomeCollectionViewDelegate <NSCollectionViewDelegate>
- (NSCollectionViewItem *)collectionView:(NSCollectionView *)arg1 newItemForRepresentedObject:(id)arg2;
@end

@protocol MSWindowBadgeAction <NSObject>
@property(readonly, nonatomic) NSColor *badgeTint;
@property(readonly, nonatomic) NSAttributedString *badgeTitle;
@property(readonly, nonatomic) unsigned long long numberOfBadges;
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (void)applicationDidChangeOcclusionState:(NSNotification *)arg1;
- (void)applicationDidChangeScreenParameters:(NSNotification *)arg1;
- (void)applicationWillTerminate:(NSNotification *)arg1;
- (void)applicationDidUpdate:(NSNotification *)arg1;
- (void)applicationWillUpdate:(NSNotification *)arg1;
- (void)applicationDidResignActive:(NSNotification *)arg1;
- (void)applicationWillResignActive:(NSNotification *)arg1;
- (void)applicationDidBecomeActive:(NSNotification *)arg1;
- (void)applicationWillBecomeActive:(NSNotification *)arg1;
- (void)applicationDidUnhide:(NSNotification *)arg1;
- (void)applicationWillUnhide:(NSNotification *)arg1;
- (void)applicationDidHide:(NSNotification *)arg1;
- (void)applicationWillHide:(NSNotification *)arg1;
- (void)applicationDidFinishLaunching:(NSNotification *)arg1;
- (void)applicationWillFinishLaunching:(NSNotification *)arg1;
- (void)application:(NSApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(NSApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(NSApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (BOOL)application:(NSApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (BOOL)application:(NSApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(NSApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(NSApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (NSError *)application:(NSApplication *)arg1 willPresentError:(NSError *)arg2;
- (NSMenu *)applicationDockMenu:(NSApplication *)arg1;
- (BOOL)applicationShouldHandleReopen:(NSApplication *)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication *)arg1;
- (unsigned long long)application:(NSApplication *)arg1 printFiles:(NSArray *)arg2 withSettings:(NSDictionary *)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)application:(NSApplication *)arg1 printFile:(NSString *)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(NSString *)arg2;
- (BOOL)applicationOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)application:(NSApplication *)arg1 openTempFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openFiles:(NSArray *)arg2;
- (BOOL)application:(NSApplication *)arg1 openFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openURLs:(NSArray *)arg2;
- (unsigned long long)applicationShouldTerminate:(NSApplication *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCollectionViewDelegate <NSObject>

@optional
- (NSCollectionViewTransitionLayout *)collectionView:(NSCollectionView *)arg1 transitionLayoutForOldLayout:(NSCollectionViewLayout *)arg2 newLayout:(NSCollectionViewLayout *)arg3;
- (void)collectionView:(NSCollectionView *)arg1 didEndDisplayingSupplementaryView:(NSView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(NSCollectionView *)arg1 didEndDisplayingItem:(NSCollectionViewItem *)arg2 forRepresentedObjectAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(NSCollectionView *)arg1 willDisplaySupplementaryView:(NSView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(NSCollectionView *)arg1 willDisplayItem:(NSCollectionViewItem *)arg2 forRepresentedObjectAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(NSCollectionView *)arg1 didDeselectItemsAtIndexPaths:(NSSet *)arg2;
- (void)collectionView:(NSCollectionView *)arg1 didSelectItemsAtIndexPaths:(NSSet *)arg2;
- (NSSet *)collectionView:(NSCollectionView *)arg1 shouldDeselectItemsAtIndexPaths:(NSSet *)arg2;
- (NSSet *)collectionView:(NSCollectionView *)arg1 shouldSelectItemsAtIndexPaths:(NSSet *)arg2;
- (void)collectionView:(NSCollectionView *)arg1 didChangeItemsAtIndexPaths:(NSSet *)arg2 toHighlightState:(long long)arg3;
- (NSSet *)collectionView:(NSCollectionView *)arg1 shouldChangeItemsAtIndexPaths:(NSSet *)arg2 toHighlightState:(long long)arg3;
- (void)collectionView:(NSCollectionView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)collectionView:(NSCollectionView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 dragOperation:(unsigned long long)arg4;
- (void)collectionView:(NSCollectionView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItemsAtIndexes:(NSIndexSet *)arg4;
- (void)collectionView:(NSCollectionView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItemsAtIndexPaths:(NSSet *)arg4;
- (id <NSPasteboardWriting>)collectionView:(NSCollectionView *)arg1 pasteboardWriterForItemAtIndex:(unsigned long long)arg2;
- (id <NSPasteboardWriting>)collectionView:(NSCollectionView *)arg1 pasteboardWriterForItemAtIndexPath:(NSIndexPath *)arg2;
- (BOOL)collectionView:(NSCollectionView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 index:(long long)arg3 dropOperation:(long long)arg4;
- (BOOL)collectionView:(NSCollectionView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 indexPath:(NSIndexPath *)arg3 dropOperation:(long long)arg4;
- (unsigned long long)collectionView:(NSCollectionView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedIndex:(long long *)arg3 dropOperation:(long long *)arg4;
- (unsigned long long)collectionView:(NSCollectionView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedIndexPath:(id *)arg3 dropOperation:(long long *)arg4;
- (NSImage *)collectionView:(NSCollectionView *)arg1 draggingImageForItemsAtIndexes:(NSIndexSet *)arg2 withEvent:(NSEvent *)arg3 offset:(struct CGPoint *)arg4;
- (NSImage *)collectionView:(NSCollectionView *)arg1 draggingImageForItemsAtIndexPaths:(NSSet *)arg2 withEvent:(NSEvent *)arg3 offset:(struct CGPoint *)arg4;
- (NSArray *)collectionView:(NSCollectionView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItemsAtIndexes:(NSIndexSet *)arg3;
- (NSArray *)collectionView:(NSCollectionView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItemsAtIndexPaths:(NSSet *)arg3;
- (BOOL)collectionView:(NSCollectionView *)arg1 writeItemsAtIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (BOOL)collectionView:(NSCollectionView *)arg1 writeItemsAtIndexPaths:(NSSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (BOOL)collectionView:(NSCollectionView *)arg1 canDragItemsAtIndexes:(NSIndexSet *)arg2 withEvent:(NSEvent *)arg3;
- (BOOL)collectionView:(NSCollectionView *)arg1 canDragItemsAtIndexPaths:(NSSet *)arg2 withEvent:(NSEvent *)arg3;
@end

@protocol NSComboBoxDataSource <NSObject>

@optional
- (NSString *)comboBox:(NSComboBox *)arg1 completedString:(NSString *)arg2;
- (unsigned long long)comboBox:(NSComboBox *)arg1 indexOfItemWithStringValue:(NSString *)arg2;
- (id)comboBox:(NSComboBox *)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(NSComboBox *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingDestination <NSObject>

@optional
- (void)updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id <NSDraggingInfo>)arg1;
- (void)concludeDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)performDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)prepareForDragOperation:(id <NSDraggingInfo>)arg1;
- (void)draggingExited:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingUpdated:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingEntered:(id <NSDraggingInfo>)arg1;
@end

@protocol NSDraggingSource <NSObject>
- (unsigned long long)draggingSession:(NSDraggingSession *)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@optional
- (BOOL)ignoreModifierKeysForDraggingSession:(NSDraggingSession *)arg1;
- (void)draggingSession:(NSDraggingSession *)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(NSDraggingSession *)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(NSDraggingSession *)arg1 willBeginAtPoint:(struct CGPoint)arg2;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (NSDictionary *)layoutManager:(NSLayoutManager *)arg1 shouldUseTemporaryAttributes:(NSDictionary *)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)layoutManager:(NSLayoutManager *)arg1 textContainer:(NSTextContainer *)arg2 didChangeGeometryFromSize:(struct CGSize)arg3;
- (void)layoutManager:(NSLayoutManager *)arg1 didCompleteLayoutForTextContainer:(NSTextContainer *)arg2 atEnd:(BOOL)arg3;
- (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)arg1;
- (BOOL)layoutManager:(NSLayoutManager *)arg1 shouldSetLineFragmentRect:(inout struct CGRect *)arg2 lineFragmentUsedRect:(inout struct CGRect *)arg3 baselineOffset:(inout double *)arg4 inTextContainer:(NSTextContainer *)arg5 forGlyphRange:(struct _NSRange)arg6;
- (struct CGRect)layoutManager:(NSLayoutManager *)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(NSTextContainer *)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;
- (BOOL)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg2;
- (BOOL)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg2;
- (long long)layoutManager:(NSLayoutManager *)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 lineSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (unsigned long long)layoutManager:(NSLayoutManager *)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(NSFont *)arg5 forGlyphRange:(struct _NSRange)arg6;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPasteboardReading <NSObject>
+ (NSArray *)readableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
+ (unsigned long long)readingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(NSString *)arg2;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(NSString *)arg1;
- (NSArray *)writableTypesForPasteboard:(NSPasteboard *)arg1;

@optional
- (unsigned long long)writingOptionsForType:(NSString *)arg1 pasteboard:(NSPasteboard *)arg2;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (void)popoverDidDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldDetach:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSScrubberDataSource <NSObject>
- (NSScrubberItemView *)scrubber:(NSScrubber *)arg1 viewForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsForScrubber:(NSScrubber *)arg1;
@end

@protocol NSScrubberDelegate <NSObject>

@optional
- (void)didCancelInteractingWithScrubber:(NSScrubber *)arg1;
- (void)didFinishInteractingWithScrubber:(NSScrubber *)arg1;
- (void)didBeginInteractingWithScrubber:(NSScrubber *)arg1;
- (void)scrubber:(NSScrubber *)arg1 didChangeVisibleRange:(struct _NSRange)arg2;
- (void)scrubber:(NSScrubber *)arg1 didHighlightItemAtIndex:(long long)arg2;
- (void)scrubber:(NSScrubber *)arg1 didSelectItemAtIndex:(long long)arg2;
@end

@protocol NSScrubberFlowLayoutDelegate <NSScrubberDelegate>

@optional
- (struct CGSize)scrubber:(NSScrubber *)arg1 layout:(NSScrubberFlowLayout *)arg2 sizeForItemAtIndex:(long long)arg3;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol NSSharingServiceDelegate <NSObject>

@optional
- (NSView *)anchoringViewForSharingService:(NSSharingService *)arg1 showRelativeToRect:(struct CGRect *)arg2 preferredEdge:(unsigned long long *)arg3;
- (NSWindow *)sharingService:(NSSharingService *)arg1 sourceWindowForShareItems:(NSArray *)arg2 sharingContentScope:(long long *)arg3;
- (NSImage *)sharingService:(NSSharingService *)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(NSSharingService *)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (void)sharingService:(NSSharingService *)arg1 didShareItems:(NSArray *)arg2;
- (void)sharingService:(NSSharingService *)arg1 didFailToShareItems:(NSArray *)arg2 error:(NSError *)arg3;
- (void)sharingService:(NSSharingService *)arg1 willShareItems:(NSArray *)arg2;
@end

@protocol NSSharingServicePickerDelegate <NSObject>

@optional
- (void)sharingServicePicker:(NSSharingServicePicker *)arg1 didChooseSharingService:(NSSharingService *)arg2;
- (id <NSSharingServiceDelegate>)sharingServicePicker:(NSSharingServicePicker *)arg1 delegateForSharingService:(NSSharingService *)arg2;
- (NSArray *)sharingServicePicker:(NSSharingServicePicker *)arg1 sharingServicesForItems:(NSArray *)arg2 proposedSharingServices:(NSArray *)arg3;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSTabViewDelegate <NSObject>

@optional
- (void)tabViewDidChangeNumberOfTabViewItems:(NSTabView *)arg1;
- (void)tabView:(NSTabView *)arg1 didSelectTabViewItem:(NSTabViewItem *)arg2;
- (void)tabView:(NSTabView *)arg1 willSelectTabViewItem:(NSTabViewItem *)arg2;
- (BOOL)tabView:(NSTabView *)arg1 shouldSelectTabViewItem:(NSTabViewItem *)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (NSArray *)tableView:(NSTableView *)arg1 rowActionsForRow:(long long)arg2 edge:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>

@optional
- (BOOL)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 shouldSelectCandidateAtIndex:(unsigned long long)arg3;
- (NSArray *)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 candidates:(NSArray *)arg3 forSelectedRange:(struct _NSRange)arg4;
- (NSArray *)textField:(NSTextField *)arg1 textView:(NSTextView *)arg2 candidatesForSelectedRange:(struct _NSRange)arg3;
@end

@protocol NSTextStorageDelegate <NSObject>

@optional
- (void)textStorage:(NSTextStorage *)arg1 didProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
- (void)textStorage:(NSTextStorage *)arg1 willProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldSelectCandidateAtIndex:(unsigned long long)arg2;
- (NSArray *)textView:(NSTextView *)arg1 candidates:(NSArray *)arg2 forSelectedRange:(struct _NSRange)arg3;
- (NSArray *)textView:(NSTextView *)arg1 candidatesForSelectedRange:(struct _NSRange)arg2;
- (NSArray *)textView:(NSTextView *)arg1 shouldUpdateTouchBarItemIdentifiers:(NSArray *)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(NSNotification *)arg1;
- (void)toolbarWillAddItem:(NSNotification *)arg1;
- (NSArray *)toolbarSelectableItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)arg1;
- (NSToolbarItem *)toolbar:(NSToolbar *)arg1 itemForItemIdentifier:(NSString *)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSTouchBarDelegate <NSObject>

@optional
- (NSTouchBarItem *)touchBar:(NSTouchBar *)arg1 makeItemForIdentifier:(NSString *)arg2;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;

@optional
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
- (void)URLSession:(NSURLSession *)arg1 taskIsWaitingForConnectivity:(NSURLSessionTask *)arg2;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willBeginDelayedRequest:(NSURLRequest *)arg3 completionHandler:(void (^)(long long, NSURLRequest *))arg4;
@end

@protocol NSUserInterfaceItemSearching <NSObject>
- (NSArray *)localizedTitlesForItem:(id)arg1;
- (void)searchForItemsWithSearchString:(NSString *)arg1 resultLimit:(long long)arg2 matchedItemHandler:(void (^)(NSArray *))arg3;

@optional
- (void)showAllHelpTopicsForSearchString:(NSString *)arg1;
- (void)performActionForItem:(id)arg1;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

@protocol NSUserNotificationCenterDelegate <NSObject>

@optional
- (BOOL)userNotificationCenter:(NSUserNotificationCenter *)arg1 shouldPresentNotification:(NSUserNotification *)arg2;
- (void)userNotificationCenter:(NSUserNotificationCenter *)arg1 didActivateNotification:(NSUserNotification *)arg2;
- (void)userNotificationCenter:(NSUserNotificationCenter *)arg1 didDeliverNotification:(NSUserNotification *)arg2;
@end

@protocol NSViewControllerPresentationAnimator <NSObject>
- (void)animateDismissalOfViewController:(NSViewController *)arg1 fromViewController:(NSViewController *)arg2;
- (void)animatePresentationOfViewController:(NSViewController *)arg1 fromViewController:(NSViewController *)arg2;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(NSWindow *)arg1;
@end

@protocol PDFParser <NSObject>
- (NSString *)name;
- (unsigned long long)pageCount;
- (void)parseWithProgress:(void (^)(void))arg1;
- (void)loadDocumentFromData:(NSData *)arg1;
- (void)loadDocumentFromURL:(NSURL *)arg1;
- (id)initWithScanner:(PDFScanner *)arg1;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@end

@protocol QLPreviewPanelDataSource
- (id <QLPreviewItem>)previewPanel:(QLPreviewPanel *)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(QLPreviewPanel *)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(QLPreviewPanel *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(QLPreviewPanel *)arg1 sourceFrameOnScreenForPreviewItem:(id <QLPreviewItem>)arg2;
- (BOOL)previewPanel:(QLPreviewPanel *)arg1 handleEvent:(NSEvent *)arg2;
@end

@protocol SCKShareUploadDataSource <NSObject>
- (NSURL *)documentFileURLForShareUploadOperation:(SCKShareUploadOperation *)arg1;
- (NSURL *)shareUploadOperation:(SCKShareUploadOperation *)arg1 fileURLForItemWithHash:(NSString *)arg2;
@end

@protocol SMKCommunicationInterface
- (void)sendData:(NSData *)arg1 to:(NSUUID *)arg2;
- (void)broadcastData:(NSData *)arg1;
- (void)disconnect:(NSUUID *)arg1;
- (void)connect:(NSUUID *)arg1;
- (void)connectionInfoWithReply:(void (^)(NSArray *))arg1;
- (void)startUsingOptions:(long long)arg1 webPort:(unsigned long long)arg2;
@end

@protocol SMKCommunicationResponseInterface <NSObject>
- (void)connectionInfo:(SMKConnectionInfo *)arg1 didReceiveData:(NSData *)arg2;
- (void)connectionAdvertisementDidChange:(SMKConnectionInfo *)arg1;
- (void)connectionStatusDidChange:(SMKConnectionInfo *)arg1;
- (void)connectionInfoDidChange:(NSArray *)arg1;
@end

@protocol SMKDiskCacheDelegate <NSObject>
- (NSData *)diskCache:(SMKDiskCache *)arg1 dataForKey:(NSString *)arg2;
@end

@protocol SMKMessageCoding <NSObject>
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithDictionary:(NSDictionary *)arg1;
@end

@protocol SMKMirrorDataSource <SMKWebServerDataSource>
@property(readonly) NSDictionary *manifestContent;
@property(readonly) NSString *currentArtboardID;
@end

@protocol SMKWebServerDataSource <NSObject>
- (void)renderExportForRequest:(SMKExportRequest *)arg1 handler:(void (^)(NSData *))arg2;
@end

@protocol SUUpdaterDelegate <NSObject>

@optional
- (void)updater:(SUUpdater *)arg1 didAbortWithError:(NSError *)arg2;
- (void)updater:(SUUpdater *)arg1 didCancelInstallUpdateOnQuit:(SUAppcastItem *)arg2;
- (void)updater:(SUUpdater *)arg1 willInstallUpdateOnQuit:(SUAppcastItem *)arg2 immediateInstallationInvocation:(NSInvocation *)arg3;
- (void)updaterDidShowModalAlert:(SUUpdater *)arg1;
- (void)updaterWillShowModalAlert:(SUUpdater *)arg1;
- (NSString *)pathToRelaunchForUpdater:(SUUpdater *)arg1;
- (id <SUVersionDisplay>)versionDisplayerForUpdater:(SUUpdater *)arg1;
- (id <SUVersionComparison>)versionComparatorForUpdater:(SUUpdater *)arg1;
- (void)updaterDidRelaunchApplication:(SUUpdater *)arg1;
- (void)updaterWillRelaunchApplication:(SUUpdater *)arg1;
- (BOOL)updaterShouldRelaunchApplication:(SUUpdater *)arg1;
- (BOOL)updater:(SUUpdater *)arg1 shouldPostponeRelaunchForUpdate:(SUAppcastItem *)arg2 untilInvoking:(NSInvocation *)arg3;
- (void)updater:(SUUpdater *)arg1 willInstallUpdate:(SUAppcastItem *)arg2;
- (void)userDidCancelDownload:(SUUpdater *)arg1;
- (void)updater:(SUUpdater *)arg1 failedToDownloadUpdate:(SUAppcastItem *)arg2 error:(NSError *)arg3;
- (void)updater:(SUUpdater *)arg1 willDownloadUpdate:(SUAppcastItem *)arg2 withRequest:(NSMutableURLRequest *)arg3;
- (void)updaterDidNotFindUpdate:(SUUpdater *)arg1;
- (void)updater:(SUUpdater *)arg1 didFindValidUpdate:(SUAppcastItem *)arg2;
- (SUAppcastItem *)bestValidUpdateInAppcast:(SUAppcast *)arg1 forUpdater:(SUUpdater *)arg2;
- (void)updater:(SUUpdater *)arg1 didFinishLoadingAppcast:(SUAppcast *)arg2;
- (BOOL)updaterShouldPromptForPermissionToCheckForUpdates:(SUUpdater *)arg1;
- (NSString *)feedURLStringForUpdater:(SUUpdater *)arg1;
- (NSArray *)feedParametersForUpdater:(SUUpdater *)arg1 sendingSystemProfile:(BOOL)arg2;
- (BOOL)updaterMayCheckForUpdates:(SUUpdater *)arg1;
@end

@protocol SnapItem <NSObject>
@property(readonly, nonatomic) struct CGRect rectForSnapping;
@property(readonly, nonatomic) id <SnapItem> snapItemForDrawing;
@property(readonly, nonatomic) NSArray *snapLines;
- (struct CGRect)distanceRectangleToItem:(id <SnapItem>)arg1 axis:(unsigned long long)arg2;
@end

@protocol WKNavigationDelegate <NSObject>

@optional
- (void)webViewWebContentProcessDidTerminate:(WKWebView *)arg1;
- (void)webView:(WKWebView *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)webView:(WKWebView *)arg1 didFailNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didFinishNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didCommitNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didFailProvisionalNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didStartProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationResponse:(WKNavigationResponse *)arg2 decisionHandler:(void (^)(long long))arg3;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 decisionHandler:(void (^)(long long))arg3;
@end

@protocol WKScriptMessageHandler <NSObject>
- (void)userContentController:(WKUserContentController *)arg1 didReceiveScriptMessage:(WKScriptMessage *)arg2;
@end

@protocol WebFrameLoadDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 didCreateJavaScriptContext:(JSContext *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 windowScriptObjectAvailable:(WebScriptObject *)arg2;
- (void)webView:(WebView *)arg1 didClearWindowObject:(WebScriptObject *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 willCloseFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didCancelClientRedirectForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 willPerformClientRedirectToURL:(NSURL *)arg2 delay:(double)arg3 fireDate:(NSDate *)arg4 forFrame:(WebFrame *)arg5;
- (void)webView:(WebView *)arg1 didChangeLocationWithinPageForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFailLoadWithError:(NSError *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didFinishLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didReceiveIcon:(NSImage *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didReceiveTitle:(NSString *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didCommitLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFailProvisionalLoadWithError:(NSError *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didStartProvisionalLoadForFrame:(WebFrame *)arg2;
@end

@protocol WebPolicyDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 unableToImplementPolicyWithError:(NSError *)arg2 frame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 decidePolicyForMIMEType:(NSString *)arg2 request:(NSURLRequest *)arg3 frame:(WebFrame *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
- (void)webView:(WebView *)arg1 decidePolicyForNewWindowAction:(NSDictionary *)arg2 request:(NSURLRequest *)arg3 newFrameName:(NSString *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
- (void)webView:(WebView *)arg1 decidePolicyForNavigationAction:(NSDictionary *)arg2 request:(NSURLRequest *)arg3 frame:(WebFrame *)arg4 decisionListener:(id <WebPolicyDecisionListener>)arg5;
@end

@protocol WebResourceLoadDelegate <NSObject>

@optional
- (void)webView:(WebView *)arg1 plugInFailedWithError:(NSError *)arg2 dataSource:(WebDataSource *)arg3;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didFailLoadingWithError:(NSError *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(WebDataSource *)arg3;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveContentLength:(long long)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveResponse:(NSURLResponse *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg3 fromDataSource:(WebDataSource *)arg4;
- (void)webView:(WebView *)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg3 fromDataSource:(WebDataSource *)arg4;
- (NSURLRequest *)webView:(WebView *)arg1 resource:(id)arg2 willSendRequest:(NSURLRequest *)arg3 redirectResponse:(NSURLResponse *)arg4 fromDataSource:(WebDataSource *)arg5;
- (id)webView:(WebView *)arg1 identifierForInitialRequest:(NSURLRequest *)arg2 fromDataSource:(WebDataSource *)arg3;
@end

@protocol WebUIDelegate <NSObject>

@optional
- (struct CGRect)webViewContentRect:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setContentRect:(struct CGRect)arg2;
- (NSString *)webView:(WebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3;
- (BOOL)webView:(WebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2;
- (void)webView:(WebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2;
- (void)webView:(WebView *)arg1 drawFooterInRect:(struct CGRect)arg2;
- (void)webView:(WebView *)arg1 drawHeaderInRect:(struct CGRect)arg2;
- (float)webViewFooterHeight:(WebView *)arg1;
- (float)webViewHeaderHeight:(WebView *)arg1;
- (void)webView:(WebView *)arg1 printFrameView:(WebFrameView *)arg2;
- (void)webView:(WebView *)arg1 willPerformDragSourceAction:(unsigned long long)arg2 fromPoint:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (unsigned long long)webView:(WebView *)arg1 dragSourceActionMaskForPoint:(struct CGPoint)arg2;
- (void)webView:(WebView *)arg1 willPerformDragDestinationAction:(unsigned long long)arg2 forDraggingInfo:(id <NSDraggingInfo>)arg3;
- (unsigned long long)webView:(WebView *)arg1 dragDestinationActionMaskForDraggingInfo:(id <NSDraggingInfo>)arg2;
- (BOOL)webView:(WebView *)arg1 shouldPerformAction:(SEL)arg2 fromSender:(id)arg3;
- (BOOL)webView:(WebView *)arg1 validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg2 defaultValidation:(BOOL)arg3;
- (NSArray *)webView:(WebView *)arg1 contextMenuItemsForElement:(NSDictionary *)arg2 defaultMenuItems:(NSArray *)arg3;
- (void)webView:(WebView *)arg1 mouseDidMoveOverElement:(NSDictionary *)arg2 modifierFlags:(unsigned long long)arg3;
- (void)webView:(WebView *)arg1 runOpenPanelForFileButtonWithResultListener:(id <WebOpenPanelResultListener>)arg2 allowMultipleFiles:(BOOL)arg3;
- (void)webView:(WebView *)arg1 runOpenPanelForFileButtonWithResultListener:(id <WebOpenPanelResultListener>)arg2;
- (BOOL)webView:(WebView *)arg1 runBeforeUnloadConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (NSString *)webView:(WebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3 initiatedByFrame:(WebFrame *)arg4;
- (BOOL)webView:(WebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WebFrame *)arg3;
- (struct CGRect)webViewFrame:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setFrame:(struct CGRect)arg2;
- (void)webView:(WebView *)arg1 setResizable:(BOOL)arg2;
- (BOOL)webViewIsResizable:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setStatusBarVisible:(BOOL)arg2;
- (BOOL)webViewIsStatusBarVisible:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setToolbarsVisible:(BOOL)arg2;
- (BOOL)webViewAreToolbarsVisible:(WebView *)arg1;
- (NSString *)webViewStatusText:(WebView *)arg1;
- (void)webView:(WebView *)arg1 setStatusText:(NSString *)arg2;
- (void)webView:(WebView *)arg1 makeFirstResponder:(NSResponder *)arg2;
- (NSResponder *)webViewFirstResponder:(WebView *)arg1;
- (void)webViewUnfocus:(WebView *)arg1;
- (void)webViewFocus:(WebView *)arg1;
- (void)webViewClose:(WebView *)arg1;
- (void)webViewRunModal:(WebView *)arg1;
- (WebView *)webView:(WebView *)arg1 createWebViewModalDialogWithRequest:(NSURLRequest *)arg2;
- (void)webViewShow:(WebView *)arg1;
- (WebView *)webView:(WebView *)arg1 createWebViewWithRequest:(NSURLRequest *)arg2;
@end

@interface SMKExportRequest : NSObject <NSCopying>
{
    NSString *_artboardID;
    double _scale;
    struct CGSize _constrainingSize;
    struct CGRect _rect;
}

@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) struct CGSize constrainingSize; // @synthesize constrainingSize=_constrainingSize;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(copy, nonatomic) NSString *artboardID; // @synthesize artboardID=_artboardID;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) NSString *stringValue;
- (id)initWithStringValue:(id)arg1;
- (id)initWithURLRequest:(id)arg1;

@end

@interface SMKWebServer : NSObject <GCDWebServerDelegate, SMKDiskCacheDelegate>
{
    id <SMKWebServerDataSource> _dataSource;
    GCDWebServer *_server;
    SMKDiskCache *_diskCache;
    NSMutableArray *_cachedExports;
    NSMutableDictionary *_assetAccounts;
}

@property(retain, nonatomic) NSMutableDictionary *assetAccounts; // @synthesize assetAccounts=_assetAccounts;
@property(retain) NSMutableArray *cachedExports; // @synthesize cachedExports=_cachedExports;
@property(retain) SMKDiskCache *diskCache; // @synthesize diskCache=_diskCache;
@property(retain, nonatomic) GCDWebServer *server; // @synthesize server=_server;
@property(nonatomic) __weak id <SMKWebServerDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)diskCache:(id)arg1 dataForKey:(id)arg2;
- (void)webServerDidStop:(id)arg1;
- (void)webServerDidStart:(id)arg1;
- (id)dataFromImage:(id)arg1;
- (id)artboardThumbnailFromPath:(id)arg1 constrainedToSize:(struct CGSize)arg2;
- (id)renderedDataForExportRequest:(id)arg1;
- (id)dataForExportRequest:(id)arg1;
- (void)invalidateAllArtboards;
- (void)invalidateArtboardID:(id)arg1;
- (id)cachedExportRequestsWithArtboardID:(id)arg1;
- (id)exportRequestForServerRequest:(id)arg1;
- (id)artboardResponseForRequest:(id)arg1;
- (id)resourceResponseForRequest:(id)arg1;
- (id)defaultWebServerFilePath;
- (id)resourcesPath;
- (void)deauthorizeAdvertisementID:(id)arg1;
- (id)tokenForAdvertisementID:(id)arg1;
- (BOOL)isTokenValid:(id)arg1;
- (id)authorizeAdvertisementID:(id)arg1;
@property(readonly, nonatomic) unsigned long long port;
@property(readonly, nonatomic) NSURL *URL;
- (id)bonjourName;
- (void)stop;
- (void)start;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SMKMirrorController : NSObject <SMKCommunicationResponseInterface>
{
    id <SMKMirrorControllerDelegate> _delegate;
    NSArray *_clients;
    id <SMKMirrorDataSource> _dataSource;
    NSXPCConnection *_helperConnection;
    unsigned long long _helperRestartCount;
    NSMutableDictionary *_advertisements;
    NSMutableSet *_advertisementWhiteList;
    SMKWebServer *_webServer;
}

@property(retain, nonatomic) SMKWebServer *webServer; // @synthesize webServer=_webServer;
@property(retain, nonatomic) NSMutableSet *advertisementWhiteList; // @synthesize advertisementWhiteList=_advertisementWhiteList;
@property(retain, nonatomic) NSMutableDictionary *advertisements; // @synthesize advertisements=_advertisements;
@property unsigned long long helperRestartCount; // @synthesize helperRestartCount=_helperRestartCount;
@property(retain, nonatomic) NSXPCConnection *helperConnection; // @synthesize helperConnection=_helperConnection;
@property(nonatomic) __weak id <SMKMirrorDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) NSArray *clients; // @synthesize clients=_clients;
@property(nonatomic) __weak id <SMKMirrorControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)connectionInfo:(id)arg1 didReceiveURLRequest:(id)arg2;
- (void)connectionInfo:(id)arg1 didReceiveMessage:(id)arg2;
- (void)connectionInfo:(id)arg1 didReceiveData:(id)arg2;
- (void)connectionAdvertisementDidChange:(id)arg1;
- (void)connectionStatusDidChange:(id)arg1;
- (void)connectionInfoDidChange:(id)arg1;
- (void)initiateConnectionWithInfo:(id)arg1;
@property(readonly, nonatomic) BOOL hasConnectedClients;
- (void)updateAllClientsWithConnectionInfo:(id)arg1;
- (id)newClientWithConnectionInfo:(id)arg1;
- (void)sendConnectedMessageToConnectionID:(id)arg1;
- (id)currentArtboardMessage;
- (id)contentMessage;
- (void)sendMessage:(id)arg1 toConnectionID:(id)arg2;
- (void)broadcastMessage:(id)arg1;
- (void)disconnect:(id)arg1;
- (void)connect:(id)arg1;
- (void)invalidateImageForArtboardIdentifier:(id)arg1 inRect:(struct CGRect)arg2;
- (void)invalidateCurrentArtboard;
- (void)invalidateContent;
- (void)continueUserActivity:(id)arg1;
- (BOOL)isClientWhitelisted:(id)arg1;
- (void)whitelistClientAdvertisementID:(id)arg1;
@property(readonly, nonatomic) NSURL *authorizedWebURL;
@property(readonly, nonatomic) NSURL *webURL;
@property(readonly, nonatomic) id <SMKCommunicationInterface> helperObject;
- (long long)helperOptions;
@property(readonly, nonatomic) BOOL netserviceEnabled;
@property(readonly, nonatomic) BOOL webEnabled;
@property(readonly, nonatomic) BOOL usbEnabled;
- (void)helperDidTerminate;
@property(readonly, nonatomic) NSXPCInterface *expectedHelperInterface;
@property(readonly, nonatomic) NSXPCInterface *exportedHelperInterface;
@property(readonly, nonatomic) NSSet *helperInterfaceClasses;
- (void)setupXPCConnection;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SMKDiskCache : NSObject
{
    id <SMKDiskCacheDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
    NSFileManager *_fileManager;
}

@property(retain) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <SMKDiskCacheDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (BOOL)containsObjectForKey:(id)arg1;
- (id)filePathForKey:(id)arg1;
- (id)fileNameForKey:(id)arg1;
- (void)removeCacheDirectory;
- (void)createCacheDirectory;
- (void)applicationWillTerminateNotification:(id)arg1;
- (void)dealloc;
- (id)initWithQOS:(unsigned int)arg1;
- (id)init;

@end

@interface SMKMirrorClient : NSObject
{
    NSUUID *_connectionID;
    SMKAdvertisement *_advertisement;
    unsigned long long _status;
    unsigned long long _type;
}

+ (id)clientWithConnectionInfo:(id)arg1;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(retain, nonatomic) SMKAdvertisement *advertisement; // @synthesize advertisement=_advertisement;
@property(copy, nonatomic) NSUUID *connectionID; // @synthesize connectionID=_connectionID;
- (void).cxx_destruct;

@end

@interface SMKURLResponse : NSObject <NSSecureCoding>
{
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSData *_data;
    NSError *_error;
}

+ (BOOL)supportsSecureCoding;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SMKUSBHTTPResponse : SMKURLResponse
{
}

@end

@interface SMKConnection : NSObject
{
    NSUUID *_UUID;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_queue;
    NSDictionary *_advertisement;
    unsigned long long _status;
    NSString *_resourceHost;
}

@property(readonly, nonatomic) NSString *resourceHost; // @synthesize resourceHost=_resourceHost;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(readonly, nonatomic) NSDictionary *advertisement; // @synthesize advertisement=_advertisement;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long connectionType;
@property(readonly, nonatomic) SMKConnectionInfo *connectionInfo;
- (void)didReceiveData:(id)arg1;
- (void)sendData:(id)arg1;
- (void)close;
- (void)connect;
- (void)dealloc;
- (id)init;

@end

@interface SMKAdvertisement : NSObject <NSCopying, NSSecureCoding>
{
    NSUUID *_identifier;
    NSString *_name;
    NSString *_modelName;
}

+ (BOOL)supportsSecureCoding;
@property(retain, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface SMKConnectionInfo : NSObject <NSSecureCoding>
{
    NSUUID *_UUID;
    unsigned long long _status;
    unsigned long long _type;
    NSDictionary *_advertisement;
}

+ (BOOL)supportsSecureCoding;
@property(copy, nonatomic) NSDictionary *advertisement; // @synthesize advertisement=_advertisement;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(copy, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic, getter=isHidden) BOOL hidden;
- (long long)compareConnectionInfo:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SMKMessage : NSObject <SMKMessageCoding>
{
    NSString *_type;
    id <SMKMessageCoding> _content;
}

+ (Class)classForType:(id)arg1;
+ (id)messageFromData:(id)arg1;
@property(retain, nonatomic) id <SMKMessageCoding> content; // @synthesize content=_content;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithType:(id)arg1;
@property(readonly, nonatomic) Class contentClass;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
@property(readonly, nonatomic) NSData *messageData;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SMKManifestMessageContent : NSObject <SMKMessageCoding>
{
    NSDictionary *_manifest;
}

@property(retain, nonatomic) NSDictionary *manifest; // @synthesize manifest=_manifest;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SMKArtboardMessageContent : NSObject <SMKMessageCoding>
{
    NSString *_identifier;
    struct CGSize _constrainingSize;
    struct CGRect _rect;
}

@property(nonatomic) struct CGSize constrainingSize; // @synthesize constrainingSize=_constrainingSize;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SMKConnectionMessageContent : NSObject <SMKMessageCoding>
{
    BOOL _supportsURLRequests;
    NSString *_token;
    NSString *_device;
    unsigned long long _serverPort;
    NSString *_serverName;
}

@property(nonatomic) BOOL supportsURLRequests; // @synthesize supportsURLRequests=_supportsURLRequests;
@property(nonatomic) NSString *serverName; // @synthesize serverName=_serverName;
@property(nonatomic) unsigned long long serverPort; // @synthesize serverPort=_serverPort;
@property(retain, nonatomic) NSString *device; // @synthesize device=_device;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SMKAdvertisementMessageContent : NSObject <SMKMessageCoding>
{
    SMKAdvertisement *_advertisement;
    NSString *_challenge;
}

@property(retain, nonatomic) NSString *challenge; // @synthesize challenge=_challenge;
@property(retain, nonatomic) SMKAdvertisement *advertisement; // @synthesize advertisement=_advertisement;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFHTTPRequestOperation : AFURLConnectionOperation
{
    AFHTTPResponseSerializer<AFURLResponseSerialization> *_responseSerializer;
    id _responseObject;
    NSError *_responseSerializationError;
}

+ (BOOL)supportsSecureCoding;
@property(retain, nonatomic) NSError *responseSerializationError; // @synthesize responseSerializationError=_responseSerializationError;
@property(retain, nonatomic) id responseObject; // @synthesize responseObject=_responseObject;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @synthesize responseSerializer=_responseSerializer;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)pause;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)error;
- (id)initWithRequest:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSRecursiveLock *lock; // @dynamic lock;
@property(retain, nonatomic) NSHTTPURLResponse *response; // @dynamic response;

@end

@interface AFHTTPResponseSerializer : NSObject <AFURLResponseSerialization>
{
    unsigned long long _stringEncoding;
    NSIndexSet *_acceptableStatusCodes;
    NSSet *_acceptableContentTypes;
}

+ (BOOL)supportsSecureCoding;
+ (id)serializer;
@property(copy, nonatomic) NSSet *acceptableContentTypes; // @synthesize acceptableContentTypes=_acceptableContentTypes;
@property(copy, nonatomic) NSIndexSet *acceptableStatusCodes; // @synthesize acceptableStatusCodes=_acceptableStatusCodes;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (BOOL)validateResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFJSONResponseSerializer : AFHTTPResponseSerializer
{
    BOOL _removesKeysWithNullValues;
    unsigned long long _readingOptions;
}

+ (id)serializerWithReadingOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) BOOL removesKeysWithNullValues; // @synthesize removesKeysWithNullValues=_removesKeysWithNullValues;
@property(nonatomic) unsigned long long readingOptions; // @synthesize readingOptions=_readingOptions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFXMLParserResponseSerializer : AFHTTPResponseSerializer
{
}

+ (id)serializer;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFXMLDocumentResponseSerializer : AFHTTPResponseSerializer
{
    unsigned long long _options;
}

+ (id)serializerWithXMLDocumentOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFPropertyListResponseSerializer : AFHTTPResponseSerializer
{
    unsigned long long _format;
    unsigned long long _readOptions;
}

+ (id)serializerWithFormat:(unsigned long long)arg1 readOptions:(unsigned long long)arg2;
+ (id)serializer;
@property(nonatomic) unsigned long long readOptions; // @synthesize readOptions=_readOptions;
@property(nonatomic) unsigned long long format; // @synthesize format=_format;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFImageResponseSerializer : AFHTTPResponseSerializer
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface AFCompoundResponseSerializer : AFHTTPResponseSerializer
{
    NSArray *_responseSerializers;
}

+ (id)compoundSerializerWithResponseSerializers:(id)arg1;
@property(copy, nonatomic) NSArray *responseSerializers; // @synthesize responseSerializers=_responseSerializers;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;

@end

@interface AFURLSessionManagerTaskDelegate : NSObject <NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
{
    AFURLSessionManager *_manager;
    NSMutableData *_mutableData;
    NSProgress *_progress;
    NSURL *_downloadFileURL;
    CDUnknownBlockType _downloadTaskDidFinishDownloading;
    CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidFinishDownloading; // @synthesize downloadTaskDidFinishDownloading=_downloadTaskDidFinishDownloading;
@property(copy, nonatomic) NSURL *downloadFileURL; // @synthesize downloadFileURL=_downloadFileURL;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(retain, nonatomic) NSMutableData *mutableData; // @synthesize mutableData=_mutableData;
@property(nonatomic) __weak AFURLSessionManager *manager; // @synthesize manager=_manager;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _AFURLSessionTaskSwizzling : NSObject
{
}

+ (void)swizzleResumeAndSuspendMethodForClass:(Class)arg1;
+ (void)load;
- (void)af_suspend;
- (void)af_resume;
- (long long)state;

@end

@interface AFURLSessionManager : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate, NSSecureCoding, NSCopying>
{
    BOOL _attemptsToRecreateUploadTasksForBackgroundSessions;
    NSURLSession *_session;
    NSOperationQueue *_operationQueue;
    id <AFURLResponseSerialization> _responseSerializer;
    AFSecurityPolicy *_securityPolicy;
    AFNetworkReachabilityManager *_reachabilityManager;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSURLSessionConfiguration *_sessionConfiguration;
    NSMutableDictionary *_mutableTaskDelegatesKeyedByTaskIdentifier;
    NSLock *_lock;
    CDUnknownBlockType _sessionDidBecomeInvalid;
    CDUnknownBlockType _sessionDidReceiveAuthenticationChallenge;
    CDUnknownBlockType _didFinishEventsForBackgroundURLSession;
    CDUnknownBlockType _taskWillPerformHTTPRedirection;
    CDUnknownBlockType _taskDidReceiveAuthenticationChallenge;
    CDUnknownBlockType _taskNeedNewBodyStream;
    CDUnknownBlockType _taskDidSendBodyData;
    CDUnknownBlockType _taskDidComplete;
    CDUnknownBlockType _dataTaskDidReceiveResponse;
    CDUnknownBlockType _dataTaskDidBecomeDownloadTask;
    CDUnknownBlockType _dataTaskDidReceiveData;
    CDUnknownBlockType _dataTaskWillCacheResponse;
    CDUnknownBlockType _downloadTaskDidFinishDownloading;
    CDUnknownBlockType _downloadTaskDidWriteData;
    CDUnknownBlockType _downloadTaskDidResume;
}

+ (BOOL)supportsSecureCoding;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidResume; // @synthesize downloadTaskDidResume=_downloadTaskDidResume;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidWriteData; // @synthesize downloadTaskDidWriteData=_downloadTaskDidWriteData;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidFinishDownloading; // @synthesize downloadTaskDidFinishDownloading=_downloadTaskDidFinishDownloading;
@property(copy, nonatomic) CDUnknownBlockType dataTaskWillCacheResponse; // @synthesize dataTaskWillCacheResponse=_dataTaskWillCacheResponse;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveData; // @synthesize dataTaskDidReceiveData=_dataTaskDidReceiveData;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidBecomeDownloadTask; // @synthesize dataTaskDidBecomeDownloadTask=_dataTaskDidBecomeDownloadTask;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveResponse; // @synthesize dataTaskDidReceiveResponse=_dataTaskDidReceiveResponse;
@property(copy, nonatomic) CDUnknownBlockType taskDidComplete; // @synthesize taskDidComplete=_taskDidComplete;
@property(copy, nonatomic) CDUnknownBlockType taskDidSendBodyData; // @synthesize taskDidSendBodyData=_taskDidSendBodyData;
@property(copy, nonatomic) CDUnknownBlockType taskNeedNewBodyStream; // @synthesize taskNeedNewBodyStream=_taskNeedNewBodyStream;
@property(copy, nonatomic) CDUnknownBlockType taskDidReceiveAuthenticationChallenge; // @synthesize taskDidReceiveAuthenticationChallenge=_taskDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType taskWillPerformHTTPRedirection; // @synthesize taskWillPerformHTTPRedirection=_taskWillPerformHTTPRedirection;
@property(copy, nonatomic) CDUnknownBlockType didFinishEventsForBackgroundURLSession; // @synthesize didFinishEventsForBackgroundURLSession=_didFinishEventsForBackgroundURLSession;
@property(copy, nonatomic) CDUnknownBlockType sessionDidReceiveAuthenticationChallenge; // @synthesize sessionDidReceiveAuthenticationChallenge=_sessionDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType sessionDidBecomeInvalid; // @synthesize sessionDidBecomeInvalid=_sessionDidBecomeInvalid;
@property(retain, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property(retain, nonatomic) NSMutableDictionary *mutableTaskDelegatesKeyedByTaskIdentifier; // @synthesize mutableTaskDelegatesKeyedByTaskIdentifier=_mutableTaskDelegatesKeyedByTaskIdentifier;
@property(retain, nonatomic) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(nonatomic) BOOL attemptsToRecreateUploadTasksForBackgroundSessions; // @synthesize attemptsToRecreateUploadTasksForBackgroundSessions=_attemptsToRecreateUploadTasksForBackgroundSessions;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) AFNetworkReachabilityManager *reachabilityManager; // @synthesize reachabilityManager=_reachabilityManager;
@property(retain, nonatomic) AFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) id <AFURLResponseSerialization> responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (BOOL)respondsToSelector:(SEL)arg1;
@property(readonly, copy) NSString *description;
- (void)setDownloadTaskDidResumeBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadTaskDidWriteDataBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadTaskDidFinishDownloadingBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskWillCacheResponseBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidReceiveDataBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidBecomeDownloadTaskBlock:(CDUnknownBlockType)arg1;
- (void)setDataTaskDidReceiveResponseBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidCompleteBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidSendBodyDataBlock:(CDUnknownBlockType)arg1;
- (void)setTaskDidReceiveAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setTaskWillPerformHTTPRedirectionBlock:(CDUnknownBlockType)arg1;
- (void)setTaskNeedNewBodyStreamBlock:(CDUnknownBlockType)arg1;
- (void)setDidFinishEventsForBackgroundURLSessionBlock:(CDUnknownBlockType)arg1;
- (void)setSessionDidReceiveAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setSessionDidBecomeInvalidBlock:(CDUnknownBlockType)arg1;
- (id)downloadProgressForTask:(id)arg1;
- (id)uploadProgressForTask:(id)arg1;
- (id)downloadTaskWithResumeData:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)downloadTaskWithRequest:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)uploadTaskWithStreamedRequest:(id)arg1 progress:(id *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)uploadTaskWithRequest:(id)arg1 fromData:(id)arg2 progress:(id *)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 progress:(id *)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)invalidateSessionCancelingTasks:(BOOL)arg1;
@property(readonly, nonatomic) NSArray *downloadTasks;
@property(readonly, nonatomic) NSArray *uploadTasks;
@property(readonly, nonatomic) NSArray *dataTasks;
@property(readonly, nonatomic) NSArray *tasks;
- (id)tasksForKeyPath:(id)arg1;
- (void)removeAllDelegates;
- (void)removeDelegateForTask:(id)arg1;
- (void)addDelegateForDownloadTask:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)addDelegateForUploadTask:(id)arg1 progress:(id *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addDelegateForDataTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setDelegate:(id)arg1 forTask:(id)arg2;
- (id)delegateForTask:(id)arg1;
- (void)taskDidSuspend:(id)arg1;
- (void)taskDidResume:(id)arg1;
@property(readonly, copy, nonatomic) NSString *taskDescriptionForSessionTasks;
- (void)dealloc;
- (id)initWithSessionConfiguration:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFHTTPSessionManager : AFURLSessionManager <NSSecureCoding, NSCopying>
{
    NSURL *_baseURL;
    AFHTTPRequestSerializer<AFURLRequestSerialization> *_requestSerializer;
}

+ (BOOL)supportsSecureCoding;
+ (id)manager;
@property(retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer; // @synthesize requestSerializer=_requestSerializer;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)dataTaskWithHTTPMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)DELETE:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PATCH:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PUT:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)POST:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)HEAD:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)GET:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @dynamic responseSerializer;
- (id)initWithBaseURL:(id)arg1 sessionConfiguration:(id)arg2;
- (id)initWithSessionConfiguration:(id)arg1;
- (id)initWithBaseURL:(id)arg1;
- (id)init;

@end

@interface AFNetworkReachabilityManager : NSObject
{
    long long _networkReachabilityStatus;
    id _networkReachability;
    CDUnknownBlockType _networkReachabilityStatusBlock;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)managerForAddress:(const void *)arg1;
+ (id)managerForDomain:(id)arg1;
+ (id)sharedManager;
@property(copy, nonatomic) CDUnknownBlockType networkReachabilityStatusBlock; // @synthesize networkReachabilityStatusBlock=_networkReachabilityStatusBlock;
@property(retain, nonatomic) id networkReachability; // @synthesize networkReachability=_networkReachability;
@property(nonatomic) long long networkReachabilityStatus; // @synthesize networkReachabilityStatus=_networkReachabilityStatus;
- (void).cxx_destruct;
- (void)setReachabilityStatusChangeBlock:(CDUnknownBlockType)arg1;
- (id)localizedNetworkReachabilityStatusString;
- (void)stopMonitoring;
- (void)startMonitoring;
@property(readonly, nonatomic, getter=isReachableViaWiFi) BOOL reachableViaWiFi;
@property(readonly, nonatomic, getter=isReachableViaWWAN) BOOL reachableViaWWAN;
@property(readonly, nonatomic, getter=isReachable) BOOL reachable;
- (void)dealloc;
- (id)init;
- (id)initWithReachability:(struct __SCNetworkReachability *)arg1;

@end

@interface AFURLConnectionOperation : NSOperation <NSURLConnectionDelegate, NSURLConnectionDataDelegate, NSSecureCoding, NSCopying>
{
    BOOL _shouldUseCredentialStorage;
    NSOutputStream *_outputStream;
    NSSet *_runLoopModes;
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSError *_error;
    NSData *_responseData;
    NSURLCredential *_credential;
    AFSecurityPolicy *_securityPolicy;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSDictionary *_userInfo;
    long long _state;
    NSRecursiveLock *_lock;
    NSURLConnection *_connection;
    NSString *_responseString;
    unsigned long long _responseStringEncoding;
    long long _totalBytesRead;
    CDUnknownBlockType _backgroundTaskCleanup;
    CDUnknownBlockType _uploadProgress;
    CDUnknownBlockType _downloadProgress;
    CDUnknownBlockType _authenticationChallenge;
    CDUnknownBlockType _cacheResponse;
    CDUnknownBlockType _redirectResponse;
}

+ (BOOL)supportsSecureCoding;
+ (id)batchOfRequestOperations:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)networkRequestThread;
+ (void)networkRequestThreadEntryPoint:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType redirectResponse; // @synthesize redirectResponse=_redirectResponse;
@property(copy, nonatomic) CDUnknownBlockType cacheResponse; // @synthesize cacheResponse=_cacheResponse;
@property(copy, nonatomic) CDUnknownBlockType authenticationChallenge; // @synthesize authenticationChallenge=_authenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(copy, nonatomic) CDUnknownBlockType uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property(copy, nonatomic) CDUnknownBlockType backgroundTaskCleanup; // @synthesize backgroundTaskCleanup=_backgroundTaskCleanup;
@property(nonatomic) long long totalBytesRead; // @synthesize totalBytesRead=_totalBytesRead;
@property(nonatomic) unsigned long long responseStringEncoding; // @synthesize responseStringEncoding=_responseStringEncoding;
@property(copy, nonatomic) NSString *responseString; // @synthesize responseString=_responseString;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) AFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) NSURLCredential *credential; // @synthesize credential=_credential;
@property(nonatomic) BOOL shouldUseCredentialStorage; // @synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage;
@property(retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSSet *runLoopModes; // @synthesize runLoopModes=_runLoopModes;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)cancelConnection;
- (void)cancel;
- (void)finish;
- (void)operationDidStart;
- (void)start;
- (BOOL)isConcurrent;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (BOOL)isReady;
- (void)setCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setRedirectResponseBlock:(CDUnknownBlockType)arg1;
- (void)setCacheResponseBlock:(CDUnknownBlockType)arg1;
- (void)setWillSendRequestForAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;
- (void)setDownloadProgressBlock:(CDUnknownBlockType)arg1;
- (void)setUploadProgressBlock:(CDUnknownBlockType)arg1;
- (void)resume;
- (BOOL)isPaused;
- (void)operationDidPause;
- (void)pause;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) NSInputStream *inputStream;
- (void)dealloc;
- (id)init;
- (id)initWithRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFSecurityPolicy : NSObject <NSSecureCoding, NSCopying>
{
    BOOL _allowInvalidCertificates;
    BOOL _validatesDomainName;
    unsigned long long _SSLPinningMode;
    NSArray *_pinnedCertificates;
    NSArray *_pinnedPublicKeys;
}

+ (BOOL)supportsSecureCoding;
+ (id)keyPathsForValuesAffectingPinnedPublicKeys;
+ (id)policyWithPinningMode:(unsigned long long)arg1;
+ (id)defaultPolicy;
+ (id)defaultPinnedCertificates;
@property(retain, nonatomic) NSArray *pinnedPublicKeys; // @synthesize pinnedPublicKeys=_pinnedPublicKeys;
@property(nonatomic) BOOL validatesDomainName; // @synthesize validatesDomainName=_validatesDomainName;
@property(nonatomic) BOOL allowInvalidCertificates; // @synthesize allowInvalidCertificates=_allowInvalidCertificates;
@property(retain, nonatomic) NSArray *pinnedCertificates; // @synthesize pinnedCertificates=_pinnedCertificates;
@property(nonatomic) unsigned long long SSLPinningMode; // @synthesize SSLPinningMode=_SSLPinningMode;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)evaluateServerTrust:(struct __SecTrust *)arg1 forDomain:(id)arg2;
- (BOOL)evaluateServerTrust:(struct __SecTrust *)arg1;
- (id)init;

@end

@interface AFHTTPRequestOperationManager : NSObject <NSSecureCoding, NSCopying>
{
    BOOL _shouldUseCredentialStorage;
    NSURL *_baseURL;
    AFHTTPRequestSerializer<AFURLRequestSerialization> *_requestSerializer;
    AFHTTPResponseSerializer<AFURLResponseSerialization> *_responseSerializer;
    NSOperationQueue *_operationQueue;
    NSURLCredential *_credential;
    AFSecurityPolicy *_securityPolicy;
    AFNetworkReachabilityManager *_reachabilityManager;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
}

+ (BOOL)supportsSecureCoding;
+ (id)manager;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) AFNetworkReachabilityManager *reachabilityManager; // @synthesize reachabilityManager=_reachabilityManager;
@property(retain, nonatomic) AFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) NSURLCredential *credential; // @synthesize credential=_credential;
@property(nonatomic) BOOL shouldUseCredentialStorage; // @synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer; // @synthesize requestSerializer=_requestSerializer;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)DELETE:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PATCH:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)PUT:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)POST:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)HEAD:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)GET:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)HTTPRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)HTTPRequestOperationWithHTTPMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)initWithBaseURL:(id)arg1;
- (id)init;

@end

@interface AFQueryStringPair : NSObject
{
    id _field;
    id _value;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) id field; // @synthesize field=_field;
- (void).cxx_destruct;
- (id)URLEncodedStringValue;
- (id)initWithField:(id)arg1 value:(id)arg2;

@end

@interface AFHTTPRequestSerializer : NSObject <AFURLRequestSerialization>
{
    BOOL _allowsCellularAccess;
    BOOL _HTTPShouldHandleCookies;
    BOOL _HTTPShouldUsePipelining;
    unsigned long long _stringEncoding;
    unsigned long long _cachePolicy;
    unsigned long long _networkServiceType;
    double _timeoutInterval;
    NSSet *_HTTPMethodsEncodingParametersInURI;
    NSMutableSet *_mutableObservedChangedKeyPaths;
    NSMutableDictionary *_mutableHTTPRequestHeaders;
    unsigned long long _queryStringSerializationStyle;
    CDUnknownBlockType _queryStringSerialization;
}

+ (BOOL)supportsSecureCoding;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)serializer;
@property(copy, nonatomic) CDUnknownBlockType queryStringSerialization; // @synthesize queryStringSerialization=_queryStringSerialization;
@property(nonatomic) unsigned long long queryStringSerializationStyle; // @synthesize queryStringSerializationStyle=_queryStringSerializationStyle;
@property(retain, nonatomic) NSMutableDictionary *mutableHTTPRequestHeaders; // @synthesize mutableHTTPRequestHeaders=_mutableHTTPRequestHeaders;
@property(retain, nonatomic) NSMutableSet *mutableObservedChangedKeyPaths; // @synthesize mutableObservedChangedKeyPaths=_mutableObservedChangedKeyPaths;
@property(retain, nonatomic) NSSet *HTTPMethodsEncodingParametersInURI; // @synthesize HTTPMethodsEncodingParametersInURI=_HTTPMethodsEncodingParametersInURI;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) unsigned long long networkServiceType; // @synthesize networkServiceType=_networkServiceType;
@property(nonatomic) BOOL HTTPShouldUsePipelining; // @synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining;
@property(nonatomic) BOOL HTTPShouldHandleCookies; // @synthesize HTTPShouldHandleCookies=_HTTPShouldHandleCookies;
@property(nonatomic) unsigned long long cachePolicy; // @synthesize cachePolicy=_cachePolicy;
@property(nonatomic) BOOL allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;
- (id)requestWithMultipartFormRequest:(id)arg1 writingStreamContentsToFile:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4;
- (id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3;
- (void)setQueryStringSerializationWithBlock:(CDUnknownBlockType)arg1;
- (void)setQueryStringSerializationWithStyle:(unsigned long long)arg1;
- (void)clearAuthorizationHeader;
- (void)setAuthorizationHeaderFieldWithToken:(id)arg1;
- (void)setAuthorizationHeaderFieldWithUsername:(id)arg1 password:(id)arg2;
- (id)valueForHTTPHeaderField:(id)arg1;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
@property(readonly, nonatomic) NSDictionary *HTTPRequestHeaders;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFStreamingMultipartFormData : NSObject <AFMultipartFormData>
{
    NSMutableURLRequest *_request;
    unsigned long long _stringEncoding;
    NSString *_boundary;
    AFMultipartBodyStream *_bodyStream;
}

@property(retain, nonatomic) AFMultipartBodyStream *bodyStream; // @synthesize bodyStream=_bodyStream;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)requestByFinalizingMultipartFormData;
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(id)arg1 body:(id)arg2;
- (void)appendPartWithFormData:(id)arg1 name:(id)arg2;
- (void)appendPartWithFileData:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4;
- (void)appendPartWithInputStream:(id)arg1 name:(id)arg2 fileName:(id)arg3 length:(long long)arg4 mimeType:(id)arg5;
- (BOOL)appendPartWithFileURL:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4 error:(id *)arg5;
- (BOOL)appendPartWithFileURL:(id)arg1 name:(id)arg2 error:(id *)arg3;
- (id)initWithURLRequest:(id)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface AFMultipartBodyStream : NSInputStream <NSCopying, NSStreamDelegate>
{
    id <NSStreamDelegate> delegate;
    unsigned long long streamStatus;
    NSError *streamError;
    unsigned long long _numberOfBytesInPacket;
    double _delay;
    NSInputStream *_inputStream;
    unsigned long long _stringEncoding;
    NSMutableArray *_HTTPBodyParts;
    NSEnumerator *_HTTPBodyPartEnumerator;
    AFHTTPBodyPart *_currentHTTPBodyPart;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
}

@property(retain, nonatomic) NSMutableData *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) AFHTTPBodyPart *currentHTTPBodyPart; // @synthesize currentHTTPBodyPart=_currentHTTPBodyPart;
@property(retain, nonatomic) NSEnumerator *HTTPBodyPartEnumerator; // @synthesize HTTPBodyPartEnumerator=_HTTPBodyPartEnumerator;
@property(retain, nonatomic) NSMutableArray *HTTPBodyParts; // @synthesize HTTPBodyParts=_HTTPBodyParts;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) unsigned long long numberOfBytesInPacket; // @synthesize numberOfBytesInPacket=_numberOfBytesInPacket;
- (void)setStreamError:(id)arg1;
- (id)streamError;
- (void)setStreamStatus:(unsigned long long)arg1;
- (unsigned long long)streamStatus;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
@property(readonly, nonatomic) unsigned long long contentLength;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)close;
- (void)open;
- (BOOL)hasBytesAvailable;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isEmpty) BOOL empty;
- (void)appendHTTPBodyPart:(id)arg1;
- (void)setInitialAndFinalBoundaries;
- (id)initWithStringEncoding:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFHTTPBodyPart : NSObject <NSCopying>
{
    int _phase;
    NSInputStream *_inputStream;
    unsigned long long _phaseReadOffset;
    BOOL _hasInitialBoundary;
    BOOL _hasFinalBoundary;
    unsigned long long _stringEncoding;
    NSDictionary *_headers;
    NSString *_boundary;
    id _body;
    unsigned long long _bodyContentLength;
}

@property(nonatomic) BOOL hasFinalBoundary; // @synthesize hasFinalBoundary=_hasFinalBoundary;
@property(nonatomic) BOOL hasInitialBoundary; // @synthesize hasInitialBoundary=_hasInitialBoundary;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) unsigned long long bodyContentLength; // @synthesize bodyContentLength=_bodyContentLength;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)transitionToNextPhase;
- (long long)readData:(id)arg1 intoBuffer:(char *)arg2 maxLength:(unsigned long long)arg3;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=hasBytesAvailable) BOOL bytesAvailable;
@property(readonly, nonatomic) unsigned long long contentLength;
- (id)stringForHeaders;
- (void)dealloc;
- (id)init;

@end

@interface AFJSONRequestSerializer : AFHTTPRequestSerializer
{
    unsigned long long _writingOptions;
}

+ (id)serializerWithWritingOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) unsigned long long writingOptions; // @synthesize writingOptions=_writingOptions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;

@end

@interface AFPropertyListRequestSerializer : AFHTTPRequestSerializer
{
    unsigned long long _format;
    unsigned long long _writeOptions;
}

+ (id)serializerWithFormat:(unsigned long long)arg1 writeOptions:(unsigned long long)arg2;
+ (id)serializer;
@property(nonatomic) unsigned long long writeOptions; // @synthesize writeOptions=_writeOptions;
@property(nonatomic) unsigned long long format; // @synthesize format=_format;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;

@end

@interface FBContainmentResult : NSObject
{
    BOOL _containerDetermined;
    int _evenOdd;
    int _nonZero;
    FBBezierCurve *_testEdge;
    NSArray *_intersections;
    FBBezierContour *_testContour;
    FBBezierGraph *_graph;
    FBBezierContour *_container;
}

@property(retain, nonatomic) FBBezierContour *container; // @synthesize container=_container;
@property(nonatomic) BOOL containerDetermined; // @synthesize containerDetermined=_containerDetermined;
@property(readonly, nonatomic) FBBezierGraph *graph; // @synthesize graph=_graph;
@property(readonly, nonatomic) FBBezierContour *testContour; // @synthesize testContour=_testContour;
@property(readonly, copy, nonatomic) NSArray *intersections; // @synthesize intersections=_intersections;
@property(readonly, nonatomic) FBBezierCurve *testEdge; // @synthesize testEdge=_testEdge;
@property(readonly, nonatomic) int nonZero; // @synthesize nonZero=_nonZero;
@property(readonly, nonatomic) int evenOdd; // @synthesize evenOdd=_evenOdd;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)initWithTestContour:(id)arg1 inGraph:(id)arg2 evenOddInside:(int)arg3 nonZeroInside:(int)arg4 testEdge:(id)arg5 intersections:(id)arg6;

@end

@interface FBBezierCurve : NSObject
{
    struct FBBezierCurveData _data;
    NSMutableArray *_crossings;
    FBBezierContour *_contour;
    unsigned long long _index;
    BOOL _startShared;
}

+ (id)bezierCurveWithBezierCurveData:(struct FBBezierCurveData)arg1;
+ (id)bezierCurveWithEndPoint1:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3 endPoint2:(struct CGPoint)arg4;
+ (id)bezierCurveWithLineStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2;
+ (id)bezierCurvesFromBezierPath:(id)arg1;
@property(readonly, nonatomic) struct FBBezierCurveData data; // @synthesize data=_data;
@property(nonatomic, getter=isStartShared) BOOL startShared; // @synthesize startShared=_startShared;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(nonatomic) __weak FBBezierContour *contour; // @synthesize contour=_contour;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (void)debugDrawColor:(id)arg1 controlPointColor:(id)arg2 scale:(double)arg3;
- (void)sortCrossings;
- (BOOL)isNext:(id)arg1;
- (BOOL)crossesEdge:(id)arg1 atIntersectRange:(id)arg2;
- (BOOL)crossesEdge:(id)arg1 atIntersection:(id)arg2;
- (BOOL)hasCrossingsUsingNonself:(BOOL)arg1;
- (id)lastCrossingUsingNonself:(BOOL)arg1;
- (id)firstCrossingUsingNonself:(BOOL)arg1;
@property(readonly, nonatomic) FBEdgeCrossing *lastCrossing;
@property(readonly, nonatomic) FBEdgeCrossing *firstCrossing;
@property(readonly, copy, nonatomic) NSArray *crossings;
- (void)selfIntersectingEdgesWithBlock:(CDUnknownBlockType)arg1;
- (void)intersectingEdgesWithBlock:(CDUnknownBlockType)arg1;
- (id)previousCrossing:(id)arg1;
- (id)nextCrossing:(id)arg1;
- (void)crossingsCopyWithBlock:(CDUnknownBlockType)arg1;
- (void)crossingsWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) BOOL hasCrossings;
@property(readonly, nonatomic) FBBezierCurve *previousNonpointNonHorizontalLine;
@property(readonly, nonatomic) FBBezierCurve *nextNonpointNonHorizontalLine;
@property(readonly, nonatomic) FBBezierCurve *previousNonpoint;
@property(readonly, nonatomic) FBBezierCurve *nextNonpoint;
@property(readonly, nonatomic) FBBezierCurve *previous;
@property(readonly, nonatomic) FBBezierCurve *next;
- (void)removeCrossingsInNonCrossingOverlapRuns;
- (void)reorderCoincidentCrossingA:(id)arg1 crossingB:(id)arg2;
- (void)removeDuplicateCrossings;
- (void)removeAllCrossings;
- (void)removeCrossing:(id)arg1;
- (void)addCrossing:(id)arg1;
- (id)description;
- (id)clone;
@property(readonly, nonatomic) NSMutableArray *crossings_;
- (id)bezierPath;
- (struct CGPoint)tangentAtParameter:(double)arg1;
- (struct CGPoint)tangentFromLeftOffset:(double)arg1;
- (struct CGPoint)tangentFromRightOffset:(double)arg1;
- (struct CGPoint)pointFromLeftOffset:(double)arg1;
- (struct CGPoint)pointFromRightOffset:(double)arg1;
@property(readonly, nonatomic) struct CGRect boundingRect;
@property(readonly, nonatomic) struct CGRect bounds;
- (struct FBBezierCurveLocation)closestLocationToPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) BOOL isPointOrHorizontalLine;
@property(readonly, nonatomic) BOOL isHorizontalLine;
@property(readonly, nonatomic) BOOL looksLikeLine;
@property(readonly, nonatomic) BOOL isEndHorizontal;
@property(readonly, nonatomic) BOOL isStartHorizontal;
@property(readonly, nonatomic, getter=isPoint) BOOL point;
- (double)lengthAtParameter:(double)arg1;
- (double)length;
- (double)refineParameter:(double)arg1 forPoint:(struct CGPoint)arg2;
- (struct CGPoint)pointAtParameter:(double)arg1 leftBezierCurve:(id *)arg2 rightBezierCurve:(id *)arg3;
- (id)curveWithTransform:(struct CGAffineTransform)arg1;
- (id)reversedCurve;
- (void)splitSubcurvesWithRange:(struct FBRange)arg1 left:(id *)arg2 middle:(id *)arg3 right:(id *)arg4;
- (id)subcurveWithRange:(struct FBRange)arg1;
- (void)intersectionsWithBezierCurve:(id)arg1 overlapRange:(id *)arg2 withBlock:(CDUnknownBlockType)arg3;
- (BOOL)doesHaveIntersectionsWithBezierCurve:(id)arg1;
- (BOOL)mightIntersectWith:(id)arg1;
- (void)checkForLine;
- (BOOL)isEqual:(id)arg1;
- (id)initWithLineStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 contour:(id)arg3;
- (id)initWithEndPoint1:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3 endPoint2:(struct CGPoint)arg4 contour:(id)arg5;
- (id)initWithBezierCurveData:(struct FBBezierCurveData)arg1;
@property(readonly, nonatomic) BOOL isStraightLine;
@property(readonly, nonatomic) struct CGPoint endPoint2;
@property(readonly, nonatomic) struct CGPoint controlPoint2;
@property(readonly, nonatomic) struct CGPoint controlPoint1;
@property(readonly, nonatomic) struct CGPoint endPoint1;

@end

@interface FBTangentIterator : NSObject
{
    double _leftBaseOffset;
    double _rightBaseOffset;
    FBBezierCurve *_leftCurve;
    FBBezierCurve *_rightCurve;
    double _offset;
    double _offsetStep;
    double _offsetMaximum;
}

+ (id)tangentIteratorWithIntersection:(id)arg1 onCurve:(id)arg2;
@property(nonatomic) double offsetMaximum; // @synthesize offsetMaximum=_offsetMaximum;
@property(nonatomic) double offsetStep; // @synthesize offsetStep=_offsetStep;
@property(nonatomic) double offset; // @synthesize offset=_offset;
@property(retain, nonatomic) FBBezierCurve *rightCurve; // @synthesize rightCurve=_rightCurve;
@property(retain, nonatomic) FBBezierCurve *leftCurve; // @synthesize leftCurve=_leftCurve;
- (void).cxx_destruct;
- (void)updateCurves;
@property(readonly, nonatomic) double rightOffset;
@property(readonly, nonatomic) double leftOffset;
- (BOOL)next:(struct CGPoint [2])arg1;
- (void)sync:(id)arg1;
- (void)commonInit;
- (id)initWithIntersection:(id)arg1 onCurve:(id)arg2;

@end

@interface FBEdgeCrossing : NSObject
{
    BOOL _entry;
    BOOL _processed;
    BOOL _selfCrossing;
    BOOL _suspicious;
    FBBezierCurve *_edge;
    FBEdgeCrossing *_counterpart;
    FBEdgeOverlapRun *_overlapRun;
    unsigned long long _index;
    FBBezierIntersection *_intersection;
}

+ (id)crossingWithIntersection:(id)arg1;
@property(readonly, nonatomic) FBBezierIntersection *intersection; // @synthesize intersection=_intersection;
@property(nonatomic, getter=isSuspicious) BOOL suspicious; // @synthesize suspicious=_suspicious;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(retain, nonatomic) FBEdgeOverlapRun *overlapRun; // @synthesize overlapRun=_overlapRun;
@property(nonatomic, getter=isSelfCrossing) BOOL selfCrossing; // @synthesize selfCrossing=_selfCrossing;
@property(nonatomic, getter=isProcessed) BOOL processed; // @synthesize processed=_processed;
@property(nonatomic, getter=isEntry) BOOL entry; // @synthesize entry=_entry;
@property(nonatomic) __weak FBEdgeCrossing *counterpart; // @synthesize counterpart=_counterpart;
@property(nonatomic) __weak FBBezierCurve *edge; // @synthesize edge=_edge;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)description;
- (BOOL)isEqualToEdgeCrossing:(id)arg1;
- (BOOL)isCoincidentWith:(id)arg1;
@property(readonly, nonatomic, getter=isFromCrossingOverlap) BOOL fromCrossingOverlap;
@property(readonly, nonatomic, getter=isAtEnd) BOOL atEnd;
@property(readonly, nonatomic, getter=isAtStart) BOOL atStart;
@property(readonly, nonatomic) __weak FBBezierCurve *rightCurve;
@property(readonly, nonatomic) __weak FBBezierCurve *leftCurve;
@property(readonly, nonatomic) __weak FBBezierCurve *curve;
@property(readonly, nonatomic) struct CGPoint location;
@property(readonly, nonatomic) double parameter;
- (id)previousUsingNonself:(BOOL)arg1;
- (id)nextUsingNonself:(BOOL)arg1;
@property(readonly, nonatomic) __weak FBEdgeCrossing *previous;
@property(readonly, nonatomic) __weak FBEdgeCrossing *next;
@property(readonly, nonatomic) double order;
- (void)removeFromEdge;
- (id)initWithIntersection:(id)arg1;

@end

@interface FBCurveLocation : NSObject
{
    FBBezierGraph *_graph;
    FBBezierContour *_contour;
    FBBezierCurve *_edge;
    double _parameter;
    double _distance;
}

+ (id)curveLocationWithEdge:(id)arg1 parameter:(double)arg2 distance:(double)arg3;
@property(readonly, nonatomic) double distance; // @synthesize distance=_distance;
@property(readonly, nonatomic) double parameter; // @synthesize parameter=_parameter;
@property(readonly, nonatomic) FBBezierCurve *edge; // @synthesize edge=_edge;
@property(retain, nonatomic) FBBezierContour *contour; // @synthesize contour=_contour;
@property(retain, nonatomic) FBBezierGraph *graph; // @synthesize graph=_graph;
- (void).cxx_destruct;
- (id)initWithEdge:(id)arg1 parameter:(double)arg2 distance:(double)arg3;

@end

@interface FBBezierIntersection : NSObject
{
    struct CGPoint _location;
    FBBezierCurve *_curve1LeftBezier;
    FBBezierCurve *_curve1RightBezier;
    FBBezierCurve *_curve2LeftBezier;
    FBBezierCurve *_curve2RightBezier;
    BOOL _tangent;
    BOOL _needToComputeCurve1;
    BOOL _needToComputeCurve2;
    FBBezierCurve *_curve1;
    double _parameter1;
    FBBezierCurve *_curve2;
    double _parameter2;
}

+ (id)intersectionWithCurve1:(id)arg1 parameter1:(double)arg2 curve2:(id)arg3 parameter2:(double)arg4;
@property(readonly, nonatomic) double parameter2; // @synthesize parameter2=_parameter2;
@property(readonly, nonatomic) FBBezierCurve *curve2; // @synthesize curve2=_curve2;
@property(readonly, nonatomic) double parameter1; // @synthesize parameter1=_parameter1;
@property(readonly, nonatomic) FBBezierCurve *curve1; // @synthesize curve1=_curve1;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)description;
- (void)enumerateAliasesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateAliasesOfCurve:(id)arg1 atParameter:(double)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)computeCurve2;
- (void)computeCurve1;
@property(readonly, nonatomic, getter=isAtEndPointOfCurve) BOOL atEndPointOfCurve;
@property(readonly, nonatomic, getter=isAtEndPointOfCurve2) BOOL atEndPointOfCurve2;
@property(readonly, nonatomic, getter=isAtStopOfCurve2) BOOL atStopOfCurve2;
@property(readonly, nonatomic, getter=isAtStartOfCurve2) BOOL atStartOfCurve2;
@property(readonly, nonatomic, getter=isAtEndPointOfCurve1) BOOL atEndPointOfCurve1;
@property(readonly, nonatomic, getter=isAtStopOfCurve1) BOOL atStopOfCurve1;
@property(readonly, nonatomic, getter=isAtStartOfCurve1) BOOL atStartOfCurve1;
- (double)curve2Threshold;
- (double)curve1Threshold;
- (double)curve2ExactThreshold;
- (double)curve1ExactThreshold;
- (double)curve2ThresholdWithWeight:(double)arg1 maximum:(double)arg2;
- (double)curve1ThresholdWithWeight:(double)arg1 maximum:(double)arg2;
@property(readonly, nonatomic) BOOL isAtExactStopOfCurve2;
@property(readonly, nonatomic) BOOL isAtExactStartOfCurve2;
@property(readonly, nonatomic) BOOL isAtExactStopOfCurve1;
@property(readonly, nonatomic) BOOL isAtExactStartOfCurve1;
@property(readonly, nonatomic) FBBezierCurve *curve2RightBezier;
@property(readonly, nonatomic) FBBezierCurve *curve2LeftBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1RightBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1LeftBezier;
- (long long)curve2WindingCount;
- (long long)curve1WindingCount;
- (struct CGPoint)curve2Direction;
- (struct CGPoint)curve1Direction;
@property(readonly, nonatomic, getter=isTangent) BOOL tangent;
@property(readonly, nonatomic) struct CGPoint location;
- (id)initWithCurve1:(id)arg1 parameter1:(double)arg2 curve2:(id)arg3 parameter2:(double)arg4;

@end

@interface FBBezierGraph : NSObject
{
    NSMutableArray *_contours;
    struct CGRect _bounds;
    BOOL _insertedSelfCrossings;
    struct CGPath *_CGPath;
}

+ (id)bezierGraph;
+ (id)bezierGraphWithContours:(id)arg1;
+ (id)bezierGraphWithBezierPath:(id)arg1;
+ (id)bezierGraphWithCGPath:(struct CGPath *)arg1;
@property(nonatomic) BOOL insertedSelfCrossings; // @synthesize insertedSelfCrossings=_insertedSelfCrossings;
@property(nonatomic) struct CGPath *CGPath; // @synthesize CGPath=_CGPath;
@property(readonly, nonatomic) NSArray *contours; // @synthesize contours=_contours;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)bezierGraphBySplittingSelfCrossingContours:(id)arg1;
- (id)bezierGraphByTrimmingSelfCrossingContours;
- (id)bezierGraphByMergingLinearRunsInContours;
- (id)contoursWithoutCrossings;
- (BOOL)contourHasCrossings:(id)arg1;
- (id)contourFromCurves:(id)arg1;
- (id)nextCrossingFromCrossing:(id)arg1 curves:(id *)arg2;
- (id)curveFromCrossing:(id)arg1 to:(id)arg2;
- (id)bezierGraphWithTransform:(struct CGAffineTransform)arg1;
- (id)description;
- (void)debugFindCurvesThatShouldIntersectWith:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)debuggingInsertIntersectionsWithBezierGraph:(id)arg1;
- (void)debuggingInsertCrossingsForFillConversion;
- (void)debuggingInsertCrossingsWithBezierGraph:(id)arg1 markInside:(BOOL)arg2 markOtherInside:(BOOL)arg3;
- (void)debuggingInsertCrossingsForDifferenceWithBezierGraph:(id)arg1;
- (void)debuggingInsertCrossingsForIntersectWithBezierGraph:(id)arg1;
- (void)debuggingInsertCrossingsForUnionWithBezierGraph:(id)arg1;
- (id)nonselfIntersectingContours;
@property(readonly, nonatomic) NSArray *nonEmptyContours;
- (id)nonintersectingContours;
- (id)disjointContours;
- (void)addContour:(id)arg1;
- (void)removeOverlaps;
- (void)removeCrossings;
- (id)bezierGraphFromNonselfIntersections:(BOOL)arg1;
- (id)addReverseCurvesFromCrossing:(id)arg1 useNonself:(BOOL)arg2 toContour:(id)arg3;
- (id)addCurvesFromCrossing:(id)arg1 useNonself:(BOOL)arg2 toContour:(id)arg3;
- (id)firstUnprocessedCrossing:(BOOL)arg1;
- (void)markAllCrossingsAsUnprocessed;
- (void)removeCrossings:(id)arg1 forContours:(id)arg2;
- (void)removeContoursThatDontContain:(id)arg1;
- (void)removeContourCrossings:(id)arg1 thatDontAppearIn:(id)arg2;
- (id)contoursFromCrossings:(id)arg1;
- (BOOL)eliminateContainers:(id)arg1 thatDontContainContour:(id)arg2 usingRay:(id)arg3;
- (unsigned long long)numberOfTimesContour:(id)arg1 appearsInCrossings:(id)arg2;
- (BOOL)findCrossingsOnContainers:(id)arg1 onRay:(id)arg2 beforeMinimum:(struct CGPoint)arg3 afterMaximum:(struct CGPoint)arg4 crossingsBefore:(id)arg5 crossingsAfter:(id)arg6;
- (BOOL)findBoundsOfContour:(id)arg1 onRay:(id)arg2 minimum:(struct CGPoint *)arg3 maximum:(struct CGPoint *)arg4;
- (BOOL)containsContour:(id)arg1;
- (id)debugPathForJointsOfContour:(id)arg1;
- (id)debugPathForContainmentOfContour:(id)arg1 transform:(struct CGAffineTransform)arg2;
- (id)debugPathForContainmentOfContour:(id)arg1;
- (id)closestCrossingToPoint:(struct CGPoint)arg1;
- (id)closestLocationToPoint:(struct CGPoint)arg1;
- (int)contourInsides:(id)arg1;
- (id)containmentResultForContour:(id)arg1;
@property(readonly, nonatomic) struct CGRect bounds;
- (void)insertSelfCrossings;
- (void)insertContourSelfCrossings;
- (BOOL)isIntersection:(id)arg1 atJoinOfEdge:(id)arg2 andEdge:(id)arg3;
- (void)sortCoincidentCrossings;
- (void)removeDuplicateCrossings;
- (void)insertCrossingsAtOverlapMiddle;
- (void)removeCrossingsInOverlapsWithTypes:(unsigned long long)arg1;
- (void)removeCrossingsInNonCrossingOverlapRuns;
- (void)cleanupCrossingsWithBezierGraph:(id)arg1;
- (unsigned long long)insertCrossingsWithBezierGraph:(id)arg1 overlapRunCrossingTypes:(unsigned long long)arg2 crossingPosition:(unsigned long long)arg3;
- (unsigned long long)insertCrossingsWithBezierGraph:(id)arg1;
- (id)bezierPathWithClass:(Class)arg1;
- (id)bezierPath;
- (id)bezierGraphWithClockwiseFillsAnticlockwiseHoles;
- (id)noneWithBezierGraph:(id)arg1;
- (id)xorWithBezierGraph:(id)arg1;
- (void)markSelfCrossingsAsEntryOrExit;
- (void)markCrossingsAsEntryOrExitWithBezierGraph:(id)arg1 markInside:(BOOL)arg2;
- (void)differenceEquivalentNonintersectingContours:(id)arg1 withContours:(id)arg2 results:(id)arg3;
- (id)differenceWithBezierGraph:(id)arg1;
- (void)intersectEquivalentNonintersectingContours:(id)arg1 withContours:(id)arg2 results:(id)arg3;
- (void)intersectNonintersectingPartsIntoGraph:(id)arg1 withGraph:(id)arg2;
- (id)intersectWithBezierGraph:(id)arg1;
- (void)unionEquivalentNonintersectingContours:(id)arg1 withContours:(id)arg2 results:(id)arg3;
- (void)unionNonintersectingPartsIntoGraph:(id)arg1 withGraph:(id)arg2;
- (id)unionWithBezierGraph:(id)arg1;
- (id)performOperationWithGraph:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (id)convertToEvenOddWindingRule;
- (id)convertToNoneZeroWindingRule;
- (id)contourByFollowingCrossingsFromEdge:(id)arg1 atOffset:(double)arg2;
- (id)contourByFollowingUnprocessedCrossingsFromCrossing:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithBezierPath:(id)arg1 orCGPath:(struct CGPath *)arg2;
- (id)initWithBezierPath:(id)arg1;
- (id)initWithCGPath:(struct CGPath *)arg1;

@end

@interface FBContourOverlap : NSObject
{
    NSMutableArray *_runs;
}

+ (id)contourOverlap;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)description;
- (BOOL)isBetweenContour:(id)arg1 andContour:(id)arg2;
@property(readonly, nonatomic) FBBezierContour *contour2;
@property(readonly, nonatomic) FBBezierContour *contour1;
- (BOOL)isEmpty;
- (BOOL)isComplete;
- (void)reset;
- (void)runsWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSArray *overlapRuns;
- (BOOL)doesContainParameter:(double)arg1 onEdge:(id)arg2;
- (BOOL)doesContainCrossing:(id)arg1;
- (void)addOverlap:(id)arg1 forEdge1:(id)arg2 edge2:(id)arg3;
@property(readonly, nonatomic) NSMutableArray *runs_;

@end

@interface FBEdgeOverlapRun : NSObject
{
    NSMutableArray *_overlaps;
    unsigned long long _crossingType;
    struct FBEdgeOverlapRunTestPoints _contour1TestPoints;
    struct FBEdgeOverlapRunTestPoints _contour2TestPoints;
    struct FBEdgeOverlapRunStartStopInsides _contour1StartStopInsides;
    struct FBEdgeOverlapRunStartStopInsides _contour2StartStopInsides;
}

+ (id)overlapRun;
@property(readonly, nonatomic) NSArray *overlaps; // @synthesize overlaps=_overlaps;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (void)edgeOverlapsWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
@property(readonly, nonatomic) FBBezierContour *contour2;
@property(readonly, nonatomic) FBBezierContour *contour1;
- (id)middleIntersection;
- (void)addStopCrossing;
- (void)addStartCrossing;
- (void)addMiddleCrossing;
- (void)removeCrossings;
- (BOOL)isCrossingUsingNonZeroWindingRule;
- (BOOL)isCrossing;
- (BOOL)isCrossingWithOutsetLines;
- (BOOL)isCrossingWithTangentsOnly;
- (BOOL)doesContainParameter:(double)arg1 onEdge:(id)arg2;
@property(readonly, nonatomic) unsigned long long crossingType;
- (BOOL)doesContainCrossing:(id)arg1;
- (BOOL)isComplete;
- (BOOL)insertOverlap:(id)arg1;
@property(readonly, nonatomic) BOOL stopIsInsideContour2;
@property(readonly, nonatomic) BOOL stopIsInsideContour1;
@property(readonly, nonatomic) BOOL startIsInsideContour2;
@property(readonly, nonatomic) BOOL startIsInsideContour1;
- (void)calculateContour2StartStopInsides;
- (void)calculateContour1StartStopInsides;
- (struct FBEdgeOverlapRunTestPoints *)contour2TestPoints;
- (struct FBEdgeOverlapRunTestPoints *)contour1TestPoints;
- (id)init;

@end

@interface FBEdgeOverlap : NSObject
{
    FBBezierIntersectRange *_range;
    FBBezierCurve *_edge1;
    FBBezierCurve *_edge2;
}

+ (id)overlapWithRange:(id)arg1 edge1:(id)arg2 edge2:(id)arg3;
@property(readonly, nonatomic) FBBezierCurve *edge2; // @synthesize edge2=_edge2;
@property(readonly, nonatomic) FBBezierCurve *edge1; // @synthesize edge1=_edge1;
@property(readonly, nonatomic) FBBezierIntersectRange *range; // @synthesize range=_range;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)description;
- (BOOL)doesContainParameter:(double)arg1 onEdge:(id)arg2 startExtends:(BOOL)arg3 endExtends:(BOOL)arg4;
- (id)middleIntersection;
- (void)addStopCrossing:(id)arg1;
- (void)addMiddleCrossing:(id)arg1;
- (void)addStartCrossing:(id)arg1;
- (void)addIntersection:(id)arg1 overlapRun:(id)arg2;
- (BOOL)fitsAfter:(id)arg1;
- (BOOL)fitsBefore:(id)arg1;
- (id)initWithRange:(id)arg1 edge1:(id)arg2 edge2:(id)arg3;

@end

@interface FBBezierPathElementCallback : NSObject
{
    CDUnknownBlockType _block;
    BOOL _stop;
}

- (void).cxx_destruct;
- (BOOL)invoke:(struct FBBezierPathElement)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface FBBezierOperationChainOperand : NSObject
{
    int _operation;
    NSBezierPath *_path;
}

+ (id)operandWithMomento:(id)arg1;
+ (id)operandWithOperation:(int)arg1 path:(id)arg2;
@property(readonly, nonatomic) NSBezierPath *path; // @synthesize path=_path;
@property(readonly, nonatomic) int operation; // @synthesize operation=_operation;
- (void).cxx_destruct;
- (id)momento;
- (id)initWithMomento:(id)arg1;
- (id)initWithOperation:(int)arg1 path:(id)arg2;

@end

@interface FBBezierOperationChain : NSObject
{
    NSMutableArray *_operands;
}

- (void).cxx_destruct;
- (void)enumerateWithBlock:(CDUnknownBlockType)arg1;
- (void)saveWithName:(id)arg1;
- (id)archive;
- (void)appendBezierPath:(id)arg1 withOperation:(int)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithBezierPath:(id)arg1;
- (id)init;

@end

@interface FBBezierIntersectRange : NSObject
{
    FBBezierCurve *_curve1LeftBezier;
    FBBezierCurve *_curve1MiddleBezier;
    FBBezierCurve *_curve1RightBezier;
    BOOL _needToComputeCurve1;
    FBBezierCurve *_curve2LeftBezier;
    FBBezierCurve *_curve2MiddleBezier;
    FBBezierCurve *_curve2RightBezier;
    BOOL _needToComputeCurve2;
    BOOL _reversed;
    FBBezierCurve *_curve1;
    FBBezierCurve *_curve2;
    struct FBRange _parameterRange1;
    struct FBRange _parameterRange2;
}

+ (id)intersectRangeWithCurve1:(id)arg1 parameterRange1:(struct FBRange)arg2 curve2:(id)arg3 parameterRange2:(struct FBRange)arg4 reversed:(BOOL)arg5;
@property(readonly, nonatomic) BOOL reversed; // @synthesize reversed=_reversed;
@property(readonly, nonatomic) struct FBRange parameterRange2; // @synthesize parameterRange2=_parameterRange2;
@property(readonly, nonatomic) FBBezierCurve *curve2; // @synthesize curve2=_curve2;
@property(readonly, nonatomic) struct FBRange parameterRange1; // @synthesize parameterRange1=_parameterRange1;
@property(readonly, nonatomic) FBBezierCurve *curve1; // @synthesize curve1=_curve1;
- (void).cxx_destruct;
- (id)description;
- (void)clearCache;
- (void)merge:(id)arg1;
- (id)flip;
@property(readonly, nonatomic) FBBezierIntersection *stopIntersection;
@property(readonly, nonatomic) FBBezierIntersection *middleIntersection;
@property(readonly, nonatomic) FBBezierIntersection *startIntersection;
@property(readonly, nonatomic, getter=isAtStopOfCurve2) BOOL atStopOfCurve2;
@property(readonly, nonatomic, getter=isAtStartOfCurve2) BOOL atStartOfCurve2;
@property(readonly, nonatomic, getter=isAtStopOfCurve1) BOOL atStopOfCurve1;
@property(readonly, nonatomic, getter=isAtStartOfCurve1) BOOL atStartOfCurve1;
- (void)computeCurve2;
- (void)computeCurve1;
@property(readonly, nonatomic) FBBezierCurve *curve2RightBezier;
@property(readonly, nonatomic) FBBezierCurve *curve2OverlappingBezier;
@property(readonly, nonatomic) FBBezierCurve *curve2LeftBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1RightBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1OverlappingBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1LeftBezier;
- (id)initWithCurve1:(id)arg1 parameterRange1:(struct FBRange)arg2 curve2:(id)arg3 parameterRange2:(struct FBRange)arg4 reversed:(BOOL)arg5;

@end

@interface FBBezierContour : NSObject <NSCopying>
{
    NSMutableArray *_overlaps;
    NSMutableArray *_edges;
    NSBezierPath *_bezPathCache;
    struct CGPath *_cachedPath;
    struct CGRect _bounds;
    struct CGRect _boundingRect;
    NSNumber *_cachedDirection;
    int _inside;
}

+ (id)bezierContourWithCurve:(id)arg1;
@property(nonatomic) int inside; // @synthesize inside=_inside;
@property(readonly, nonatomic) NSArray *edges; // @synthesize edges=_edges;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (void)debugDrawColor:(id)arg1 scale:(double)arg2;
- (id)contourByMergingLinearRuns;
- (id)firstNonPoint;
- (id)debugPathForWindingRuleContainmentAtEdge:(id)arg1 parameter:(double)arg2 point:(struct CGPoint)arg3 withTransform:(struct CGAffineTransform)arg4 andSizeTransform:(struct CGAffineTransform)arg5;
- (id)debugPathForWindingRuleContainmentWithTransform:(struct CGAffineTransform)arg1 andSizeTransform:(struct CGAffineTransform)arg2;
- (id)debugPathForJointsWithTransform:(struct CGAffineTransform)arg1 andSizeTransform:(struct CGAffineTransform)arg2;
- (id)debugPathForIntersectionType:(long long)arg1 withTransform:(struct CGAffineTransform)arg2 andSizeTransform:(struct CGAffineTransform)arg3;
- (id)description;
- (id)closestLocationToPoint:(struct CGPoint)arg1;
- (id)clone;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)doesOverlapContainParameter:(double)arg1 onEdge:(id)arg2;
- (BOOL)doesOverlapContainCrossing:(id)arg1;
- (void)forEachEdgeOverlapDo:(CDUnknownBlockType)arg1;
- (BOOL)isEquivalent:(id)arg1;
- (void)removeAllOverlaps;
- (void)addOverlap:(id)arg1;
- (void)addSelfIntersectingContoursToArray:(id)arg1 originalContour:(id)arg2;
@property(readonly, nonatomic) __weak NSArray *selfIntersectingContours;
@property(readonly, nonatomic) __weak NSArray *intersectingContours;
- (id)debugPathForContainmentOfCrossing:(id)arg1 transform:(struct CGAffineTransform)arg2;
- (BOOL)containsCrossingUsingNonZeroWindingRule:(id)arg1;
- (long long)adjustWindingCount:(long long)arg1 forIntersection:(id)arg2 testRay:(id)arg3;
- (id)crossingContainmentRay:(struct CGPoint)arg1;
- (BOOL)intersection:(id)arg1 isReallyTheSameAs:(id)arg2;
- (BOOL)containsPointUsingNonZeroWindingRule:(struct CGPoint)arg1;
- (BOOL)containsUsingNonZeroWindingRulePoint:(struct CGPoint)arg1 onEdge:(id)arg2 atParameter:(double)arg3;
- (BOOL)intersection:(id)arg1 isReallyTheSameAsCurve:(id)arg2 atParameter:(double)arg3;
- (long long)adjustWindingCount:(long long)arg1 onEdge:(id)arg2 atParameter:(double)arg3;
- (BOOL)isInflectionPointOnEdge:(id)arg1 atParameter:(double)arg2;
- (BOOL)markSelfCrossingsOnEdge:(id)arg1 startParameter:(double)arg2 stopParameter:(double)arg3 isEntry:(BOOL)arg4 withBlock:(CDUnknownBlockType)arg5;
- (void)markSelfCrossingsAsEntryOrExit;
- (void)sortCoincidentCrossings;
- (id)allCrossingsWithGroupedCoincidentPairs;
- (BOOL)isCrossing:(id)arg1 betweenStartEdge:(id)arg2 parameter:(double)arg3 andCrossing:(id)arg4;
- (BOOL)crossesOwnContour:(id)arg1;
- (id)contourMadeClockwiseIfNecessary;
@property(readonly, nonatomic) int direction;
@property(retain, nonatomic) NSNumber *cachedDirection;
- (id)contourWithTransform:(struct CGAffineTransform)arg1;
- (id)reversedContour;
@property(readonly, nonatomic) BOOL isClosed;
- (void)close;
- (id)bezierPathFromEdge:(id)arg1 toEdge:(id)arg2;
@property(readonly, nonatomic) struct CGPath *CGPath;
- (id)bezierPath;
- (BOOL)contourAndSelfIntersectingContoursContainPoint:(struct CGPoint)arg1;
- (BOOL)markCrossingsOnEdge:(id)arg1 startParameter:(double)arg2 stopParameter:(double)arg3 otherContours:(id)arg4 isEntry:(BOOL)arg5;
- (void)markCrossingsAsEntryOrExitWithContour:(id)arg1 markInside:(BOOL)arg2;
- (void)startingEdge:(id *)arg1 parameter:(double *)arg2 point:(struct CGPoint *)arg3 skipHorizontals:(BOOL)arg4 skipInflectionPoints:(BOOL)arg5;
- (id)testRayForContainment:(struct CGRect)arg1;
- (id)startEdgeSkipHorizontals:(BOOL)arg1 skipInflectionPoints:(BOOL)arg2;
- (id)startEdge;
- (void)intersectionsWithRay:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)numberOfIntersectionsWithRay:(id)arg1;
- (BOOL)containsPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) BOOL isEmpty;
@property(readonly, nonatomic) struct CGPoint firstPoint;
@property(readonly, nonatomic) struct CGRect boundingRect;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, copy, nonatomic) NSArray *nonPointEdges;
- (void)addReverseCurveFrom:(id)arg1 to:(id)arg2;
- (void)addReverseCurve:(id)arg1;
- (void)addCurveFrom:(id)arg1 to:(id)arg2;
- (void)addCurve:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *crossings;
@property(readonly, nonatomic) __weak NSMutableArray *overlaps_;
@property(readonly, nonatomic) NSArray *overlaps;
- (void)dealloc;
- (id)init;

@end

@interface FMDatabase : NSObject
{
    struct sqlite3 *_db;
    NSString *_databasePath;
    BOOL _logsErrors;
    BOOL _crashOnErrors;
    BOOL _traceExecution;
    BOOL _checkedOut;
    BOOL _shouldCacheStatements;
    BOOL _isExecutingStatement;
    BOOL _inTransaction;
    double _maxBusyRetryTimeInterval;
    double _startBusyRetryTime;
    NSMutableDictionary *_cachedStatements;
    NSMutableSet *_openResultSets;
    NSMutableSet *_openFunctions;
    NSDateFormatter *_dateFormat;
}

+ (id)storeableDateFormat:(id)arg1;
+ (BOOL)isSQLiteThreadSafe;
+ (id)sqliteLibVersion;
+ (int)FMDBVersion;
+ (id)FMDBUserVersion;
+ (id)databaseWithPath:(id)arg1;
@property BOOL traceExecution; // @synthesize traceExecution=_traceExecution;
@property BOOL checkedOut; // @synthesize checkedOut=_checkedOut;
@property BOOL crashOnErrors; // @synthesize crashOnErrors=_crashOnErrors;
@property BOOL logsErrors; // @synthesize logsErrors=_logsErrors;
@property(retain) NSMutableDictionary *cachedStatements; // @synthesize cachedStatements=_cachedStatements;
- (void)makeFunctionNamed:(id)arg1 maximumArguments:(int)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)setShouldCacheStatements:(BOOL)arg1;
- (BOOL)shouldCacheStatements;
- (id)inSavePoint:(CDUnknownBlockType)arg1;
- (BOOL)rollbackToSavePointWithName:(id)arg1 error:(id *)arg2;
- (BOOL)releaseSavePointWithName:(id)arg1 error:(id *)arg2;
- (BOOL)startSavePointWithName:(id)arg1 error:(id *)arg2;
- (BOOL)inTransaction;
- (BOOL)beginTransaction;
- (BOOL)beginDeferredTransaction;
- (BOOL)commit;
- (BOOL)rollback;
- (BOOL)update:(id)arg1 withErrorAndBindings:(id *)arg2;
- (BOOL)executeUpdate:(id)arg1 withErrorAndBindings:(id *)arg2;
- (BOOL)executeStatements:(id)arg1 withResultBlock:(CDUnknownBlockType)arg2;
- (BOOL)executeStatements:(id)arg1;
- (BOOL)executeUpdateWithFormat:(id)arg1;
- (BOOL)executeUpdate:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;
- (BOOL)executeUpdate:(id)arg1 withParameterDictionary:(id)arg2;
- (BOOL)executeUpdate:(id)arg1 values:(id)arg2 error:(id *)arg3;
- (BOOL)executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2;
- (BOOL)executeUpdate:(id)arg1;
- (BOOL)executeUpdate:(id)arg1 error:(id *)arg2 withArgumentsInArray:(id)arg3 orDictionary:(id)arg4 orVAList:(struct __va_list_tag [1])arg5;
- (id)executeQuery:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;
- (id)executeQuery:(id)arg1 values:(id)arg2 error:(id *)arg3;
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2;
- (id)executeQueryWithFormat:(id)arg1;
- (id)executeQuery:(id)arg1;
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2 orDictionary:(id)arg3 orVAList:(struct __va_list_tag [1])arg4;
- (id)executeQuery:(id)arg1 withParameterDictionary:(id)arg2;
- (void)extractSQL:(id)arg1 argumentsList:(struct __va_list_tag [1])arg2 intoString:(id)arg3 arguments:(id)arg4;
- (void)bindObject:(id)arg1 toColumn:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;
- (int)changes;
- (long long)lastInsertRowId;
- (id)lastError;
- (id)errorWithMessage:(id)arg1;
- (int)lastErrorCode;
- (BOOL)hadError;
- (id)lastErrorMessage;
- (BOOL)databaseExists;
- (void)warnInUse;
- (BOOL)goodConnection;
- (id)stringFromDate:(id)arg1;
- (id)dateFromString:(id)arg1;
- (void)setDateFormat:(id)arg1;
- (BOOL)hasDateFormatter;
- (BOOL)setKeyWithData:(id)arg1;
- (BOOL)setKey:(id)arg1;
- (BOOL)rekeyWithData:(id)arg1;
- (BOOL)rekey:(id)arg1;
- (void)setCachedStatement:(id)arg1 forQuery:(id)arg2;
- (id)cachedStatementForQuery:(id)arg1;
- (void)clearCachedStatements;
- (void)resultSetDidClose:(id)arg1;
- (void)closeOpenResultSets;
- (BOOL)hasOpenResultSets;
- (void)setBusyRetryTimeout:(int)arg1;
- (int)busyRetryTimeout;
- (double)maxBusyRetryTimeInterval;
- (void)setMaxBusyRetryTimeInterval:(double)arg1;
- (BOOL)close;
- (BOOL)openWithFlags:(int)arg1 vfs:(id)arg2;
- (BOOL)openWithFlags:(int)arg1;
- (BOOL)open;
- (const char *)sqlitePath;
- (struct sqlite3 *)sqliteHandle;
- (id)databasePath;
- (void)dealloc;
- (void)finalize;
- (id)initWithPath:(id)arg1;
- (id)init;
- (BOOL)validateSQL:(id)arg1 error:(id *)arg2;
- (BOOL)columnExists:(id)arg1 columnName:(id)arg2;
- (void)setUserVersion:(unsigned int)arg1;
- (unsigned int)userVersion;
- (void)setApplicationIDString:(id)arg1;
- (id)applicationIDString;
- (void)setApplicationID:(unsigned int)arg1;
- (unsigned int)applicationID;
- (BOOL)columnExists:(id)arg1 inTableWithName:(id)arg2;
- (id)getTableSchema:(id)arg1;
- (id)getSchema;
- (BOOL)tableExists:(id)arg1;
- (id)dateForQuery:(id)arg1;
- (id)dataForQuery:(id)arg1;
- (double)doubleForQuery:(id)arg1;
- (BOOL)boolForQuery:(id)arg1;
- (long long)longForQuery:(id)arg1;
- (int)intForQuery:(id)arg1;
- (id)stringForQuery:(id)arg1;

@end

@interface FMStatement : NSObject
{
    struct sqlite3_stmt *_statement;
    NSString *_query;
    long long _useCount;
    BOOL _inUse;
}

@property BOOL inUse; // @synthesize inUse=_inUse;
@property long long useCount; // @synthesize useCount=_useCount;
@property(retain) NSString *query; // @synthesize query=_query;
@property struct sqlite3_stmt *statement; // @synthesize statement=_statement;
- (id)description;
- (void)reset;
- (void)close;
- (void)dealloc;
- (void)finalize;

@end

@interface FMResultSet : NSObject
{
    FMDatabase *_parentDB;
    FMStatement *_statement;
    NSString *_query;
    NSMutableDictionary *_columnNameToIndexMap;
}

+ (id)resultSetWithStatement:(id)arg1 usingParentDatabase:(id)arg2;
@property(retain) FMStatement *statement; // @synthesize statement=_statement;
@property(retain) NSString *query; // @synthesize query=_query;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectAtIndexedSubscript:(int)arg1;
- (void)setParentDB:(id)arg1;
- (id)columnNameForIndex:(int)arg1;
- (id)objectForColumnName:(id)arg1;
- (id)objectForColumnIndex:(int)arg1;
- (const char *)UTF8StringForColumnName:(id)arg1;
- (const char *)UTF8StringForColumnIndex:(int)arg1;
- (BOOL)columnIsNull:(id)arg1;
- (BOOL)columnIndexIsNull:(int)arg1;
- (id)dataNoCopyForColumnIndex:(int)arg1;
- (id)dataNoCopyForColumn:(id)arg1;
- (id)dataForColumnIndex:(int)arg1;
- (id)dataForColumn:(id)arg1;
- (id)dateForColumnIndex:(int)arg1;
- (id)dateForColumn:(id)arg1;
- (id)stringForColumn:(id)arg1;
- (id)stringForColumnIndex:(int)arg1;
- (double)doubleForColumnIndex:(int)arg1;
- (double)doubleForColumn:(id)arg1;
- (BOOL)boolForColumnIndex:(int)arg1;
- (BOOL)boolForColumn:(id)arg1;
- (unsigned long long)unsignedLongLongIntForColumnIndex:(int)arg1;
- (unsigned long long)unsignedLongLongIntForColumn:(id)arg1;
- (long long)longLongIntForColumnIndex:(int)arg1;
- (long long)longLongIntForColumn:(id)arg1;
- (long long)longForColumnIndex:(int)arg1;
- (long long)longForColumn:(id)arg1;
- (int)intForColumnIndex:(int)arg1;
- (int)intForColumn:(id)arg1;
- (int)columnIndexForName:(id)arg1;
- (BOOL)hasAnotherRow;
- (BOOL)nextWithError:(id *)arg1;
- (BOOL)next;
- (id)resultDictionary;
- (id)resultDict;
- (void)kvcMagic:(id)arg1;
@property(readonly) NSMutableDictionary *columnNameToIndexMap;
- (int)columnCount;
- (void)close;
- (void)dealloc;
- (void)finalize;

@end

@interface FMDatabasePool : NSObject
{
    NSString *_path;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableArray *_databaseInPool;
    NSMutableArray *_databaseOutPool;
    id _delegate;
    unsigned long long _maximumNumberOfDatabasesToCreate;
    int _openFlags;
}

+ (id)databasePoolWithPath:(id)arg1 flags:(int)arg2;
+ (id)databasePoolWithPath:(id)arg1;
@property(readonly) int openFlags; // @synthesize openFlags=_openFlags;
@property unsigned long long maximumNumberOfDatabasesToCreate; // @synthesize maximumNumberOfDatabasesToCreate=_maximumNumberOfDatabasesToCreate;
@property id delegate; // @synthesize delegate=_delegate;
@property(retain) NSString *path; // @synthesize path=_path;
- (id)inSavePoint:(CDUnknownBlockType)arg1;
- (void)inTransaction:(CDUnknownBlockType)arg1;
- (void)inDeferredTransaction:(CDUnknownBlockType)arg1;
- (void)beginTransaction:(BOOL)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)inDatabase:(CDUnknownBlockType)arg1;
- (void)releaseAllDatabases;
- (unsigned long long)countOfOpenDatabases;
- (unsigned long long)countOfCheckedOutDatabases;
- (unsigned long long)countOfCheckedInDatabases;
- (id)db;
- (void)pushDatabaseBackInPool:(id)arg1;
- (void)executeLocked:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithPath:(id)arg1;
- (id)initWithPath:(id)arg1 flags:(int)arg2;

@end

@interface FMDatabaseQueue : NSObject
{
    NSString *_path;
    NSObject<OS_dispatch_queue> *_queue;
    FMDatabase *_db;
    int _openFlags;
}

+ (Class)databaseClass;
+ (id)databaseQueueWithPath:(id)arg1 flags:(int)arg2;
+ (id)databaseQueueWithPath:(id)arg1;
@property(readonly) int openFlags; // @synthesize openFlags=_openFlags;
@property(retain) NSString *path; // @synthesize path=_path;
- (id)inSavePoint:(CDUnknownBlockType)arg1;
- (void)inTransaction:(CDUnknownBlockType)arg1;
- (void)inDeferredTransaction:(CDUnknownBlockType)arg1;
- (void)beginTransaction:(BOOL)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)inDatabase:(CDUnknownBlockType)arg1;
- (id)database;
- (BOOL)close;
- (void)dealloc;
- (id)init;
- (id)initWithPath:(id)arg1;
- (id)initWithPath:(id)arg1 flags:(int)arg2;
- (id)initWithPath:(id)arg1 flags:(int)arg2 vfs:(id)arg3;

@end

@interface MSHistoryMaker : NSObject
{
    BOOL _historyIsCoalescing;
    BOOL _isMovingThroughHistory;
    BOOL _isMakingHistory;
    MSDocument *_document;
    MSHistory *_history;
    NSString *_historyMomentTitle;
    long long _deferMakingHistoryCounter;
}

@property long long deferMakingHistoryCounter; // @synthesize deferMakingHistoryCounter=_deferMakingHistoryCounter;
@property(nonatomic) BOOL isMakingHistory; // @synthesize isMakingHistory=_isMakingHistory;
@property(nonatomic) BOOL isMovingThroughHistory; // @synthesize isMovingThroughHistory=_isMovingThroughHistory;
@property(nonatomic) BOOL historyIsCoalescing; // @synthesize historyIsCoalescing=_historyIsCoalescing;
@property(retain, nonatomic) NSString *historyMomentTitle; // @synthesize historyMomentTitle=_historyMomentTitle;
@property(readonly, nonatomic) MSHistory *history; // @synthesize history=_history;
@property(readonly, nonatomic) __weak MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (BOOL)ignoreDocumentChangesInBlock:(CDUnknownBlockType)arg1;
- (void)moveThroughHistoryBackInTime:(BOOL)arg1;
- (BOOL)canMoveThroughHistoryBackInTime:(BOOL)arg1;
- (void)makeHistoryIfNecessaryUsingTransientMoment:(BOOL)arg1;
- (void)deferMakingHistoryInBlock:(CDUnknownBlockType)arg1;
- (void)makeTransientMomentInHistoryIfNecessary;
- (void)makeHistoryIfNecessary;
- (void)commitTransientMomentIfNecessary;
- (void)coalesceHistoryInBlock:(CDUnknownBlockType)arg1;
- (void)finishCoalescingHistory;
- (void)startCoalescingHistory;
- (void)registerHistoryMomentTitle:(id)arg1;
- (id)init;
- (id)initWithDocument:(id)arg1;

@end

@interface MSIgnoreClippingMaskAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)ignoreClippingMask:(id)arg1;
- (BOOL)isActive;
- (BOOL)validate;

@end

@interface MSResetSharedStyleAction : MSBaseSharedStyleAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)resetSharedStyle:(id)arg1;

@end

@interface MSShowReplaceColorSheetAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)showReplaceColorSheet:(id)arg1;
- (BOOL)validate;

@end

@interface MSReplaceColorAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)replaceColor:(id)arg1;

@end

@interface MSBadgeController : NSObject
{
    MSDocument *_document;
    NSArray *_activeActions;
}

@property(readonly, nonatomic) NSArray *activeActions; // @synthesize activeActions=_activeActions;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (void)refresh;
- (id)updateBadge:(id)arg1 forAction:(id)arg2;
- (id)activeBadgingActionsForController:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *activeWindowBadgingActions;
@property(readonly, nonatomic) MSDocumentWindow *documentWindow;
- (id)initWithDocument:(id)arg1;

@end

@interface MSFlowMenuBuilder : NSObject
{
}

+ (id)menuItemsForArtboards:(id)arg1 currentDestination:(id)arg2 target:(id)arg3;
+ (id)menuItemsForPages:(id)arg1 currentDestination:(id)arg2 target:(id)arg3;
+ (id)menuForPages:(id)arg1 target:(id)arg2;
+ (void)createFlowDestinationMenuButton:(id)arg1 document:(id)arg2 destination:(id)arg3 target:(id)arg4;

@end

@interface AppController : NSObject <NSApplicationDelegate, NSWindowDelegate, NSMenuDelegate, NSUserNotificationCenterDelegate, MSDataMenuProviderDelegate, MSDataSupplierManagerDelegate>
{
    BOOL _sketchSafeModeOn;
    BOOL _canCreateDocuments;
    id _shapesMenu;
    NSMenuItem *_pluginsMenuItem;
    NSMenu *_templatesMenu;
    NSMenu *_printMenu;
    NSMenuItem *_prototypingMenuItem;
    NSMenuItem *_debugMenuItem;
    MSIOSConnectionController *_connectionController;
    NSMenuItem *_insertSymbolMenuItem;
    NSMenuItem *_insertSharedTextStyleMenuItem;
    NSMenuItem *_dataFeedMenuItem;
    NSMenuItem *_cloudEnvironmentMenuItem;
    NSTimer *_updateTimer;
    MSPasteboardManager *_pasteboardManager;
    SMKMirrorController *_mirrorController;
    MSMirrorDataProvider *_mirrorDataProvider;
    MSDataMenuProvider *_dataFeedProvider;
    MSCrashLogManager *_crashLogManager;
    MSPluginManagerWithActions *_pluginManager;
    BCLicenseManager *_licenseManager;
    MSUpdateController *_updateController;
    MSActionController *_actionController;
    MSAssetLibraryController *_librariesController;
    double _creationTime;
    double _launchStartTime;
    double _launchEndTime;
    MSPersistentAssetCollection *_globalAssets;
    NSString *_scriptPath;
    NSObject<OS_dispatch_semaphore> *_migrationSemaphore;
    ECLogManagerMacUISupport *_logSupport;
    MSHUDWindowController *_hud;
    MSDocumentationSearcher *_documentationSearcher;
    NSArray *_visualSettings;
    MSComponentsPanelController *_componentsPanelController;
    id _lastRunPlugin;
}

+ (id)sharedInstance;
@property(retain, nonatomic) id lastRunPlugin; // @synthesize lastRunPlugin=_lastRunPlugin;
@property(retain, nonatomic) MSComponentsPanelController *componentsPanelController; // @synthesize componentsPanelController=_componentsPanelController;
@property(retain, nonatomic) NSArray *visualSettings; // @synthesize visualSettings=_visualSettings;
@property(retain, nonatomic) MSDocumentationSearcher *documentationSearcher; // @synthesize documentationSearcher=_documentationSearcher;
@property(retain, nonatomic) MSHUDWindowController *hud; // @synthesize hud=_hud;
@property(retain, nonatomic) ECLogManagerMacUISupport *logSupport; // @synthesize logSupport=_logSupport;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *migrationSemaphore; // @synthesize migrationSemaphore=_migrationSemaphore;
@property(nonatomic) NSString *scriptPath; // @synthesize scriptPath=_scriptPath;
@property(nonatomic) BOOL canCreateDocuments; // @synthesize canCreateDocuments=_canCreateDocuments;
@property(readonly, nonatomic) BOOL sketchSafeModeOn; // @synthesize sketchSafeModeOn=_sketchSafeModeOn;
@property(retain, nonatomic) MSPersistentAssetCollection *globalAssets; // @synthesize globalAssets=_globalAssets;
@property(nonatomic) double launchEndTime; // @synthesize launchEndTime=_launchEndTime;
@property(nonatomic) double launchStartTime; // @synthesize launchStartTime=_launchStartTime;
@property(nonatomic) double creationTime; // @synthesize creationTime=_creationTime;
@property(readonly, nonatomic) MSAssetLibraryController *librariesController; // @synthesize librariesController=_librariesController;
@property(readonly, nonatomic) MSActionController *actionController; // @synthesize actionController=_actionController;
@property(readonly, nonatomic) MSUpdateController *updateController; // @synthesize updateController=_updateController;
@property(retain, nonatomic) BCLicenseManager *licenseManager; // @synthesize licenseManager=_licenseManager;
@property(retain, nonatomic) MSPluginManagerWithActions *pluginManager; // @synthesize pluginManager=_pluginManager;
@property(readonly, nonatomic) MSCrashLogManager *crashLogManager; // @synthesize crashLogManager=_crashLogManager;
@property(retain, nonatomic) MSDataMenuProvider *dataFeedProvider; // @synthesize dataFeedProvider=_dataFeedProvider;
@property(retain, nonatomic) MSMirrorDataProvider *mirrorDataProvider; // @synthesize mirrorDataProvider=_mirrorDataProvider;
@property(retain, nonatomic) SMKMirrorController *mirrorController; // @synthesize mirrorController=_mirrorController;
@property(retain, nonatomic) MSPasteboardManager *pasteboardManager; // @synthesize pasteboardManager=_pasteboardManager;
@property(retain, nonatomic) NSTimer *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(retain, nonatomic) NSMenuItem *cloudEnvironmentMenuItem; // @synthesize cloudEnvironmentMenuItem=_cloudEnvironmentMenuItem;
@property(retain, nonatomic) NSMenuItem *dataFeedMenuItem; // @synthesize dataFeedMenuItem=_dataFeedMenuItem;
@property(retain, nonatomic) NSMenuItem *insertSharedTextStyleMenuItem; // @synthesize insertSharedTextStyleMenuItem=_insertSharedTextStyleMenuItem;
@property(retain, nonatomic) NSMenuItem *insertSymbolMenuItem; // @synthesize insertSymbolMenuItem=_insertSymbolMenuItem;
@property(retain, nonatomic) MSIOSConnectionController *connectionController; // @synthesize connectionController=_connectionController;
@property(nonatomic) __weak NSMenuItem *debugMenuItem; // @synthesize debugMenuItem=_debugMenuItem;
@property(nonatomic) __weak NSMenuItem *prototypingMenuItem; // @synthesize prototypingMenuItem=_prototypingMenuItem;
@property(nonatomic) __weak NSMenu *printMenu; // @synthesize printMenu=_printMenu;
@property(nonatomic) __weak NSMenu *templatesMenu; // @synthesize templatesMenu=_templatesMenu;
@property(nonatomic) __weak NSMenuItem *pluginsMenuItem; // @synthesize pluginsMenuItem=_pluginsMenuItem;
@property(nonatomic) __weak id shapesMenu; // @synthesize shapesMenu=_shapesMenu;
- (void).cxx_destruct;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (void)waitForResourceMigrationToFinish;
- (void)migrateResources:(id)arg1;
- (id)resourcesNeedingMigrationFromResources:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)refreshDocumentWindowBadges;
- (void)refreshCurrentDocument;
- (void)currentDocumentDidChange;
- (void)showLicenseAlert:(long long)arg1 remainingDays:(unsigned long long)arg2;
- (void)updateLicenseManager;
- (void)setupLicenseManagerWithPublicCertificate:(id)arg1 licenseURL:(id)arg2 applicationID:(id)arg3;
- (void)startLicenseManager;
- (void)buy:(id)arg1;
- (void)openAboutWindow:(id)arg1;
- (void)openPreferencesWindowWithPreferencePaneIdentifier:(id)arg1;
- (void)documentWillClose:(id)arg1;
- (void)requestDataFromPluginDataSupplier:(id)arg1 pluginContext:(id)arg2;
- (void)dataMenuProvider:(id)arg1 didChooseData:(id)arg2;
- (BOOL)dataMenuProviderIsInspectorPopupMenu:(id)arg1;
- (unsigned long long)dataMenuProviderDataTypeForMenuBuilding:(id)arg1;
- (BOOL)dataMenuProvider:(id)arg1 canChooseDataOfType:(unsigned long long)arg2;
- (void)revealTemplatesFolderInFinder:(id)arg1;
- (void)addTemplatesAtPath:(id)arg1 toMenu:(id)arg2;
- (id)templateLibraryPath;
- (void)updateTemplateMenu:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)openTemplateAtPath:(id)arg1;
- (void)openTemplateFile:(id)arg1;
- (void)checkImageTemplates;
- (void)checkDefaults;
- (BOOL)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) long long checkForUpdatesPeriod;
- (void)badgeWindows;
- (void)checkForAndDownloadPluginUpdates;
- (void)installCompatiblePluginUpdates;
@property(readonly, nonatomic) MSDataSupplierManager *dataSupplierManager;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)checkForAssetLibraryUpdates;
- (void)createActions;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (void)userNotificationCenter:(id)arg1 didDeliverNotification:(id)arg2;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)applicationWillTerminate:(id)arg1;
- (void)ensureUserTemplateDirectoryExists;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationOpenUntitledFile:(id)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (BOOL)isFirstLaunchOfNewVersion;
- (void)storePluginList:(id)arg1 inCrashLogKey:(id)arg2;
- (void)storePluginsForCrashReport;
- (void)reloadAssetLibraryPreferencesTableView;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)awakeFromNib;
@property(readonly, nonatomic) BOOL canShowWelcomeWindowForUserAction;
- (void)showMainApplicationWindow;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeObserversForVisualSettings;
- (void)addObserversForVisualSettings;
- (id)init;
- (void)selectInstalledLibrary:(id)arg1;
- (void)startDownloadingLibrary:(id)arg1;
- (void)openCloudUploadURL:(id)arg1 parameters:(id)arg2;
- (void)openCloudURL:(id)arg1;
- (void)openAddLibraryURL:(id)arg1 parameters:(id)arg2;
- (void)didOpenURL:(id)arg1;
- (void)handleURLEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)registerURLScheme;
- (id)actionClasses;
- (void)scriptingMenuAction:(id)arg1;
- (BOOL)validatePluginMenuItem:(id)arg1 documentShowing:(BOOL)arg2;
- (id)runPluginScript:(id)arg1 handler:(id)arg2 name:(id)arg3 withPreprocess:(BOOL)arg4;
- (id)runPluginScript:(id)arg1 name:(id)arg2;
- (id)runPluginCommand:(id)arg1 fromMenu:(BOOL)arg2 context:(id)arg3 onComplete:(CDUnknownBlockType)arg4;
- (id)runPluginCommand:(id)arg1 fromMenu:(BOOL)arg2 context:(id)arg3;
- (id)targetDocumentForPluginCommand;
- (void)buildPluginsMenu:(id)arg1;
- (void)editPlugins:(id)arg1;
- (void)revealPlugin:(id)arg1;
@property(readonly, nonatomic) MSPluginCommand *lastRun;
- (void)rememberLastRun:(id)arg1;
- (id)runPluginCommandWithIdentifier:(id)arg1 fromBundleAtURL:(id)arg2 context:(id)arg3 portToAsnwerTo:(id)arg4;
- (id)runPluginCommandWithIdentifier:(id)arg1 fromBundleAtURL:(id)arg2 context:(id)arg3;
- (id)runPluginAtURL:(id)arg1;
- (id)evaluateScript:(id)arg1;
- (id)runPluginCommandWithIdentifier:(id)arg1 fromBundleAtURL:(id)arg2;
- (id)runPluginCommand:(id)arg1 fromMenu:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCAlphaColorPicker : BCColorPickerSliderView
{
    double _colorAlphaValue;
    BCFlexibleColor *_color;
}

@property(retain, nonatomic) BCFlexibleColor *color; // @synthesize color=_color;
@property(nonatomic) double colorAlphaValue; // @synthesize colorAlphaValue=_colorAlphaValue;
- (void).cxx_destruct;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawAlphaGradient;
- (void)drawCheckerboard;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (id)initInBounds:(struct CGRect)arg1;

@end

@interface MSToggleInspectorVisibilityAction : MSToggleVisibilityAction
{
}

- (void)hide;
- (void)show;
- (BOOL)isActive;
- (void)toggleInspectorVisibility:(id)arg1;

@end

@interface MSNewPageAction : MSDocumentAction
{
}

- (id)menuItemsForMenu:(id)arg1;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (SEL)preferredMenuAction;
- (void)addNewPage:(id)arg1;

@end

@interface MSChangePageAction : MSDocumentAction
{
}

- (void)changePageIndexBy:(long long)arg1;
- (BOOL)validate;

@end

@interface MSPreviousPageAction : MSChangePageAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)previousPage:(id)arg1;

@end

@interface MSNextPageAction : MSChangePageAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)nextPage:(id)arg1;

@end

@interface MSExportFormatViewController : NSViewController
{
    double _designedFormatPopUpButtonWidth;
    NSPopUpButton *_formatPopup;
    NSButton *_removeSizeButton;
    NSView *_sizeView;
    MSExportFormatNamingTextField *_suffixTextField;
    NSArray *_exportFormats;
    NSTextField *_scaleField;
}

+ (id)scaleDisplayStringForValue:(double)arg1 suffix:(unsigned short)arg2;
+ (void)initialize;
@property(retain, nonatomic) NSTextField *scaleField; // @synthesize scaleField=_scaleField;
@property(retain, nonatomic) NSArray *exportFormats; // @synthesize exportFormats=_exportFormats;
@property(retain, nonatomic) MSExportFormatNamingTextField *suffixTextField; // @synthesize suffixTextField=_suffixTextField;
@property(retain, nonatomic) NSView *sizeView; // @synthesize sizeView=_sizeView;
@property(retain, nonatomic) NSButton *removeSizeButton; // @synthesize removeSizeButton=_removeSizeButton;
@property(retain, nonatomic) NSPopUpButton *formatPopup; // @synthesize formatPopup=_formatPopup;
- (void).cxx_destruct;
- (double)sizeByRemovingSuffixes:(id)arg1;
- (void)applyEditedScaleFieldValue:(double)arg1 toExportFormat:(id)arg2 scaleType:(long long)arg3 normalSize:(struct CGSize)arg4;
- (void)findSizeOfLayer:(id)arg1 forScaleType:(long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)commitScaleFieldEditsWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)scaleFieldAction:(id)arg1;
- (void)formatPopupAction:(id)arg1;
- (void)removeExportFormat:(id)arg1;
- (id)firstExportFormat;
- (BOOL)exportFormatCanBeScaled;
- (void)prepare;
- (void)viewDidLoad;

@end

@interface MSKeyBindings : BCSingleton
{
    NSDictionary *_shortcutMap;
}

@property(readonly, nonatomic) NSDictionary *shortcutMap; // @synthesize shortcutMap=_shortcutMap;
- (void).cxx_destruct;
- (id)defaultKeyBindingsPath;
- (id)userKeyBindingsPath;
- (id)init;

@end

@interface BCFlexibleColor : NSObject
{
    double _red;
    double _green;
    double _blue;
    double _hue;
    double _sat;
    double _light;
    double _alpha;
}

+ (id)colorWithHue:(double)arg1 sat:(double)arg2 light:(double)arg3 alpha:(double)arg4;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(nonatomic) double light; // @synthesize light=_light;
@property(nonatomic) double sat; // @synthesize sat=_sat;
@property(nonatomic) double hue; // @synthesize hue=_hue;
@property(nonatomic) double blue; // @synthesize blue=_blue;
@property(nonatomic) double green; // @synthesize green=_green;
@property(nonatomic) double red; // @synthesize red=_red;
- (id)description;
- (id)colorForColorSpace:(id)arg1;

@end

@interface BCHSLFlexibleColor : BCFlexibleColor
{
}

- (double)blue;
- (double)green;
- (double)red;

@end

@interface BCRGBFlexibleColor : BCFlexibleColor
{
}

- (double)light;
- (double)sat;
- (double)hue;

@end

@interface MSToggleViewPreferenceAction : MSDocumentAction
{
}

- (id)preferenceKey;
- (void)doPerformAction:(id)arg1;
- (BOOL)isActive;
- (BOOL)validate;
- (void)refreshDocumentOverlayAfterDefaultsChange;

@end

@interface MSToggleArtboardShadowAction : MSToggleViewPreferenceAction
{
}

- (id)label;
- (id)preferenceKey;
- (void)toggleArtboardShadow:(id)arg1;

@end

@interface MSToggleAlignmentGuidesAction : MSToggleViewPreferenceAction
{
}

- (id)label;
- (id)preferenceKey;
- (void)toggleAlignmentGuides:(id)arg1;

@end

@interface MSTogglePixelLinesAction : MSToggleViewPreferenceAction
{
}

- (id)label;
- (id)preferenceKey;
- (void)togglePixelLines:(id)arg1;

@end

@interface MSToggleSelectionAction : MSToggleViewPreferenceAction
{
}

- (id)label;
- (id)preferenceKey;
- (void)toggleSelection:(id)arg1;

@end

@interface MSToggleLayerHighlightAction : MSToggleViewPreferenceAction
{
}

- (id)label;
- (id)preferenceKey;
- (void)toggleLayerHighlight:(id)arg1;

@end

@interface MSToggleSliceInteractionAction : MSToggleViewPreferenceAction
{
}

- (id)labelForToolbar;
- (id)label;
- (id)imageName;
- (id)preferenceKey;
- (void)doPerformAction:(id)arg1;
- (void)toggleSliceInteraction:(id)arg1;

@end

@interface MSToggleFlowInteractionAction : MSToggleViewPreferenceAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (id)labelForToolbar;
- (id)label;
- (id)imageName;
- (id)preferenceKey;
- (void)doPerformAction:(id)arg1;
- (void)toggleFlowInteraction:(id)arg1;

@end

@interface MSLayoutSettingsAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)layoutSettings:(id)arg1;

@end

@interface MSTextStyleTouchBarAction : MSDocumentAction <NSTouchBarDelegate>
{
}

- (void)applySharedStyle:(id)arg1;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeTouchBar;
- (id)textStyles;
- (id)touchBarItem;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSharedStyleButton : NSButton
{
    MSSharedStyle *_sharedStyle;
}

@property(retain, nonatomic) MSSharedStyle *sharedStyle; // @synthesize sharedStyle=_sharedStyle;
- (void).cxx_destruct;

@end

@interface BCBaseMagnifierButton : NSButton
{
    BCFlexibleColor *_chosenColor;
}

@property(retain, nonatomic) BCFlexibleColor *chosenColor; // @synthesize chosenColor=_chosenColor;
- (void).cxx_destruct;
- (id)documentColorSpace;
- (id)color;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;

@end

@interface BCColorPickerBaseView : NSControl
{
    id _bc_target;
    SEL _bc_action;
}

+ (id)lightShadow;
+ (id)darkShadow;
+ (void)drawFrameInRect:(struct CGRect)arg1 block:(CDUnknownBlockType)arg2;
@property SEL bc_action; // @synthesize bc_action=_bc_action;
@property(nonatomic) __weak id bc_target; // @synthesize bc_target=_bc_target;
- (void).cxx_destruct;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)drawMarkerInRect:(struct CGRect)arg1;
- (id)markerShadow;
- (void)drawCheckerboardPatternInRect:(struct CGRect)arg1;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (struct CGRect)contentBounds;
- (void)drawRect:(struct CGRect)arg1;
- (id)initInBounds:(struct CGRect)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (id)target;

@end

@interface BCColorPickerSliderView : BCColorPickerBaseView
{
    BOOL _handlingHistoryCoalescing;
    BOOL _groupingUndo;
}

@property(nonatomic, getter=isGroupingUndo) BOOL groupingUndo; // @synthesize groupingUndo=_groupingUndo;
@property(nonatomic) BOOL handlingHistoryCoalescing; // @synthesize handlingHistoryCoalescing=_handlingHistoryCoalescing;
- (void)drawSelectionMarkerAtPosition:(long long)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface MSFlowEventHandler : MSEventHandler <MSFlowMenuBuilderTarget>
{
    BOOL _didDragMouse;
    MSLayerArray *_layers;
    unsigned long long _hoverType;
    MSArtboardGroup *_targetArtboard;
    struct CGPoint _lastMouse;
}

@property(nonatomic) BOOL didDragMouse; // @synthesize didDragMouse=_didDragMouse;
@property(nonatomic) struct CGPoint lastMouse; // @synthesize lastMouse=_lastMouse;
@property(retain, nonatomic) MSArtboardGroup *targetArtboard; // @synthesize targetArtboard=_targetArtboard;
@property(nonatomic) unsigned long long hoverType; // @synthesize hoverType=_hoverType;
@property(retain, nonatomic) MSLayerArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (BOOL)mayShowResizingInspectorView;
- (id)findTargetLayerForMouse:(struct CGPoint)arg1;
- (struct CGPoint)positionOfOtherPageImageIndicatorForArtboard:(id)arg1;
- (id)parentArtboards;
- (void)flowTargetAction:(id)arg1;
- (void)showOtherPageMenuForLayer:(id)arg1;
- (void)attachWireToTarget;
- (void)moveWireToMouse:(struct CGPoint)arg1;
- (void)drawAreaIndicatorsWithImageNamed:(id)arg1 atOffset:(double)arg2 atEdge:(unsigned long long)arg3;
- (void)drawOtherPageAreaIndicator;
- (void)drawBackAreaIndicator;
- (void)drawFlowPath:(id)arg1 fromLayer:(id)arg2 ofType:(unsigned long long)arg3 context:(id)arg4;
- (void)drawConnectionToMouseInContext:(id)arg1;
- (void)drawConnectionToArtboardInContext:(id)arg1;
- (void)drawConnectionToOtherPageInContext:(id)arg1;
- (void)drawConnectionToBackArrowsInContext:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)findMouseAndDisconnectFromTarget;
- (void)handlerDidLoseFocus;
- (void)handlerGotFocus;

@end

@interface BCColorPreview : NSPopUpButton <NSMenuDelegate>
{
    BOOL _isHovering;
    BCFlexibleColor *_color;
    id <BCColorPreviewDelegate> _delegate;
    NSArray *_frequentColors;
    NSNumberFormatter *_numberFormatter;
}

+ (id)menuItemForColorCounter:(id)arg1 target:(id)arg2 action:(SEL)arg3 documentColorSpace:(id)arg4 useHSB:(BOOL)arg5;
+ (id)menuItemAttributedTitleForColorCounter:(id)arg1 useHSB:(BOOL)arg2;
+ (id)previewImageForColorCounter:(id)arg1 documentColorSpace:(id)arg2;
+ (BOOL)shouldUseHSBInColorDescriptions;
@property(retain, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=_numberFormatter;
@property(nonatomic) BOOL isHovering; // @synthesize isHovering=_isHovering;
@property(copy, nonatomic) NSArray *frequentColors; // @synthesize frequentColors=_frequentColors;
@property(nonatomic) __weak id <BCColorPreviewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) BCFlexibleColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)drawCheckerboard;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)initInBounds:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSendToSymbolsPageAction : MSDocumentAction
{
}

- (id)historyMomentTitle;
- (id)label;
- (void)doPerformAction:(id)arg1;
- (BOOL)validate;
- (void)sendSymbolToSymbolsPage:(id)arg1;
- (BOOL)isAlreadyOnSymbolsPage;

@end

@interface MSLayerXFocusAction : MSDocumentAction
{
}

- (id)label;
- (void)doPerformAction:(id)arg1;

@end

@interface MSLayerYFocusAction : MSDocumentAction
{
}

- (id)label;
- (void)doPerformAction:(id)arg1;

@end

@interface MSLayerWidthFocusAction : MSDocumentAction
{
}

- (id)label;
- (void)doPerformAction:(id)arg1;

@end

@interface MSLayerHeightFocusAction : MSDocumentAction
{
}

- (id)label;
- (void)doPerformAction:(id)arg1;

@end

@interface MSLayerFocusActions : MSTouchBarGroupAction
{
}

- (BOOL)supportsState;
- (id)actionNames;

@end

@interface MSBaseInsertAction : MSDocumentAction
{
}

- (BOOL)isTouchBarItemSelected;
- (BOOL)touchBarItemButtonShouldShowState;
- (BOOL)validate;

@end

@interface MSStackView : NSView
{
    BOOL _autoupdatesMaximumHeight;
    long long _maximumHeight;
    double _minimumHeight;
    NSColor *_backgroundColor;
    id _keyResponder;
}

@property(nonatomic) __weak id keyResponder; // @synthesize keyResponder=_keyResponder;
@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) double minimumHeight; // @synthesize minimumHeight=_minimumHeight;
@property(nonatomic) long long maximumHeight; // @synthesize maximumHeight=_maximumHeight;
@property(nonatomic) BOOL autoupdatesMaximumHeight; // @synthesize autoupdatesMaximumHeight=_autoupdatesMaximumHeight;
- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)adjustHeight:(unsigned long long)arg1 hasScrollViews:(BOOL)arg2;
- (unsigned long long)doStack;
- (long long)totalRequiredHeight;
- (BOOL)adjustScrollViewsToFitMaximumHeight;
- (struct CGRect)adjustScroll:(struct CGRect)arg1;
- (double)refreshMaximumHeightFromSubviews;
- (void)stack:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSToggleInterfaceAction : MSDocumentAction
{
    BOOL _didHideLayerList;
    BOOL _didHideInspector;
    BOOL _didHideRulers;
    BOOL _didHideToolbar;
}

@property(nonatomic) BOOL didHideToolbar; // @synthesize didHideToolbar=_didHideToolbar;
@property(nonatomic) BOOL didHideRulers; // @synthesize didHideRulers=_didHideRulers;
@property(nonatomic) BOOL didHideInspector; // @synthesize didHideInspector=_didHideInspector;
@property(nonatomic) BOOL didHideLayerList; // @synthesize didHideLayerList=_didHideLayerList;
- (BOOL)isToolbarVisible;
- (BOOL)isInterfaceHidden;
- (void)documentWillClose;
- (void)showHiddenInterface;
- (BOOL)hideInterfaceElementForActionNamed:(id)arg1;
- (void)hideInterface;
- (void)doPerformAction:(id)arg1;
- (void)toggleHideInterface:(id)arg1;
- (id)label;
- (BOOL)hasDynamicTitle;

@end

@interface MSReplacementFontPickerViewController : MSFontFamilyPickerViewController
{
}

- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)nibName;

@end

@interface MSPluginsPreferencesUpdateButton : NSButton
{
    MSPluginsPreferenceTableCellView *_tableCellView;
}

@property(nonatomic) __weak MSPluginsPreferenceTableCellView *tableCellView; // @synthesize tableCellView=_tableCellView;
- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)awakeFromNib;

@end

@interface BCHSBColorPicker : NSControl <BCColorPreviewDelegate, BCMagnifierButtonDelegate>
{
    long long ignoreColorActionsCounter;
    id <BCHSBColorPickerDelegate> _delegate;
    NSTextField *_hexValueTextField;
    NSTextField *_alphaComponentTextField;
    MSColorInspectorSeparatorView *_separatorView;
    BCSaturationBrightnessColorPicker *_sbPickerView;
    BCHueColorPicker *_hPickerView;
    BCAlphaColorPicker *_aPickerView;
    BCColorPreview *_colorPreviewView;
    BCMagnifierButton *_magnifierButton;
    NSTextField *_redComponentTextField;
    NSTextField *_greenComponentTextField;
    NSTextField *_blueComponentTextField;
    NSTextField *_hueComponentTextField;
    NSTextField *_satComponentTextField;
    NSTextField *_ligComponentTextField;
    id _bc_target;
    SEL _bc_action;
}

@property SEL bc_action; // @synthesize bc_action=_bc_action;
@property(nonatomic) __weak id bc_target; // @synthesize bc_target=_bc_target;
@property(retain, nonatomic) NSTextField *ligComponentTextField; // @synthesize ligComponentTextField=_ligComponentTextField;
@property(retain, nonatomic) NSTextField *satComponentTextField; // @synthesize satComponentTextField=_satComponentTextField;
@property(retain, nonatomic) NSTextField *hueComponentTextField; // @synthesize hueComponentTextField=_hueComponentTextField;
@property(retain, nonatomic) NSTextField *blueComponentTextField; // @synthesize blueComponentTextField=_blueComponentTextField;
@property(retain, nonatomic) NSTextField *greenComponentTextField; // @synthesize greenComponentTextField=_greenComponentTextField;
@property(retain, nonatomic) NSTextField *redComponentTextField; // @synthesize redComponentTextField=_redComponentTextField;
@property(retain, nonatomic) BCMagnifierButton *magnifierButton; // @synthesize magnifierButton=_magnifierButton;
@property(retain, nonatomic) BCColorPreview *colorPreviewView; // @synthesize colorPreviewView=_colorPreviewView;
@property(retain, nonatomic) BCAlphaColorPicker *aPickerView; // @synthesize aPickerView=_aPickerView;
@property(retain, nonatomic) BCHueColorPicker *hPickerView; // @synthesize hPickerView=_hPickerView;
@property(retain, nonatomic) BCSaturationBrightnessColorPicker *sbPickerView; // @synthesize sbPickerView=_sbPickerView;
@property(retain, nonatomic) MSColorInspectorSeparatorView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) NSTextField *alphaComponentTextField; // @synthesize alphaComponentTextField=_alphaComponentTextField;
@property(retain, nonatomic) NSTextField *hexValueTextField; // @synthesize hexValueTextField=_hexValueTextField;
@property(nonatomic) __weak id <BCHSBColorPickerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (void)setFrequentColors:(id)arg1;
- (void)frequentColorPicked:(id)arg1;
- (void)hexValueFieldChanged:(id)arg1;
- (void)rgbComponentFieldsChanged:(id)arg1;
- (void)hslComponentFieldsChanged:(id)arg1;
- (long long)lightDisplayValueForColor:(id)arg1;
- (long long)satDisplayValueForColor:(id)arg1;
- (long long)hueDisplayValueForColor:(id)arg1;
- (void)setColor:(id)arg1 ignoringFields:(id)arg2;
@property(copy, nonatomic) MSColor *color; // @dynamic color;
- (id)flexibleColor;
- (id)magnifierButtonDocumentColorSpace:(id)arg1;
- (id)colorPreviewColorSpace:(id)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateColorPreviewView;
- (void)saturationBrightnessChanged:(id)arg1;
- (void)alphaChanged:(id)arg1;
- (void)hueChanged:(id)arg1;
- (void)magnifierAction:(id)arg1;
- (void)systemColorPanelDidChangeColor:(id)arg1;
- (void)awakeFromNib;
- (void)constructSubviews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (id)target;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCHueColorPicker : BCColorPickerSliderView
{
    double _hueValue;
}

@property(nonatomic) double hueValue; // @synthesize hueValue=_hueValue;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (id)initInBounds:(struct CGRect)arg1;

@end

@interface BCMagnifier : NSObject
{
}

+ (unsigned int)displayIDForScreenPoint:(struct CGPoint)arg1;
+ (id)grabVisibleCanvas:(id)arg1;
+ (id)colorAtScreenPoint:(struct CGPoint)arg1 inScreenGrab:(id)arg2 colorSpace:(id)arg3;
+ (id)grabCanvasAtScreenPoint:(struct CGPoint)arg1 belowWindow:(id)arg2 previousGrabResult:(id)arg3;
+ (void)updateMagnifierWindow:(id)arg1 mouseLocation:(struct CGPoint)arg2 screenGrab:(id)arg3 colorSpace:(id)arg4;
+ (void)pickColorInColorSpace:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (struct CGPoint)pointInFlippedCoordinates:(struct CGPoint)arg1;

@end

@interface BCCanvasGrabResult : NSObject
{
    BOOL _mouseIsOnCanvas;
    BCScreenGrab *_canvasGrab;
    long long _windowNumber;
}

@property(nonatomic) long long windowNumber; // @synthesize windowNumber=_windowNumber;
@property(nonatomic) BOOL mouseIsOnCanvas; // @synthesize mouseIsOnCanvas=_mouseIsOnCanvas;
@property(readonly, nonatomic) BCScreenGrab *canvasGrab; // @synthesize canvasGrab=_canvasGrab;
- (void).cxx_destruct;
- (id)initWithPreviousCanvasGrabResult:(id)arg1 mouseIsOnCanvas:(BOOL)arg2;
- (id)initWithCanvasGrab:(id)arg1 windowNumber:(long long)arg2 mouseIsOnCanvas:(BOOL)arg3;

@end

@interface BCMagnifierButton : BCBaseMagnifierButton
{
    id <BCMagnifierButtonDelegate> _delegate;
}

+ (Class)cellClass;
@property(nonatomic) __weak id <BCMagnifierButtonDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)documentColorSpace;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BCMagnifierButtonCell : NSButtonCell
{
}

- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)lightShadow;

@end

@interface BCMagnifierWindow : NSWindow
{
    struct CGPoint _frameOffset;
    struct CGRect _screenFrame;
}

@property(nonatomic) struct CGRect screenFrame; // @synthesize screenFrame=_screenFrame;
@property(readonly, nonatomic) struct CGPoint frameOffset; // @synthesize frameOffset=_frameOffset;
- (void)flagsChanged;
- (void)setCurrentColor:(id)arg1;
- (void)updateScreenGrabIfNeeded:(id)arg1;
- (void)mouseMovedTo:(struct CGPoint)arg1;
- (id)initWithScreenGrab:(id)arg1 frameOffset:(struct CGPoint)arg2;
- (struct CGRect)frameForWindowAroundMouse;

@end

@interface MSHangingGlyphView : NSView
{
    NSTextView *_textView;
}

@property(nonatomic) NSTextView *textView; // @synthesize textView=_textView;
- (id)hitTest:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)removeFromSuperview;
- (BOOL)isFlipped;
- (BOOL)isOpaque;

@end

@interface BCMagnifierWindowContentView : NSView
{
    BCScreenGrab *_screenGrab;
    BCFlexibleColor *_currentColor;
}

@property(retain, nonatomic) BCFlexibleColor *currentColor; // @synthesize currentColor=_currentColor;
@property(retain, nonatomic) BCScreenGrab *screenGrab; // @synthesize screenGrab=_screenGrab;
- (void).cxx_destruct;
- (void)drawMiddlePixel;
- (void)drawPixelLines;
- (void)drawBlackBorder:(id)arg1;
- (void)drawCurrentColorValues;
- (void)drawMagnifiedImage;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSFindLayerAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)findLayer:(id)arg1;

@end

@interface MSRulerViewLayer : CALayer
{
    BOOL _shouldDrawGuides;
    unsigned long long _axis;
    NSNumberFormatter *_formatter;
    NSColor *_snapColor;
    double _zoomValue;
    double _baseLine;
    NSArray *_guides;
    NSView *_parentView;
    struct CGRect _occupiedRegion;
}

@property(nonatomic) __weak NSView *parentView; // @synthesize parentView=_parentView;
@property(nonatomic) BOOL shouldDrawGuides; // @synthesize shouldDrawGuides=_shouldDrawGuides;
@property(retain, nonatomic) NSArray *guides; // @synthesize guides=_guides;
@property(nonatomic) struct CGRect occupiedRegion; // @synthesize occupiedRegion=_occupiedRegion;
@property(nonatomic) double baseLine; // @synthesize baseLine=_baseLine;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(retain, nonatomic) NSColor *snapColor; // @synthesize snapColor=_snapColor;
@property(retain, nonatomic) NSNumberFormatter *formatter; // @synthesize formatter=_formatter;
@property(nonatomic) unsigned long long axis; // @synthesize axis=_axis;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (long long)rulerHeight;
- (long long)rulerLength;
- (void)drawAlignmentGuidesWithColor:(id)arg1;
- (void)drawOccupiedRegion;
- (void)drawBackgroundForLabel:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawMetric:(id)arg1 atPoint:(struct CGPoint)arg2 drawBackground:(BOOL)arg3;
- (void)drawMetric:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawLineAtPosition:(double)arg1 withOptions:(unsigned long long)arg2 color:(id)arg3;
- (void)drawMetricsWithOptions:(long long)arg1 color:(id)arg2;
- (void)drawMetricsWithColor:(id)arg1;
- (void)drawBackground;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)init;

@end

@interface MSSilentCheckForUpdatesAction : MSAction
{
}

- (id)label;
- (BOOL)hasDynamicTitle;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (id)updateController;

@end

@interface MSQuietCheckForUpdatesAction : MSSilentCheckForUpdatesAction
{
}

- (void)doPerformAction:(id)arg1;

@end

@interface MSCheckForUpdatesAction : MSSilentCheckForUpdatesAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)checkForUpdates:(id)arg1;

@end

@interface BCSaturationBrightnessColorPicker : BCColorPickerBaseView
{
    struct CGPoint _originalPoint;
    BOOL _handlingHistoryCoalescing;
    BOOL _groupingUndo;
    double _hue;
    double _saturation;
    double _brightness;
}

@property(nonatomic, getter=isGroupingUndo) BOOL groupingUndo; // @synthesize groupingUndo=_groupingUndo;
@property(nonatomic) BOOL handlingHistoryCoalescing; // @synthesize handlingHistoryCoalescing=_handlingHistoryCoalescing;
@property(nonatomic) double brightness; // @synthesize brightness=_brightness;
@property(nonatomic) double saturation; // @synthesize saturation=_saturation;
@property(nonatomic) double hue; // @synthesize hue=_hue;
- (void)dealloc;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (struct CGRect)pickerRect;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (id)initInBounds:(struct CGRect)arg1;

@end

@interface MSInsertSliceAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (SEL)preferredMenuAction;
- (void)insertSlice:(id)arg1;

@end

@interface MSRightOffsetHoverButtonCell : MSHoverButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface BCScreenGrab : NSObject
{
    unsigned int _displayID;
    NSImage *_image;
    NSBitmapImageRep *_bitmapRep;
    NSColorSpace *_colorSpace;
    struct CGPoint _imageOrigin;
}

+ (id)screenGrabForDisplay:(unsigned int)arg1 belowWindowWithID:(unsigned int)arg2;
+ (id)screenGrabWithBitmapImageRep:(id)arg1 originOnScreen:(struct CGPoint)arg2 colorSpace:(id)arg3 displayID:(unsigned int)arg4;
@property(readonly, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(nonatomic) struct CGPoint imageOrigin; // @synthesize imageOrigin=_imageOrigin;
@property(readonly, nonatomic) NSBitmapImageRep *bitmapRep; // @synthesize bitmapRep=_bitmapRep;
@property(readonly, nonatomic) NSImage *image; // @synthesize image=_image;
@property(readonly, nonatomic) unsigned int displayID; // @synthesize displayID=_displayID;
- (void).cxx_destruct;
- (id)bitmapImageRepCroppingToRect:(struct CGRect)arg1;
- (id)currentScreen;
@property(readonly, nonatomic) BOOL isRetinaScreen;
@property(readonly, nonatomic) struct CGRect screenFrame; // @dynamic screenFrame;
- (id)initWithBitmapImageRep:(id)arg1 originOnScreen:(struct CGPoint)arg2 colorSpace:(id)arg3 displayID:(unsigned int)arg4;

@end

@interface MSEditColorSpaceAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)editDocumentColorSpace:(id)arg1;

@end

@interface MSChangeColorSpaceAction : MSDocumentAction
{
}

- (void)refreshColorSpaceDependentUI;

@end

@interface MSAssignColorSpaceAction : MSChangeColorSpaceAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)assignDocumentColorSpace:(id)arg1;

@end

@interface MSConvertColorSpaceAction : MSChangeColorSpaceAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)convertDocumentColorSpace:(id)arg1;

@end

@interface MSToggleRulersAction : MSToggleVisibilityAction
{
}

- (id)label;
- (BOOL)validate;
- (id)imageName;
- (void)hide;
- (void)show;
- (id)defaultsKey;
- (BOOL)isActive;
- (void)toggleRulers:(id)arg1;

@end

@interface MSExportManager : NSObject
{
    NSColorSpace *_colorSpace;
    CDUnknownBlockType _sliceCompletionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType sliceCompletionBlock; // @synthesize sliceCompletionBlock=_sliceCompletionBlock;
@property(readonly, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
- (void).cxx_destruct;
- (id)savePanelWithDefaultFilename:(id)arg1;
- (void)showSavePanelToExportIndividualSlice:(id)arg1;
- (id)openPanelForRequests:(id)arg1;
- (void)showSaveToFolderPanelToExportSlices:(id)arg1;
- (void)displayNoSlicesWarning;
- (id)destinationForRequest:(id)arg1 inFolder:(id)arg2;
- (void)warnBeforeOverwritingAndSaveSlices:(id)arg1 toFolder:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)saveSlices:(id)arg1 toFolder:(id)arg2;
- (id)strippedSliceName:(id)arg1;
- (void)exportSlice:(id)arg1;
- (void)exportFilesForRequests:(id)arg1;
- (void)exportFileForRequest:(id)arg1 toFileURL:(id)arg2;
- (id)exportedDataForRequest:(id)arg1;
- (id)rendererForRequest:(id)arg1;
- (id)initWithColorSpace:(id)arg1;

@end

@interface MSColorComponentValueTextField : MSTextFieldKeyEventForwarder
{
    MSColorComponentValueTextField *_counterpart;
}

@property(nonatomic) __weak MSColorComponentValueTextField *counterpart; // @synthesize counterpart=_counterpart;
- (void).cxx_destruct;

@end

@interface MSReduceImageSizeAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)reduceImageSize:(id)arg1;
- (id)label;
- (BOOL)validate;

@end

@interface MSGeneralPreferencePane : MSPreferencePane
{
    NSTextField *_defaultColorSpaceDescriptionLabel;
    NSPopUpButton *_defaultColorSpacePopUpButton;
}

+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;
@property(nonatomic) __weak NSPopUpButton *defaultColorSpacePopUpButton; // @synthesize defaultColorSpacePopUpButton=_defaultColorSpacePopUpButton;
@property(nonatomic) __weak NSTextField *defaultColorSpaceDescriptionLabel; // @synthesize defaultColorSpaceDescriptionLabel=_defaultColorSpaceDescriptionLabel;
- (void).cxx_destruct;
- (void)pickDefaultColorSpace:(id)arg1;
- (void)refreshColorSpaceDescription;
- (void)analyticsAction:(id)arg1;
- (void)viewDidLoad;

@end

@interface MSExportAction : MSDocumentAction
{
}

- (id)touchBarImage;
- (id)baseNameForSlice;
- (struct CGRect)rectForExportingEntirePage;
- (void)determineRectForInitialSliceWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)createInitialSliceWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)showInspectorPanelIfNecessary;
- (BOOL)hasArtboardsWitNoExportFormats;
- (void)doPerformAction:(id)arg1;
- (BOOL)validate;
- (void)export:(id)arg1;

@end

@interface MSExportSelectionWithExportFormatsAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (BOOL)validate;
- (void)exportSelection:(id)arg1;

@end

@interface MSReduceFileSizeAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)reduceFileSize:(id)arg1;

@end

@interface MSInsertSharedTextAction : MSSharedObjectAction <NSMenuDelegate>
{
    MSSortableObjectMenuBuilder *_menuBuilder;
}

@property(retain, nonatomic) MSSortableObjectMenuBuilder *menuBuilder; // @synthesize menuBuilder=_menuBuilder;
- (void).cxx_destruct;
- (id)label;
- (id)sharedObjectName;
- (id)imageName;
- (id)sortedObjectMenuItemsForMenu:(id)arg1;
- (BOOL)validate;
- (BOOL)validateMenuItem:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (void)showSharedObjectsSheet:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCurveModeAdjustAction : MSDocumentAction
{
}

- (long long)curveMode;
- (BOOL)isActive;
- (void)doPerformAction:(id)arg1;

@end

@interface MSCurveModeStraightAction : MSCurveModeAdjustAction
{
}

- (id)touchBarImage;
- (long long)curveMode;

@end

@interface MSCurveModeMirroredAction : MSCurveModeAdjustAction
{
}

- (id)touchBarImage;
- (long long)curveMode;

@end

@interface MSCurveModeDisconnectedAction : MSCurveModeAdjustAction
{
}

- (id)touchBarImage;
- (long long)curveMode;

@end

@interface MSCurveModeAsymmetricAction : MSCurveModeAdjustAction
{
}

- (id)touchBarImage;
- (long long)curveMode;

@end

@interface MSCurveModeTouchGroupAction : MSTouchBarGroupAction
{
}

- (BOOL)validate;
- (BOOL)supportsState;
- (id)actionNames;

@end

@interface MSInsertMenuAction : MSDocumentAction
{
    id <NSObject> _documentCloseObserver;
    MSForeignObjectMenuBuilder *_symbolMenuBuilder;
}

@property(retain, nonatomic) MSForeignObjectMenuBuilder *symbolMenuBuilder; // @synthesize symbolMenuBuilder=_symbolMenuBuilder;
@property(retain, nonatomic) id <NSObject> documentCloseObserver; // @synthesize documentCloseObserver=_documentCloseObserver;
- (void).cxx_destruct;
- (void)menuNeedsUpdate:(id)arg1;
- (void)addInsertSharedTextToMenu:(id)arg1;
- (void)addInsertSymbolsToMenu:(id)arg1;
- (BOOL)isSelectable;
- (id)label;
- (id)tooltip;
- (id)submenuActionIDs;

@end

@interface MSInsertImageAction : MSBaseInsertAction
{
}

- (id)label;
- (id)touchBarImage;
- (id)groupForInserting;
- (void)importImagesFromURLs:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (SEL)preferredMenuAction;
- (void)insertImage:(id)arg1;

@end

@interface MSPencilAction : MSDocumentAction
{
}

- (id)tooltip;
- (BOOL)isSelectable;
- (BOOL)isActive;
- (void)doPerformAction:(id)arg1;
- (SEL)preferredMenuAction;
- (void)pencil:(id)arg1;

@end

@interface MSAngularGradientEventHandler : MSGradientEventHandler
{
}

- (long long)addStopAtPosition:(struct CGPoint)arg1;
- (BOOL)canInsertPointAtMouse:(struct CGPoint)arg1;
- (id)handleLinesPath;
- (double)positionForStop:(struct CGPoint)arg1;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (struct CGPoint)basePointAtIndex:(unsigned long long)arg1;
- (struct CGRect)bounds;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (void)repairGradientIfNecessary;

@end

@interface MSResizeArtboardToFitAction : MSDocumentAction
{
}

- (BOOL)shouldResizeArtboard:(id)arg1 toFitRect:(struct CGRect)arg2;
- (void)doPerformAction:(id)arg1;
- (void)resizeArtboardToFit:(id)arg1;
- (BOOL)validate;

@end

@interface MSReplaceFontCellView : NSTableCellView
{
    NSButton *_fontFamilyButton;
    NSPopUpButton *_fontWeightPopUpButton;
}

@property(retain, nonatomic) NSPopUpButton *fontWeightPopUpButton; // @synthesize fontWeightPopUpButton=_fontWeightPopUpButton;
@property(retain, nonatomic) NSButton *fontFamilyButton; // @synthesize fontFamilyButton=_fontFamilyButton;
- (void).cxx_destruct;

@end

@interface MSBaseMoveAction : MSDocumentAction
{
}

- (void)refreshTouchBarItem;
- (void)ignoreNextKeyDownEventUntilModifiersChange;
- (BOOL)optionKeyPressed;
- (id)tooltip;
- (BOOL)validate;

@end

@interface MSBaseMoveForwardAction : MSBaseMoveAction
{
}

- (BOOL)validate;

@end

@interface MSBaseMoveBackwardAction : MSBaseMoveAction
{
}

- (BOOL)validate;

@end

@interface MSMoveForwardAction : MSBaseMoveForwardAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (void)moveForward:(id)arg1;

@end

@interface MSMoveBackwardAction : MSBaseMoveBackwardAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (void)moveBackward:(id)arg1;

@end

@interface MSMoveToFrontAction : MSBaseMoveForwardAction
{
}

- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)moveToFront:(id)arg1;

@end

@interface MSMoveToBackAction : MSBaseMoveBackwardAction
{
}

- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)moveToBack:(id)arg1;

@end

@interface MSGoogleAnalyticsWrapper : NSObject <WebFrameLoadDelegate, WebResourceLoadDelegate, WebUIDelegate>
{
    BOOL _webViewReady;
    WebView *_webView;
    NSString *_siteID;
    NSMutableArray *_queue;
}

@property(retain, nonatomic) NSMutableArray *queue; // @synthesize queue=_queue;
@property(nonatomic) BOOL webViewReady; // @synthesize webViewReady=_webViewReady;
@property(copy, nonatomic) NSString *siteID; // @synthesize siteID=_siteID;
@property(retain, nonatomic) WebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 addMessageToConsole:(id)arg2;
- (void)callMethod:(id)arg1 arguments:(id)arg2;
- (void)sendAction:(id)arg1 arguments:(id)arg2;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)stop;
- (void)start;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSBaseStyleAction : MSDocumentAction
{
}

- (BOOL)validate;

@end

@interface MSAddFillAction : MSBaseStyleAction
{
}

- (id)touchBarImage;
- (void)doPerformAction:(id)arg1;
- (void)addFill:(id)arg1;

@end

@interface MSAddBorderAction : MSBaseStyleAction
{
}

- (id)touchBarImage;
- (void)doPerformAction:(id)arg1;
- (void)addBorder:(id)arg1;

@end

@interface MSAddShadowAction : MSBaseStyleAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)addShadow:(id)arg1;

@end

@interface MSAddInnerShadowAction : MSBaseStyleAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)addInnerShadow:(id)arg1;

@end

@interface MSShowFillOptionsAction : MSBaseStyleAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)showFillOptions:(id)arg1;

@end

@interface MSShowBorderOptionsAction : MSBaseStyleAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)showBorderOptions:(id)arg1;

@end

@interface MSRemoveUnusedStylesAction : MSBaseStyleAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)removeUnusedStyles:(id)arg1;

@end

@interface MSSyncLibraryAction : MSDocumentAction <MSWindowBadgeAction>
{
}

@property(readonly, nonatomic) long long foreignSymbolsOutOfDate;
@property(readonly, nonatomic) unsigned long long numberOfBadges;
- (id)label;
@property(readonly, nonatomic) NSColor *badgeTint;
- (void)doPerformAction:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSAttributedString *badgeTitle; // @dynamic badgeTitle;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSContentDrawViewController : NSViewController <MSContentDrawViewDelegate>
{
    MSContentDrawView *_contentDrawView;
    MSOverlayView *_overlayView;
    MSRulerView *_horizontalRuler;
    MSRulerView *_verticalRuler;
    NSView *_rulerCornerView;
    NSLayoutConstraint *_rulerWidthConstraint;
    NSLayoutConstraint *_rulerHeightConstraint;
    MSFlashController *_flashController;
    MSDocument *_document;
}

@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) MSFlashController *flashController; // @synthesize flashController=_flashController;
@property(nonatomic) __weak NSLayoutConstraint *rulerHeightConstraint; // @synthesize rulerHeightConstraint=_rulerHeightConstraint;
@property(nonatomic) __weak NSLayoutConstraint *rulerWidthConstraint; // @synthesize rulerWidthConstraint=_rulerWidthConstraint;
@property(retain, nonatomic) NSView *rulerCornerView; // @synthesize rulerCornerView=_rulerCornerView;
@property(retain, nonatomic) MSRulerView *verticalRuler; // @synthesize verticalRuler=_verticalRuler;
@property(retain, nonatomic) MSRulerView *horizontalRuler; // @synthesize horizontalRuler=_horizontalRuler;
@property(retain, nonatomic) MSOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(retain, nonatomic) MSContentDrawView *contentDrawView; // @synthesize contentDrawView=_contentDrawView;
- (void).cxx_destruct;
- (void)prepareForDealloc;
- (void)changeToPage:(id)arg1;
- (void)currentArtboardDidChange;
@property(nonatomic) double zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDocumentAction : MSAction <NSMenuDelegate, NSTouchBarDelegate>
{
    MSDocument *_document;
    NSTouchBarItem *_cachedTouchedBarItem;
    NSEvent *_previousEvent;
}

@property(nonatomic) __weak NSEvent *previousEvent; // @synthesize previousEvent=_previousEvent;
@property(retain, nonatomic) NSTouchBarItem *cachedTouchedBarItem; // @synthesize cachedTouchedBarItem=_cachedTouchedBarItem;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (id)interfaceQueryObject;
- (id)contextForActionObservers;
@property(readonly, nonatomic) NSString *historyMomentTitle;
- (void)performAction:(id)arg1;
- (void)refreshOverlay;
- (id)contentDrawView;
- (id)currentPage;
- (void)switchToNormalHandler;
- (id)setCurrentHandlerClass:(Class)arg1;
- (id)toggleHandlerClass:(Class)arg1;
- (id)currentHandler;
- (BOOL)isInNormalHandler;
- (id)selectedLayers;
- (id)initWithDocument:(id)arg1;
- (id)menu;
- (void)repopulateMenu:(id)arg1;
- (unsigned long long)touchBarItemSizing;
- (id)touchBarImage;
- (BOOL)isTouchBarItemSelected;
- (BOOL)shouldUseImageForTouchBarItem;
- (void)showTouchBarPopover:(id)arg1;
- (id)makeTouchBarItem;
- (BOOL)touchBarItemButtonShouldShowState;
- (id)makeTouchBarItemButton;
- (void)refreshTouchBarItem;
- (id)touchBarItem;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSHideLayerAction : MSDocumentAction
{
}

- (BOOL)hasDynamicTitle;
- (void)doPerformAction:(id)arg1;
- (void)hideLayer:(id)arg1;
- (id)label;
- (BOOL)validate;

@end

@interface MSCursorButton : NSButton
{
    NSCursor *_cursor;
}

@property(retain, nonatomic) NSCursor *cursor; // @synthesize cursor=_cursor;
- (void).cxx_destruct;
- (void)resetCursorRects;

@end

@interface MSTextOverrideViewController : MSOverrideViewController
{
    NSTextField *_overrideTextField;
}

@property(retain, nonatomic) NSTextField *overrideTextField; // @synthesize overrideTextField=_overrideTextField;
- (void).cxx_destruct;
- (id)valueFromControlView:(id)arg1;
- (id)controlViewForEditingOverride;
- (void)dataMenuProvider:(id)arg1 didChooseData:(id)arg2;
- (unsigned long long)supportedDataProviders;
- (unsigned long long)numberOfLines;

@end

@interface MSNewsTrigger : BCSingleton
{
    NSURLSession *_urlSession;
    NSWindowController *_windowController;
}

+ (void)checkForNews;
@property(retain, nonatomic) NSWindowController *windowController; // @synthesize windowController=_windowController;
@property(retain, nonatomic) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
- (void).cxx_destruct;
- (void)showURL:(id)arg1 newsID:(id)arg2;
- (BOOL)shouldShowNewsWithID:(id)arg1;
- (void)validateResult:(id)arg1;
- (void)checkForNews;
- (id)url;
- (id)init;

@end

@interface MSBitmapEditEventHandler : MSEventHandler
{
    MSBitmapEditInspectorViewController *_inspectorViewController;
    long long _currentMode;
    NSBezierPath *_accumulatedSelection;
    MSBitmapRectangleEditor *_rectangleEditor;
    MSBitmapMagicWandEditor *_magicWandEditor;
    NSBitmapImageRep *_backupImageRep;
    NSBitmapImageRep *_cachedFirstBitmapImageRep;
    NSCursor *_currentCursor;
}

@property(retain, nonatomic) NSCursor *currentCursor; // @synthesize currentCursor=_currentCursor;
@property(retain, nonatomic) NSBitmapImageRep *cachedFirstBitmapImageRep; // @synthesize cachedFirstBitmapImageRep=_cachedFirstBitmapImageRep;
@property(retain, nonatomic) NSBitmapImageRep *backupImageRep; // @synthesize backupImageRep=_backupImageRep;
@property(retain, nonatomic) MSBitmapMagicWandEditor *magicWandEditor; // @synthesize magicWandEditor=_magicWandEditor;
@property(retain, nonatomic) MSBitmapRectangleEditor *rectangleEditor; // @synthesize rectangleEditor=_rectangleEditor;
@property(retain, nonatomic) NSBezierPath *accumulatedSelection; // @synthesize accumulatedSelection=_accumulatedSelection;
@property(nonatomic) long long currentMode; // @synthesize currentMode=_currentMode;
- (void).cxx_destruct;
- (unsigned long long)inspectorLocation;
@property(readonly, nonatomic) MSBitmapEditInspectorViewController *inspectorViewController; // @synthesize inspectorViewController=_inspectorViewController;
- (id)inspectorViewControllersForLayers:(id)arg1 standardControllers:(id)arg2;
- (void)configureInspector:(id)arg1;
- (void)updateMeasurementLabel;
- (id)crossHairCursorRemove;
- (id)crossHairCursorAdd;
- (id)crossHairCursor;
- (id)magicWandCursorRemove;
- (id)magicWandCursorAdd;
- (id)magicWandCursor;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (void)makeNewBackupImage;
- (void)setImage:(id)arg1 forBitmapLayer:(id)arg2;
- (id)bitmapEditableLayer;
- (id)coordinateTransformMatrix;
- (void)drawBorderAroundBounds;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (BOOL)shouldDrawLayerSelection;
- (id)selectionBezierForFlippingCoordinates;
- (struct CGRect)imageBounds;
- (struct CGSize)imageSize;
- (void)clearAreaUnderSelection;
- (void)fillSelectionWithColor:(id)arg1 blending:(unsigned long long)arg2;
- (void)fillSelectionWithColor:(id)arg1;
- (void)duplicate:(id)arg1;
- (BOOL)canDuplicate;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)selectLayerBelowPoint:(struct CGPoint)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)flagsChanged:(id)arg1;
- (BOOL)rectIsCropOfImage:(struct CGRect)arg1 fromImage:(id)arg2;
- (void)cropLayerFrame;
- (id)imageFromSelectedArea;
- (id)bitmapLayerFromSelectedArea;
- (void)cropAction:(id)arg1;
- (struct CGRect)selectedRect;
- (struct CGRect)rectFromBitmapToBoundsCoordinates:(struct CGRect)arg1;
- (struct CGRect)selectionRectInLayerCoordinates;
- (void)invertAction:(id)arg1;
- (void)selectionDidChangeTo:(id)arg1;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)toolbarIdentifier;
- (void)dealloc;

@end

@interface MSRunLastScriptAction : MSAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (void)runLastScript:(id)arg1;

@end

@interface MSCloudUploadArrowView : NSView
{
    CALayer *_arrowLayer;
}

@property(retain, nonatomic) CALayer *arrowLayer; // @synthesize arrowLayer=_arrowLayer;
- (void).cxx_destruct;
- (void)startAnimation;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSBlockAnimation : CABasicAnimation <CAAnimationDelegate>
{
    BOOL executed;
    CDUnknownBlockType block;
}

- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDataTableCellView : NSTableCellView
{
    NSTextField *_primaryTextField;
    NSTextField *_secondaryTextField;
    MSDataPreferencePane *_dataPreferencePane;
    MSDataPreview *_previewContainer;
    NSButton *_revealButton;
}

+ (void)initialize;
@property(nonatomic) __weak NSButton *revealButton; // @synthesize revealButton=_revealButton;
@property(nonatomic) __weak MSDataPreview *previewContainer; // @synthesize previewContainer=_previewContainer;
@property(nonatomic) __weak MSDataPreferencePane *dataPreferencePane; // @synthesize dataPreferencePane=_dataPreferencePane;
@property(nonatomic) __weak NSTextField *secondaryTextField; // @synthesize secondaryTextField=_secondaryTextField;
@property(nonatomic) __weak NSTextField *primaryTextField; // @synthesize primaryTextField=_primaryTextField;
- (void).cxx_destruct;
- (void)setObjectValue:(id)arg1;
@property(readonly, nonatomic) MSDataPreferenceItem *dataPreferenceItem;
- (void)setBackgroundStyle:(long long)arg1;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;

@end

@interface MSAddFlowHomeAction : MSFlowBaseAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)showInToolbar;
- (BOOL)validate;
- (void)addFlowHome:(id)arg1;

@end

@interface MSBlurInspectorViewController : MSStylePartInspectorViewController <NSMenuDelegate>
{
    NSView *_gaussianBlurView;
    NSView *_motionBlurView;
    NSView *_zoomBlurView;
    NSButton *_editButton;
    NSMenuItem *_backgroundBlurMenuItem;
    NSTextField *_zoomBlurTextField;
    NSTextField *_motionBlurTextField;
    NSTextField *_normalBlurTextField;
    NSSlider *_zoomBlurSlider;
    NSSlider *_motionBlurSlider;
    NSSlider *_normalBlurSlider;
}

@property(retain, nonatomic) NSSlider *normalBlurSlider; // @synthesize normalBlurSlider=_normalBlurSlider;
@property(retain, nonatomic) NSSlider *motionBlurSlider; // @synthesize motionBlurSlider=_motionBlurSlider;
@property(retain, nonatomic) NSSlider *zoomBlurSlider; // @synthesize zoomBlurSlider=_zoomBlurSlider;
@property(retain, nonatomic) NSTextField *normalBlurTextField; // @synthesize normalBlurTextField=_normalBlurTextField;
@property(retain, nonatomic) NSTextField *motionBlurTextField; // @synthesize motionBlurTextField=_motionBlurTextField;
@property(retain, nonatomic) NSTextField *zoomBlurTextField; // @synthesize zoomBlurTextField=_zoomBlurTextField;
@property(retain, nonatomic) NSMenuItem *backgroundBlurMenuItem; // @synthesize backgroundBlurMenuItem=_backgroundBlurMenuItem;
@property(retain, nonatomic) NSButton *editButton; // @synthesize editButton=_editButton;
@property(retain, nonatomic) NSView *zoomBlurView; // @synthesize zoomBlurView=_zoomBlurView;
@property(retain, nonatomic) NSView *motionBlurView; // @synthesize motionBlurView=_motionBlurView;
@property(retain, nonatomic) NSView *gaussianBlurView; // @synthesize gaussianBlurView=_gaussianBlurView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)handlerFocusDidChange:(id)arg1;
- (void)blurPopUpAction:(id)arg1;
- (void)editZoomCenter:(id)arg1;
- (id)layers;
- (void)menuNeedsUpdate:(id)arg1;
- (id)views;
- (void)prepareLayersForBackgroundBlur:(id)arg1;
- (void)reloadInspectorStack:(id)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSInsertArtboardInspectorViewController : NSViewController <MSArtboardPresetsViewControllerDelegate, MSEditArtboardPresetViewControllerDelegate, MSInspectorChildController>
{
    BOOL _shouldAddInsertFromSelectionItem;
    MSInsertArtboardEventHandler *_eventHandler;
    NSView *_presetsContainerView;
    struct CGSize _proposedArtboardSize;
}

@property(retain, nonatomic) NSView *presetsContainerView; // @synthesize presetsContainerView=_presetsContainerView;
@property(nonatomic) MSInsertArtboardEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
@property(nonatomic) struct CGSize proposedArtboardSize; // @synthesize proposedArtboardSize=_proposedArtboardSize;
@property(nonatomic) BOOL shouldAddInsertFromSelectionItem; // @synthesize shouldAddInsertFromSelectionItem=_shouldAddInsertFromSelectionItem;
- (void).cxx_destruct;
- (id)views;
- (void)selectionDidChangeTo:(id)arg1;
- (void)prepareForDisplay;
- (void)editArtboardPresetViewController:(id)arg1 savePreset:(id)arg2;
- (void)focusCanvasOnAllArtboards;
- (void)artboardPresetsViewController:(id)arg1 didSelectPreset:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (id)presetsViewController;
- (void)viewWillAppear;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSManageLayerStyleView : MSManageSharedObjectBaseViewController
{
    NSMutableDictionary *_layerStylePreviews;
}

@property(retain, nonatomic) NSMutableDictionary *layerStylePreviews; // @synthesize layerStylePreviews=_layerStylePreviews;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)generateSymbolPreviews;
- (void)awakeFromNib;
- (void)removeSharedObject:(id)arg1;
- (id)sharedObjectsSortedByName;

@end

@interface MSBlurPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)correctedTitle:(id)arg1;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSExportSheet : CHSheetController
{
    NSCollectionView *_collectionView;
    NSButton *_includeAllSlicesCheckBox;
    NSButton *_exportButton;
    NSMutableArray *_selectedSlices;
    NSArray *_slices;
    NSSet *_warningSliceIDs;
}

@property(retain, nonatomic) NSSet *warningSliceIDs; // @synthesize warningSliceIDs=_warningSliceIDs;
@property(retain, nonatomic) NSArray *slices; // @synthesize slices=_slices;
@property(retain, nonatomic) NSMutableArray *selectedSlices; // @synthesize selectedSlices=_selectedSlices;
@property(retain, nonatomic) NSButton *exportButton; // @synthesize exportButton=_exportButton;
@property(retain, nonatomic) NSButton *includeAllSlicesCheckBox; // @synthesize includeAllSlicesCheckBox=_includeAllSlicesCheckBox;
@property(retain, nonatomic) NSCollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (void)toggleItemSelectedForExportState:(id)arg1;
- (BOOL)isItemSelectedForExport:(id)arg1;
- (id)document;
- (void)confirm:(id)arg1;
- (id)collectionView:(id)arg1 newItemForRepresentedObject:(id)arg2;
- (void)resizeWindowToFit;
- (void)includeAllCheckboxAction:(id)arg1;
- (void)updateExportSheetItems:(BOOL)arg1;
@property(readonly, nonatomic) long long slicesCheckBoxState;
- (void)validateIncludeAllSlicesCheckBox;
- (void)findConflictingNamesInSlices:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSExportStackView : MSStackView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSEditAction : MSDocumentAction
{
}

+ (unsigned long long)editableLayerTraits;
- (BOOL)shouldUseImageForTouchBarItem;
- (id)tooltip;
- (BOOL)isSelectable;
- (void)doPerformAction:(id)arg1;
- (void)edit:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (id)imageName;
- (BOOL)validate;

@end

@interface MSFinishEditingButton : NSButton
{
}

- (BOOL)performKeyEquivalent:(id)arg1;

@end

@interface MSDefaultStyleAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)setStyleAsDefault:(id)arg1;

@end

@interface MSBooleanMenuAction : MSDocumentAction
{
}

- (id)imageName;
- (id)label;
- (id)tooltip;
- (id)submenuActionIDs;

@end

@interface MSBaseBooleanAction : MSDocumentAction
{
}

- (id)tooltip;
- (BOOL)hasShapePartsSelected;
- (BOOL)validate;

@end

@interface MSSubtractAction : MSBaseBooleanAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)booleanSubtract:(id)arg1;

@end

@interface MSUnionAction : MSBaseBooleanAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)booleanUnion:(id)arg1;

@end

@interface MSIntersectAction : MSBaseBooleanAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)booleanIntersect:(id)arg1;

@end

@interface MSDifferenceAction : MSBaseBooleanAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)booleanDifference:(id)arg1;

@end

@interface MSResetBooleanAction : MSBaseBooleanAction
{
}

- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)resetBooleanAction:(id)arg1;

@end

@interface MSBooleanTouchBarGroupAction : MSTouchBarGroupAction
{
}

- (id)actionNames;

@end

@interface MSResizeGestureRecognizer : MSDragGestureRecognizer
{
    double _originalProportions;
}

@property(nonatomic) double originalProportions; // @synthesize originalProportions=_originalProportions;
@property(readonly) BOOL constrainProportions;
@property(readonly) BOOL shouldResizeFromCenter;
@property(readonly) BOOL maySnap;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface MSBorderInspectorViewController : MSStylePartInspectorViewController
{
    NSPopUpButton *_positionPopUp;
    MSStylePartPreviewButton *_colorButton;
    MSUpDownTextField *_thicknessField;
}

@property(retain, nonatomic) MSUpDownTextField *thicknessField; // @synthesize thicknessField=_thicknessField;
@property(retain, nonatomic) MSStylePartPreviewButton *colorButton; // @synthesize colorButton=_colorButton;
@property(retain, nonatomic) NSPopUpButton *positionPopUp; // @synthesize positionPopUp=_positionPopUp;
- (void).cxx_destruct;
- (void)dealloc;
- (id)lineShapes;
- (void)enableAction:(id)arg1;
- (id)layers;
- (BOOL)canDrawInnerOrOuterBorders;
- (id)positionPopUpToolTip;
- (void)setStyleParts:(id)arg1;
- (void)prepare;
- (void)viewDidLoad;
- (id)init;

@end

@interface MSOpenPreferencesAction : MSAction
{
}

- (void)openPreferencesWindowWithPreferencePaneIdentifier:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (void)openPreferences:(id)arg1;

@end

@interface MSMouseTracker : NSObject
{
    struct CGPoint _location;
    BOOL _checksMouseHitTesting;
    id _target;
    SEL _action;
    unsigned long long _trackingState;
    NSView *_view;
    unsigned long long _modifierFlags;
}

@property(readonly, nonatomic) unsigned long long modifierFlags; // @synthesize modifierFlags=_modifierFlags;
@property(nonatomic) BOOL checksMouseHitTesting; // @synthesize checksMouseHitTesting=_checksMouseHitTesting;
@property(nonatomic) __weak NSView *view; // @synthesize view=_view;
@property(readonly, nonatomic) unsigned long long trackingState; // @synthesize trackingState=_trackingState;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (void)removeTrackingState:(unsigned long long)arg1;
- (void)addTrackingState:(unsigned long long)arg1;
- (void)flagsChanged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (BOOL)validateLocation;
- (void)setLocationWithEvent:(id)arg1;
- (struct CGPoint)locationInView:(id)arg1;
- (id)init;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface MSBorderOptionsInspectorViewController : MSStylePartInspectorViewController
{
    NSArray *_layers;
    NSPopUpButton *_startDecorationButton;
    NSPopUpButton *_endDecorationButton;
    NSTextField *_dashField1;
    NSTextField *_dashField2;
    NSTextField *_dashField3;
    NSTextField *_dashField4;
    NSSegmentedControl *_capSegmentedControl;
    NSSegmentedControl *_joinSegmentedControl;
}

@property(retain, nonatomic) NSSegmentedControl *joinSegmentedControl; // @synthesize joinSegmentedControl=_joinSegmentedControl;
@property(retain, nonatomic) NSSegmentedControl *capSegmentedControl; // @synthesize capSegmentedControl=_capSegmentedControl;
@property(retain, nonatomic) NSTextField *dashField4; // @synthesize dashField4=_dashField4;
@property(retain, nonatomic) NSTextField *dashField3; // @synthesize dashField3=_dashField3;
@property(retain, nonatomic) NSTextField *dashField2; // @synthesize dashField2=_dashField2;
@property(retain, nonatomic) NSTextField *dashField1; // @synthesize dashField1=_dashField1;
@property(retain, nonatomic) NSPopUpButton *endDecorationButton; // @synthesize endDecorationButton=_endDecorationButton;
@property(retain, nonatomic) NSPopUpButton *startDecorationButton; // @synthesize startDecorationButton=_startDecorationButton;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (id)dashFields;
- (void)fillDashPlaceholderFields;
- (void)fillDashFields;
- (void)dashPatternAction:(id)arg1;
- (void)joinAction:(id)arg1;
- (void)capAction:(id)arg1;
- (void)evaluateCapJoinButtons;
- (void)prepareDecorationButtons;
- (void)endDecorationAction:(id)arg1;
- (void)startDecorationAction:(id)arg1;
- (void)reloadData;

@end

@interface MSZoomToActualSizeAction : MSDocumentAction
{
}

- (void)actualSize:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSZoomToSelectionAction : MSDocumentAction
{
}

- (void)zoomToSelection:(id)arg1;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;

@end

@interface MSCenterSelectionInVisibleAreaAction : MSDocumentAction
{
}

- (void)centerSelectionInVisibleArea:(id)arg1;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;

@end

@interface MSCenterLayersInCanvasAction : MSDocumentAction
{
}

- (void)centerLayersInCanvas:(id)arg1;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;

@end

@interface MSSelectAllAction : MSDocumentAction
{
}

- (void)selectAll:(id)arg1;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;

@end

@interface MSCutAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)cut:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSCopyAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)copy:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSPasteAction : MSDocumentAction
{
}

- (void)paste:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSPasteWithStyleAction : MSDocumentAction
{
}

- (void)pasteWithStyle:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSPasteOverSelectionAction : MSDocumentAction
{
}

- (void)pasteOverSelection:(id)arg1;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;

@end

@interface MSPasteHereAction : MSDocumentAction
{
}

- (void)pasteHere:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSDuplicateAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)duplicate:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSDeleteAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)delete:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSColorControlsInspectorViewController : MSStylePartInspectorViewController
{
}

- (void)reset:(id)arg1;

@end

@interface MSInsertSymbolAction : MSSharedSymbolAction
{
}

- (void)doPerformAction:(id)arg1;
- (id)imageName;

@end

@interface MSWelcomeWindowController : CHWindowController <NSMenuDelegate, NSWindowDelegate, MSWelcomeCollectionViewDelegate>
{
    NSButton *_closeButton;
    NSCollectionView *_collectionView;
    NSScrollView *_collectionScrollView;
    NSView *_collectionStaticContainerView;
    NSSegmentedControl *_collectionsSegmentedControl;
    NSButton *_confirmButton;
    NSButton *_doNotShowAgainButton;
    MSCallToActionButton *_newsletterButton;
    MSCallToActionButton *_pluginsButton;
    NSMenu *_recentDocumentsContextMenu;
    NSMenu *_templatesContextMenu;
    NSTextField *_versionTextField;
    unsigned long long _collectionToShow;
    MSPreviewImageCache *_previewImageCache;
    NSArray *_cachedRecentDocumentItems;
    NSArray *_cachedTemplateItems;
}

+ (id)templateURLsAtDirectoryURL:(id)arg1;
+ (BOOL)hideWelcomeWindowIfNeeded;
+ (BOOL)showWelcomeWindowIfAppropriate;
+ (void)showWelcomeWindowCollection:(unsigned long long)arg1 isLaunching:(BOOL)arg2;
@property(retain, nonatomic) NSArray *cachedTemplateItems; // @synthesize cachedTemplateItems=_cachedTemplateItems;
@property(retain, nonatomic) NSArray *cachedRecentDocumentItems; // @synthesize cachedRecentDocumentItems=_cachedRecentDocumentItems;
@property(readonly, nonatomic) MSPreviewImageCache *previewImageCache; // @synthesize previewImageCache=_previewImageCache;
@property(nonatomic) unsigned long long collectionToShow; // @synthesize collectionToShow=_collectionToShow;
@property(retain, nonatomic) NSTextField *versionTextField; // @synthesize versionTextField=_versionTextField;
@property(retain, nonatomic) NSMenu *templatesContextMenu; // @synthesize templatesContextMenu=_templatesContextMenu;
@property(retain, nonatomic) NSMenu *recentDocumentsContextMenu; // @synthesize recentDocumentsContextMenu=_recentDocumentsContextMenu;
@property(retain, nonatomic) MSCallToActionButton *pluginsButton; // @synthesize pluginsButton=_pluginsButton;
@property(retain, nonatomic) MSCallToActionButton *newsletterButton; // @synthesize newsletterButton=_newsletterButton;
@property(retain, nonatomic) NSButton *doNotShowAgainButton; // @synthesize doNotShowAgainButton=_doNotShowAgainButton;
@property(retain, nonatomic) NSButton *confirmButton; // @synthesize confirmButton=_confirmButton;
@property(retain, nonatomic) NSSegmentedControl *collectionsSegmentedControl; // @synthesize collectionsSegmentedControl=_collectionsSegmentedControl;
@property(retain, nonatomic) NSView *collectionStaticContainerView; // @synthesize collectionStaticContainerView=_collectionStaticContainerView;
@property(retain, nonatomic) NSScrollView *collectionScrollView; // @synthesize collectionScrollView=_collectionScrollView;
@property(retain, nonatomic) NSCollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) NSButton *closeButton; // @synthesize closeButton=_closeButton;
- (void).cxx_destruct;
- (id)collectionView:(id)arg1 newItemForRepresentedObject:(id)arg2;
- (id)collectionItems;
- (id)templateItems;
- (id)recentDocumentItems;
- (void)clearRecentDocuments:(id)arg1;
- (void)revealDocumentInFinder:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
@property(readonly, nonatomic) long long numberOfDocuments;
- (void)openTemplateAtURL:(id)arg1;
- (void)openDocumentAtURL:(id)arg1;
- (void)joinSketchCloud:(id)arg1;
- (void)visitSketchMirrorPage:(id)arg1;
- (void)subscribeToNewsletter:(id)arg1;
- (void)visitPluginsPage:(id)arg1;
- (void)visitLearnPage:(id)arg1;
- (void)close:(id)arg1;
- (void)confirm:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)openDocument:(id)arg1;
- (void)refreshScrollability;
- (BOOL)shouldEnableCollectionViewScrolling;
- (void)showCollection:(unsigned long long)arg1;
- (void)pickCollection:(id)arg1;
- (void)togglePluginsButton:(BOOL)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)clearCaches;
- (void)centerWindowIfAppropriate;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDoNotShowAgainButtonCell : NSButtonCell
{
}

- (id)attributedTitle;

@end

@interface MSWelcomeClipView : NSClipView
{
}

- (struct NSEdgeInsets)contentInsets;

@end

@interface MSVectorHandle : NSObject
{
    unsigned long long _state;
}

@property(nonatomic) unsigned long long state; // @synthesize state=_state;
- (struct CGSize)drawingSize;
- (id)imageName;
- (void)drawAtProposedPoint:(struct CGPoint *)arg1 inView:(id)arg2;

@end

@interface MSVectorAdjustmentHandle : MSVectorHandle
{
    struct CGPoint _locationOfMainPoint;
}

@property(nonatomic) struct CGPoint locationOfMainPoint; // @synthesize locationOfMainPoint=_locationOfMainPoint;
- (void)drawAtProposedPoint:(struct CGPoint *)arg1 inView:(id)arg2;
- (id)imageName;

@end

@interface MSColorInspector : NSViewController <MSColorInspectorSectionDelegate, MSModeModePickerDelegate, BCPopoverDelegate, NSTouchBarDelegate, BCHSBColorPickerDelegate, MSStylePartPreviewButtonDelegate>
{
    NSArray *_styleParts;
    id <MSColorInspectorDelegate> _delegate;
    MSAlternatingView *_rgbFieldsView;
    MSAlternatingView *_hsbFieldsView;
    MSModePickerView *_borderColorTypePicker;
    MSModePickerView *_fillColorTypePicker;
    BCHSBColorPicker *_colorPicker;
    NSView *_emptyTopView;
    NSView *_colorPickerView;
    NSView *_shadowBlendingView;
    NSView *_borderBlendingOpacityView;
    MSColorInspectorSectionColor *_colorSection;
    MSColorInspectorSectionGradient *_gradientSection;
    MSColorInspectorSectionPattern *_patternSection;
    MSColorInspectorSectionNoise *_noiseSection;
    MSEventHandlerManager *_eventHandlerManager;
    MSDocument *_document;
    MSPersistentAssetCollection *_globalAssets;
    MSStackView *_stackView;
    NSTextField *_textFieldToContinueEditing;
}

+ (id)presentColorInspectorPopoverForViewController:(id)arg1 inspectorController:(id)arg2 relativeToView:(id)arg3 colorInspectorSetupHandler:(CDUnknownBlockType)arg4;
@property(nonatomic) __weak NSTextField *textFieldToContinueEditing; // @synthesize textFieldToContinueEditing=_textFieldToContinueEditing;
@property(retain, nonatomic) MSStackView *stackView; // @synthesize stackView=_stackView;
@property(retain, nonatomic) MSPersistentAssetCollection *globalAssets; // @synthesize globalAssets=_globalAssets;
@property(retain, nonatomic) MSDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) MSEventHandlerManager *eventHandlerManager; // @synthesize eventHandlerManager=_eventHandlerManager;
@property(retain, nonatomic) MSColorInspectorSectionNoise *noiseSection; // @synthesize noiseSection=_noiseSection;
@property(retain, nonatomic) MSColorInspectorSectionPattern *patternSection; // @synthesize patternSection=_patternSection;
@property(retain, nonatomic) MSColorInspectorSectionGradient *gradientSection; // @synthesize gradientSection=_gradientSection;
@property(retain, nonatomic) MSColorInspectorSectionColor *colorSection; // @synthesize colorSection=_colorSection;
@property(retain, nonatomic) NSView *borderBlendingOpacityView; // @synthesize borderBlendingOpacityView=_borderBlendingOpacityView;
@property(retain, nonatomic) NSView *shadowBlendingView; // @synthesize shadowBlendingView=_shadowBlendingView;
@property(retain, nonatomic) NSView *colorPickerView; // @synthesize colorPickerView=_colorPickerView;
@property(retain, nonatomic) NSView *emptyTopView; // @synthesize emptyTopView=_emptyTopView;
@property(retain, nonatomic) BCHSBColorPicker *colorPicker; // @synthesize colorPicker=_colorPicker;
@property(retain, nonatomic) MSModePickerView *fillColorTypePicker; // @synthesize fillColorTypePicker=_fillColorTypePicker;
@property(retain, nonatomic) MSModePickerView *borderColorTypePicker; // @synthesize borderColorTypePicker=_borderColorTypePicker;
@property(nonatomic) __weak MSAlternatingView *hsbFieldsView; // @synthesize hsbFieldsView=_hsbFieldsView;
@property(nonatomic) __weak MSAlternatingView *rgbFieldsView; // @synthesize rgbFieldsView=_rgbFieldsView;
@property(nonatomic) __weak id <MSColorInspectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *styleParts; // @synthesize styleParts=_styleParts;
- (void).cxx_destruct;
- (void)touchBarColorAction:(id)arg1;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)customTouchBarItemIdentifiers;
- (id)makeTouchBar;
- (double)minimumPopoverContentViewHeight:(id)arg1;
- (id)popoverWillReturnUndoManager:(id)arg1;
- (BOOL)popoverShouldTrackSuperviewOfAttachedToView:(id)arg1;
- (void)adjustInspectorToColorPopoverIfNeeded:(id)arg1;
- (void)popoverWindowDidMove:(id)arg1;
- (void)popoverWindowSizeDidChange:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)dealloc;
- (void)colorMagnifierAction:(id)arg1;
- (void)setColorTabIndex:(unsigned long long)arg1;
- (unsigned long long)colorTabIndex;
- (void)switchToColorTabAtIndex:(unsigned long long)arg1;
- (void)reloadTouchBarsAfterSelectionChange:(id)arg1;
- (void)reloadTouchBars;
- (void)refreshTabbingCycle;
- (void)pickerViewChanged:(id)arg1;
- (void)pickerViewWillChange:(id)arg1;
- (id)pickerView:(id)arg1 labelForMode:(long long)arg2;
- (id)filteredStyleParts:(id)arg1;
- (void)close;
- (void)refreshAction:(id)arg1;
- (void)colorChangedTo:(id)arg1;
- (void)colorPickerAction:(id)arg1;
- (void)setColor:(id)arg1;
- (void)changeColor:(id)arg1;
- (id)stylePartPreviewButtonPreviewColorSpace:(id)arg1;
- (id)hsbColorPickerDocumentColorSpace:(id)arg1;
- (id)hsbColorPickerPreviewColorSpace:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
- (id)documentRedoAction;
- (id)documentUndoAction;
- (void)viewWillDisappear;
- (void)setMaximumAvailableHeight:(long long)arg1;
- (void)validateEnableButtons;
- (id)currentSection;
- (long long)initialColorTypePickerMode;
- (void)stack;
- (BOOL)stylePartIsGradient:(id)arg1;
- (void)findFrequentColors;
- (void)prepareForDisplay;
- (void)setInitialColor:(id)arg1;
- (id)currentModePicker;
- (void)inspectorSectionDidUpdate:(id)arg1;
- (id)documentAssets;
- (void)didRemoveAssetOfType:(unsigned long long)arg1;
- (void)didAddAsset:(id)arg1;
- (void)colorDidChangeTo:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)applyBackgroundArrowColor;
- (void)colorModeViewDidChange:(id)arg1;
- (void)viewDidLoad;
- (id)initWithSender:(id)arg1 document:(id)arg2 handlerManager:(id)arg3 globalAssets:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSyncSharedStyleAction : MSBaseSharedStyleAction
{
}

- (BOOL)validate;
- (id)textLayersSharingSelectedStyles;
- (void)doPerformAction:(id)arg1;
- (void)syncSharedStyle:(id)arg1;

@end

@interface MSColorInspectorSection : NSViewController <MSPresetPickerViewDelegate, MSAssetPickerHeaderViewDelegate, NSTouchBarDelegate, NSScrubberDataSource, NSScrubberDelegate, NSScrubberFlowLayoutDelegate>
{
    id <MSColorInspectorSectionDelegate> _delegate;
    NSArray *_styleParts;
    MSAssetPickerView *_globalPresetPicker;
    MSAssetPickerView *_documentPresetPicker;
    NSMapTable *_scrubberToAssets;
}

+ (id)viewsByAddingColorInspectorSeparators:(id)arg1;
+ (void)refreshColorPickerViewHeight:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) NSMapTable *scrubberToAssets; // @synthesize scrubberToAssets=_scrubberToAssets;
@property(retain, nonatomic) MSAssetPickerView *documentPresetPicker; // @synthesize documentPresetPicker=_documentPresetPicker;
@property(retain, nonatomic) MSAssetPickerView *globalPresetPicker; // @synthesize globalPresetPicker=_globalPresetPicker;
@property(copy, nonatomic) NSArray *styleParts; // @synthesize styleParts=_styleParts;
@property(nonatomic) __weak id <MSColorInspectorSectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)moveAssetAtIndex:(unsigned long long)arg1 beforeObjectAtIndex:(unsigned long long)arg2 ForPickerView:(id)arg3;
- (id)indexesOfAsset:(id)arg1 forPickerView:(id)arg2;
- (void)removeAssetAtIndex:(unsigned long long)arg1 forPickerView:(id)arg2;
- (id)assetAtIndex:(unsigned long long)arg1 forPickerView:(id)arg2;
- (void)insertAsset:(id)arg1 atIndex:(unsigned long long)arg2 forPickerView:(id)arg3;
- (void)addAsset:(id)arg1 forPickerView:(id)arg2;
- (unsigned long long)numberOfAssetsForPickerView:(id)arg1;
- (unsigned long long)assetType;
- (void)scrubber:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (struct CGSize)scrubber:(id)arg1 layout:(id)arg2 sizeForItemAtIndex:(long long)arg3;
- (struct CGSize)fittingAssetScrubberLabelItemSizeForTitle:(id)arg1;
- (id)scrubberItemViewForAssetAtIndex:(unsigned long long)arg1 amongAssets:(id)arg2 isLastItemInScrubber:(BOOL)arg3;
- (id)colorAssetCollectionLabelWithTitle:(id)arg1;
- (id)scrubberItemViewWrapping:(id)arg1;
- (id)scrubber:(id)arg1 viewForItemAtIndex:(long long)arg2;
- (id)assetScrubberLabelItemTitleOfKind:(long long)arg1;
- (unsigned long long)firstGlobalAssetScrubberIndexAfterDocumentAssets:(id)arg1;
- (long long)assetScrubberItemKindAtIndex:(long long)arg1;
- (long long)numberOfItemsForScrubber:(id)arg1;
- (id)touchBarCompatibleAssetsForPickerView:(id)arg1;
- (id)makeTouchBarItemForIdentifier:(id)arg1;
- (id)customTouchBarItemIdentifiers;
- (BOOL)shouldShowAddPresetButton:(id)arg1;
- (id)assetPickerViewKeys;
- (id)assetPickerViews;
- (id)viewsWithColorPickerView:(id)arg1 blendingView:(id)arg2 topViewIsEmpty:(BOOL)arg3;
- (void)refreshAction:(id)arg1;
- (void)dealloc;
- (BOOL)pickerView:(id)arg1 didDragPresetAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (BOOL)pickerViewSupportsDrag:(id)arg1 fromIndex:(unsigned long long)arg2;
- (BOOL)pickerViewSupportsDrop:(id)arg1;
- (void)pickerView:(id)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)pickerView:(id)arg1 removePresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(id)arg1;
- (void)drawContentForCellInPickerView:(id)arg1 withFrame:(BOOL)arg2 atIndex:(unsigned long long)arg3 inRect:(struct CGRect)arg4;
- (unsigned long long)numberOfPresetsInPickerView:(id)arg1;
- (void)colorPickerChangedTo:(id)arg1;
- (void)popoverWillClose;
- (void)validate;
- (BOOL)isEnabled;
- (long long)fillType;
- (void)reloadPresetPicker:(id)arg1;
- (void)reloadPresetPicker;
- (id)assetCollectionForPresetPicker:(id)arg1;
- (void)assetHeaderViewDidClick:(id)arg1;
- (double)minimumHeight;
- (id)scrollViewWithStackedViews:(id)arg1;
- (id)stackViewsInVerticalScrollView:(id)arg1 frame:(struct CGRect)arg2;
- (void)didMoveThroughHistory:(id)arg1;
- (BOOL)hasPresetPickers;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSTextVerticalAlignmentAction : MSDocumentAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (BOOL)validate;
- (long long)verticalAlignment;

@end

@interface MSAlignTopAction : MSTextVerticalAlignmentAction
{
}

- (void)alignTop:(id)arg1;

@end

@interface MSAlignBottomAction : MSTextVerticalAlignmentAction
{
}

- (long long)verticalAlignment;
- (void)alignBottom:(id)arg1;

@end

@interface MSAlignMiddleAction : MSTextVerticalAlignmentAction
{
}

- (long long)verticalAlignment;
- (void)alignMiddle:(id)arg1;

@end

@interface MSColorInspectorSectionColor : MSColorInspectorSection
{
    MSColor *_pickedColor;
}

@property(retain, nonatomic) MSColor *pickedColor; // @synthesize pickedColor=_pickedColor;
- (void).cxx_destruct;
- (unsigned long long)assetType;
- (void)removeAssetAtIndex:(unsigned long long)arg1 forPickerView:(id)arg2;
- (void)pickerView:(id)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (BOOL)pickerView:(id)arg1 insertPresetFromDragRepresentation:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)pickerView:(id)arg1 dragRepresentationForItemAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(id)arg1;
- (void)drawContentForCellInPickerView:(id)arg1 withFrame:(BOOL)arg2 atIndex:(unsigned long long)arg3 inRect:(struct CGRect)arg4;
- (id)pickerView:(id)arg1 tooltipForPresetButtonAtIndex:(unsigned long long)arg2;
- (void)colorPickerChangedTo:(id)arg1;
- (BOOL)hasAdvancedSettingsNib;
- (long long)fillType;
- (void)validate;
- (void)setStyleParts:(id)arg1;
- (void)highlightCurrentColor:(id)arg1 forPicker:(id)arg2;
- (void)highlightCurrentColor;
- (void)reloadPresetPicker;
- (id)assetPickerViewKeys;
- (id)viewsWithColorPickerView:(id)arg1 blendingView:(id)arg2 topViewIsEmpty:(BOOL)arg3;
- (id)initWithDelegate:(id)arg1;

@end

@interface MSLayersPreferencePane : MSPreferencePane
{
}

+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;

@end

@interface MSColorInspectorSectionGradient : MSColorInspectorSection <MSGradientEventHandlerDelegate, MSGradientBarViewDelegate>
{
    NSView *_gradientBarParentView;
    MSGradientBarView *_gradientBarView;
    NSButton *_rotateLeftButton;
    NSButton *_rotateRightButton;
    MSGradientEventHandler *_gradientHandler;
}

@property(retain, nonatomic) MSGradientEventHandler *gradientHandler; // @synthesize gradientHandler=_gradientHandler;
@property(nonatomic) __weak NSButton *rotateRightButton; // @synthesize rotateRightButton=_rotateRightButton;
@property(nonatomic) __weak NSButton *rotateLeftButton; // @synthesize rotateLeftButton=_rotateLeftButton;
@property(nonatomic) __weak MSGradientBarView *gradientBarView; // @synthesize gradientBarView=_gradientBarView;
@property(nonatomic) __weak NSView *gradientBarParentView; // @synthesize gradientBarParentView=_gradientBarParentView;
- (void).cxx_destruct;
- (unsigned long long)assetType;
- (void)dealloc;
- (void)closeGradientHandler;
- (void)popoverWillClose;
- (id)gradients;
- (void)rotateGradientAction:(id)arg1;
- (void)refreshAction:(id)arg1;
- (void)drawGradient:(id)arg1 inRect:(struct CGRect)arg2 colorSpace:(id)arg3;
- (void)updateOtherGradientsToReflectChanges;
- (void)gradientHandlerDidChangeGradient:(id)arg1;
- (void)gradientHandlerWillLoseFocus:(id)arg1;
- (void)gradientHandlerDidChangeCurrentPoint:(id)arg1;
- (void)colorPickerChangedTo:(id)arg1;
- (void)switchToGradientHandler;
- (BOOL)pickerView:(id)arg1 insertPresetFromDragRepresentation:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)pickerView:(id)arg1 dragRepresentationForItemAtIndex:(unsigned long long)arg2;
- (void)pickerView:(id)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(id)arg1;
- (void)drawContentForCellInPickerView:(id)arg1 withFrame:(BOOL)arg2 atIndex:(unsigned long long)arg3 inRect:(struct CGRect)arg4;
- (void)gradientBarAction:(id)arg1;
- (long long)fillType;
- (void)switchToGradientHandlerIfNecessary;
- (void)validate;
- (id)assetPickerViewKeys;
- (id)viewsWithColorPickerView:(id)arg1 blendingView:(id)arg2 topViewIsEmpty:(BOOL)arg3;
- (id)gradientBarViewPreviewColorSpace:(id)arg1;
- (void)gradientBarChanged:(id)arg1;
- (void)awakeFromNib;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSColorInspectorSectionPattern : MSColorInspectorSection
{
    NSImageView *_patternWell;
    NSButton *_choosePatternButton;
    NSPopUpButton *_patternTilButton;
}

@property(retain, nonatomic) NSPopUpButton *patternTilButton; // @synthesize patternTilButton=_patternTilButton;
@property(retain, nonatomic) NSButton *choosePatternButton; // @synthesize choosePatternButton=_choosePatternButton;
@property(retain, nonatomic) NSImageView *patternWell; // @synthesize patternWell=_patternWell;
- (void).cxx_destruct;
- (unsigned long long)assetType;
- (void)updatePatternWellImage;
- (BOOL)pickerView:(id)arg1 insertPresetFromDragRepresentation:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)pickerView:(id)arg1 dragRepresentationForItemAtIndex:(unsigned long long)arg2;
- (BOOL)pickerView:(id)arg1 didDragPresetAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)pickerView:(id)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(id)arg1;
- (void)drawContentForCellInPickerView:(id)arg1 withFrame:(BOOL)arg2 atIndex:(unsigned long long)arg3 inRect:(struct CGRect)arg4;
- (void)patternWellAction:(id)arg1;
- (void)choosePatternImage:(id)arg1;
- (void)validate;
- (long long)fillType;
- (void)enableSectionButtonAction:(id)arg1;
- (id)assetPickerViewKeys;
- (id)viewsWithColorPickerView:(id)arg1 blendingView:(id)arg2 topViewIsEmpty:(BOOL)arg3;
- (void)viewDidAppear;
- (void)awakeFromNib;
- (id)initWithDelegate:(id)arg1;

@end

@interface MSColorPickerBackgroundView : NSView
{
}

- (id)subViewsForResponderFixer;

@end

@interface MSArtboardPresetsViewController : NSViewController <NSTableViewDataSource, NSTableViewDelegate, MSEditArtboardPresetViewControllerDelegate, NSUserInterfaceValidations, BCPopoverDelegate>
{
    MSArtboardPresetStore *_presetStore;
    long long _orientation;
    NSArray *_extraPresets;
    id <MSArtboardPresetsViewControllerDelegate> _delegate;
    NSArrayController *_categoriesController;
    NSSegmentedControl *_orientationSegmentedControl;
    NSTableView *_tableView;
    NSArray *_categories;
    NSArray *_arrangedSections;
    NSArray *_arrangedObjects;
    MSArtboardPreset *_editingPreset;
    struct CGSize _selectedPresetSize;
}

@property(retain, nonatomic) MSArtboardPreset *editingPreset; // @synthesize editingPreset=_editingPreset;
@property(readonly, nonatomic) NSArray *arrangedObjects; // @synthesize arrangedObjects=_arrangedObjects;
@property(readonly, nonatomic) NSArray *arrangedSections; // @synthesize arrangedSections=_arrangedSections;
@property(copy, nonatomic) NSArray *categories; // @synthesize categories=_categories;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSSegmentedControl *orientationSegmentedControl; // @synthesize orientationSegmentedControl=_orientationSegmentedControl;
@property(retain, nonatomic) NSArrayController *categoriesController; // @synthesize categoriesController=_categoriesController;
@property(nonatomic) __weak id <MSArtboardPresetsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct CGSize selectedPresetSize; // @synthesize selectedPresetSize=_selectedPresetSize;
@property(copy, nonatomic) NSArray *extraPresets; // @synthesize extraPresets=_extraPresets;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
- (void).cxx_destruct;
- (void)popoverWillShow:(id)arg1;
- (void)editArtboardPresetViewController:(id)arg1 savePreset:(id)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (id)viewForGroupRow:(long long)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)deleteRowAction:(id)arg1;
- (void)editRowAction:(id)arg1;
- (void)refresh;
- (BOOL)isFauxSeparatorSectionAtIndex:(long long)arg1;
- (BOOL)isSectionAtIndex:(unsigned long long)arg1;
- (id)presetForPreset:(id)arg1 landscape:(BOOL)arg2;
- (void)rearrangeObjects;
- (BOOL)itemIsUserPreset:(id)arg1;
- (void)addUserPreset:(id)arg1;
- (id)presetAtIndexPath:(id)arg1;
- (void)refreshOrientationControl;
- (void)selectOrientation:(id)arg1;
- (void)showCreateCustomSizeSheet:(id)arg1;
- (void)selectCategory:(id)arg1;
- (id)categoryForPreset:(id)arg1;
@property(retain, nonatomic) MSArtboardPresetsCategory *selectedCategory;
- (void)artboardPresetStoreDidChange:(id)arg1;
@property(retain, nonatomic) MSArtboardPresetStore *presetStore; // @synthesize presetStore=_presetStore;
- (void)dealloc;
- (void)viewDidLoad;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCreateSymbolNamingSheet : CHSheetController
{
    NSButton *_moveSymbolToPageCheckbox;
    NSButton *_confirmButton;
    NSTextField *_symbolNameField;
    NSTextField *_symbolPageField;
    CDUnknownBlockType _completionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSTextField *symbolPageField; // @synthesize symbolPageField=_symbolPageField;
@property(retain, nonatomic) NSTextField *symbolNameField; // @synthesize symbolNameField=_symbolNameField;
@property(retain, nonatomic) NSButton *confirmButton; // @synthesize confirmButton=_confirmButton;
@property(retain, nonatomic) NSButton *moveSymbolToPageCheckbox; // @synthesize moveSymbolToPageCheckbox=_moveSymbolToPageCheckbox;
- (void).cxx_destruct;
- (void)validateConfirmButton;
- (void)controlTextDidChange:(id)arg1;
- (void)setShouldShowMoveCheckbox:(BOOL)arg1;
- (void)setSuggestedName:(id)arg1;
- (void)setSymbolPageName:(id)arg1;
- (void)confirm:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSStylePartPreviewButton : NSButton
{
    MSStylePart *_stylePart;
    NSColor *_color;
    id <MSStylePartPreviewButtonDelegate> _delegate;
    id _dragOwner;
}

@property(nonatomic) __weak id dragOwner; // @synthesize dragOwner=_dragOwner;
@property(nonatomic) __weak id <MSStylePartPreviewButtonDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSColor *color; // @synthesize color=_color;
@property(retain, nonatomic) MSStylePart *stylePart; // @synthesize stylePart=_stylePart;
- (void).cxx_destruct;
- (id)fillColor;
- (id)innerBorderColor;
- (id)borderColor;
- (BOOL)isFlipped;
- (void)drawButton;
- (struct CGRect)colorFrame;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface MSDragRectGestureRecognizer : MSDragGestureRecognizer
{
}

- (void)keyUp:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)keyDown:(id)arg1;
@property(readonly) BOOL constrainProportions;

@end

@interface MSCommand : NSObject
{
}

+ (id)runWithArguments:(CDUnknownBlockType)arg1;
- (id)run;

@end

@interface MSDragSegmentGestureRecognizer : MSDragGestureRecognizer
{
    double _offset;
}

@property(nonatomic) double offset; // @synthesize offset=_offset;

@end

@interface MSCloudUploadFailedViewController : MSCloudBaseViewController
{
    NSError *_error;
    SCKShare *_existingShare;
    NSButton *_retryButton;
}

@property(retain, nonatomic) NSButton *retryButton; // @synthesize retryButton=_retryButton;
@property(retain, nonatomic) SCKShare *existingShare; // @synthesize existingShare=_existingShare;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (void)retryUpload:(id)arg1;
- (void)updateErrorDescription;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithAction:(id)arg1;

@end

@interface MSSharedSymbolAction : MSSharedObjectAction
{
    MSForeignObjectMenuBuilder *_menuBuilder;
}

@property(retain, nonatomic) MSForeignObjectMenuBuilder *menuBuilder; // @synthesize menuBuilder=_menuBuilder;
- (void).cxx_destruct;
- (id)sharedObjectName;
- (id)sortedObjectMenuItemsForMenu:(id)arg1;
- (id)initWithDocument:(id)arg1;

@end

@interface MSManageShareableObjectsAction : MSDocumentAction
{
}

- (void)showSheetWithTabIndex:(unsigned long long)arg1;

@end

@interface MSManageForeignSymbolAction : MSManageShareableObjectsAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)showOrganizeForeignSymbolSheet:(id)arg1;

@end

@interface MSManageLayerStylesAction : MSManageShareableObjectsAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)showOrganizeSharedLayerStylesSheet:(id)arg1;

@end

@interface MSManageTextStylesAction : MSManageShareableObjectsAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)showOrganizeSharedTextStylesSheet:(id)arg1;

@end

@interface MSAssetPreferenceItem : NSObject
{
    long long _updatingStatus;
    id <MSAssetPreferenceItemDelegate> _delegate;
    MSAssetLibrary *_library;
    NSImage *_preview;
    NSString *_secondaryTitle;
    unsigned long long _fileSize;
    unsigned long long _downloadedSoFar;
}

+ (id)preferenceItemForLibrary:(id)arg1;
@property(nonatomic) unsigned long long downloadedSoFar; // @synthesize downloadedSoFar=_downloadedSoFar;
@property(nonatomic) unsigned long long fileSize; // @synthesize fileSize=_fileSize;
@property(retain, nonatomic) NSString *secondaryTitle; // @synthesize secondaryTitle=_secondaryTitle;
@property(retain, nonatomic) NSImage *preview; // @synthesize preview=_preview;
@property(readonly, nonatomic) MSAssetLibrary *library; // @synthesize library=_library;
@property(nonatomic) __weak id <MSAssetPreferenceItemDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long updatingStatus; // @synthesize updatingStatus=_updatingStatus;
- (void).cxx_destruct;
@property(readonly, nonatomic) MSRemoteAssetLibrary *remoteLibrary;
- (void)evaluateSecondaryTitle;
- (id)updatingRelatedSecondaryTitle;
- (id)secondaryTitleStringWhenUpdateAvailable;
- (id)downloadProgress;
@property(readonly, nonatomic) NSString *modificationDate;
- (id)infoText;
@property(readonly, nonatomic) BOOL hasAppcastURL;
@property(readonly, nonatomic) BOOL validForSecondaryTextField;
@property(readonly, nonatomic) BOOL downloadFailed;
@property(readonly, nonatomic) BOOL updateAvailable;
- (BOOL)valid;
@property(nonatomic) BOOL enabled;
@property(readonly, nonatomic) NSString *name;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)setupObservers;
- (id)initWithLibrary:(id)arg1;

@end

@interface MSZoomTool : NSObject
{
    struct CGPoint _startPoint;
    struct CGPoint _endPoint;
    BOOL _active;
    BOOL _activatedByKey;
    double _zoomValue;
}

@property(readonly, nonatomic) BOOL activatedByKey; // @synthesize activatedByKey=_activatedByKey;
@property(readonly, nonatomic, getter=isActive) BOOL active; // @synthesize active=_active;
- (double)zoomValueAfterZoomOutUnCapped;
- (double)zoomValueAfterZoomOut;
- (double)zoomValueAfterZoomInUnCapped;
- (double)zoomValueAfterZoomIn;
- (void)drawWithScrollOrigin:(struct CGPoint)arg1;
- (BOOL)shouldZoomIntoRect;
- (void)mouseUp:(id)arg1 inView:(id)arg2;
- (struct CGRect)zoomRect;
- (void)applyZoomCursor;
- (void)mouseDragged:(id)arg1 inView:(id)arg2;
- (void)mouseMoved;
- (void)mouseDown:(id)arg1 inView:(id)arg2;
- (void)flagsChanged;
- (struct CGPoint)zoomPointFromEvent:(id)arg1 inView:(id)arg2;
- (void)endZoomToolModeInView:(id)arg1;
- (void)beginZoomToolModeActivatedByKey:(BOOL)arg1;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;

@end

@interface MSDisabledButtonCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSContentDrawView : NSView <MSEventHandlerManagerDelegate, MSTiledLayerPileHostView, MSOverlayRendererDelegate>
{
    BOOL handToolIsActive;
    struct CGPoint handToolOriginalPoint;
    struct CGPoint handToolOriginalScrollOrigin;
    BOOL hasDraggedOutsideInitialPadding;
    struct CGPoint mouseDownPoint;
    id _eventMonitor;
    BOOL _shouldHideOverlayControls;
    BOOL _didMouseDown;
    BOOL _haveStoredMostRecentFullScaleScrollOrigin;
    BOOL _redrawPending;
    BOOL _isMagnifying;
    MSTiledLayerPile *_tiledLayerPile;
    id <MSContentDrawViewDelegate> _delegate;
    MSEventHandlerManager *_eventHandlerManager;
    MSRulerView *_horizontalRuler;
    MSRulerView *_verticalRuler;
    MSOverlayView *_overlayView;
    MSDocument *_document;
    MSRenderMonitor *_pendingMonitor;
    MSCacheManager *_cacheManager;
    MSMouseTracker *_mouseTracker;
    MSZoomTool *_zoomTool;
    NSEvent *_lastEvent;
    unsigned long long _previouslyRenderedColorSpace;
    MSImmutableDocumentData *_previouslyRenderedDoc;
    NSNumberFormatter *_measurementLabelNumberFormatter;
    MSRenderMonitor *_performanceMonitor;
    MSRenderingDriver *_normalDriver;
    MSRenderingDriver *_debugDriver;
    NSArray *_flowRenderers;
    struct CGPoint _scalingCenterInViewCoordinates;
    struct CGPoint _mostRecentFullScaleScrollOrigin;
    struct CGRect _scrollOriginRelativeContentRedrawRect;
    struct CGRect _overlayDirtyRect;
}

+ (struct CGPoint)absoluteCoordinatesFromViewCoordinates:(struct CGPoint)arg1 forViewPort:(id)arg2;
+ (struct CGPoint)viewCoordinatesFromAbsoluteCoordinates:(struct CGPoint)arg1 forViewPort:(id)arg2;
+ (struct CGPoint)scrollOriginAfterScalingViewPort:(id)arg1 toZoomValue:(double)arg2 scalingCenterInViewCoordinates:(struct CGPoint)arg3;
+ (id)viewPortAfterScalingViewPort:(id)arg1 toZoom:(double)arg2 centeredOnAbsoluteCoordinates:(struct CGPoint)arg3;
@property(retain, nonatomic) NSArray *flowRenderers; // @synthesize flowRenderers=_flowRenderers;
@property(retain, nonatomic) MSRenderingDriver *debugDriver; // @synthesize debugDriver=_debugDriver;
@property(retain, nonatomic) MSRenderingDriver *normalDriver; // @synthesize normalDriver=_normalDriver;
@property(retain, nonatomic) MSRenderMonitor *performanceMonitor; // @synthesize performanceMonitor=_performanceMonitor;
@property(retain, nonatomic) NSNumberFormatter *measurementLabelNumberFormatter; // @synthesize measurementLabelNumberFormatter=_measurementLabelNumberFormatter;
@property(nonatomic) BOOL isMagnifying; // @synthesize isMagnifying=_isMagnifying;
@property(nonatomic) BOOL redrawPending; // @synthesize redrawPending=_redrawPending;
@property(nonatomic) BOOL haveStoredMostRecentFullScaleScrollOrigin; // @synthesize haveStoredMostRecentFullScaleScrollOrigin=_haveStoredMostRecentFullScaleScrollOrigin;
@property(nonatomic) struct CGPoint mostRecentFullScaleScrollOrigin; // @synthesize mostRecentFullScaleScrollOrigin=_mostRecentFullScaleScrollOrigin;
@property(nonatomic) struct CGPoint scalingCenterInViewCoordinates; // @synthesize scalingCenterInViewCoordinates=_scalingCenterInViewCoordinates;
@property(nonatomic) struct CGRect overlayDirtyRect; // @synthesize overlayDirtyRect=_overlayDirtyRect;
@property(nonatomic) struct CGRect scrollOriginRelativeContentRedrawRect; // @synthesize scrollOriginRelativeContentRedrawRect=_scrollOriginRelativeContentRedrawRect;
@property(retain, nonatomic) MSImmutableDocumentData *previouslyRenderedDoc; // @synthesize previouslyRenderedDoc=_previouslyRenderedDoc;
@property(nonatomic) unsigned long long previouslyRenderedColorSpace; // @synthesize previouslyRenderedColorSpace=_previouslyRenderedColorSpace;
@property(retain, nonatomic) NSEvent *lastEvent; // @synthesize lastEvent=_lastEvent;
@property(readonly, nonatomic) MSZoomTool *zoomTool; // @synthesize zoomTool=_zoomTool;
@property(nonatomic) BOOL didMouseDown; // @synthesize didMouseDown=_didMouseDown;
@property(readonly, nonatomic) MSMouseTracker *mouseTracker; // @synthesize mouseTracker=_mouseTracker;
@property(retain, nonatomic) MSCacheManager *cacheManager; // @synthesize cacheManager=_cacheManager;
@property(retain, nonatomic) MSRenderMonitor *pendingMonitor; // @synthesize pendingMonitor=_pendingMonitor;
@property(nonatomic) BOOL shouldHideOverlayControls; // @synthesize shouldHideOverlayControls=_shouldHideOverlayControls;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
@property(nonatomic) __weak MSOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(nonatomic) __weak MSRulerView *verticalRuler; // @synthesize verticalRuler=_verticalRuler;
@property(nonatomic) __weak MSRulerView *horizontalRuler; // @synthesize horizontalRuler=_horizontalRuler;
@property(retain, nonatomic) MSEventHandlerManager *eventHandlerManager; // @synthesize eventHandlerManager=_eventHandlerManager;
@property(nonatomic) __weak id <MSContentDrawViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MSTiledLayerPile *tiledLayerPile; // @synthesize tiledLayerPile=_tiledLayerPile;
- (void).cxx_destruct;
- (struct CGPoint)zoomPoint:(struct CGPoint)arg1;
- (struct CGSize)convertSizeToPage:(struct CGSize)arg1;
- (struct CGPoint)convertPointFromPage:(struct CGPoint)arg1;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toLayer:(id)arg2;
- (void)layerPositionPossiblyChanged;
- (void)ignoreNextKeyDownEventUntilModifiersChange;
- (void)returnToDefaultHandlerIfNeededForResize;
- (void)windowDidResize:(id)arg1;
- (void)viewWillStartLiveResize;
- (void)smartMagnifyWithEvent:(id)arg1;
- (void)eventHandlerManager:(id)arg1 didChangeCurrentHandler:(id)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)selectToolbarItemWithIdentifier:(id)arg1;
- (void)refreshSidebarWithMask:(unsigned long long)arg1;
- (id)pages;
- (id)currentPage;
- (id)contentDrawView;
- (id)selectedLayers;
- (void)handleFlagsChangedEvent:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)changeFont:(id)arg1;
- (BOOL)isOpaque;
- (id)menuForEvent:(id)arg1;
- (void)switchToSymbolHandlerIfPasteboardContentsDetected:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)performActionWithIdentifier:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)displayPropertiesDidChange;
- (void)completeMagnifyWithFactor;
- (void)magnifyByFactor:(double)arg1 centerOnMouse:(BOOL)arg2;
- (void)scrollWheelScroll:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)centerSelectionInVisibleArea;
- (void)centerLayersInCanvas;
- (void)centerRect:(struct CGRect)arg1 animated:(BOOL)arg2;
- (void)centerRect:(struct CGRect)arg1;
- (void)trackMouse:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)doMouseDraggedEvent:(id)arg1;
- (void)mouseDraggedOutsideCanvas;
- (BOOL)isPointOutsideCanvas:(struct CGPoint)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (struct CGRect)transformRectToViewCoords:(struct CGRect)arg1;
- (void)performOverlayRefreshInViewRect:(struct CGRect)arg1 forPage:(id)arg2;
- (void)redrawTileContentIfOpportune;
- (void)redrawTiles;
- (void)scheduleRedraw;
- (void)refreshOverlayInViewRect:(struct CGRect)arg1;
- (void)refreshOverlayInRect:(struct CGRect)arg1;
- (void)refreshOverlay;
- (struct CGPoint)mouseInView;
- (void)reloadAllTiles;
- (void)redrawAllTiles;
- (void)beginReplacingTiledLayers;
- (void)removeAllTiledLayers;
- (void)animationDidFinishAtViewPort:(id)arg1;
- (void)animationDidFinish;
- (void)endZoomToolMode;
- (void)zoomOut;
- (void)setZoomValueCenteredInCanvas:(double)arg1;
- (void)scaleTilesBy:(double)arg1;
- (void)scaleTilesBy:(double)arg1 withScalingCenterInViewCoordinates:(struct CGPoint)arg2;
- (void)zoomToActualSizeAnimated:(BOOL)arg1;
- (void)zoomToFitRect:(struct CGRect)arg1;
- (void)animateToZoom:(double)arg1 scalingCenteredOnAbsoluteCoordinates:(struct CGPoint)arg2;
- (void)animateToZoom:(double)arg1;
- (void)zoomIn;
@property(nonatomic) double zoomValue;
- (struct CGRect)visibleContentRect;
- (void)animateScrollOriginToPoint:(struct CGPoint)arg1;
- (struct CGPoint)viewCenterInAbsoluteCoordinatesForViewPort:(id)arg1;
- (struct CGPoint)centerForScalingInAbsoluteCoordinates;
@property(nonatomic) struct CGPoint scrollOrigin;
- (void)animateToViewPort:(id)arg1;
- (id)viewPortAfterScalingToZoom:(double)arg1 selectionCentered:(BOOL)arg2;
- (id)viewPortAfterScalingToZoom:(double)arg1 centeredOnAbsoluteCoordinates:(struct CGPoint)arg2;
- (id)viewPortWithCenter:(struct CGPoint)arg1 zoomValue:(double)arg2;
- (id)viewPortForZoomToFitRect:(struct CGRect)arg1;
@property(retain, nonatomic) MSViewPort *viewPort;
- (void)refreshOverlayAfterSettingsChange;
- (void)refreshEverythingAfterSettingsChange;
- (void)queuePendingMonitor;
- (void)tiledLayerPileDidRefreshTileContent:(id)arg1 finishTime:(unsigned long long)arg2;
- (void)tiledLayerPile:(id)arg1 requiresRedrawInRect:(struct CGRect)arg2;
- (void)renderOverlayInRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;
- (unsigned long long)overlayOptionsForPage:(id)arg1 zoom:(double)arg2 fullScreen:(BOOL)arg3;
- (void)scrollTilesBy:(struct CGPoint)arg1;
- (void)scrollToScrollOrigin:(struct CGPoint)arg1;
- (void)tile;
- (void)placeOriginInTopLeft;
- (void)centerDocumentAndPlaceScrollOriginInTopLeft;
- (void)centerInBounds;
- (void)pageDidChange:(id)arg1;
- (void)didMoveThroughHistory:(id)arg1;
- (void)willMoveThroughHistory:(id)arg1;
- (void)visualSettingChanged:(id)arg1;
- (void)prepare;
- (void)enableLayerBackedDrawing;
- (void)pixelGridDidChange;
- (void)viewDidChangeBackingProperties;
- (BOOL)canDrawConcurrently;
- (long long)tag;
- (BOOL)isFlipped;
- (void)removeFromSuperview;
- (void)viewDidMoveToWindow;
- (void)removeObserversForNotifications;
- (void)addObserversForNotifications;
@property(readonly, nonatomic) MSRenderingDriver *driver;
- (BOOL)useDebugDriver;
- (void)initDrivers;
- (void)dealloc;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)handToolMouseUp;
- (void)handToolMouseDragged:(id)arg1;
- (void)handToolMouseDown:(id)arg1;
- (void)endHandToolMode;
- (void)beginHandToolMode;
- (BOOL)clickShouldDismissPopover:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSBackgroundColorView : NSView
{
    NSColor *_backgroundColor;
}

@property(copy, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;

@end

@interface MSSymbolInstanceOverrideViewController : MSOverrideViewController
{
    NSTextField *_labelField;
    NSPopUpButton *_popupButton;
    MSSymbolMaster *_originalMaster;
    NSPopUpButton *_popup;
    MSForeignObjectMenuBuilder *_menuBuilder;
}

@property(retain, nonatomic) MSForeignObjectMenuBuilder *menuBuilder; // @synthesize menuBuilder=_menuBuilder;
@property(retain, nonatomic) NSPopUpButton *popup; // @synthesize popup=_popup;
@property(readonly, nonatomic) MSSymbolMaster *originalMaster; // @synthesize originalMaster=_originalMaster;
@property(retain, nonatomic) NSPopUpButton *popupButton; // @synthesize popupButton=_popupButton;
@property(retain, nonatomic) NSTextField *labelField; // @synthesize labelField=_labelField;
- (void).cxx_destruct;
- (void)libraryControllerDidChange:(id)arg1;
- (void)viewWillAppear;
- (BOOL)validateMenuItem:(id)arg1;
- (void)applyOverrideToSelectedLayers:(id)arg1;
- (id)valueFromSymbolMasterReference:(id)arg1;
- (id)valueFromControlView:(id)arg1;
- (void)reloadMenu;
- (id)symbolMenuItems;
- (id)menuItemsForSymbolMasterRefs:(id)arg1;
- (id)nameOfCurrentNestedSymbol;
- (id)controlViewForEditingOverride;
@property(readonly, nonatomic) MSSymbolInstance *firstInstance;
@property(readonly, nonatomic) NSString *originalMasterID;
@property(readonly, nonatomic) NSString *currentMasterID;
@property(readonly, nonatomic) MSDocument *document;
@property(readonly, nonatomic) MSDocumentData *documentData;

@end

@interface MSDragToSelectGestureRecognizer : MSDragGestureRecognizer
{
    unsigned long long _selectionExtensionMask;
    NSArray *_initialSelection;
}

@property(copy, nonatomic) NSArray *initialSelection; // @synthesize initialSelection=_initialSelection;
@property(nonatomic) unsigned long long selectionExtensionMask; // @synthesize selectionExtensionMask=_selectionExtensionMask;
- (void).cxx_destruct;
- (void)reset;
@property(readonly, nonatomic) BOOL extendSelection;
- (struct CGRect)selectionRect;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface MSSaveAsTemplateAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)saveAsTemplate:(id)arg1;

@end

@interface MSWelcomeCollectionImageView : NSImageView
{
    BOOL _selected;
    SEL _doubleClickAction;
    unsigned long long _imageInterpolation;
}

+ (Class)cellClass;
@property(nonatomic) unsigned long long imageInterpolation; // @synthesize imageInterpolation=_imageInterpolation;
@property(nonatomic) SEL doubleClickAction; // @synthesize doubleClickAction=_doubleClickAction;
@property(nonatomic, getter=isSelected) BOOL selected;
- (void)mouseDown:(id)arg1;

@end

@interface MSWelcomeCollectionImageCell : NSImageCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSDistributeHorizontallyAction : MSDistributeAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)distributeHorizontally:(id)arg1;

@end

@interface MSDistributeVerticallyAction : MSDistributeAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)distributeVertically:(id)arg1;

@end

@interface MSDistributeAction : MSDocumentAction
{
}

- (void)distributeLayers:(id)arg1 withSpace:(double)arg2 forAxis:(unsigned long long)arg3 mayPlaceOnSubpixels:(BOOL)arg4;
- (double)calculateRequiredSpaceBetweenLayers:(id)arg1 forAxis:(unsigned long long)arg2;
- (id)layersSortedForAxis:(unsigned long long)arg1;
- (void)distributeAlongAxis:(unsigned long long)arg1;
- (void)performAction:(id)arg1;
- (BOOL)validate;
- (BOOL)shouldUseImageForTouchBarItem;

@end

@interface MSDistributeActions : MSTouchBarGroupAction
{
}

- (unsigned long long)touchBarItemSizing;
- (id)actionNames;

@end

@interface MSLicenseSheetAction : MSDocumentAction <MSWindowBadgeAction>
{
}

@property(readonly, nonatomic) unsigned long long numberOfBadges;
- (BOOL)validate;
@property(readonly, nonatomic) NSColor *badgeTint;
- (id)label;
- (BOOL)hasDynamicTitle;
@property(readonly, nonatomic) NSAttributedString *badgeTitle;
- (void)doPerformAction:(id)arg1;
- (void)runLicenseDialog:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSBaseAlignLayersAction : MSDocumentAction <MSAltButtonTarget>
{
}

- (BOOL)shouldUseImageForTouchBarItem;
- (void)performAction:(id)arg1;
- (BOOL)altButtonCanShowAltImage:(id)arg1;
- (BOOL)validate;
- (void)alignVectorPointsToKey:(id)arg1;
- (BOOL)canAlignToArtboardInstead;
- (void)alignToKey:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAlignLayersLeftAction : MSBaseAlignLayersAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)alignLayersLeft:(id)arg1;

@end

@interface MSAlignLayersCenterAction : MSBaseAlignLayersAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)alignLayersCenter:(id)arg1;

@end

@interface MSAlignLayersRightAction : MSBaseAlignLayersAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)alignLayersRight:(id)arg1;

@end

@interface MSAlignLayersTopAction : MSBaseAlignLayersAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)alignLayersTop:(id)arg1;

@end

@interface MSAlignLayersMiddleAction : MSBaseAlignLayersAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)alignLayersMiddle:(id)arg1;

@end

@interface MSAlignLayersBottomAction : MSBaseAlignLayersAction
{
}

- (id)touchBarImage;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)alignLayersBottom:(id)arg1;

@end

@interface MSAlignmentActions : MSTouchBarGroupAction
{
}

- (unsigned long long)touchBarItemSizing;
- (id)actionNames;

@end

@interface MSReplaceFontsAction : MSDocumentAction <MSWindowBadgeAction>
{
}

@property(readonly, nonatomic) NSColor *badgeTint;
- (id)label;
@property(readonly, nonatomic) unsigned long long numberOfBadges;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)replaceMissingFonts:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSAttributedString *badgeTitle; // @dynamic badgeTitle;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDocument : NSDocument <MSCloudExportableDocument, MSSidebarControllerDelegate, BCSideBarViewControllerDelegate, NSMenuDelegate, NSToolbarDelegate, NSWindowDelegate, MSEventHandlerManagerDelegate, MSDocumentDataDelegate, MSMenuBuilderDelegate>
{
    BOOL _nextReadFromURLIsReload;
    BOOL _hasOpenedImageFile;
    BOOL _layerListRefreshIsScheduled;
    BOOL _temporarilyDisableSelectionHiding;
    BOOL _cacheFlushInProgress;
    BOOL _hasScheduledDocumentDidChange;
    NSArray *_exportableLayerSelection;
    NSWindow *_documentWindow;
    NSView *_messageView;
    MSMainSplitViewController *_splitViewController;
    NSView *_inspectorPlaceholderView;
    NSView *_canvasPlaceholderView;
    MSToolbarConstructor *_toolbarConstructor;
    MSActionController *_actionsController;
    MSBadgeController *_badgeController;
    MSDocumentData *_documentData;
    MSEventHandlerManager *_eventHandlerManager;
    MSCacheManager *_cacheManager;
    MSHistoryMaker *_historyMaker;
    MSInspectorController *_inspectorController;
    BCSideBarViewController *_sidebarController;
    MSContentDrawViewController *_currentContentViewController;
    id _colorSpaceMismatchWarning;
    id _editingLibraryWarning;
    MSImmutableDocumentData *_documentDataUsedForLayerList;
    NSMutableSet *_layersWithHiddenSelectionHandles;
    NSTimer *_resetHiddenSelectionHandlesTimer;
    double _mostRecentCacheFlushingTime;
    NSMutableDictionary *_mutableUIMetadata;
    MSBackButtonWindowController *_backButtonController;
    NSMutableDictionary *_originalViewportsForEditedSymbols;
    MSLayerArray *_selectedLayers;
}

+ (void)openForeignSymbol:(id)arg1 inLibrary:(id)arg2;
+ (id)currentDocument;
+ (id)windowForSheet;
+ (BOOL)isNativeType:(id)arg1;
+ (id)writableTypes;
+ (id)readableTypes;
+ (BOOL)autosavesInPlace;
@property(copy, nonatomic) MSLayerArray *selectedLayers; // @synthesize selectedLayers=_selectedLayers;
@property(nonatomic) BOOL hasScheduledDocumentDidChange; // @synthesize hasScheduledDocumentDidChange=_hasScheduledDocumentDidChange;
@property(retain, nonatomic) NSMutableDictionary *originalViewportsForEditedSymbols; // @synthesize originalViewportsForEditedSymbols=_originalViewportsForEditedSymbols;
@property(retain, nonatomic) MSBackButtonWindowController *backButtonController; // @synthesize backButtonController=_backButtonController;
@property(retain, nonatomic) NSMutableDictionary *mutableUIMetadata; // @synthesize mutableUIMetadata=_mutableUIMetadata;
@property BOOL cacheFlushInProgress; // @synthesize cacheFlushInProgress=_cacheFlushInProgress;
@property double mostRecentCacheFlushingTime; // @synthesize mostRecentCacheFlushingTime=_mostRecentCacheFlushingTime;
@property(retain, nonatomic) NSTimer *resetHiddenSelectionHandlesTimer; // @synthesize resetHiddenSelectionHandlesTimer=_resetHiddenSelectionHandlesTimer;
@property(retain, nonatomic) NSMutableSet *layersWithHiddenSelectionHandles; // @synthesize layersWithHiddenSelectionHandles=_layersWithHiddenSelectionHandles;
@property(nonatomic) BOOL temporarilyDisableSelectionHiding; // @synthesize temporarilyDisableSelectionHiding=_temporarilyDisableSelectionHiding;
@property(nonatomic) BOOL layerListRefreshIsScheduled; // @synthesize layerListRefreshIsScheduled=_layerListRefreshIsScheduled;
@property(retain, nonatomic) MSImmutableDocumentData *documentDataUsedForLayerList; // @synthesize documentDataUsedForLayerList=_documentDataUsedForLayerList;
@property(retain, nonatomic) id editingLibraryWarning; // @synthesize editingLibraryWarning=_editingLibraryWarning;
@property(retain, nonatomic) id colorSpaceMismatchWarning; // @synthesize colorSpaceMismatchWarning=_colorSpaceMismatchWarning;
@property(nonatomic) BOOL hasOpenedImageFile; // @synthesize hasOpenedImageFile=_hasOpenedImageFile;
@property(nonatomic) BOOL nextReadFromURLIsReload; // @synthesize nextReadFromURLIsReload=_nextReadFromURLIsReload;
@property(retain, nonatomic) MSContentDrawViewController *currentContentViewController; // @synthesize currentContentViewController=_currentContentViewController;
@property(retain, nonatomic) BCSideBarViewController *sidebarController; // @synthesize sidebarController=_sidebarController;
@property(retain, nonatomic) MSInspectorController *inspectorController; // @synthesize inspectorController=_inspectorController;
@property(retain, nonatomic) MSHistoryMaker *historyMaker; // @synthesize historyMaker=_historyMaker;
@property(readonly, nonatomic) MSCacheManager *cacheManager; // @synthesize cacheManager=_cacheManager;
@property(retain, nonatomic) MSEventHandlerManager *eventHandlerManager; // @synthesize eventHandlerManager=_eventHandlerManager;
@property(retain, nonatomic) MSDocumentData *documentData; // @synthesize documentData=_documentData;
@property(retain, nonatomic) MSBadgeController *badgeController; // @synthesize badgeController=_badgeController;
@property(retain, nonatomic) MSActionController *actionsController; // @synthesize actionsController=_actionsController;
@property(retain, nonatomic) MSToolbarConstructor *toolbarConstructor; // @synthesize toolbarConstructor=_toolbarConstructor;
@property(retain, nonatomic) NSView *canvasPlaceholderView; // @synthesize canvasPlaceholderView=_canvasPlaceholderView;
@property(retain, nonatomic) NSView *inspectorPlaceholderView; // @synthesize inspectorPlaceholderView=_inspectorPlaceholderView;
@property(nonatomic) __weak MSMainSplitViewController *splitViewController; // @synthesize splitViewController=_splitViewController;
@property(retain, nonatomic) NSView *messageView; // @synthesize messageView=_messageView;
@property(retain, nonatomic) NSWindow *documentWindow; // @synthesize documentWindow=_documentWindow;
- (void).cxx_destruct;
- (id)previewColorSpaceForItem:(id)arg1;
- (void)warnIfEditingLibrary;
- (BOOL)isLibraryDocument;
- (void)showNonDefaultColorSpaceWarningIfApplicable;
- (id)symbolReferenceForRecipe:(id)arg1;
- (id)localSymbolForSymbol:(id)arg1 inLibrary:(id)arg2;
- (void)eventHandlerManager:(id)arg1 didChangeCurrentHandler:(id)arg2;
- (void)refreshWindowBadge;
- (void)reloadTouchBars;
- (void)libraryControllerDidChange:(id)arg1;
@property(nonatomic) double pageListHeight;
- (id)documentData:(id)arg1 metadataForKey:(id)arg2 object:(id)arg3;
- (void)documentData:(id)arg1 storeMetadata:(id)arg2 forKey:(id)arg3 object:(id)arg4;
@property(retain, nonatomic) NSDictionary *UIMetadata;
- (void)setFileURL:(id)arg1;
- (void)visitSymbolMasterWithID:(id)arg1;
- (void)visitArtboardForInstance:(id)arg1;
- (void)removeViewportForArtboard:(id)arg1;
- (BOOL)canRestoreViewportAfterArtboardEdit:(id)arg1;
- (void)restoreViewportAfterArtboardEdit:(id)arg1;
- (void)storeViewport:(id)arg1 andInstance:(id)arg2 forArtboard:(id)arg3;
- (void)resetHiddenSelectionHandles;
- (void)documentDataImmediatelyShowSelectionForAllLayers:(id)arg1;
- (void)documentData:(id)arg1 immediatelyShowSelectionForLayer:(id)arg2;
- (void)documentData:(id)arg1 temporarilyHideSelectionForLayers:(id)arg2;
- (void)temporarilyDisableSelectionHidingDuringBlock:(CDUnknownBlockType)arg1;
- (BOOL)shouldDrawSelectionForLayer:(id)arg1;
- (void)flagsChangedNotification:(id)arg1;
- (void)sidebarController:(id)arg1 hoveredLayerDidChangeTo:(id)arg2;
- (id)sidebarControllerContextMenuItemsForCurrentSelection:(id)arg1;
- (void)sidebarController:(id)arg1 validateRemovalOfPages:(id)arg2 withRemovalBlock:(CDUnknownBlockType)arg3;
- (void)sidebarController:(id)arg1 didChangeSelection:(id)arg2;
- (void)sidebarControllerDidUpdate:(id)arg1;
- (void)refreshLayerListIfNecessary;
- (void)scheduleLayerListRefresh;
- (void)refreshSidebarWithMask:(unsigned long long)arg1;
- (void)debugRunJSAPIUnitTests:(id)arg1;
- (void)debugCountObject:(id)arg1 counts:(id)arg2;
- (void)debugCountObjects:(id)arg1;
- (void)logBuggyBezierPaths;
- (void)determineCurrentArtboard;
- (void)layerSelectionMightHaveChanged;
- (void)pageTreeLayoutDidChange;
- (void)layerTreeLayoutDidChange;
- (void)currentArtboardDidChange;
- (void)layerPositionPossiblyChanged;
- (id)addBlankPage;
- (void)toggleClickThrough:(id)arg1;
- (BOOL)isInspectorVisible;
- (BOOL)isLayerListVisible;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)windowDidExitVersionBrowser:(id)arg1;
- (void)windowDidEnterVersionBrowser:(id)arg1;
- (BOOL)isRulersVisible;
- (id)pages;
- (id)layerStyles;
- (void)removePage:(id)arg1;
- (void)setCurrentPage:(id)arg1;
- (id)artboards;
- (id)normalHandler;
- (id)toggleHandlerClass:(Class)arg1;
- (void)reloadInspector;
- (void)reloadView;
- (void)refreshOverlay;
- (void)refreshOverlayInRect:(struct CGRect)arg1;
- (void)deleteSymbolMasters:(id)arg1;
- (id)actionForMenu:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)checkForTextLayerChanges:(id)arg1;
- (void)historyMakerDidProgressHistory:(id)arg1;
- (void)historyMakerDidRevertHistory:(id)arg1;
- (void)historyMaker:(id)arg1 didApplyHistoryUpdate:(unsigned long long)arg2;
- (void)documentDidChange:(id)arg1;
- (void)registerHistoryMomentTitle:(id)arg1;
- (void)updateSelectionFollowingChangeToImmutableDocumentData;
- (void)changeToImmutableDocumentData:(id)arg1 pageChanged:(BOOL)arg2;
- (void)commitHistoryIfNecessary:(id)arg1;
- (void)flushCachesIfNecessary;
- (id)currentVerticalRulerData;
- (id)currentHorizontalRulerData;
- (void)zoomValueDidChange;
- (void)documentData:(id)arg1 sharedObjectDidChange:(id)arg2;
- (void)performPostPageSwitchUpdates;
- (void)documentData:(id)arg1 didChangeToPage:(id)arg2;
- (BOOL)inspectorIsMain;
- (void)selectToolbarItemWithIdentifier:(id)arg1;
- (id)closestVisibleIdentifierInToolbarForIdentifier:(id)arg1;
- (BOOL)isSeparatorIdentifier:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (id)currentHandlerKey;
- (id)currentHandler;
- (void)updateFilterSettings;
- (void)onFilterChanged:(id)arg1;
- (void)validateMenuItemTitleAndState:(id)arg1;
- (BOOL)hasArtboards;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)layerWouldOverlapExistingLayer:(id)arg1 inGroup:(id)arg2;
- (void)offsetLayerIfNecessary:(id)arg1 forInsertingInGroup:(id)arg2;
- (void)addLayer:(id)arg1 changeName:(BOOL)arg2;
- (void)addLayer:(id)arg1;
- (id)findCurrentArtboardGroup;
- (void)setCurrentArtboard:(id)arg1;
- (void)coalescedDetermineArtboardNotification:(id)arg1;
- (void)putSelectionBackInCanvasIfPossible;
- (void)coalescedSelectionDidChangeNotification:(id)arg1;
- (id)duplicateAndReturnError:(id *)arg1;
- (id)currentPage;
- (void)exportSliceLayers:(id)arg1;
@property(retain, nonatomic) NSArray *exportableLayerSelection; // @synthesize exportableLayerSelection=_exportableLayerSelection;
- (id)allExportableLayers;
- (void)returnToNormalHandler;
- (void)currentHandlerChanged;
- (id)windowNibName;
@property(nonatomic) double zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin;
- (id)toolbar;
- (BOOL)shouldCreateToolbar;
- (void)showWindows;
- (void)windowControllerDidLoadNib:(id)arg1;
- (void)loadLayerListPanel;
@property(readonly, nonatomic) MSImmutableDocumentData *immutableDocumentData;
- (void)resetDocumentData:(id)arg1;
- (void)loadInspectorPanel;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)awakeFromNib;
- (void)updateCountDownButton;
- (void)wireDocumentDataToUI;
- (id)contentDrawView;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (void)notifyIfDocumentResignedCurrent;
- (void)notifyIfDocumentBecameCurrent;
@property(readonly, nonatomic) BOOL isCurrent;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (id)window;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)close;
- (void)setViewsToNil;
- (void)setViewControllersToNil;
- (void)setDelegatesToNil;
- (void)createActions;
@property(readonly, nonatomic) NSColorSpace *canvasColorSpace;
@property(readonly, nonatomic) NSColorSpace *colorSpace;
- (id)init;
@property(retain, nonatomic) SCKShare *cloudShare;
- (id)cloudDocumentKey;
@property(readonly, nonatomic) NSString *cloudName;
- (id)hudDocumentData;
- (void)hudSetMonitor:(id)arg1;
- (id)hudClientName;
- (void)showMessage:(id)arg1;
- (id)dataForRequest:(id)arg1 ofType:(id)arg2;
- (void)saveExportRequest:(id)arg1 toFile:(id)arg2;
- (id)exportRequestWithName:(id)arg1 rect:(struct CGRect)arg2;
- (id)exportRequestForArtboardOrSlice:(id)arg1;
- (void)saveArtboardOrSlice:(id)arg1 toFile:(id)arg2;
- (id)askForUserInput:(id)arg1 ofType:(long long)arg2 initialValue:(id)arg3;
- (id)askForUserInput:(id)arg1 initialValue:(id)arg2;
- (id)pluginContext;
- (BOOL)askToOpenDocumentRepairingMetadata;
- (BOOL)askToOpenDocumentWithMissingFonts:(id)arg1 savingWillChangeFonts:(BOOL)arg2;
- (BOOL)alertDocumentCorruptionWasDetected;
- (void)contactSupportAction:(id)arg1;
- (BOOL)handleNewerDocument:(id)arg1 error:(id *)arg2;
- (long long)askToOpenNewerDocument;
- (void)resetImportedDocument:(id)arg1;
- (BOOL)readImageFromPath:(id)arg1 error:(id *)arg2;
- (id)bitmapLayerWithImageAtURL:(id)arg1;
- (id)addLayerFromImageAtURL:(id)arg1 toGroup:(id)arg2 fitPixels:(BOOL)arg3 error:(id *)arg4;
- (void)restoreDocumentWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)migrateUIMetadataWithDocumentData:(id)arg1;
- (BOOL)readFromDocumentWrapper:(id)arg1 ofType:(id)arg2 corruptionDetected:(char *)arg3 error:(id *)arg4;
- (BOOL)validateDocument:(id)arg1 error:(id *)arg2;
- (BOOL)readDocumentFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readEPSFromURL:(id)arg1 error:(id *)arg2;
- (BOOL)readPDFFromURL:(id)arg1 error:(id *)arg2;
- (BOOL)readSVGFromURL:(id)arg1 error:(id *)arg2;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)reportSaveActionAtURL:(id)arg1 wasAutosave:(BOOL)arg2;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (BOOL)canAsynchronouslyWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)prepareForSaveOperation:(unsigned long long)arg1;
- (id)actionClasses;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSOverlayView : NSView
{
    MSContentDrawView *_contentView;
}

@property(nonatomic) __weak MSContentDrawView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)clickShouldDismissPopover:(id)arg1;

@end

@interface MSDataPreferenceItem : NSObject
{
    MSLocalDataSupplier *_localData;
    NSImage *_preview;
    NSString *_modificationDate;
    NSString *_secondaryTitle;
}

+ (id)preferenceItemForLocalData:(id)arg1;
@property(retain, nonatomic) NSString *secondaryTitle; // @synthesize secondaryTitle=_secondaryTitle;
@property(readonly, nonatomic) NSString *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(retain, nonatomic) NSImage *preview; // @synthesize preview=_preview;
@property(readonly, nonatomic) MSLocalDataSupplier *localData; // @synthesize localData=_localData;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL valid;
@property(readonly, nonatomic) NSString *name;
- (id)initWithLocalData:(id)arg1;

@end

@interface MSDragRectEventHandler : MSEventHandler
{
    MSDragGestureRecognizer *_dragGestureRecognizer;
    NSCursor *_cursor;
    struct CGRect _insertionRect;
}

@property(retain, nonatomic) NSCursor *cursor; // @synthesize cursor=_cursor;
@property(readonly, nonatomic) MSDragGestureRecognizer *dragGestureRecognizer; // @synthesize dragGestureRecognizer=_dragGestureRecognizer;
@property(nonatomic) struct CGRect insertionRect; // @synthesize insertionRect=_insertionRect;
- (void).cxx_destruct;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (void)cursorUpdate:(id)arg1;
- (id)layerSnapper;
- (BOOL)shouldDrawLayerSelection;
- (void)prepareGraphicsContext;
- (void)drawRectPreview;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (id)currentGroup;
- (BOOL)handlesHandToolItself;
- (void)keyDown:(id)arg1;
- (id)performActionWithRect:(struct CGRect)arg1 fromLayer:(id)arg2 constrainProportions:(BOOL)arg3;
@property(readonly) unsigned long long layerSelectionOptionsForInsertingFromExistingLayer;
- (id)layerAtPoint:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (BOOL)shouldDrawLayerHighlight;
@property(readonly) BOOL allowsInsertLayerFromExistingLayer;
@property(readonly, nonatomic) NSCursor *cursorForInsertingFromExisting;
- (void)trackMouse:(id)arg1;
- (void)handleDrag:(id)arg1;
- (struct CGRect)drawingRectForInsertionRect:(struct CGRect)arg1;
- (struct CGPoint)makeDiagonalTranslation:(struct CGPoint)arg1;
- (struct CGRect)calculateInsertionRect:(id)arg1 inLayer:(id)arg2;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSDrawingInfo : NSObject
{
    BOOL _isDragging;
}

+ (id)sharedController;
@property(nonatomic) BOOL isDragging; // @synthesize isDragging=_isDragging;

@end

@interface MSDataPreferencePane : MSPreferencePane <MSDropableViewDelegate, NSTableViewDelegate, NSTableViewDataSource>
{
    BOOL _shouldEnableCogMenu;
    BOOL _enableShowInFinder;
    MSDataTableView *_tableView;
    NSArrayController *_localDataArrayController;
    NSMenu *_contextMenu;
    NSArray *_localData;
}

+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;
@property(copy, nonatomic) NSArray *localData; // @synthesize localData=_localData;
@property(nonatomic) BOOL enableShowInFinder; // @synthesize enableShowInFinder=_enableShowInFinder;
@property(nonatomic) BOOL shouldEnableCogMenu; // @synthesize shouldEnableCogMenu=_shouldEnableCogMenu;
@property(retain, nonatomic) NSMenu *contextMenu; // @synthesize contextMenu=_contextMenu;
@property(retain, nonatomic) NSArrayController *localDataArrayController; // @synthesize localDataArrayController=_localDataArrayController;
@property(nonatomic) __weak MSDataTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)selectionDidChange;
- (void)reloadData;
- (void)learnMore:(id)arg1;
- (void)viewDidAppear;
- (void)showContextMenu:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateRevealInFinderMenuItem:(id)arg1;
- (void)revealInFinder:(id)arg1;
- (void)revealLocalDataItemInFinder:(id)arg1;
- (void)revealInFinderAction:(id)arg1;
- (id)pluraliseMenuItemTitle:(id)arg1;
- (unsigned long long)view:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)view:(id)arg1 draggingEntered:(id)arg2;
- (id)draggedURLsFromPasteboard:(id)arg1;
- (BOOL)view:(id)arg1 performDragOperation:(id)arg2;
- (id)draggedTypesForView:(id)arg1;
- (BOOL)validateRemoveLocalDataMenuItem:(id)arg1;
- (void)removeLocalDataAction:(id)arg1;
- (void)importLocalData:(id)arg1;
- (void)displayAddLocalDataErrorWithMessage:(id)arg1 info:(id)arg2;
- (id)dataSupplierForURL:(id)arg1;
- (void)addLocalDataFromURLs:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
@property(readonly, nonatomic) NSArray *selectedLocalData;
@property(readonly, nonatomic) MSDataSupplierManager *dataSupplierManager;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPathController : NSObject
{
    NSMutableArray *_selectedHandles;
    MSShapeChangeContext *_changeContext;
    NSArray *_content;
}

+ (id)keyPathsForValuesAffectingSelectedObjects;
@property(copy, nonatomic) NSArray *content; // @synthesize content=_content;
- (void).cxx_destruct;
- (void)remove:(id)arg1;
- (void)changeCurveMode:(long long)arg1;
- (id)currentCurveMode;
- (void)selectPrevious:(id)arg1;
- (void)selectNext:(id)arg1;
- (void)invalidateChangeContext;
@property(readonly, nonatomic) MSShapeChangeContext *changeContext;
- (void)runChange:(id)arg1 context:(id)arg2;
- (void)runChange:(id)arg1;
@property(readonly, nonatomic) NSArray *selectedObjects;
- (void)didChangeSelection;
- (void)setSelectionIndexPath:(id)arg1;
@property(copy, nonatomic) NSArray *selectionIndexPaths;
- (id)init;

@end

@interface MSForeignObjectProvider : NSObject <MSForeignObjectProvider>
{
    MSDocument *_document;
}

+ (id)providerForLayers:(id)arg1 inDocument:(id)arg2;
@property(readonly, nonatomic) __weak MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long objectType;
- (struct MSModelObject *)shareableObjectForInstance:(id)arg1 inContainerOfType:(unsigned long long)arg2;
- (struct MSModelObject *)masterObjectForInstance:(id)arg1;
- (id)localObjectsForDocument:(id)arg1;
- (BOOL)currentDocumentIsLibrary:(id)arg1;
@property(readonly, nonatomic) MSDocumentData *currentDocument;
@property(readonly, nonatomic) MSAssetLibraryController *libraryController;
@property(readonly, nonatomic) NSArray *foreignObjects;
- (id)tempDocument;
- (id)initWithDocument:(id)arg1;

@end

@interface MSForeignSymbolProvider : MSForeignObjectProvider
{
}

- (struct MSModelObject *)masterObjectForInstance:(id)arg1;
- (unsigned long long)objectType;
- (id)localObjectsForDocument:(id)arg1;
- (id)foreignObjects;

@end

@interface MSSharedLayerStyleProvider : MSForeignObjectProvider
{
}

- (struct MSModelObject *)masterObjectForInstance:(id)arg1;
- (unsigned long long)objectType;
- (id)foreignObjects;
- (id)localObjectsForDocument:(id)arg1;

@end

@interface MSSharedTextStyleProvider : MSForeignObjectProvider
{
}

- (struct MSModelObject *)masterObjectForInstance:(id)arg1;
- (unsigned long long)objectType;
- (id)foreignObjects;
- (id)localObjectsForDocument:(id)arg1;

@end

@interface MSCrashLogManager : NSObject <MSActionObserver, BITHockeyManagerDelegate, BITCrashManagerDelegate>
{
    NSString *_text;
    NSMutableArray *_items;
    NSMutableDictionary *_environment;
    NSURL *_logURL;
    NSURL *_environmentURL;
}

@property(retain, nonatomic) NSURL *environmentURL; // @synthesize environmentURL=_environmentURL;
@property(retain, nonatomic) NSURL *logURL; // @synthesize logURL=_logURL;
@property(retain, nonatomic) NSMutableDictionary *environment; // @synthesize environment=_environment;
@property(retain, nonatomic) NSMutableArray *items; // @synthesize items=_items;
@property(readonly, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)applicationLogForCrashManager:(id)arg1;
- (BOOL)setup;
- (id)environmentText;
- (id)logText;
- (void)actionController:(id)arg1 didInstantActionWithID:(id)arg2 context:(id)arg3;
- (void)actionController:(id)arg1 didFinishActionWithID:(id)arg2 context:(id)arg3;
- (void)actionController:(id)arg1 willBeginActionWithID:(id)arg2 context:(id)arg3;
- (id)appSupportURL;
- (void)setEnvironmentValue:(id)arg1 forKey:(id)arg2;
- (void)log:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSFlowInspectorViewController : NSViewController <MSInspectorSection, MSFlowMenuBuilderTarget>
{
    NSArray *_layers;
    NSView *_flowHeaderView;
    NSView *_flowView;
    NSPopUpButton *_flowDestinationButton;
    NSButton *_flowAnimationInstantButton;
    NSButton *_flowAnimationSlideFromRightButton;
    NSButton *_flowAnimationSlideFromBottomButton;
    NSButton *_flowAnimationSlideFromLeftButton;
    NSButton *_flowAnimationSlideFromTopButton;
    NSButton *_addFlowButton;
    NSButton *_removeFlowButton;
    NSButton *_convertToHotspotButton;
    NSButton *_followFlowButton;
}

@property(nonatomic) __weak NSButton *followFlowButton; // @synthesize followFlowButton=_followFlowButton;
@property(nonatomic) __weak NSButton *convertToHotspotButton; // @synthesize convertToHotspotButton=_convertToHotspotButton;
@property(nonatomic) __weak NSButton *removeFlowButton; // @synthesize removeFlowButton=_removeFlowButton;
@property(nonatomic) __weak NSButton *addFlowButton; // @synthesize addFlowButton=_addFlowButton;
@property(nonatomic) __weak NSButton *flowAnimationSlideFromTopButton; // @synthesize flowAnimationSlideFromTopButton=_flowAnimationSlideFromTopButton;
@property(nonatomic) __weak NSButton *flowAnimationSlideFromLeftButton; // @synthesize flowAnimationSlideFromLeftButton=_flowAnimationSlideFromLeftButton;
@property(nonatomic) __weak NSButton *flowAnimationSlideFromBottomButton; // @synthesize flowAnimationSlideFromBottomButton=_flowAnimationSlideFromBottomButton;
@property(nonatomic) __weak NSButton *flowAnimationSlideFromRightButton; // @synthesize flowAnimationSlideFromRightButton=_flowAnimationSlideFromRightButton;
@property(nonatomic) __weak NSButton *flowAnimationInstantButton; // @synthesize flowAnimationInstantButton=_flowAnimationInstantButton;
@property(nonatomic) __weak NSPopUpButton *flowDestinationButton; // @synthesize flowDestinationButton=_flowDestinationButton;
@property(retain, nonatomic) NSView *flowView; // @synthesize flowView=_flowView;
@property(retain, nonatomic) NSView *flowHeaderView; // @synthesize flowHeaderView=_flowHeaderView;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (id)flowAnimationTypes;
- (id)flowAnimationButtons;
- (id)document;
- (void)reload;
- (id)flowConnection;
- (BOOL)isInFlowEventHandler;
- (void)validateFlowAnimationButtonForFlow:(id)arg1;
- (id)views;
- (BOOL)shouldShowFullInspectorForFlow:(id)arg1;
- (void)validateHeaderButtonsForFlow:(id)arg1;
- (void)enumerateLayersAndReload:(CDUnknownBlockType)arg1;
- (void)followFlowAction:(id)arg1;
- (void)flowTargetAction:(id)arg1;
- (void)flowBackAction:(id)arg1;
- (void)convertFlowToHotspotAction:(id)arg1;
- (void)removeFlowAction:(id)arg1;
- (void)changeFlowAnimationAction:(id)arg1;
- (void)addFlowAction:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSShowOnlineHelpAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)showOnlineHelp:(id)arg1;

@end

@interface MSDummyDocument : NSDocument
{
}

+ (id)readableTypes;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface MSShowSupportPageAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)showSupportPage:(id)arg1;

@end

@interface MSDuplicateOffsetTracker : NSObject
{
    long long multiplier;
}

- (double)offset;
- (void)increment;
- (void)resetToInitialOffset;
- (void)reset;

@end

@interface MSToggleStylePartAction : MSDocumentAction
{
}

- (void)toggleStylePartOfType:(unsigned long long)arg1;

@end

@interface MSToggleFillAction : MSToggleStylePartAction
{
}

- (void)toggleFill:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSToggleBorderAction : MSToggleStylePartAction
{
}

- (void)toggleBorder:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSCopyStyleAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)copyStyle:(id)arg1;

@end

@interface MSCopyCSSAttributesAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)copyCSSAttributes:(id)arg1;

@end

@interface MSPasteStyleAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)pasteStyle:(id)arg1;

@end

@interface MSLayerSelectionDrawing : NSObject
{
}

+ (double)strokeWidthForZoomValue:(double)arg1;
+ (void)drawSelectionHandlesForLayer:(id)arg1 zoomValue:(double)arg2;
+ (void)drawSelectionStrokeForLayer:(id)arg1 zoomValue:(double)arg2;
+ (void)drawSelectionForLayer:(id)arg1 zoomValue:(double)arg2;

@end

@interface MSCloudDocumentViewController : MSCloudBaseViewController
{
    NSStackView *_buttonStackView;
    NSButton *_uploadButton;
    NSButton *_updateButton;
    MSCursorButton *_linkButton;
    NSButton *_settingsButton;
    NSTimer *_timeLabelUpdateTimer;
}

@property(retain, nonatomic) NSTimer *timeLabelUpdateTimer; // @synthesize timeLabelUpdateTimer=_timeLabelUpdateTimer;
@property(retain, nonatomic) NSButton *settingsButton; // @synthesize settingsButton=_settingsButton;
@property(retain, nonatomic) MSCursorButton *linkButton; // @synthesize linkButton=_linkButton;
@property(retain, nonatomic) NSButton *updateButton; // @synthesize updateButton=_updateButton;
@property(retain, nonatomic) NSButton *uploadButton; // @synthesize uploadButton=_uploadButton;
@property(retain, nonatomic) NSStackView *buttonStackView; // @synthesize buttonStackView=_buttonStackView;
- (void).cxx_destruct;
- (void)openShareSettings:(id)arg1;
- (void)openPublicURL:(id)arg1;
- (void)update:(id)arg1;
- (void)upload:(id)arg1;
- (void)reloadTitleLabel;
- (void)scheduledTimeLabelUpdateFired:(id)arg1;
- (void)scheduleTimeLabelUpdate;
- (void)reloadTimeLabel;
- (void)reloadData;
@property(readonly, nonatomic) SCKShare *share;
- (void)dealloc;
- (void)viewWillAppear;
- (void)loadView;
- (struct NSEdgeInsets)edgeInsets;

@end

@interface MSEventHandler : NSResponder <NSDraggingDestination, NSTouchBarDelegate>
{
    BOOL didDrag;
    struct CGPoint mouseAtTimeOfMenu;
    NSMutableArray *_gestureRecognizers;
    BOOL _mouseIsDown;
    MSEventHandlerManager *_manager;
    MSDuplicateOffsetTracker *_offsetTracker;
    NSString *_pressedKeys;
    NSTouchBar *_noSelectionTouchBar;
    NSTouchBar *_selectionTouchBar;
    NSString *_measurementText;
    NSArray *_activeGestureRecognizers;
    struct CGPoint _viewCoordinateMouse;
    struct CGSize _measurementLabelSize;
    struct CGRect _selectionRect;
}

+ (id)eventHandlerWithManager:(id)arg1;
@property(nonatomic) struct CGSize measurementLabelSize; // @synthesize measurementLabelSize=_measurementLabelSize;
@property(copy, nonatomic) NSArray *activeGestureRecognizers; // @synthesize activeGestureRecognizers=_activeGestureRecognizers;
@property(nonatomic) struct CGRect selectionRect; // @synthesize selectionRect=_selectionRect;
@property(copy, nonatomic) NSString *measurementText; // @synthesize measurementText=_measurementText;
@property(retain, nonatomic) NSTouchBar *selectionTouchBar; // @synthesize selectionTouchBar=_selectionTouchBar;
@property(retain, nonatomic) NSTouchBar *noSelectionTouchBar; // @synthesize noSelectionTouchBar=_noSelectionTouchBar;
@property(nonatomic) struct CGPoint viewCoordinateMouse; // @synthesize viewCoordinateMouse=_viewCoordinateMouse;
@property(copy, nonatomic) NSString *pressedKeys; // @synthesize pressedKeys=_pressedKeys;
@property(retain, nonatomic) MSDuplicateOffsetTracker *offsetTracker; // @synthesize offsetTracker=_offsetTracker;
@property(nonatomic) __weak MSEventHandlerManager *manager; // @synthesize manager=_manager;
- (void).cxx_destruct;
- (id)documentWindow;
- (BOOL)mayShowResizingInspectorView;
- (void)touchBarTextColorAction:(id)arg1;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (void)refreshStylePreviewTouchBarButton:(id)arg1 forIdentifier:(id)arg2;
- (id)documentColorSpace;
- (void)openInnerShadowAction:(id)arg1;
- (void)openShadowAction:(id)arg1;
- (void)openBorderAction:(id)arg1;
- (void)openFillAction:(id)arg1;
- (void)refreshTouchBarItemWithIdentifier:(id)arg1;
- (id)touchBarWithIdentifiers:(id)arg1;
- (id)selectionTouchBarIdentifiers;
- (id)noSelectionTouchbarIdentifiers;
- (id)makeTouchBar;
- (BOOL)allowsSwitchToInsertAction;
- (BOOL)shouldFitToPixelBounds;
- (double)nudgeDistanceForFlags:(unsigned long long)arg1;
- (BOOL)canDuplicate;
- (void)refreshRulers;
- (BOOL)inspectorShouldShowPositions;
- (id)inspectorViewController;
- (unsigned long long)inspectorLocation;
- (BOOL)shouldShowSharedStyles;
- (BOOL)shouldShowFlowView;
- (id)inspectorViewControllersForLayers:(id)arg1 standardControllers:(id)arg2;
- (void)configureInspector:(id)arg1;
- (void)layerPositionPossiblyChanged;
- (void)willResignFirstResponder;
- (void)handleSymbolInstanceDoubleClick:(id)arg1;
- (void)handleForeignSymbolInstanceDoubleClick:(id)arg1;
- (void)editLayer:(id)arg1;
- (void)mouseExited;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (BOOL)handlesHandToolItself;
- (struct CGRect)rulerGuidesRectAroundPoint:(struct CGPoint)arg1;
- (id)horizontalRulerGuidesForGridAlign:(struct CGPoint)arg1;
- (id)verticalRulerGuidesForGridAlign:(struct CGPoint)arg1;
- (struct CGPoint)alignPointToGrid:(struct CGPoint)arg1;
- (void)currentPageDidChange;
- (void)layerRulerOriginChanged;
- (void)selectionDidChangeTo:(id)arg1;
- (void)layerListSelectionDidChange:(id)arg1;
- (void)zoomValueDidChange;
- (void)zoomValueWillChangeTo:(double)arg1;
- (double)zoomValue;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (id)dragDropHintForDropOnPoint:(struct CGPoint)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)imageName;
- (id)toolbarIdentifier;
- (BOOL)shouldDrawLayerHighlight;
- (BOOL)shouldDrawLayerSelection;
- (void)selectLayer:(id)arg1 extendSelection:(BOOL)arg2;
- (id)selectedLayers;
- (void)changeColor:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (id)defaultCursor;
- (void)drawHandles;
- (BOOL)arrowKeyIsPressed:(unsigned short)arg1;
- (BOOL)escapeKeyIsPressed:(unsigned short)arg1;
- (BOOL)enterKeyIsPressed:(unsigned short)arg1;
- (BOOL)deleteKeyIsPressed:(unsigned short)arg1;
@property(readonly, nonatomic) NSEvent *lastEvent;
- (unsigned long long)hitTestingOptions;
- (id)layerAtPoint:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (void)delete:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)focusOnMainWindow;
- (id)duplicateLayer:(id)arg1 toIndex:(unsigned long long)arg2 offset:(struct CGSize)arg3;
- (id)duplicateSelectedLayersInGroup:(id)arg1 withOffset:(struct CGSize)arg2;
- (id)layersSeparatedByGroups:(id)arg1;
- (id)duplicateSelectedLayersWithOffset:(struct CGSize)arg1;
- (struct CGPoint)currentMousePointInCanvasCoordinates;
- (void)pasteHere:(id)arg1;
- (void)pasteOverSelection:(id)arg1;
- (void)pasteWithOptions:(unsigned long long)arg1;
- (void)pasteWithStyle:(id)arg1;
- (void)paste:(id)arg1;
- (id)layersToCopy;
- (void)copy:(id)arg1;
- (void)doCut:(id)arg1;
- (void)cut:(id)arg1;
- (id)pastingViewPort;
- (void)readFromPasteboard:(id)arg1 options:(unsigned long long)arg2;
- (id)currentPage;
- (void)writeLayers:(id)arg1 toPasteboard:(id)arg2;
- (void)flagsChanged:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)returnToDefaultHandlerByClickingOutside;
- (void)returnToDefaultHandler;
- (struct CGPoint)centerPointForZooming;
- (struct CGRect)selectedRect;
- (void)zoomToSelection;
- (void)reloadFollowingBackgroundChangesToDocument;
- (void)commitPendingEdits;
- (void)didMoveThroughHistory:(id)arg1;
- (void)willMoveThroughHistory:(id)arg1;
@property(readonly, nonatomic) NSString *applicableActionItemIdentifier;
@property(readonly, nonatomic) BOOL shouldExitOnContentViewResize;
@property(readonly, nonatomic) BOOL handlesHistoryCoalescing;
- (void)selectAll:(id)arg1;
- (void)drawDragSelection;
- (void)handlerDidLoseFocus;
- (void)handlerWillLoseFocus;
- (void)selectToolbarItemWithIdentifier:(id)arg1;
- (void)handlerGotFocus;
- (id)handlerName;
- (void)cancelOperation:(id)arg1;
- (void)keyUp:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)keyDown:(id)arg1;
- (void)prepareGraphicsStateForGroup:(id)arg1 drawingBlock:(CDUnknownBlockType)arg2;
- (void)drawMeasurementLabel;
- (void)drawGuidesAndMeasurementsInRect:(struct CGRect)arg1;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)setMeasurementLabelNeedsDisplay;
@property(readonly, nonatomic) struct CGRect measurementBackgroundRect;
- (struct CGPoint)locationForMeasurementLabel;
- (id)measurementLabelAttributes;
- (void)setMeasurementTextWithDegrees:(long long)arg1;
- (void)setMeasurementTextWithSize:(struct CGSize)arg1;
- (void)addGestureRecognizer:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *gestureRecognizers;
- (void)viewDidScroll:(id)arg1;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (void)rightMouseDown:(id)arg1;
- (void)trackMouse:(id)arg1;
- (BOOL)mouseMovedEvent:(id)arg1;
- (BOOL)mouseUpEvent:(id)arg1;
- (BOOL)mouseDraggedEvent:(id)arg1;
- (BOOL)mouseDownEvent:(id)arg1;
@property(nonatomic) struct CGPoint scrollOrigin; // @dynamic scrollOrigin;
- (id)parentForInsertingLayer:(id)arg1;
- (id)currentGroup;
- (void)refreshOverlay;
@property(readonly, nonatomic) NSUndoManager *undoManager;
- (id)document;
- (id)contentDrawView;
- (void)dealloc;
- (id)initWithManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCloudRoundedView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSEventHandlerAction : MSDocumentAction
{
}

- (BOOL)isSelectable;
- (id)eventHandlerKey;
- (Class)eventHandlerClass;
- (BOOL)validate;
- (BOOL)isActive;
- (void)doPerformAction:(id)arg1;

@end

@interface MSEventHandlerManager : NSObject
{
    MSDocument *_document;
    id <MSEventHandlerManagerDelegate> _delegate;
    MSEventHandler *_currentHandler;
    MSNormalEventHandler *_normalHandler;
    long long _lastMouseDownClickCount;
    unsigned long long _lastEventType;
}

@property(nonatomic) unsigned long long lastEventType; // @synthesize lastEventType=_lastEventType;
@property(nonatomic) long long lastMouseDownClickCount; // @synthesize lastMouseDownClickCount=_lastMouseDownClickCount;
@property(retain, nonatomic) MSNormalEventHandler *normalHandler; // @synthesize normalHandler=_normalHandler;
@property(retain, nonatomic) MSEventHandler *currentHandler; // @synthesize currentHandler=_currentHandler;
@property(nonatomic) __weak id <MSEventHandlerManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (void)recordEvent:(id)arg1;
- (void)sendMouseMovedEvent:(id)arg1;
- (void)sendMouseUpEvent:(id)arg1;
- (void)sendMouseDraggedEvent:(id)arg1;
- (void)sendMouseDownEvent:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (id)switchToEventHandlerClass:(Class)arg1;
- (id)toggleHandlerClass:(Class)arg1;
- (id)handlerForClass:(Class)arg1;
- (id)initWithDelegate:(id)arg1;

@end

@interface MSBottomGradientView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSImageOverrideView : NSImageView
{
    NSImage *_normalImage;
    NSImage *_placeholderImage;
}

@property(retain, nonatomic) NSImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
@property(retain, nonatomic) NSImage *normalImage; // @synthesize normalImage=_normalImage;
- (void).cxx_destruct;
- (BOOL)displaysPlaceholder;
- (void)removeOverrideImage:(id)arg1;
- (void)setImage:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSScrollView : NSScrollView
{
    BOOL _allowsScrolling;
}

@property(nonatomic) BOOL allowsScrolling; // @synthesize allowsScrolling=_allowsScrolling;
- (void)scrollWheel:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface MSBitmapLayerSection : MSLayerSection
{
}

- (id)bitmapLayers;
- (void)viewDidLoad;

@end

@interface MSCenteredPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)correctedTitle:(id)arg1;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSAboutWindowController : NSWindowController
{
    NSImageView *_backgroundImageView;
    NSTextField *_buildNumberTextField;
    NSTextField *_copyrightTextField;
    NSTextField *_expirationTitleTextField;
    NSTextField *_expirationDateTextField;
    NSButton *_purchaseLicenseButton;
    NSTextField *_registeredToTextField;
    NSButton *_renewLicenseButton;
    NSTextField *_trialNoteTextField;
    NSButton *_unlinkDeviceButton;
    NSTextField *_variantNameTextField;
    NSTextField *_versionTextField;
    NSDate *_remoteUpdateExpirationDate;
}

+ (void)showAboutWindow;
@property(retain) NSDate *remoteUpdateExpirationDate; // @synthesize remoteUpdateExpirationDate=_remoteUpdateExpirationDate;
@property(nonatomic) __weak NSTextField *versionTextField; // @synthesize versionTextField=_versionTextField;
@property(nonatomic) __weak NSTextField *variantNameTextField; // @synthesize variantNameTextField=_variantNameTextField;
@property(nonatomic) __weak NSButton *unlinkDeviceButton; // @synthesize unlinkDeviceButton=_unlinkDeviceButton;
@property(nonatomic) __weak NSTextField *trialNoteTextField; // @synthesize trialNoteTextField=_trialNoteTextField;
@property(nonatomic) __weak NSButton *renewLicenseButton; // @synthesize renewLicenseButton=_renewLicenseButton;
@property(nonatomic) __weak NSTextField *registeredToTextField; // @synthesize registeredToTextField=_registeredToTextField;
@property(nonatomic) __weak NSButton *purchaseLicenseButton; // @synthesize purchaseLicenseButton=_purchaseLicenseButton;
@property(nonatomic) __weak NSTextField *expirationDateTextField; // @synthesize expirationDateTextField=_expirationDateTextField;
@property(nonatomic) __weak NSTextField *expirationTitleTextField; // @synthesize expirationTitleTextField=_expirationTitleTextField;
@property(nonatomic) __weak NSTextField *copyrightTextField; // @synthesize copyrightTextField=_copyrightTextField;
@property(nonatomic) __weak NSTextField *buildNumberTextField; // @synthesize buildNumberTextField=_buildNumberTextField;
@property(nonatomic) __weak NSImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
- (void).cxx_destruct;
- (void)fetchRemoteUpdateExpiratonDate;
- (void)unlinkDevice:(id)arg1;
- (void)registerLicense:(id)arg1;
- (void)showRenewLicensePage:(id)arg1;
- (void)showPurchaseLicensePage:(id)arg1;
- (void)showAcknowledgementsPage:(id)arg1;
- (void)showAboutUsPage:(id)arg1;
- (void)refreshTrialNoteWithLicenseManager:(id)arg1;
- (void)refreshLicenseStatusViewWithLicenseManager:(id)arg1;
- (void)refreshRegisteredToView:(id)arg1;
- (void)refresh;
- (void)dealloc;
- (void)windowDidLoad;

@end

@interface MSImageOriginalSizeAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)imageOriginalSize:(id)arg1;
- (BOOL)validate;

@end

@interface MSFlattenAction : MSDocumentAction
{
}

- (id)historyMomentTitle;
- (id)tooltip;
- (BOOL)canFlattenSelection;
- (void)doPerformAction:(id)arg1;
- (void)flatten:(id)arg1;
- (BOOL)validate;

@end

@interface MSPreferencePane : NSViewController
{
    MSPreferencesController *_preferencesController;
}

+ (id)nibName;
+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;
@property(readonly, nonatomic) __weak MSPreferencesController *preferencesController; // @synthesize preferencesController=_preferencesController;
- (void).cxx_destruct;
- (id)initWithPreferencesController:(id)arg1;

@end

@interface MSPopoverAction : MSDocumentAction <BCPopoverDelegate>
{
    BCPopover *_popover;
}

+ (Class)popoverClass;
@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
- (void).cxx_destruct;
- (BOOL)showInToolbar;
- (id)menu;
- (BOOL)hasSubMenu;
@property(readonly) MSPopUpToolbarItem *popupToolbarItem;
- (id)viewForAttachingPopover:(id)arg1;
- (void)closePopover;
- (void)popoverWillClose:(id)arg1;
- (void)showPopoverToForSender:(id)arg1 viewController:(id)arg2;
@property(readonly) NSViewController *popoverViewController;
@property(readonly) BOOL popoverVisible;
- (void)showPopover:(id)arg1;
- (void)doPerformAction:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSParagraphStyleViewController : NSViewController
{
    MSTextLayerSection *_textSection;
    NSArray *_layers;
    NSSegmentedControl *_decorationButton;
    NSPopUpButton *_listPopUpButton;
    NSPopUpButton *_transformPopUpButton;
}

@property(retain, nonatomic) NSPopUpButton *transformPopUpButton; // @synthesize transformPopUpButton=_transformPopUpButton;
@property(retain, nonatomic) NSPopUpButton *listPopUpButton; // @synthesize listPopUpButton=_listPopUpButton;
@property(retain, nonatomic) NSSegmentedControl *decorationButton; // @synthesize decorationButton=_decorationButton;
@property(retain, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(nonatomic) __weak MSTextLayerSection *textSection; // @synthesize textSection=_textSection;
- (void).cxx_destruct;
- (id)firstOccurrenceOfAttributeWithName:(id)arg1;
- (void)changeFontPropertiesOfTextObjectsInBlock:(CDUnknownBlockType)arg1;
- (void)transformPopUpAction:(id)arg1;
- (void)prepareTransformPopUpButton;
- (long long)indexForBulletListName:(id)arg1;
- (id)markerForBulletListIndex:(long long)arg1;
- (void)listPopUpAction:(id)arg1;
- (void)decorationButtonAction:(id)arg1;
- (void)prepareBulletListPopUpButton;
- (void)prepareDecorationButton;
- (void)validateUI;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSAlternatingView : NSView
{
    BOOL didDrag;
    BOOL isInside;
    BOOL isDown;
    NSView *_otherView;
}

@property(nonatomic) __weak NSView *otherView; // @synthesize otherView=_otherView;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)buttonImage;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)awakeFromNib;
- (void)toggleColorComponentTextFieldFocusIfAppropriate;
- (void)mouseUp:(id)arg1;
- (BOOL)shouldSwapColorModeForEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface MSAssetSyncHeaderCellView : NSTableCellView
{
    NSColor *_backgroundColor;
}

@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSTextLayerTextView : NSTextView
{
    MSHangingGlyphView *_hangingGlyphView;
    id <MSTextLayerTextViewDelegate> _textLayerTextViewDelegate;
    NSTimer *_hideSelectionTimer;
    NSDictionary *_selectedTextAttributesBackup;
}

@property(copy, nonatomic) NSDictionary *selectedTextAttributesBackup; // @synthesize selectedTextAttributesBackup=_selectedTextAttributesBackup;
@property(retain, nonatomic) NSTimer *hideSelectionTimer; // @synthesize hideSelectionTimer=_hideSelectionTimer;
@property(nonatomic) __weak id <MSTextLayerTextViewDelegate> textLayerTextViewDelegate; // @synthesize textLayerTextViewDelegate=_textLayerTextViewDelegate;
@property(nonatomic) __weak MSHangingGlyphView *hangingGlyphView; // @synthesize hangingGlyphView=_hangingGlyphView;
- (void).cxx_destruct;
- (id)makeTouchBar;
- (struct CGRect)rectForSelectedRange;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(BOOL)arg2;
- (void)selectSimilar:(id)arg1;
- (void)hideSelectionTimerFired:(id)arg1;
- (id)makeHideSelectionTimer;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (id)writablePasteboardTypes;
- (void)pasteAttributedString:(id)arg1 replaceRange:(struct _NSRange)arg2 keepStyling:(BOOL)arg3;
- (void)pasteWithOptions:(unsigned long long)arg1;
- (void)pasteWithStyle:(id)arg1;
- (void)paste:(id)arg1;
- (id)readablePasteboardTypes;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (void)hideSelectionTemporarily;
- (void)mouseDown:(id)arg1;
- (BOOL)hitTestFromEvent:(id)arg1;
- (void)applyTextListItemColor:(id)arg1;
- (id)applicableTextListItemColor:(SEL)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setTypingAttributes:(id)arg1;
- (void)applyTextColor:(id)arg1 previousTextColors:(id)arg2;
- (BOOL)shouldIgnoreAlreadyApplicableColor:(id)arg1;
- (id)textColorProviderForChangeColorSender:(id)arg1;
- (id)documentColorSpace;
- (id)colorProvidersForRanges:(id)arg1 colorSpace:(id)arg2;
- (void)changeColor:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

@end

@interface MSRotateAction : MSEventHandlerAction
{
}

- (void)rotationBarAction:(id)arg1;
- (void)refreshTouchBarItem;
- (id)touchBarItem;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)rotate:(id)arg1;

@end

@interface MSRotateClockwiseAction : MSEventHandlerAction
{
}

- (void)rotate90C:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSRotateCounterclockwiseAction : MSEventHandlerAction
{
}

- (void)rotate90CC:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSCloudAction : MSPopoverAction <MSCloudShareUploadControllerDelegate>
{
    NSViewController *_popoverViewController;
    NSArray *_progressImages;
    MSCloudShareUploadController *_upload;
    NSError *_uploadError;
    SCKAPIOperation *_refreshOperation;
}

+ (void)addRemoteLibraryWithURL:(id)arg1 parameters:(id)arg2;
+ (void)openCloudUploadURL:(id)arg1 parameters:(id)arg2;
+ (Class)popoverClass;
+ (BOOL)cloudEnabled;
@property(retain, nonatomic) SCKAPIOperation *refreshOperation; // @synthesize refreshOperation=_refreshOperation;
@property(retain, nonatomic) NSError *uploadError; // @synthesize uploadError=_uploadError;
@property(retain, nonatomic) MSCloudShareUploadController *upload; // @synthesize upload=_upload;
@property(retain, nonatomic) NSViewController *popoverViewController; // @synthesize popoverViewController=_popoverViewController;
- (void).cxx_destruct;
- (void)setCloudPlatform:(id)arg1;
- (BOOL)validate;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
@property(retain, nonatomic) NSImage *toolbarImage;
@property(readonly, nonatomic) NSArray *progressImages; // @synthesize progressImages=_progressImages;
- (void)updateProgressImage;
- (void)setRegularImage;
- (id)image;
- (id)label;
- (id)tooltip;
- (BOOL)showInToolbar;
- (id)initWithDocument:(id)arg1;
- (void)cloudShareController:(id)arg1 didChangeProgress:(id)arg2;
- (void)cloudShareController:(id)arg1 uploadDidFailWithError:(id)arg2;
- (void)cloudShareController:(id)arg1 didUploadShare:(id)arg2;
- (void)refreshShareWithHandler:(CDUnknownBlockType)arg1;
- (void)startUploadUpdating:(id)arg1;
@property(readonly, nonatomic) id <MSCloudExportableDocument> exportedDocument;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSGradientEventHandler : MSPointsEventHandler <MSGradientPointArrayDelegate>
{
    MSStyleBasicFill *_stylePart;
    id <MSGradientEventHandlerDelegate> _gradientDelegate;
    NSCursor *_selectPointCursor;
    NSCursor *_insertPointCursor;
}

+ (id)gradientHandlerForStylePart:(id)arg1 manager:(id)arg2;
@property(retain, nonatomic) NSCursor *insertPointCursor; // @synthesize insertPointCursor=_insertPointCursor;
@property(retain, nonatomic) NSCursor *selectPointCursor; // @synthesize selectPointCursor=_selectPointCursor;
@property(nonatomic) __weak id <MSGradientEventHandlerDelegate> gradientDelegate; // @synthesize gradientDelegate=_gradientDelegate;
@property(retain, nonatomic) MSStyleBasicFill *stylePart; // @synthesize stylePart=_stylePart;
- (void).cxx_destruct;
- (BOOL)canDuplicate;
- (id)layerFromSelectedLayers;
- (void)selectionDidChangeTo:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (id)cursorWithDrawingBlock:(CDUnknownBlockType)arg1;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (void)concatTransformsForDrawSnaps;
- (BOOL)useSnaps;
- (BOOL)shouldDisplayMessageForSelectedStop;
- (id)previousStop;
- (id)nextStop;
- (id)selectedStop;
- (void)centerStopBetween;
- (void)setSelectedStopToPercentage:(long long)arg1;
- (void)keyDown:(id)arg1;
- (void)delete:(id)arg1;
- (void)setSelectedPoint:(long long)arg1;
- (BOOL)hasSelectedPoint;
- (BOOL)canInsertPointAtMouse:(struct CGPoint)arg1;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)handleLinesColor;
- (void)drawHandleLines;
- (long long)addStopAtPosition:(struct CGPoint)arg1;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (void)repairGradientIfNecessary;
- (void)colorMagnifierAction:(id)arg1;
- (id)gradient;
- (void)gradientPointArray:(id)arg1 replacePointAtIndex:(unsigned long long)arg2 withPoint:(struct CGPoint)arg3;
- (id)points;
- (void)drawDotAtPoint:(struct CGPoint)arg1 index:(long long)arg2 selected:(BOOL)arg3;
- (void)handlerWillLoseFocus;
- (void)returnToDefaultHandlerByClickingOutside;
- (void)handlerGotFocus;
- (void)didMoveThroughHistory:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSharedObjectAction : MSDocumentAction <NSMenuDelegate>
{
}

- (BOOL)hasSubMenu;
- (id)noSharedObjectMenuItemForMenu:(id)arg1;
- (id)noSharedObjectsView;
@property(readonly, nonatomic) NSString *sharedObjectName;
- (id)sortedObjectMenuItemsForMenu:(id)arg1;
- (id)menuItemsForMenu:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSGridSheet : MSGridSheetBase
{
}

- (void)setAsDefault:(id)arg1;
- (void)applyObject:(id)arg1 toLayer:(id)arg2;
- (id)defaultObject;
- (id)baseObjectForRootLayer:(id)arg1;

@end

@interface MSGroupAction : MSDocumentAction
{
}

- (BOOL)shouldUseImageForTouchBarItem;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)group:(id)arg1;
- (BOOL)validate;
- (id)tooltip;

@end

@interface MSUngroupAction : MSDocumentAction
{
}

- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)ungroup:(id)arg1;
- (BOOL)validate;
- (id)tooltip;

@end

@interface MSImageTransformEventHandler : MSTransformEventHandler
{
    struct CGImage *_originalImage;
}

- (void)dealloc;
- (void)handlerWillLoseFocus;
- (id)toolbarIdentifier;
- (id)perspectiveImage;
- (void)transformShape;
- (struct CGPoint)layerPointForCorner:(long long)arg1;
- (struct CGRect)newLayerRect;
- (struct CGPoint)pointForCorner:(long long)arg1 rect:(struct CGRect)arg2;
- (id)instructions;
- (struct CGRect)bounds;
- (void)handlerGotFocus;

@end

@interface MSSaveAsTemplateSheet : CHSheetController
{
    CDUnknownBlockType _inputCompletionBlock;
    NSTextField *_inputField;
}

+ (id)runForDocument:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) NSTextField *inputField; // @synthesize inputField=_inputField;
@property(copy, nonatomic) CDUnknownBlockType inputCompletionBlock; // @synthesize inputCompletionBlock=_inputCompletionBlock;
- (void).cxx_destruct;
- (void)confirm:(id)arg1;

@end

@interface MSInsertArrowAction : MSInsertLineAction
{
}

- (Class)eventHandlerClass;
- (id)lineShapeFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
- (id)imageName;

@end

@interface MSApplySharedStyleAction : MSBaseSharedStyleAction
{
}

- (id)filteredLayersForStyle;
- (void)doPerformAction:(id)arg1;
- (void)applySharedStyle:(id)arg1;

@end

@interface MSApplySharedLayerStyleAction : MSApplySharedStyleAction
{
}

- (id)filteredLayersForStyle;
- (void)applySharedLayerStyle:(id)arg1;

@end

@interface MSApplySharedTextStyleAction : MSApplySharedStyleAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (id)filteredLayersForStyle;
- (void)applySharedStyle:(id)arg1;
- (void)applySharedTextStyle:(id)arg1;

@end

@interface MSVectorCanvas : NSObject <MSSelectVectorHandleGestureRecognizerDelegate>
{
    NSMutableArray *_selectedHandles;
    MSShapeEventHandler *_eventHandler;
    MSContentDrawView *_view;
    MSPathController *_pathController;
    NSArray *_selectedLayers;
    NSArray *_visibleLayers;
    MSShapeEditingBehavior *_editingBehavior;
    MSPointSnappingResult *_snaps;
    id <MSVectorCanvasDelegate> _delegate;
    MSDragToSelectGestureRecognizer *_dragToSelectGestureRecognizer;
    MSSelectVectorHandleGestureRecognizer *_clickToSelectGestureRecognizer;
    MSDragHandleGestureRecognizer *_dragHandleGestureRecognizer;
    MSDragSegmentGestureRecognizer *_dragSegmentGestureRecognizer;
    MSClickGestureRecognizer *_clickToEndEditingGestureRecognizer;
    unsigned long long _vectorTool;
    NSIndexPath *_activeIndexPath;
    unsigned long long _activeHandleBehavior;
    MSPointSnapper *_snapper;
    NSBezierPath *_wireBezierPath;
    MSVectorHandleStateDecider *_handleStateDecider;
    struct CGPoint _insertionPoint;
}

@property(readonly, nonatomic) MSVectorHandleStateDecider *handleStateDecider; // @synthesize handleStateDecider=_handleStateDecider;
@property(retain, nonatomic) NSBezierPath *wireBezierPath; // @synthesize wireBezierPath=_wireBezierPath;
@property(retain, nonatomic) MSPointSnapper *snapper; // @synthesize snapper=_snapper;
@property(nonatomic) unsigned long long activeHandleBehavior; // @synthesize activeHandleBehavior=_activeHandleBehavior;
@property(readonly, nonatomic) struct CGPoint insertionPoint; // @synthesize insertionPoint=_insertionPoint;
@property(readonly, copy, nonatomic) NSIndexPath *activeIndexPath; // @synthesize activeIndexPath=_activeIndexPath;
@property(readonly, nonatomic) unsigned long long vectorTool; // @synthesize vectorTool=_vectorTool;
@property(readonly, nonatomic) MSClickGestureRecognizer *clickToEndEditingGestureRecognizer; // @synthesize clickToEndEditingGestureRecognizer=_clickToEndEditingGestureRecognizer;
@property(readonly, nonatomic) MSDragSegmentGestureRecognizer *dragSegmentGestureRecognizer; // @synthesize dragSegmentGestureRecognizer=_dragSegmentGestureRecognizer;
@property(readonly, nonatomic) MSDragHandleGestureRecognizer *dragHandleGestureRecognizer; // @synthesize dragHandleGestureRecognizer=_dragHandleGestureRecognizer;
@property(readonly, nonatomic) MSSelectVectorHandleGestureRecognizer *clickToSelectGestureRecognizer; // @synthesize clickToSelectGestureRecognizer=_clickToSelectGestureRecognizer;
@property(readonly, nonatomic) MSDragToSelectGestureRecognizer *dragToSelectGestureRecognizer; // @synthesize dragToSelectGestureRecognizer=_dragToSelectGestureRecognizer;
@property(nonatomic) __weak id <MSVectorCanvasDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) MSPointSnappingResult *snaps; // @synthesize snaps=_snaps;
@property(retain, nonatomic) MSShapeEditingBehavior *editingBehavior; // @synthesize editingBehavior=_editingBehavior;
@property(readonly, copy, nonatomic) NSArray *visibleLayers; // @synthesize visibleLayers=_visibleLayers;
@property(copy, nonatomic) NSArray *selectedLayers; // @synthesize selectedLayers=_selectedLayers;
@property(retain, nonatomic) MSPathController *pathController; // @synthesize pathController=_pathController;
@property(nonatomic) MSContentDrawView *view; // @synthesize view=_view;
@property(nonatomic) __weak MSShapeEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
- (void).cxx_destruct;
- (BOOL)gestureRecognizerShouldDelaySelectionUntilMouseUp:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldAttemptToRecognizeAtPoint:(struct CGPoint)arg2 modifierFlags:(unsigned long long)arg3;
- (void)updateCursorIfActive;
- (void)updateCursor;
- (void)cursorUpdate:(id)arg1;
- (void)trackMouse:(id)arg1;
- (void)clickToEndEditing:(id)arg1;
- (void)dragSegment:(id)arg1;
- (void)prepareToDragSegmentWithMouseLocation:(struct CGPoint)arg1 modiferFlags:(unsigned long long)arg2;
- (id)locationForAddingPoint:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (id)insertPointWithModifierFlags:(unsigned long long)arg1;
- (void)selectHandle:(id)arg1;
- (void)moveCurveAdjustmentHandleToPoint:(struct CGPoint)arg1 didChangeCurveMode:(char *)arg2;
- (void)toggleCurveModeOfPointAtIndexPath:(id)arg1 modifierFlags:(unsigned long long)arg2;
- (struct CGPoint)determineLocationAndSnappingOfDrag:(id)arg1;
- (void)dragHandle:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)dragToSelect:(id)arg1;
- (void)clickToSelect:(id)arg1;
- (void)mouseUpAtPoint:(struct CGPoint)arg1;
- (id)segmentAtIndexPath:(id)arg1;
- (void)doubleMouseDownAtPoint:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (void)singleMouseDownAtPoint:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (void)delete:(id)arg1;
- (void)adjustHandlesToValue:(double)arg1 onAxis:(unsigned long long)arg2;
- (void)distributeVectorPointsToAxis:(unsigned long long)arg1;
- (void)alignVectorPointsToKey:(id)arg1;
- (void)changeToCurveMode:(long long)arg1;
- (id)indexPathsForHandlesInRect:(struct CGRect)arg1;
- (id)indexPathOfSegmentAtPoint:(struct CGPoint)arg1;
- (id)indexPathOfHandleAtPoint:(struct CGPoint)arg1;
- (struct CGRect)overlayDrawingRectForLayer:(id)arg1;
- (void)setOverlayNeedsDisplay;
- (struct CGPoint)convertPointToView:(struct CGPoint)arg1 fromPathCoordinatesOfShape:(id)arg2;
- (void)drawHandles;
- (struct CGRect)drawingRectForInsertionAtPoint:(struct CGPoint)arg1;
- (void)drawInsertionPoint;
- (void)drawHighlightedSegment;
- (void)drawSnaps;
- (void)drawWire;
- (void)drawHairline;
- (id)makeWireBezierPathForClosingPath:(BOOL)arg1 indexPathForSelectedHandle:(id)arg2;
- (void)updateWire;
- (void)prepareSnapperForDragging:(BOOL)arg1;
- (id)changeContext;
@property(readonly, nonatomic, getter=isInteractivelySelecting) BOOL interactivelySelecting;
- (void)toggleSelectionOfHandleAtIndexPath:(id)arg1 notifyDelegate:(BOOL)arg2;
- (void)didChangeSelection;
- (void)deselectHandleAtIndexPath:(id)arg1;
- (void)selectHandlesAtIndexPaths:(id)arg1 notifyDelegate:(BOOL)arg2;
- (void)selectHandlesAtIndexPaths:(id)arg1;
- (id)selectHandleAtIndexPath:(id)arg1 extendSelection:(BOOL)arg2 notifyDelegate:(BOOL)arg3;
- (void)selectHandleAtIndexPath:(id)arg1 extendSelection:(BOOL)arg2;
@property(readonly, copy, nonatomic) NSIndexPath *indexPathForHighlightedComponent;
@property(readonly, copy, nonatomic) NSArray *indexPathsForSelectedHandles;
- (void)didChangeAllowSelectionOnly;
- (void)updateToolStateWithMouseLocation:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (void)setVectorTool:(unsigned long long)arg1 indexPath:(id)arg2 insertionPoint:(struct CGPoint)arg3;
- (void)selectLayers:(id)arg1 extendSelection:(BOOL)arg2;
- (id)pathLayersForLayer:(id)arg1;
- (void)rebuildVisibleLayersMaintainingSelection:(BOOL)arg1;
- (void)setVisibleLayers:(id)arg1;
- (void)registerWithEventHandler:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSFixedPopoverTouchBarItem : NSPopoverTouchBarItem
{
    NSTouchBar *_ms_parentTouchBar;
}

@property(nonatomic) __weak NSTouchBar *ms_parentTouchBar; // @synthesize ms_parentTouchBar=_ms_parentTouchBar;
- (void).cxx_destruct;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setPopoverTouchBar:(id)arg1;

@end

@interface MSAddFlowBackAction : MSFlowBaseAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)showInToolbar;
- (void)doPerformAction:(id)arg1;
- (void)addFlowBack:(id)arg1;
- (BOOL)validate;

@end

@interface MSInsertLineAction : MSBaseInsertAction
{
}

- (id)imageName;
- (id)tooltip;
- (BOOL)isSelectable;
- (Class)eventHandlerClass;
- (void)doPerformAction:(id)arg1;
- (id)lineShapeFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
- (void)insertLine:(id)arg1;

@end

@interface MSGridSettingsAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)gridSettings:(id)arg1;

@end

@interface MSToggleToolbarVisibilityAction : MSToggleVisibilityAction
{
}

- (BOOL)isFullscreen;
- (double)toolbarHeight;
- (void)toggleWithNewScrollOrigin:(struct CGPoint)arg1;
- (void)hide;
- (void)show;
- (BOOL)shouldRunForAllTabsInWindow;
- (BOOL)isActive;
- (void)toggleToolbarVisibility:(id)arg1;

@end

@interface MSArtboardPresetsTableView : NSTableView
{
}

- (id)menuForEvent:(id)arg1;

@end

@interface MSInsertLineEventHandler : MSEventHandler
{
    CDUnknownBlockType _lineShapeCreator;
    MSShapeGroup *_lineShape;
}

@property(retain, nonatomic) MSShapeGroup *lineShape; // @synthesize lineShape=_lineShape;
@property(copy, nonatomic) CDUnknownBlockType lineShapeCreator; // @synthesize lineShapeCreator=_lineShapeCreator;
- (void).cxx_destruct;
- (id)findCurrentGroup;
- (double)lineThickness;
- (id)style;
- (void)createShapeAtMouse:(struct CGPoint)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (void)cursorUpdate:(id)arg1;
- (struct CGPoint)roundMouse:(struct CGPoint)arg1;

@end

@interface MSInsertArrowEventHandler : MSInsertLineEventHandler
{
}

@end

@interface MSAssetSyncSheetSymbol : NSObject <MSAssetSyncSheetItem>
{
    BOOL _shouldSync;
    MSAssetLibrary *library;
    MSForeignSymbol *_foreignSymbol;
    MSSymbolMaster *_symbolMaster;
}

@property(nonatomic) BOOL shouldSync; // @synthesize shouldSync=_shouldSync;
@property(retain, nonatomic) MSSymbolMaster *symbolMaster; // @synthesize symbolMaster=_symbolMaster;
@property(retain, nonatomic) MSForeignSymbol *foreignSymbol; // @synthesize foreignSymbol=_foreignSymbol;
@property(retain, nonatomic) MSAssetLibrary *library; // @synthesize library;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *displayName;
@property(readonly, nonatomic) unsigned long long type;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSLicenseExpiredAction : MSDocumentAction <MSWindowBadgeAction>
{
}

@property(readonly, nonatomic) unsigned long long numberOfBadges;
- (id)label;
@property(readonly, nonatomic) NSColor *badgeTint;
- (void)doPerformAction:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSAttributedString *badgeTitle; // @dynamic badgeTitle;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSInsertShapeEventHandler : MSDragRectEventHandler
{
    NSMutableArray *_insertedShapes;
    MSShapePathLayer *_prototypeLayer;
    NSArray *_snapLines;
    NSArray *_snapRects;
    struct CGRect _initialPrototypeRect;
}

@property(retain, nonatomic) NSArray *snapRects; // @synthesize snapRects=_snapRects;
@property(nonatomic) struct CGRect initialPrototypeRect; // @synthesize initialPrototypeRect=_initialPrototypeRect;
@property(retain, nonatomic) NSArray *snapLines; // @synthesize snapLines=_snapLines;
@property(retain, nonatomic) MSShapePathLayer *prototypeLayer; // @synthesize prototypeLayer=_prototypeLayer;
- (void).cxx_destruct;
- (BOOL)allowsSwitchToInsertAction;
- (void)drawRectPreview;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)resizeLayer:(id)arg1 toRect:(struct CGRect)arg2;
- (id)insertShapeAsNewLayer:(struct CGRect)arg1;
- (id)insertShapeAsSubPathOfShape:(id)arg1 inRect:(struct CGRect)arg2;
- (id)performActionWithRect:(struct CGRect)arg1 fromLayer:(id)arg2 constrainProportions:(BOOL)arg3;
- (id)imageName;
- (void)populateArray:(id)arg1 withSnapRectsForGroup:(id)arg2 ancestors:(id)arg3;
- (void)cacheSnapPointsInBackground;
- (struct CGPoint)snapMouseToEdges:(struct CGPoint)arg1 guides:(id *)arg2;
- (struct CGPoint)snapMouseAndShowSnapLines:(struct CGPoint)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)setInsertionRect:(struct CGRect)arg1;
- (id)applicableActionItemIdentifier;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSInsertTextEventHandler : MSEventHandler
{
    struct CGPoint mouseDownPoint;
    struct CGPoint mouseDraggedPoint;
    MSTextLayer *_textLayer;
    CDUnknownBlockType _completionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) MSTextLayer *textLayer; // @synthesize textLayer=_textLayer;
- (void).cxx_destruct;
- (BOOL)allowsSwitchToInsertAction;
- (BOOL)shouldDrawLayerSelection;
- (id)toolbarIdentifier;
- (struct CGRect)rectForInsertingDirectly:(struct CGPoint)arg1;
- (void)selectTextLayerAndEdit:(id)arg1;
- (id)textLayerAtPoint:(struct CGPoint)arg1 zoomValue:(double)arg2;
- (BOOL)tryToEditExistingTextLayer:(struct CGPoint)arg1 zoomValue:(double)arg2;
- (id)groupForInserting;
- (id)textLayerWithRect:(struct CGRect)arg1 type:(long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (BOOL)mouseMovedEvent:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;

@end

@interface MSOpenPreviewAction : MSDocumentAction
{
}

- (id)label;
- (id)imageName;
- (BOOL)showInToolbar;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)openMirrorPreview:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface MSCollectionView : NSCollectionView
{
}

- (void)drawColumns;
- (void)drawRows;
- (void)drawRect:(struct CGRect)arg1;
- (id)newItemForRepresentedObject:(id)arg1;

@end

@interface MSAssetPickerHeaderView : NSView
{
    id <MSAssetPickerHeaderViewDelegate> _delegate;
    NSString *_preferenceKey;
}

+ (id)headerPickerWithTitle:(id)arg1 isExpandedPreference:(id)arg2 delegate:(id)arg3;
@property(retain, nonatomic) NSString *preferenceKey; // @synthesize preferenceKey=_preferenceKey;
@property(nonatomic) __weak id <MSAssetPickerHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)titleButtonWasClicked:(id)arg1;
- (void)expandArrowWasClicked:(id)arg1;
- (id)disclosureButton;

@end

@interface MSInsertTextLayerAction : MSBaseInsertAction
{
}

- (BOOL)isTouchBarItemSelected;
- (id)touchBarImage;
- (BOOL)isSelectable;
- (id)tooltip;
- (id)label;
- (void)doPerformAction:(id)arg1;
- (SEL)preferredMenuAction;
- (void)insertTextLayer:(id)arg1;
- (BOOL)validate;

@end

@interface MSRoundToPixelAction : MSDocumentAction
{
}

- (void)roundCurvePointsAtIndexPaths:(id)arg1 ofShapes:(id)arg2;
- (void)roundCurvePointsInPath:(id)arg1;
- (void)roundLayerPoints:(id)arg1;
- (void)doRoundLayerFrame:(id)arg1;
- (void)roundLayerFrame:(id)arg1;
- (void)roundSelectedShapeHandlerPoints;
- (void)doPerformAction:(id)arg1;
- (BOOL)pathPointsAreNotIntegral:(id)arg1;
- (BOOL)layerPointsAreNotIntegral:(id)arg1;
- (BOOL)layerFrameIsNotIntegral:(id)arg1;
- (unsigned long long)roundingModeForLayer:(id)arg1;
- (unsigned long long)roundModeForShapeHandler;
- (unsigned long long)roundingMode;
- (id)imageName;
- (id)tooltip;
- (id)label;
- (id)recipeName;
- (BOOL)validate;
- (void)roundToPixel:(id)arg1;

@end

@interface MSInsertVectorAction : MSDocumentAction
{
}

- (id)touchBarImage;
- (BOOL)isSelectable;
- (BOOL)isActive;
- (id)tooltip;
- (void)doPerformAction:(id)arg1;
- (SEL)preferredMenuAction;
- (void)insertVector:(id)arg1;

@end

@interface MSArtboardPresetTableCellView : NSTableCellView
{
    NSImageView *_checkmark;
    NSTextField *_sizeLabel;
}

@property(retain, nonatomic) NSTextField *sizeLabel; // @synthesize sizeLabel=_sizeLabel;
@property(retain, nonatomic) NSImageView *checkmark; // @synthesize checkmark=_checkmark;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (void)awakeFromNib;

@end

@interface MSSymbolInstanceSection : MSLayerSection
{
    NSView *_overridesHeaderView;
    NSView *_stylesHeaderView;
    NSArray *_overrideViewControllers;
}

@property(retain, nonatomic) NSArray *overrideViewControllers; // @synthesize overrideViewControllers=_overrideViewControllers;
@property(retain, nonatomic) NSView *stylesHeaderView; // @synthesize stylesHeaderView=_stylesHeaderView;
@property(retain, nonatomic) NSView *overridesHeaderView; // @synthesize overridesHeaderView=_overridesHeaderView;
- (void).cxx_destruct;
- (id)uniqueArtboardIDsOfSelectedLayers;
- (void)makeOverrideViewControllers;
- (id)views;
- (void)setLayers:(id)arg1;

@end

@interface MSAssetLibraryPreview : NSView
{
    NSImage *_libraryPreview;
    NSImage *_preview;
}

@property(retain, nonatomic) NSImage *preview; // @synthesize preview=_preview;
@property(nonatomic) __weak NSImage *libraryPreview; // @synthesize libraryPreview=_libraryPreview;
- (void).cxx_destruct;
- (id)thumbFromImage:(id)arg1 centerTopInSize:(struct CGSize)arg2;
- (id)thumbWithSize:(struct CGSize)arg1 byDrawingImage:(id)arg2 inRect:(struct CGRect)arg3 fromRect:(struct CGRect)arg4;
@property(readonly, nonatomic) NSBezierPath *contentPath;
@property(readonly, nonatomic) struct CGRect previewFrame;
- (id)thumbFromImage:(id)arg1 centeredInSize:(struct CGSize)arg2;
- (id)centeredThumbFromImage:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSMirrorPopUpButtonCell : NSPopUpButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
@property(readonly, nonatomic) BOOL shouldDrawImage;

@end

@interface MSMoveToTopAction : MSDocumentAction
{
}

- (id)label;
- (void)doPerformAction:(id)arg1;
- (BOOL)validate;
- (void)moveToTop:(id)arg1;

@end

@interface MSOpenPluginPreferencesAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)openPluginPreferences:(id)arg1;

@end

@interface MSInspectorController : NSViewController <NSTouchBarDelegate>
{
    BOOL _alignmentBarHidden;
    BOOL _exportPanelHidden;
    NSViewController<MSInspectorChildController> *_currentController;
    MSDocument *_document;
    MSPersistentAssetCollection *_globalAssets;
    MSExportInspectorViewController *_bottomExporter;
    NSArray *_selectedLayers;
    NSView *_alignmentView;
    NSView *_contentContainerView;
    NSView *_exportPanelContainerView;
    NSLayoutConstraint *_exportPanelHeightConstraint;
    MSNormalInspector *_normalInspector;
    MSSliceInspectorViewController *_slicesInspector;
    MSArtboardInspectorViewController *_artboardInspector;
}

@property(retain, nonatomic) MSArtboardInspectorViewController *artboardInspector; // @synthesize artboardInspector=_artboardInspector;
@property(retain, nonatomic) MSSliceInspectorViewController *slicesInspector; // @synthesize slicesInspector=_slicesInspector;
@property(retain, nonatomic) MSNormalInspector *normalInspector; // @synthesize normalInspector=_normalInspector;
@property(retain, nonatomic) NSLayoutConstraint *exportPanelHeightConstraint; // @synthesize exportPanelHeightConstraint=_exportPanelHeightConstraint;
@property(retain, nonatomic) NSView *exportPanelContainerView; // @synthesize exportPanelContainerView=_exportPanelContainerView;
@property(retain, nonatomic) NSView *contentContainerView; // @synthesize contentContainerView=_contentContainerView;
@property(retain, nonatomic) NSView *alignmentView; // @synthesize alignmentView=_alignmentView;
@property(retain, nonatomic) NSArray *selectedLayers; // @synthesize selectedLayers=_selectedLayers;
@property(nonatomic) BOOL exportPanelHidden; // @synthesize exportPanelHidden=_exportPanelHidden;
@property(nonatomic) BOOL alignmentBarHidden; // @synthesize alignmentBarHidden=_alignmentBarHidden;
@property(retain, nonatomic) MSExportInspectorViewController *bottomExporter; // @synthesize bottomExporter=_bottomExporter;
@property(retain, nonatomic) MSPersistentAssetCollection *globalAssets; // @synthesize globalAssets=_globalAssets;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) NSViewController<MSInspectorChildController> *currentController; // @synthesize currentController=_currentController;
- (void).cxx_destruct;
- (void)reloadTouchBars;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeTouchBar;
- (void)closeAnyColorPopover;
- (void)adjustInspectorToColorPopover:(id)arg1 sender:(id)arg2;
- (void)openPopoverForStylePart:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (id)inspectorController;
- (void)recursivelyDismissAllPresentedViewControllersOfViewController:(id)arg1;
- (void)viewWillDisappear;
- (void)showBorderOptionsAction:(id)arg1;
- (void)showFillOptionsAction:(id)arg1;
- (id)handlerManager;
- (id)findTextFieldInView:(id)arg1 withIndex:(unsigned long long)arg2;
- (void)focusOnTextField:(unsigned long long)arg1;
- (void)reload;
- (id)inspectorForLayers:(id)arg1 eventHandler:(id)arg2;
- (void)refreshCurrentController;
- (void)layoutContentView;
- (void)reloadSharedObjectsSection;
- (void)layerWithSharedStyleDidChange;
- (void)beginRenameSharedObject:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)changeTextLayerFont:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)layoutExportPanel;
- (void)prepareForDisplay;
- (void)currentHandlerChanged;
- (void)layerPositionPossiblyChanged;
- (void)selectionDidChangeTo:(id)arg1;
- (void)viewDidResize;
- (void)validateAlignmentButtons;
- (void)connectAlignmentButtons;
- (void)dealloc;
- (void)viewDidLoad;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSInspectorNextResponderFixer : NSObject
{
}

+ (long long)compareVerticalPositionOfView:(id)arg1 withView:(id)arg2;
+ (long long)compareHorizontalPositionOfView:(id)arg1 withView:(id)arg2;
+ (struct _NSRange)verticalRangeFromView:(id)arg1 inView:(id)arg2;
+ (BOOL)viewIntersectsVertically:(id)arg1 withView:(id)arg2;
+ (id)subviewsOfView:(id)arg1;
+ (id)orderedSubviewsOfView:(id)arg1;
+ (id)firstKeyViewForInView:(id)arg1;
+ (id)findNextKeyViewFor:(id)arg1 inView:(id)arg2;

@end

@interface MSInspectorStackView : NSView
{
    NSArray *_sectionViewControllers;
}

@property(retain, nonatomic) NSArray *sectionViewControllers; // @synthesize sectionViewControllers=_sectionViewControllers;
- (void).cxx_destruct;
- (id)enclosingStackView;
- (BOOL)isFlipped;
- (void)reloadWithViewControllers:(id)arg1;
- (void)subViewFrameDidChange:(id)arg1;
- (void)stack;
- (void)recalculateHeight:(id)arg1;
- (void)recalculateHeight;
- (void)reloadSubviews;

@end

@interface MSAssetLibraryTableView : BCKeyEventActionTableView
{
}

- (id)menuForEvent:(id)arg1;

@end

@interface MSManageSharedObjectBaseViewController : NSViewController <NSTableViewDataSource, NSTableViewDelegate>
{
    NSTableView *_tableView;
    MSDocument *_document;
}

@property(retain, nonatomic) MSDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)deleteSelectedObjects:(id)arg1;
@property(readonly, nonatomic) NSArray *sharedObjectsSortedByName;
- (void)removeSharedObject:(id)arg1;
- (void)awakeFromNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSOpenCloudPreferencesAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)openCloudPreferences:(id)arg1;

@end

@interface MSLicenseRenewalWindowController : NSWindowController <NSWindowDelegate>
{
    NSURL *_quitWithURL;
    BOOL _shouldQuitOnWindowClose;
    NSButton *_learnMoreButton;
}

+ (void)showLicenseUpdateWindow;
@property(retain, nonatomic) NSButton *learnMoreButton; // @synthesize learnMoreButton=_learnMoreButton;
- (void).cxx_destruct;
- (void)didCloseAllDocuments:(id)arg1;
- (void)closeDocumentsAndQuitWithURL:(id)arg1;
- (void)learnMore:(id)arg1;
- (void)renewLicense:(id)arg1;
- (void)downloadPreviousVersion:(id)arg1;
- (void)revertToTrial:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSIntegerSlider : NSSlider
{
}

- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;

@end

@interface MSVerticallyCenteredTextFieldCell : NSTextFieldCell
{
}

- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGRect)rectForTextDrawing:(struct CGRect)arg1;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSJoinAction : MSDocumentAction
{
}

- (BOOL)validate;
- (id)joinBezierPath:(id)arg1 withBezierPath:(id)arg2;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)join:(id)arg1;

@end

@interface MSMagnifierAction : MSDocumentAction
{
}

- (unsigned long long)touchBarItemSizing;
- (void)colorMagnifierAction:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (BOOL)currentPopoverHandlesColorMagnifier;
- (BOOL)validate;
- (id)touchBarImage;
- (id)label;

@end

@interface MSLayerGroupSection : MSLayerSection
{
}

- (id)groups;
- (id)views;

@end

@interface MSPreferencesPluginInfo : NSObject
{
    BOOL _enabled;
    BOOL _isUpdating;
    MSPluginBundle *_pluginBundle;
    NSString *_name;
}

+ (id)pluginInfoWithName:(id)arg1;
+ (id)pluginInfoWithPluginBundle:(id)arg1;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) MSPluginBundle *pluginBundle; // @synthesize pluginBundle=_pluginBundle;
@property(nonatomic) BOOL isUpdating; // @synthesize isUpdating=_isUpdating;
- (void).cxx_destruct;
- (id)pluginManager;
- (id)latestPluginUpdate;
@property(readonly, copy, nonatomic) NSString *updateVersionString;
@property(readonly, nonatomic) BOOL isCompatible;
@property(readonly, nonatomic) BOOL updateAvailable;
@property(readonly, copy, nonatomic) NSString *warningString;
@property(nonatomic, getter=isEnabled) BOOL enabled;
@property(readonly, copy, nonatomic) NSString *pluginDescription;
@property(readonly, copy, nonatomic) NSString *namePlusAuthor;
@property(readonly, copy, nonatomic) NSURL *homepage;
@property(readonly, copy, nonatomic) NSString *version;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, copy, nonatomic) NSString *enableCheckboxTitle;
@property(readonly, copy, nonatomic) NSAttributedString *attributedTitle;
- (void)dealloc;

@end

@interface MSFollowFlowAction : MSFlowBaseAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)followFlow:(id)arg1;
- (BOOL)validate;

@end

@interface MSLayerInserting : NSObject
{
}

+ (struct CGRect)rectForCenteringLayerWithSize:(struct CGSize)arg1 inView:(id)arg2 selection:(id)arg3;

@end

@interface MSGridSheetBase : CHSheetController <NSWindowDelegate>
{
    NSMapTable *_originalSettings;
    MSBaseGrid *_templateObject;
    NSColorWell *_darkColorWell;
    NSColorWell *_lightColorWell;
}

@property(retain, nonatomic) NSColorWell *lightColorWell; // @synthesize lightColorWell=_lightColorWell;
@property(retain, nonatomic) NSColorWell *darkColorWell; // @synthesize darkColorWell=_darkColorWell;
@property(copy, nonatomic) MSBaseGrid *templateObject; // @synthesize templateObject=_templateObject;
@property(retain, nonatomic) NSMapTable *originalSettings; // @synthesize originalSettings=_originalSettings;
- (void).cxx_destruct;
- (void)dealloc;
- (void)confirm:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)turnOffForcedDrawing;
- (void)gridChanged:(id)arg1;
- (void)refreshCanvas:(id)arg1;
- (void)refreshView;
- (id)buildApplicableRootLayerList;
- (void)awakeFromNib;
- (void)applyTemplateObjectToLayer:(id)arg1;
- (void)applyObject:(id)arg1 toLayer:(id)arg2;
- (id)defaultObject;
- (id)baseObjectForRootLayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAddExportFormatAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)addExportFormatToLayer:(id)arg1;
- (id)label;
- (BOOL)hasDynamicTitle;
- (void)doPerformAction:(id)arg1;
- (void)addExportFormat:(id)arg1;

@end

@interface MSLayerInspectorViewController : NSViewController <MSInspectorSection, NSMenuDelegate>
{
    BOOL _shouldShowPositions;
    BOOL _hasScheduledLayerPositionPossiblyChanged;
    NSArray *_layers;
    NSView *_positionView;
    NSView *_lineView;
    NSView *_resizingView;
    NSTextField *_xTextField;
    NSTextField *_yTextField;
    NSTextField *_widthTextField;
    NSTextField *_heightTextField;
    NSSegmentedControl *_flipSegmentedControl;
    NSSegmentedControl *_lineFlipSegmentedControl;
    NSNumberFormatter *_numberFormatter;
}

@property(nonatomic) BOOL hasScheduledLayerPositionPossiblyChanged; // @synthesize hasScheduledLayerPositionPossiblyChanged=_hasScheduledLayerPositionPossiblyChanged;
@property(retain, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=_numberFormatter;
@property(nonatomic) BOOL shouldShowPositions; // @synthesize shouldShowPositions=_shouldShowPositions;
@property(nonatomic) __weak NSSegmentedControl *lineFlipSegmentedControl; // @synthesize lineFlipSegmentedControl=_lineFlipSegmentedControl;
@property(nonatomic) __weak NSSegmentedControl *flipSegmentedControl; // @synthesize flipSegmentedControl=_flipSegmentedControl;
@property(nonatomic) __weak NSTextField *heightTextField; // @synthesize heightTextField=_heightTextField;
@property(nonatomic) __weak NSTextField *widthTextField; // @synthesize widthTextField=_widthTextField;
@property(nonatomic) __weak NSTextField *yTextField; // @synthesize yTextField=_yTextField;
@property(nonatomic) __weak NSTextField *xTextField; // @synthesize xTextField=_xTextField;
@property(retain, nonatomic) NSView *resizingView; // @synthesize resizingView=_resizingView;
@property(retain, nonatomic) NSView *lineView; // @synthesize lineView=_lineView;
@property(retain, nonatomic) NSView *positionView; // @synthesize positionView=_positionView;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)colorMagnifierAction:(id)arg1;
- (BOOL)canHandleColorMagnifierAction;
- (BOOL)hasLineShapeLayer;
- (id)views;
- (id)valueForUndefinedKey:(id)arg1;
- (id)document;
- (void)refreshAction:(id)arg1;
- (void)resizeConstraintsAction:(id)arg1;
- (void)rotateAction:(id)arg1;
- (struct CGRect)boundsForParentOf:(id)arg1;
- (long long)anchorFromString:(id)arg1 axis:(unsigned long long)arg2;
- (void)setLayerSizeFromString:(id)arg1 onAxis:(unsigned long long)arg2;
- (void)setHeightAction:(id)arg1;
- (void)setWidthAction:(id)arg1;
- (void)setYAction:(id)arg1;
- (void)setXAction:(id)arg1;
- (BOOL)areAllLayersFlippedVertically;
- (BOOL)areAllLayersFlippedHorizontally;
- (double)layerSizeOnAxis:(unsigned long long)arg1;
- (double)rulerOriginXForLayer:(id)arg1;
- (double)rulerOriginYForLayer:(id)arg1;
- (double)absoluteYForLayers;
- (double)absoluteXForLayers;
- (void)setValue:(double)arg1 forField:(id)arg2;
- (void)refreshBindingsOnShape:(id)arg1;
- (void)clearFlipSegmentedControl:(id)arg1;
- (void)clearPositionAndSizeFields;
- (void)updateFlipSegmentedControl:(id)arg1;
- (void)updatePositionAndSizeFields;
- (void)_layerPositionPossiblyChanged;
- (void)layerPositionPossiblyChanged;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCFeedbackController : NSObject
{
}

+ (void)openFeedbackPage;

@end

@interface MSAutoExpandGroupsAction : MSDocumentAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (void)autoExpandGroups:(id)arg1;

@end

@interface MSRevealInLayerListAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)revealInLayerList:(id)arg1;

@end

@interface MSLayerPickerMenuBuilder : MSMenuBuilder
{
}

- (BOOL)shouldShowSubLayersForGroupInLayerPickerMenu:(id)arg1;
- (void)addLayerItem:(id)arg1 toMenu:(id)arg2 withInset:(unsigned long long)arg3;
- (void)addChildrenOfGroup:(id)arg1 underPoint:(struct CGPoint)arg2 toMenu:(id)arg3 withInset:(unsigned long long)arg4;
- (void)updatePickerMenuItem:(id)arg1 forPage:(id)arg2 atPoint:(struct CGPoint)arg3;

@end

@interface MSSliceExportOptions : NSViewController
{
    NSView *_optionsViewJPG;
    NSView *_optionsViewSaveForWeb;
    NSView *_optionsViewWebP;
    NSView *_optionsViewPNG;
}

+ (id)exportOptionsForRequests:(id)arg1;
@property(retain, nonatomic) NSView *optionsViewPNG; // @synthesize optionsViewPNG=_optionsViewPNG;
@property(retain, nonatomic) NSView *optionsViewWebP; // @synthesize optionsViewWebP=_optionsViewWebP;
@property(retain, nonatomic) NSView *optionsViewSaveForWeb; // @synthesize optionsViewSaveForWeb=_optionsViewSaveForWeb;
@property(retain, nonatomic) NSView *optionsViewJPG; // @synthesize optionsViewJPG=_optionsViewJPG;
- (void).cxx_destruct;
- (void)setExtensions:(id)arg1;

@end

@interface MSTiledImageView : NSView
{
    NSImage *_image;
}

@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSManageForeignSymbolsView : NSViewController <NSTableViewDataSource, NSTabViewDelegate>
{
    BOOL _cogEnabled;
    MSDocument *_document;
    NSTableView *_tableView;
    NSArray *_symbols;
    NSMenu *_contextMenu;
}

@property(retain, nonatomic) NSMenu *contextMenu; // @synthesize contextMenu=_contextMenu;
@property(nonatomic) BOOL cogEnabled; // @synthesize cogEnabled=_cogEnabled;
@property(retain, nonatomic) NSArray *symbols; // @synthesize symbols=_symbols;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (void)unlinkFromLibrary:(id)arg1;
- (void)editInLibrary:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)showContextMenu:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)viewDidAppear;
- (void)awakeFromNib;
- (void)buildSymbolList;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPluginsPreferenceTableCellView : NSTableCellView
{
    NSView *_updateAvailableContainer;
    NSView *_pluginIncompatibleContainer;
    MSPluginsPreferencesUpdateButton *_updateAvailableInfo;
    NSButton *_updatePlugin;
    NSProgressIndicator *_pluginUpdating;
    NSLayoutConstraint *_updateAvailableHeightConstraint;
    NSLayoutConstraint *_incompatiblePluginHeightConstraint;
    NSLayoutConstraint *_tableCellWidthConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *tableCellWidthConstraint; // @synthesize tableCellWidthConstraint=_tableCellWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *incompatiblePluginHeightConstraint; // @synthesize incompatiblePluginHeightConstraint=_incompatiblePluginHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *updateAvailableHeightConstraint; // @synthesize updateAvailableHeightConstraint=_updateAvailableHeightConstraint;
@property(retain, nonatomic) NSProgressIndicator *pluginUpdating; // @synthesize pluginUpdating=_pluginUpdating;
@property(retain, nonatomic) NSButton *updatePlugin; // @synthesize updatePlugin=_updatePlugin;
@property(retain, nonatomic) MSPluginsPreferencesUpdateButton *updateAvailableInfo; // @synthesize updateAvailableInfo=_updateAvailableInfo;
@property(retain, nonatomic) NSView *pluginIncompatibleContainer; // @synthesize pluginIncompatibleContainer=_pluginIncompatibleContainer;
@property(retain, nonatomic) NSView *updateAvailableContainer; // @synthesize updateAvailableContainer=_updateAvailableContainer;
- (void).cxx_destruct;

@end

@interface MSToggleVisibilityAction : MSDocumentAction
{
}

- (id)tabbedWindows;
- (void)doPerformAction:(id)arg1;
- (BOOL)shouldRunForAllTabsInWindow;
- (void)prepareForNewWindow;
- (id)defaultsKey;
- (void)hide;
- (void)show;
@property(readonly, nonatomic) BOOL isActive;

@end

@interface MSLayerMeasurementRenderer : NSObject
{
    BOOL _isEnabled;
    MSLayerArray *_selectedLayers;
    MSLayerMeasurementTarget *_measurementTarget;
    unsigned long long _measurementOptions;
    NSNumberFormatter *_numberFormatter;
    MSContentDrawView *_view;
}

@property(nonatomic) __weak MSContentDrawView *view; // @synthesize view=_view;
@property(retain, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=_numberFormatter;
@property(nonatomic) unsigned long long measurementOptions; // @synthesize measurementOptions=_measurementOptions;
@property(retain, nonatomic) MSLayerMeasurementTarget *measurementTarget; // @synthesize measurementTarget=_measurementTarget;
@property(retain, nonatomic) MSLayerArray *selectedLayers; // @synthesize selectedLayers=_selectedLayers;
@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (void).cxx_destruct;
- (BOOL)isMeasuringDistance;
- (void)clear;
- (void)drawDistanceFromRect:(struct CGRect)arg1 toLargerRect:(struct CGRect)arg2 zoomScale:(double)arg3;
- (void)drawDashLinesBetweenRect:(struct CGRect)arg1 andRect:(struct CGRect)arg2 zoomScale:(double)arg3;
- (void)drawDistanceFromRect:(struct CGRect)arg1 toRect:(struct CGRect)arg2 zoomScale:(double)arg3;
- (void)drawDistanceFromRect:(struct CGRect)arg1 toGuides:(id)arg2 zoomScale:(double)arg3;
- (void)prepareForGeometryChange;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (struct CGRect)rectForPositionDrawingForLayers:(id)arg1;
- (void)drawOutlineForRect:(struct CGRect)arg1 zoomScale:(double)arg2;
- (void)drawRect:(struct CGRect)arg1 context:(id)arg2;
- (struct CGRect)drawingRectForData:(id)arg1;
- (id)measurementData;

@end

@interface MSIntegratedStepper : NSView
{
    BOOL _keepFiringTimer;
    MSUpDownController *_target;
    NSTimer *_timer;
    NSTimer *_initialSlowTimer;
    long long _highlightMode;
}

@property(nonatomic) BOOL keepFiringTimer; // @synthesize keepFiringTimer=_keepFiringTimer;
@property(nonatomic) long long highlightMode; // @synthesize highlightMode=_highlightMode;
@property(retain, nonatomic) NSTimer *initialSlowTimer; // @synthesize initialSlowTimer=_initialSlowTimer;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) __weak MSUpDownController *target; // @synthesize target=_target;
- (void).cxx_destruct;
- (struct CGSize)intrinsicContentSize;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (void)stepWithEvent:(id)arg1;
- (void)repeatStepEvent:(id)arg1;
- (id)timerWithInterval:(double)arg1 repeats:(BOOL)arg2;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)dealloc;
- (void)mouseDown:(id)arg1;
- (BOOL)clickShouldDismissPopover:(id)arg1;

@end

@interface MSInterceptingView : NSView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface MSInsertLayerEventHandler : MSDragRectEventHandler
{
    BOOL _shouldApplyDefaultStyle;
    MSLayer *_prototypeLayer;
    CDUnknownBlockType _completionBlock;
    MSLayer *_insertedLayer;
}

@property(retain, nonatomic) MSLayer *insertedLayer; // @synthesize insertedLayer=_insertedLayer;
@property(nonatomic) BOOL shouldApplyDefaultStyle; // @synthesize shouldApplyDefaultStyle=_shouldApplyDefaultStyle;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) MSLayer *prototypeLayer; // @synthesize prototypeLayer=_prototypeLayer;
- (void).cxx_destruct;
- (BOOL)allowsSwitchToInsertAction;
- (void)resizeLayer:(id)arg1 toRect:(struct CGRect)arg2;
- (id)currentGroup;
- (void)insertNewLayerInCurrentGroup:(id)arg1;
- (id)insertAsNewLayer:(struct CGRect)arg1;
- (id)performActionWithRect:(struct CGRect)arg1 fromLayer:(id)arg2 constrainProportions:(BOOL)arg3;
- (void)drawRectPreview;
- (id)imageName;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSManageForeignSymbolItem : NSObject
{
    MSForeignSymbol *_foreignSymbol;
    MSAssetLibrary *_library;
}

@property(readonly, nonatomic) MSAssetLibrary *library; // @synthesize library=_library;
@property(readonly, nonatomic) MSForeignSymbol *foreignSymbol; // @synthesize foreignSymbol=_foreignSymbol;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *libraryName;
@property(readonly, nonatomic) NSString *symbolName;
- (id)initWithForeignSymbol:(id)arg1;

@end

@interface MSSavedLayerFrames : NSObject
{
    MSLayer *_layer;
    NSDictionary *_framesByLayerID;
}

@property(readonly, nonatomic) NSDictionary *framesByLayerID; // @synthesize framesByLayerID=_framesByLayerID;
@property(readonly, nonatomic) MSLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
- (void)restore;
- (struct CGRect)savedFrameForLayer:(id)arg1;
- (id)initWithLayer:(id)arg1;

@end

@interface MSGradientView : NSView
{
    BOOL _topBorder;
    BOOL _leftBorder;
    BOOL _rightBorder;
    BOOL _bottomBorder;
    float _gradientAngle;
    float _borderSize;
    NSColor *_topColour;
    NSColor *_bottomColour;
    NSColor *_borderColour;
    NSGradient *_gradient;
}

@property(retain, nonatomic) NSGradient *gradient; // @synthesize gradient=_gradient;
@property(nonatomic) BOOL bottomBorder; // @synthesize bottomBorder=_bottomBorder;
@property(nonatomic) BOOL rightBorder; // @synthesize rightBorder=_rightBorder;
@property(nonatomic) BOOL leftBorder; // @synthesize leftBorder=_leftBorder;
@property(nonatomic) BOOL topBorder; // @synthesize topBorder=_topBorder;
@property(nonatomic) float borderSize; // @synthesize borderSize=_borderSize;
@property(nonatomic) float gradientAngle; // @synthesize gradientAngle=_gradientAngle;
@property(retain, nonatomic) NSColor *borderColour; // @synthesize borderColour=_borderColour;
@property(retain, nonatomic) NSColor *bottomColour; // @synthesize bottomColour=_bottomColour;
@property(retain, nonatomic) NSColor *topColour; // @synthesize topColour=_topColour;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)prepareForDisplay;
- (void)prepareDefaults;
- (id)initWithCoder:(id)arg1;

@end

@interface BCHexTextField : NSTextField
{
}

- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;

@end

@interface MSWelcomeCollectionTextField : NSTextField
{
    BOOL _selected;
}

+ (Class)cellClass;
@property(nonatomic, getter=isSelected) BOOL selected; // @synthesize selected=_selected;

@end

@interface MSWelcomeCollectionTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)textColor;

@end

@interface MSCloudBaseViewController : MSToolbarPopoverContentViewController
{
}

- (void)cloudBaseViewControllerDidAppear;
@property(readonly, nonatomic) MSCloudViewController *cloudViewController;
@property(readonly, nonatomic) MSCloudAction *cloudAction;
- (id)initWithAction:(id)arg1;

@end

@interface MSMakeGridAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (id)imageName;
- (void)makeGrid:(id)arg1;

@end

@interface MSMakeGridSheet : CHSheetController
{
    BOOL _hasHorizontalPadding;
    BOOL _hasVerticalPadding;
    MSDocument *_doc;
    long long _numberOfRows;
    long long _numberOfColumns;
    long long _horizontalPadding;
    long long _verticalPadding;
    long long _shouldFillHoles;
    NSTextField *_subtextField;
    NSButton *_confirmButton;
    NSButton *_shouldFilHolesButton;
}

@property(nonatomic) __weak NSButton *shouldFilHolesButton; // @synthesize shouldFilHolesButton=_shouldFilHolesButton;
@property(nonatomic) __weak NSButton *confirmButton; // @synthesize confirmButton=_confirmButton;
@property(nonatomic) __weak NSTextField *subtextField; // @synthesize subtextField=_subtextField;
@property(nonatomic) long long shouldFillHoles; // @synthesize shouldFillHoles=_shouldFillHoles;
@property(nonatomic) long long verticalPadding; // @synthesize verticalPadding=_verticalPadding;
@property(nonatomic) long long horizontalPadding; // @synthesize horizontalPadding=_horizontalPadding;
@property(nonatomic) long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(nonatomic) long long numberOfRows; // @synthesize numberOfRows=_numberOfRows;
@property(nonatomic) BOOL hasVerticalPadding; // @synthesize hasVerticalPadding=_hasVerticalPadding;
@property(nonatomic) BOOL hasHorizontalPadding; // @synthesize hasHorizontalPadding=_hasHorizontalPadding;
@property(nonatomic) __weak MSDocument *doc; // @synthesize doc=_doc;
- (void).cxx_destruct;
- (struct CGSize)defaultBoxSize;
- (unsigned long long)layerCount;
- (BOOL)layersHaveSameSize;
- (void)confirm:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)validatePaddingFields;
- (void)registerMarginDefaults;
- (void)awakeFromNib;

@end

@interface MSDetachSharedStyleAction : MSBaseSharedStyleAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)detachSharedStyle:(id)arg1;

@end

@interface MSUpdatePluginsAction : MSDocumentAction <MSWindowBadgeAction>
{
}

@property(readonly, nonatomic) unsigned long long numberOfBadges;
- (id)label;
@property(readonly, nonatomic) NSColor *badgeTint;
- (void)doPerformAction:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSAttributedString *badgeTitle; // @dynamic badgeTitle;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAnalytics : BCSingleton <MSActionObserver>
{
    BOOL _isEnabled;
    NSTimer *_hourlyTimer;
    NSTimer *_dailyTimer;
    NSTimer *_weeklyTimer;
    NSTimer *_monthlyTimer;
    MSGoogleAnalyticsWrapper *_googleAnalytics;
}

@property(retain, nonatomic) MSGoogleAnalyticsWrapper *googleAnalytics; // @synthesize googleAnalytics=_googleAnalytics;
@property(retain, nonatomic) NSTimer *monthlyTimer; // @synthesize monthlyTimer=_monthlyTimer;
@property(retain, nonatomic) NSTimer *weeklyTimer; // @synthesize weeklyTimer=_weeklyTimer;
@property(retain, nonatomic) NSTimer *dailyTimer; // @synthesize dailyTimer=_dailyTimer;
@property(retain, nonatomic) NSTimer *hourlyTimer; // @synthesize hourlyTimer=_hourlyTimer;
@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (void).cxx_destruct;
- (void)actionController:(id)arg1 didInstantActionWithID:(id)arg2 context:(id)arg3;
- (void)actionController:(id)arg1 didFinishActionWithID:(id)arg2 context:(id)arg3;
- (void)actionController:(id)arg1 willBeginActionWithID:(id)arg2 context:(id)arg3;
- (void)trackEvent:(id)arg1 withInterval:(long long)arg2 conditional:(CDUnknownBlockType)arg3;
- (void)trackEvent:(id)arg1 withValue:(id)arg2;
- (void)trackScreenWithName:(id)arg1;
- (void)stopTracking;
- (void)sendAppInfo;
- (void)startTracking;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCanvasPreferencePane : MSPreferencePane
{
    NSColorWell *_flowColorWell;
    NSTextField *_flowColorLabel;
}

+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;
@property(nonatomic) __weak NSTextField *flowColorLabel; // @synthesize flowColorLabel=_flowColorLabel;
@property(nonatomic) __weak NSColorWell *flowColorWell; // @synthesize flowColorWell=_flowColorWell;
- (void).cxx_destruct;
- (void)refreshOpenDocuments;
- (void)adjustFlowColorAction:(id)arg1;
- (void)adjustSnapColorAction:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSDragToMoveOrCopyGestureRecognizer : MSDragGestureRecognizer
{
    unsigned long long _alignMask;
    unsigned long long _alignmentAxis;
    id _draggedItem;
    NSArray *_originalDraggedItems;
    NSArray *_originalDragPositions;
    NSArray *_copiedItems;
    double _alignmentDistance;
}

@property(nonatomic) double alignmentDistance; // @synthesize alignmentDistance=_alignmentDistance;
@property(copy, nonatomic) NSArray *copiedItems; // @synthesize copiedItems=_copiedItems;
@property(copy, nonatomic) NSArray *originalDragPositions; // @synthesize originalDragPositions=_originalDragPositions;
@property(copy, nonatomic) NSArray *originalDraggedItems; // @synthesize originalDraggedItems=_originalDraggedItems;
@property(retain, nonatomic) id draggedItem; // @synthesize draggedItem=_draggedItem;
@property(readonly, nonatomic) unsigned long long alignmentAxis; // @synthesize alignmentAxis=_alignmentAxis;
@property(nonatomic) unsigned long long alignMask; // @synthesize alignMask=_alignMask;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL align;
- (void)reset;
- (void)setState:(long long)arg1;
@property(readonly, nonatomic) BOOL shouldSnap;
@property(readonly, nonatomic) BOOL shouldCopyDraggedItems;
- (void)recalculateAlignmentAxis;
- (struct CGPoint)locationInLayer:(id)arg1;
- (struct CGPoint)translation;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface MSDragLayerGestureRecognizer : MSDragToMoveOrCopyGestureRecognizer
{
}

- (BOOL)shouldSnap;

@end

@interface MSMirrorAction : MSDocumentAction <MSWindowBadgeAction>
{
}

@property(readonly, nonatomic) SMKMirrorController *mirrorController;
- (id)availableClients;
@property(readonly, nonatomic) NSColor *badgeTint;
@property(readonly, nonatomic) unsigned long long numberOfBadges;
- (id)menuItems;
- (id)label;
- (void)doPerformAction:(id)arg1;
- (void)mirrorClientsDidChangeNotification:(id)arg1;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSAttributedString *badgeTitle; // @dynamic badgeTitle;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMenuBuilder : NSObject
{
    id _target;
    SEL _action;
}

+ (id)menuBuilderWithTarget:(id)arg1 action:(SEL)arg2;
+ (id)menuBuilderWithTarget:(id)arg1;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(retain, nonatomic) id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface MSBaseAlignAction : MSDocumentAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (unsigned long long)textAlignment;
- (BOOL)validate;

@end

@interface MSAlignLeftAction : MSBaseAlignAction
{
}

- (id)touchBarImage;
- (unsigned long long)textAlignment;
- (void)alignLeft:(id)arg1;

@end

@interface MSAlignCenterAction : MSBaseAlignAction
{
}

- (id)touchBarImage;
- (unsigned long long)textAlignment;
- (void)alignCenter:(id)arg1;

@end

@interface MSAlignRightAction : MSBaseAlignAction
{
}

- (id)touchBarImage;
- (unsigned long long)textAlignment;
- (void)alignRight:(id)arg1;

@end

@interface MSAlignJustifiedAction : MSBaseAlignAction
{
}

- (id)touchBarImage;
- (unsigned long long)textAlignment;
- (void)alignJustified:(id)arg1;

@end

@interface MSTextAlignTouchBarGroupAction : MSTouchBarGroupAction
{
}

- (id)touchBarItem;
- (unsigned long long)touchBarItemSizing;
- (BOOL)supportsState;
- (id)actionNames;

@end

@interface MSManageTextStyleView : MSManageSharedObjectBaseViewController
{
}

- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)removeSharedObject:(id)arg1;
- (id)sharedObjectsSortedByName;

@end

@interface MSMoveUpHierarchyAction : MSDocumentAction
{
}

- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)moveUpHierarchy:(id)arg1;
- (BOOL)validate;

@end

@interface MSMeasurementData : NSObject
{
    NSArray *_targetLines;
    struct CGRect _sourceRect;
    struct CGRect _targetRect;
}

@property(retain, nonatomic) NSArray *targetLines; // @synthesize targetLines=_targetLines;
@property(nonatomic) struct CGRect targetRect; // @synthesize targetRect=_targetRect;
@property(nonatomic) struct CGRect sourceRect; // @synthesize sourceRect=_sourceRect;
- (void).cxx_destruct;

@end

@interface MSAssetSyncSheet : CHSheetController <NSTableViewDataSource, NSTableViewDelegate, NSSplitViewDelegate>
{
    BOOL _hasSyncableItems;
    NSArray *_tableViewData;
    MSSymbolView *_currentSymbolView;
    MSSymbolView *_updatedSymbolView;
    NSSplitView *_splitView;
}

@property(nonatomic) BOOL hasSyncableItems; // @synthesize hasSyncableItems=_hasSyncableItems;
@property(nonatomic) __weak NSSplitView *splitView; // @synthesize splitView=_splitView;
@property(nonatomic) __weak MSSymbolView *updatedSymbolView; // @synthesize updatedSymbolView=_updatedSymbolView;
@property(nonatomic) __weak MSSymbolView *currentSymbolView; // @synthesize currentSymbolView=_currentSymbolView;
@property(readonly, nonatomic) NSArray *tableViewData; // @synthesize tableViewData=_tableViewData;
- (void).cxx_destruct;
- (void)updateSelectedForSync:(id)arg1;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (void)updateSymbols:(id)arg1;
- (void)windowDidLoad;
- (void)buildTableViewData;
@property(readonly, nonatomic) MSDocument *document;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDataTableView : BCKeyEventActionTableView
{
}

- (id)menuForEvent:(id)arg1;

@end

@interface MSDataPreview : NSView
{
    MSDataPreferenceItem *_localDataItem;
    NSImage *_preview;
}

@property(retain, nonatomic) NSImage *preview; // @synthesize preview=_preview;
@property(nonatomic) __weak MSDataPreferenceItem *localDataItem; // @synthesize localDataItem=_localDataItem;
- (void).cxx_destruct;
- (id)firstFourDataImages;
- (id)firstThreeDataTextItems;
@property(readonly) struct CGRect imageFrameInPreviewFrame;
@property(readonly) struct CGSize imageSize;
- (id)thumbWithSize:(struct CGSize)arg1 byDrawingImage:(id)arg2 inRect:(struct CGRect)arg3 fromRect:(struct CGRect)arg4;
@property(readonly, nonatomic) NSBezierPath *contentPath;
@property(readonly, nonatomic) struct CGRect previewFrame;
- (id)thumbFromImage:(id)arg1 centeredInSize:(struct CGSize)arg2;
- (id)centeredThumbFromImage:(id)arg1;
- (id)generateTextDataPreview;
- (id)generateImageDataPreview;
- (void)generatePreview;
- (id)placeHolderImage;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSInsertArtboardEventHandler : MSInsertLayerEventHandler
{
    MSInsertArtboardInspectorViewController *_inspectorViewController;
    NSMutableArray *_insertedArtboards;
}

@property(readonly, nonatomic) NSMutableArray *insertedArtboards; // @synthesize insertedArtboards=_insertedArtboards;
- (void).cxx_destruct;
- (BOOL)shouldApplyDefaultStyle;
- (BOOL)shouldAddInsertFromSelectionItem;
- (void)updateInspector;
@property(readonly, nonatomic) MSInsertArtboardInspectorViewController *inspectorViewController; // @synthesize inspectorViewController=_inspectorViewController;
- (unsigned long long)inspectorLocation;
- (id)inspectorViewControllersForLayers:(id)arg1 standardControllers:(id)arg2;
- (void)configureInspector:(id)arg1;
- (id)insertArtboardWithRect:(struct CGRect)arg1;
- (struct CGRect)newPositionForFirstArtboardWithSize:(struct CGSize)arg1;
- (struct CGRect)initialRectForNewArtboard:(struct CGSize)arg1 besidesExistingArtboard:(id)arg2;
- (struct CGRect)newPositionForSecondArtboardWithSize:(struct CGSize)arg1;
- (struct CGRect)rectForArtboardWithPreset:(id)arg1;
- (void)insertArtboardFromPreset:(id)arg1;
- (id)performActionWithRect:(struct CGRect)arg1 fromLayer:(id)arg2 constrainProportions:(BOOL)arg3;
- (BOOL)allowsSwitchToInsertAction;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)title;
- (void)dealloc;

@end

@interface MSMiniToolbarTextFieldCell : NSTextFieldCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSMissingFontsDialog : NSWindowController <NSTableViewDataSource>
{
    NSWindow *panel;
    NSTableView *tableView;
    BOOL openDocumentAnyway;
    NSArray *_missingFonts;
    NSTextField *_descriptionText;
    NSButton *_cancelButton;
    NSButton *_openButton;
}

@property(retain, nonatomic) NSButton *openButton; // @synthesize openButton=_openButton;
@property(retain, nonatomic) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) NSTextField *descriptionText; // @synthesize descriptionText=_descriptionText;
@property(copy, nonatomic) NSArray *missingFonts; // @synthesize missingFonts=_missingFonts;
- (void).cxx_destruct;
- (void)dealloc;
- (void)close:(id)arg1;
- (void)openAnyway:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)runPanelWithMissingFonts:(id)arg1 savingWillChangeFonts:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSRevealPluginsAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)revealPlugins:(id)arg1;

@end

@interface MSModalInputSheet : NSObject <NSWindowDelegate>
{
    NSWindow *panel;
    NSTextField *titleField;
    NSTextField *textField;
    NSTextField *numberField;
    NSPathControl *pathControl;
    BOOL finishedOK;
    long long _type;
    NSString *_label;
    double _numberFieldBinding;
}

@property(nonatomic) double numberFieldBinding; // @synthesize numberFieldBinding=_numberFieldBinding;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)cancel:(id)arg1;
- (void)ok:(id)arg1;
- (id)runPanelWithNibName:(id)arg1 ofType:(long long)arg2 initialString:(id)arg3 label:(id)arg4;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSVerticalRulerViewLayer : MSRulerViewLayer
{
}

- (BOOL)isFlipped;
- (void)drawMetric:(id)arg1 atPoint:(struct CGPoint)arg2 drawBackground:(BOOL)arg3;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)init;

@end

@interface MSMultipleBorderInspectorViewController : MSMultipleStylePartInspectorViewController <BCPopoverDelegate>
{
    MSBorderOptionsInspectorViewController *_borderOptionsController;
    MSTextLabelForUpDownField *_thicknessLabel;
    NSButton *_addStylePartButton;
    NSButton *_advancedOptionsButton;
    BCPopover *_popover;
}

@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSButton *advancedOptionsButton; // @synthesize advancedOptionsButton=_advancedOptionsButton;
@property(retain, nonatomic) NSButton *addStylePartButton; // @synthesize addStylePartButton=_addStylePartButton;
@property(retain, nonatomic) MSTextLabelForUpDownField *thicknessLabel; // @synthesize thicknessLabel=_thicknessLabel;
@property(readonly, nonatomic) MSBorderOptionsInspectorViewController *borderOptionsController; // @synthesize borderOptionsController=_borderOptionsController;
- (void).cxx_destruct;
- (void)dealloc;
- (id)views;
- (id)inspectorForStyleParts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)loadViewControllers;
- (BOOL)shouldShowAdvancedOptionsButton;
- (BOOL)shouldHideAddStylePartButton;
- (void)setLayers:(id)arg1;
- (void)styleDidEnableOrDisable;
- (void)dismissViewController:(id)arg1;
- (void)showAdvancedOptionsAction:(id)arg1;
- (void)prepare;
- (unsigned long long)stylePartType;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCFontSearchField : NSSearchField <NSTextViewDelegate>
{
    NSTableView *_searchResults;
}

@property(nonatomic) __weak NSTableView *searchResults; // @synthesize searchResults=_searchResults;
- (void).cxx_destruct;
- (void)moveFocusToTableView;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMultipleInnerShadowInspectorViewController : MSMultipleShadowInspectorViewController
{
}

- (void)awakeFromNib;
- (id)nibName;
- (BOOL)shouldHideAddStylePartButton;
- (unsigned long long)stylePartType;

@end

@interface MSCloudUploadViewController : MSCloudBaseViewController
{
    NSStackView *_buttonStackView;
    NSProgressIndicator *_progressIndicator;
    NSButton *_cancelButton;
    MSCloudUploadArrowView *_arrowView;
}

@property(retain, nonatomic) MSCloudUploadArrowView *arrowView; // @synthesize arrowView=_arrowView;
@property(retain, nonatomic) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain, nonatomic) NSStackView *buttonStackView; // @synthesize buttonStackView=_buttonStackView;
- (void).cxx_destruct;
- (void)updateProgress;
- (void)cancel:(id)arg1;
- (void)progressDidChangeNotification:(id)arg1;
- (void)cloudBaseViewControllerDidAppear;
- (void)viewWillAppear;
- (void)dealloc;
- (void)viewDidLoad;
- (void)loadView;
- (struct NSEdgeInsets)edgeInsets;

@end

@interface MSLicenseRegistrationWindowController : NSWindowController <NSWindowDelegate>
{
    BOOL _shouldQuitOnWindowClose;
    BOOL _checkForAvailableUpdates;
    BOOL _runningAsModal;
    NSTextField *_titleTextField;
    NSTextField *_descriptionTextField;
    NSView *_contentView;
    NSView *_licenseView;
    NSImageView *_backgroundImageView;
    NSView *_registrationCompletionView;
    NSImageView *_registrationCompletionBackgroundView;
    NSTextField *_licenseTextField;
    NSTextField *_licenseDescriptionField;
    NSView *_buttonFooterView;
    NSView *_defaultButtons;
    NSView *_registrationCompletionButtons;
    NSView *_notSupportedVersionButtons;
    NSView *_tooManyDevicesButtons;
    NSView *_invalidLicenseButtons;
    NSButton *_registerButton;
    NSDate *_licenseUpdateExpirationDate;
}

+ (void)registerWithKey:(id)arg1;
+ (void)showRegistrationWindow;
+ (void)showTrialExpiredModal;
@property(retain, nonatomic) NSDate *licenseUpdateExpirationDate; // @synthesize licenseUpdateExpirationDate=_licenseUpdateExpirationDate;
@property(retain, nonatomic) NSButton *registerButton; // @synthesize registerButton=_registerButton;
@property(retain, nonatomic) NSView *invalidLicenseButtons; // @synthesize invalidLicenseButtons=_invalidLicenseButtons;
@property(retain, nonatomic) NSView *tooManyDevicesButtons; // @synthesize tooManyDevicesButtons=_tooManyDevicesButtons;
@property(retain, nonatomic) NSView *notSupportedVersionButtons; // @synthesize notSupportedVersionButtons=_notSupportedVersionButtons;
@property(retain, nonatomic) NSView *registrationCompletionButtons; // @synthesize registrationCompletionButtons=_registrationCompletionButtons;
@property(retain, nonatomic) NSView *defaultButtons; // @synthesize defaultButtons=_defaultButtons;
@property(retain, nonatomic) NSView *buttonFooterView; // @synthesize buttonFooterView=_buttonFooterView;
@property(retain, nonatomic) NSTextField *licenseDescriptionField; // @synthesize licenseDescriptionField=_licenseDescriptionField;
@property(retain, nonatomic) NSTextField *licenseTextField; // @synthesize licenseTextField=_licenseTextField;
@property(retain, nonatomic) NSImageView *registrationCompletionBackgroundView; // @synthesize registrationCompletionBackgroundView=_registrationCompletionBackgroundView;
@property(retain, nonatomic) NSView *registrationCompletionView; // @synthesize registrationCompletionView=_registrationCompletionView;
@property(retain, nonatomic) NSImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(retain, nonatomic) NSView *licenseView; // @synthesize licenseView=_licenseView;
@property(retain, nonatomic) NSView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) NSTextField *descriptionTextField; // @synthesize descriptionTextField=_descriptionTextField;
@property(retain, nonatomic) NSTextField *titleTextField; // @synthesize titleTextField=_titleTextField;
@property(readonly, nonatomic) BOOL runningAsModal; // @synthesize runningAsModal=_runningAsModal;
@property(nonatomic) BOOL checkForAvailableUpdates; // @synthesize checkForAvailableUpdates=_checkForAvailableUpdates;
@property(nonatomic) BOOL shouldQuitOnWindowClose; // @synthesize shouldQuitOnWindowClose=_shouldQuitOnWindowClose;
- (void).cxx_destruct;
- (void)openLicenseManager:(id)arg1;
- (void)renewLicense:(id)arg1;
- (void)downloadPreviousVersion:(id)arg1;
- (void)openLicenseRecoveryPage:(id)arg1;
- (void)visitStore:(id)arg1;
- (void)registerLicense:(id)arg1;
- (void)didCloseAllDocuments:(id)arg1;
- (void)closeDocumentsAndQuit;
- (void)showContentView:(id)arg1;
- (void)renameButtonsToQuit:(id)arg1;
- (void)showButtonSet:(id)arg1;
- (void)showCopyForActiveLicense;
- (void)showCopyForTrialExpired;
- (void)windowWillClose:(id)arg1;
- (void)loadInitialView;
- (void)windowDidLoad;
- (void)licenseChanged:(id)arg1;
- (void)transformToModal;
- (void)dealloc;
- (id)initWithWindowNibName:(id)arg1 modal:(BOOL)arg2 quitOnClose:(BOOL)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMultipleShadowInspectorViewController : MSMultipleStylePartInspectorViewController
{
    NSButton *_addStylePartButton;
    MSTextLabelForUpDownField *_xOffsetField;
    MSTextLabelForUpDownField *_yOffsetField;
    MSTextLabelForUpDownField *_blurRadiusField;
    MSTextLabelForUpDownField *_spreadField;
}

@property(retain, nonatomic) MSTextLabelForUpDownField *spreadField; // @synthesize spreadField=_spreadField;
@property(retain, nonatomic) MSTextLabelForUpDownField *blurRadiusField; // @synthesize blurRadiusField=_blurRadiusField;
@property(retain, nonatomic) MSTextLabelForUpDownField *yOffsetField; // @synthesize yOffsetField=_yOffsetField;
@property(retain, nonatomic) MSTextLabelForUpDownField *xOffsetField; // @synthesize xOffsetField=_xOffsetField;
@property(retain, nonatomic) NSButton *addStylePartButton; // @synthesize addStylePartButton=_addStylePartButton;
- (void).cxx_destruct;
- (id)views;
- (void)validateSpecialButtons;
- (id)inspectorForStyleParts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)loadViewControllers;
- (BOOL)shouldHideAddStylePartButton;
- (void)prepare;
- (unsigned long long)stylePartType;

@end

@interface MSMultipleStylePartInspectorViewController : NSViewController <MSReorderingContainerDelegate>
{
    NSArray *_layers;
    NSArray *_stylePartViewControllers;
    id <MSStylePartInspectorDelegate> _delegate;
    MSReorderingContainerView *_reorderingContainer;
    NSTextField *_nameField;
    NSTextField *_nameFieldShadow;
    NSView *_nameView;
    NSButton *_removeDisabledStylesButton;
    NSButton *_showAdvancedOptionsButton;
}

@property(retain, nonatomic) NSButton *showAdvancedOptionsButton; // @synthesize showAdvancedOptionsButton=_showAdvancedOptionsButton;
@property(retain, nonatomic) NSButton *removeDisabledStylesButton; // @synthesize removeDisabledStylesButton=_removeDisabledStylesButton;
@property(retain, nonatomic) NSView *nameView; // @synthesize nameView=_nameView;
@property(retain, nonatomic) NSTextField *nameFieldShadow; // @synthesize nameFieldShadow=_nameFieldShadow;
@property(retain, nonatomic) NSTextField *nameField; // @synthesize nameField=_nameField;
@property(retain, nonatomic) MSReorderingContainerView *reorderingContainer; // @synthesize reorderingContainer=_reorderingContainer;
@property(nonatomic) __weak id <MSStylePartInspectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *stylePartViewControllers; // @synthesize stylePartViewControllers=_stylePartViewControllers;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)closeAnyColorPopover;
- (void)openPopoverAtIndex:(unsigned long long)arg1;
- (BOOL)shouldShowAdvancedOptionsButton;
- (void)prepareInspector:(id)arg1 parts:(id)arg2 index:(unsigned long long)arg3;
- (BOOL)hasEnabledStyle;
- (void)dealloc;
- (double)startingOffsetForStackingContainerBackground:(id)arg1;
- (void)containerBackground:(id)arg1 dragDidReorderChildAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (unsigned long long)stylePartType;
- (void)deleteUnusedStylePartsAction:(id)arg1;
- (unsigned long long)tagFromSender:(id)arg1;
- (void)duplicateStylePartAction:(id)arg1;
- (void)deleteStylePartAction:(id)arg1;
- (id)addStylePartsForSelection;
- (BOOL)hasPopOver;
- (id)lastEnabledStylePartController;
- (void)addStylePartAction:(id)arg1;
- (id)rotatedStyleParts;
- (void)validateSpecialButtons;
- (void)prepare;
- (void)prepareForReuse;
- (id)viewForStyleAtOffset:(long long)arg1 index:(unsigned long long)arg2;
- (void)styleDidEnableOrDisable;
- (void)resizeViewToFit;
- (id)inspectorForStyleParts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)validateAdvancedOptionsButton;
- (void)validateRemoveDisabledStylesButton;
- (void)loadViewControllers;
- (void)awakeFromNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSChangeFontAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)changeTextLayerFont:(id)arg1;

@end

@interface MSInsertArtboardAction : MSBaseInsertAction
{
}

- (BOOL)isTouchBarItemSelected;
- (BOOL)touchBarItemButtonShouldShowState;
- (id)touchBarImage;
- (id)imageName;
- (void)doPerformAction:(id)arg1;
- (SEL)preferredMenuAction;
- (void)insertArtboard:(id)arg1;

@end

@interface MSCloudReuploadViewController : MSCloudBaseViewController
{
    NSStackView *_buttonStackView;
    NSButton *_uploadButton;
    NSButton *_cancelButton;
}

@property(retain, nonatomic) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) NSButton *uploadButton; // @synthesize uploadButton=_uploadButton;
@property(retain, nonatomic) NSStackView *buttonStackView; // @synthesize buttonStackView=_buttonStackView;
- (void).cxx_destruct;
- (void)cancel:(id)arg1;
- (void)upload:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;

@end

@interface MSCreateSharedStyleAction : MSBaseSharedStyleAction
{
}

- (id)label;
- (void)doPerformAction:(id)arg1;
- (void)createSharedStyle:(id)arg1;

@end

@interface MSAssetScrubberItemView : NSScrubberItemView
{
    BOOL _isFirstInCollection;
    BOOL _isLastInCollection;
    MSColor *_color;
    NSColorSpace *_canvasColorSpace;
    MSGradient *_gradient;
    MSImageData *_pattern;
    double _tailPadding;
    NSImage *_cachedPreviewImage;
}

@property(nonatomic) __weak NSImage *cachedPreviewImage; // @synthesize cachedPreviewImage=_cachedPreviewImage;
@property(readonly, nonatomic) double tailPadding; // @synthesize tailPadding=_tailPadding;
@property(readonly, nonatomic) BOOL isLastInCollection; // @synthesize isLastInCollection=_isLastInCollection;
@property(readonly, nonatomic) BOOL isFirstInCollection; // @synthesize isFirstInCollection=_isFirstInCollection;
@property(readonly, nonatomic) MSImageData *pattern; // @synthesize pattern=_pattern;
@property(readonly, nonatomic) MSGradient *gradient; // @synthesize gradient=_gradient;
@property(readonly, nonatomic) NSColorSpace *canvasColorSpace; // @synthesize canvasColorSpace=_canvasColorSpace;
@property(readonly, nonatomic) MSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)patternPreviewImageWithDrawingBounds:(struct CGRect)arg1;
- (id)gradientPreviewImageWithDrawingBounds:(struct CGRect)arg1;
- (id)colorPreviewImageWithDrawingBounds:(struct CGRect)arg1;
- (id)previewImage;
- (struct CGRect)deviceColorPreviewRectForRect:(struct CGRect)arg1 drawingBorder:(BOOL)arg2;
- (id)clipPathForRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
- (id)clipPath;
- (struct CGRect)drawingBounds;
- (BOOL)shouldDrawBorderForColor:(id)arg1;
- (id)initWithAssetAtIndex:(unsigned long long)arg1 amongAssets:(id)arg2 canvasColorSpace:(id)arg3 tailPadding:(double)arg4;

@end

@interface MSDragHandleGestureRecognizer : MSDragToMoveOrCopyGestureRecognizer
{
    NSAffineTransform *_curveAdjustmentLockingTransform;
    struct CGPoint _originalHandleLocation;
}

@property(copy, nonatomic) NSAffineTransform *curveAdjustmentLockingTransform; // @synthesize curveAdjustmentLockingTransform=_curveAdjustmentLockingTransform;
@property(nonatomic) struct CGPoint originalHandleLocation; // @synthesize originalHandleLocation=_originalHandleLocation;
- (void).cxx_destruct;
- (struct CGPoint)locationInLayer:(id)arg1;
- (void)setCenterForCurveAdjustmentLocking:(struct CGPoint)arg1 slope:(double)arg2;
@property(readonly, nonatomic) BOOL shouldSteadyCurveAdjustmentHandle;
- (void)reset;

@end

@interface MSRunPluginAction : MSAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (void)runPlugin:(id)arg1;

@end

@interface MSWelcomeToSketchAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)welcomeToSketch:(id)arg1;

@end

@interface MSNonAutosavingDocument : MSDocument
{
}

+ (BOOL)autosavesInPlace;
- (id)fileType;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface MSCloudLoginWindowController : NSWindowController
{
    BOOL _isLoading;
    id <MSCloudLoginWindowControllerDelegate> _delegate;
    NSString *_email;
    NSString *_password;
    NSTextField *_titleLabel;
}

@property(retain, nonatomic) NSTextField *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(retain, nonatomic) NSString *email; // @synthesize email=_email;
@property(nonatomic) BOOL isLoading; // @synthesize isLoading=_isLoading;
@property(nonatomic) __weak id <MSCloudLoginWindowControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)cancelButtonClicked:(id)arg1;
- (void)openBrowserBucconClicked:(id)arg1;
- (void)signInButtonClicked:(id)arg1;
- (void)windowDidLoad;

@end

@interface MSSymbolView : NSView
{
    BOOL _hasShadow;
    BOOL _previewDirty;
    MSSymbolMaster *_symbol;
    NSString *_label;
    NSColor *_labelColor;
    NSColor *_labelBackgroundColor;
    unsigned long long _borders;
    NSImage *_previewImage;
    MSImmutableLayerAncestry *_symbolAncestry;
}

@property(nonatomic) BOOL previewDirty; // @synthesize previewDirty=_previewDirty;
@property(retain, nonatomic) MSImmutableLayerAncestry *symbolAncestry; // @synthesize symbolAncestry=_symbolAncestry;
@property(retain, nonatomic) NSImage *previewImage; // @synthesize previewImage=_previewImage;
@property(nonatomic) BOOL hasShadow; // @synthesize hasShadow=_hasShadow;
@property(nonatomic) unsigned long long borders; // @synthesize borders=_borders;
@property(retain, nonatomic) NSColor *labelBackgroundColor; // @synthesize labelBackgroundColor=_labelBackgroundColor;
@property(retain, nonatomic) NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property(retain, nonatomic) NSString *label; // @synthesize label=_label;
@property(retain, nonatomic) MSSymbolMaster *symbol; // @synthesize symbol=_symbol;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawBorder;
- (void)drawBorderFrom:(long long)arg1 to:(long long)arg2;
- (void)drawSymbol;
- (void)drawLabel;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)updateSymbolPreview;
- (void)generatePreviewInBackground;
- (struct CGRect)previewBounds;

@end

@interface MSShowReleaseNotesWindowAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)showReleaseNotesWindow:(id)arg1;

@end

@interface MSNormalBaseEventHandler : MSEventHandler
{
}

- (BOOL)mayShowResizingInspectorView;
- (void)configureInspector:(id)arg1;
- (void)resizeParentsOfSelectedLayersToFit;
- (BOOL)canDuplicate;
- (id)cursorForCorner:(long long)arg1 transformStruct:(struct _CHTransformStruct)arg2;

@end

@interface MSCallToActionButton : MSHoverButton
{
}

+ (Class)cellClass;

@end

@interface MSCallToActionButtonCell : MSHoverButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (id)backgroundColor;
- (id)attributedAlternateTitle;
- (id)attributedTitle;

@end

@interface MSNormalEventContextualMenuBuilder : NSObject
{
    NSMenu *_standardLayerMenu;
    NSMenu *_textLayerMenu;
    NSMenu *_groupLayerMenu;
    NSMenu *_multipleSelectionMenu;
    NSMenu *_noSelectionMenu;
    NSMenu *_imageLayerMenu;
    NSMenu *_symbolInstanceMenu;
    NSMenu *_artboardMenu;
    NSMenu *_sliceMenu;
}

@property(retain, nonatomic) NSMenu *sliceMenu; // @synthesize sliceMenu=_sliceMenu;
@property(retain, nonatomic) NSMenu *artboardMenu; // @synthesize artboardMenu=_artboardMenu;
@property(retain, nonatomic) NSMenu *symbolInstanceMenu; // @synthesize symbolInstanceMenu=_symbolInstanceMenu;
@property(retain, nonatomic) NSMenu *imageLayerMenu; // @synthesize imageLayerMenu=_imageLayerMenu;
@property(retain, nonatomic) NSMenu *noSelectionMenu; // @synthesize noSelectionMenu=_noSelectionMenu;
@property(retain, nonatomic) NSMenu *multipleSelectionMenu; // @synthesize multipleSelectionMenu=_multipleSelectionMenu;
@property(retain, nonatomic) NSMenu *groupLayerMenu; // @synthesize groupLayerMenu=_groupLayerMenu;
@property(retain, nonatomic) NSMenu *textLayerMenu; // @synthesize textLayerMenu=_textLayerMenu;
@property(retain, nonatomic) NSMenu *standardLayerMenu; // @synthesize standardLayerMenu=_standardLayerMenu;
- (void).cxx_destruct;
- (id)symbolInstanceOnlyItems;
- (id)symbolItems;
- (id)groupOnlyItems;
- (id)imageOnlyItems;
- (id)textOnlyItems;
- (id)noSelectionItems;
- (id)distributeItems;
- (id)alignItems;
- (id)lockHideItems;
- (id)maskItems;
- (id)transformItems;
- (id)groupRenameItems;
- (id)pasteCopyStyleItems;
- (id)moveForwardBackwardItems;
- (id)pickLayerItems;
- (id)cutCopyPasteItems;
- (id)replaceWithSymbolItems;
- (id)menuWithItemGroups:(id)arg1;
- (id)dataFeedsItems;
- (id)standardMenuItemGroups;
- (void)constructMenus;
- (id)menuForLayers:(id)arg1;

@end

@interface MSExportFormatPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)drawTitleWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSMultipleFillInspectorViewController : MSMultipleStylePartInspectorViewController <BCPopoverDelegate>
{
    MSTextLabelForUpDownField *_opacityLabel;
    NSButton *_addStylePartButton;
    NSButton *_advancedOptionsButton;
    BCPopover *_popover;
}

@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSButton *advancedOptionsButton; // @synthesize advancedOptionsButton=_advancedOptionsButton;
@property(retain, nonatomic) NSButton *addStylePartButton; // @synthesize addStylePartButton=_addStylePartButton;
@property(retain, nonatomic) MSTextLabelForUpDownField *opacityLabel; // @synthesize opacityLabel=_opacityLabel;
- (void).cxx_destruct;
- (id)views;
- (id)inspectorForStyleParts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)loadViewControllers;
- (unsigned long long)stylePartType;
- (void)dismissViewController:(id)arg1;
- (BOOL)shouldShowAdvancedOptionsButton;
- (void)viewWillDisappear;
- (BOOL)shouldHideAddStylePartButton;
- (void)prepare;
- (void)showAdvancedOptionsAction:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSNormalEventData : NSObject
{
    BOOL _hasMultipleTouches;
    BOOL _didMouseDown;
    MSLayer *_resizingLayer;
    long long _resizingHandle;
    long long _dragMode;
    MSSnapperData *_snapperData;
    struct CGPoint _mouseDown;
    struct CGPoint _midPoint;
    struct CGPoint _originalScrollOrigin;
}

@property(retain, nonatomic) MSSnapperData *snapperData; // @synthesize snapperData=_snapperData;
@property(nonatomic) long long dragMode; // @synthesize dragMode=_dragMode;
@property(nonatomic) long long resizingHandle; // @synthesize resizingHandle=_resizingHandle;
@property(retain, nonatomic) MSLayer *resizingLayer; // @synthesize resizingLayer=_resizingLayer;
@property(nonatomic) struct CGPoint originalScrollOrigin; // @synthesize originalScrollOrigin=_originalScrollOrigin;
@property(nonatomic) struct CGPoint midPoint; // @synthesize midPoint=_midPoint;
@property(nonatomic) struct CGPoint mouseDown; // @synthesize mouseDown=_mouseDown;
@property(nonatomic) BOOL didMouseDown; // @synthesize didMouseDown=_didMouseDown;
@property(nonatomic) BOOL hasMultipleTouches; // @synthesize hasMultipleTouches=_hasMultipleTouches;
- (void).cxx_destruct;

@end

@interface MSNormalEventHandler : MSNormalBaseEventHandler <MSGestureRecognizerDelegate>
{
    BOOL _ignoreNextKeyDownEventUntilModifiersChange;
    MSLayerMeasurementRenderer *_measurementRenderer;
    MSLayer *_hoveredLayer;
    MSNormalEventContextualMenuBuilder *_menuBuilder;
    MSNormalEventData *_eventData;
    MSOpacityKeyboardShortcutRecognizer *_opacityShortcutRecognizer;
    NSString *_duplicatedObjectID;
    MSDragToSelectGestureRecognizer *_selectionGestureRecognizer;
    MSDragToMoveOrCopyGestureRecognizer *_dragGestureRecognizer;
    MSLayer *_activeLayer;
    struct CGSize _duplicateOffset;
}

@property(retain, nonatomic) MSLayer *activeLayer; // @synthesize activeLayer=_activeLayer;
@property(readonly, nonatomic) MSDragToMoveOrCopyGestureRecognizer *dragGestureRecognizer; // @synthesize dragGestureRecognizer=_dragGestureRecognizer;
@property(readonly, nonatomic) MSDragToSelectGestureRecognizer *selectionGestureRecognizer; // @synthesize selectionGestureRecognizer=_selectionGestureRecognizer;
@property(retain, nonatomic) NSString *duplicatedObjectID; // @synthesize duplicatedObjectID=_duplicatedObjectID;
@property(nonatomic) struct CGSize duplicateOffset; // @synthesize duplicateOffset=_duplicateOffset;
@property(readonly, nonatomic) MSOpacityKeyboardShortcutRecognizer *opacityShortcutRecognizer; // @synthesize opacityShortcutRecognizer=_opacityShortcutRecognizer;
@property(retain, nonatomic) MSNormalEventData *eventData; // @synthesize eventData=_eventData;
@property(retain, nonatomic) MSNormalEventContextualMenuBuilder *menuBuilder; // @synthesize menuBuilder=_menuBuilder;
@property(retain, nonatomic) MSLayer *hoveredLayer; // @synthesize hoveredLayer=_hoveredLayer;
@property(readonly, nonatomic) MSLayerMeasurementRenderer *measurementRenderer; // @synthesize measurementRenderer=_measurementRenderer;
- (void).cxx_destruct;
- (BOOL)gestureRecognizer:(id)arg1 shouldAttemptToRecognizeAtPoint:(struct CGPoint)arg2 modifierFlags:(unsigned long long)arg3;
- (void)zoomValueWillChangeTo:(double)arg1;
- (void)selectionDidChangeTo:(id)arg1;
- (void)currentPageDidChange;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (void)cut:(id)arg1;
- (BOOL)layerCanBeSelected:(id)arg1;
- (unsigned long long)numberOfSelectableLayers:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)tabInDirection:(BOOL)arg1;
- (id)layerSnapper;
- (void)changeColor:(id)arg1;
- (void)deleteNormalLayers:(id)arg1;
- (void)delete:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (id)menu;
- (void)selectAll:(id)arg1;
- (void)dragToSelect:(id)arg1;
- (void)ignoreNextKeyDownEventUntilModifiersChange;
- (void)moveLayer:(id)arg1 toOffset:(struct CGPoint)arg2 fromPointInAbsoluteCoordinates:(struct CGPoint)arg3;
- (void)endDuplicateDragging:(BOOL)arg1;
- (void)beginDuplicateDragging;
- (void)moveDraggedLayersToOffset:(struct CGPoint)arg1;
- (void)layerDragged:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)drawPathsInShapeGroup:(id)arg1;
- (void)drawSelectedShapePathLayers;
- (void)drawMultipleSelection;
- (BOOL)shouldDrawSelectionForLayer:(id)arg1;
- (void)drawLayerHighlight:(id)arg1;
- (void)drawLayerSelection;
- (void)duplicate:(id)arg1;
- (void)keyDownMoveCanvasIncremental:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)keyDownMoveToEndOfCanvas:(unsigned short)arg1;
- (void)keyDownMoveCanvas:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)flashSnapsForLayer:(id)arg1;
- (void)opacityShortcutRecognized:(id)arg1;
- (void)keyDownResizeLayers:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (BOOL)layersAreNotIntersectingTheirArtboards:(id)arg1;
- (void)moveLayersFromArtboardToParentPage:(id)arg1;
- (void)moveLayers:(id)arg1 toArtboard:(id)arg2;
- (id)parentArtboardWeCanMoveLayersTo:(id)arg1;
- (void)moveLayersOnOrOffArtboard:(id)arg1;
- (void)keyDownMoveLayers:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)cancelOperation:(id)arg1;
- (id)artboardsInReadingOrder;
- (id)currentFocussedArtboard;
- (struct CGRect)artboardRectInViewCoordinates:(id)arg1 withScrollOrigin:(struct CGPoint)arg2;
- (struct CGRect)artboardRectInViewCoordinates:(id)arg1;
- (void)focusOnArtboard:(id)arg1;
- (void)moveToNextArtboard;
- (void)moveToPreviousArtboard;
- (void)keyDown:(id)arg1;
- (void)trackMouse:(id)arg1;
- (BOOL)canHighlightLayer:(id)arg1;
- (BOOL)isMouseHoveringMultipleSelectedLayerCorner;
- (long long)multipleSelectedLayerCornerAtPoint:(struct CGPoint)arg1;
- (BOOL)isMouseHoveringLayer:(id)arg1 corner:(struct CGPoint)arg2 flags:(unsigned long long)arg3;
- (BOOL)isMouseHoveringLayerCorner;
- (BOOL)shouldNotChangeSelectionForFlags:(unsigned long long)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseExited;
- (void)selectLayer:(id)arg1;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseDownOnLayer:(id)arg1 atPoint:(struct CGPoint)arg2 clickCount:(long long)arg3 flags:(unsigned long long)arg4;
- (void)mouseDownDoubleClick:(struct CGPoint)arg1 onLayer:(id)arg2;
- (void)enterMultipleResizeModeWithMouse:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3 handle:(long long *)arg4 manager:(id)arg5;
- (void)enterLineResizeModeWithMouse:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3 manager:(id)arg4;
- (void)enterRotateModeWithMouse:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3 manager:(id)arg4;
- (void)enterResizeModeWithMouse:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3 manager:(id)arg4;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)toolbarIdentifier;
- (id)initWithManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSNormalInspector : NSViewController <MSStylePartInspectorDelegate, MSInspectorChildController>
{
    MSExportInspectorViewController *exportViewController;
    MSInspectorStackView *_stackView;
    NSArray *_layers;
    MSEventHandler *_eventHandler;
    NSScrollView *_scrollView;
    MSStandardInspectorViewControllers *_standardInspectors;
}

@property(readonly, nonatomic) MSStandardInspectorViewControllers *standardInspectors; // @synthesize standardInspectors=_standardInspectors;
@property(retain, nonatomic) NSScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) MSEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(retain, nonatomic) MSInspectorStackView *stackView; // @synthesize stackView=_stackView;
- (void).cxx_destruct;
- (void)adjustInspectorToColorPopover:(id)arg1 sender:(id)arg2;
- (id)views;
- (void)beginRenameSharedObject:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)reloadSharedObjectsSection;
- (void)layerWithSharedStyleDidChange;
- (void)showBorderOptionsAction:(id)arg1;
- (void)showFillOptionsAction:(id)arg1;
- (void)changeTextLayerFont:(id)arg1;
- (void)colorMagnifierAction:(id)arg1;
- (void)closeAnyColorPopover;
- (void)changeColor:(id)arg1;
- (void)layerPositionPossiblyChanged;
- (void)prepareViewControllers;
- (void)reloadInspectorStack:(id)arg1;
- (void)prepareForDisplay;
- (void)openPopoverForStylePart:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (void)selectionDidChangeTo:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAddAsLibraryAction : MSDocumentAction
{
}

- (void)addAsLibrary;
- (void)document:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)saveAndAddLibrary;
- (void)askToSaveModificationsAndAddLibrary;
- (void)doPerformAction:(id)arg1;
- (void)addAsLibraryAction:(id)arg1;
- (BOOL)validate;

@end

@interface MSBaseExportableInspectorViewController : NSViewController <MSSliceLayerWatcher, MSInspectorChildController>
{
    MSInspectorStackView *_stackView;
    NSArray *_layers;
    NSTimer *_refreshTimer;
    NSMutableArray *_sliceViews;
    NSMutableSet *_sliceViewPool;
    MSSeparatorlessView *_sliceViewContainerView;
}

@property(retain, nonatomic) MSSeparatorlessView *sliceViewContainerView; // @synthesize sliceViewContainerView=_sliceViewContainerView;
@property(retain, nonatomic) NSMutableSet *sliceViewPool; // @synthesize sliceViewPool=_sliceViewPool;
@property(retain, nonatomic) NSMutableArray *sliceViews; // @synthesize sliceViews=_sliceViews;
@property(retain, nonatomic) NSTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(retain, nonatomic) MSInspectorStackView *stackView; // @synthesize stackView=_stackView;
- (void).cxx_destruct;
- (BOOL)wantsSeparatorAfterViews;
- (void)sizeSliceView;
- (void)reloadSlicesFromArray:(id)arg1;
- (id)sliceViewWithRect:(struct CGRect)arg1;
- (void)removeAllSliceViews;
- (void)loadSliceViews;
- (void)refreshTimerFired:(id)arg1;
- (void)scheduleSliceViewReload;
- (void)refreshAction:(id)arg1;
- (id)document;
- (void)layerPositionPossiblyChanged;
- (id)previewContainerView;
- (id)views;
- (void)sliceLayerDidChange:(id)arg1;
- (void)prepareForDisplay;
- (void)selectionDidChangeTo:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSFlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface MSConvertSymbolOrDetachInstancesAction : MSDocumentAction
{
}

- (BOOL)hasDynamicTitle;
- (void)convertSymbolMastersToArtboards:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (BOOL)containsSymbolMasters:(id)arg1;
- (void)detachSymbolInstances:(id)arg1;
- (id)label;
- (BOOL)validate;

@end

@interface MSNormalMultipleResizeEventHandler : MSNormalBaseEventHandler
{
    NSArray *_layers;
    long long _resizingCorner;
    MSSnapper *_layerSnapper;
    MSNormalEventData *_eventData;
    double _originalProportions;
    NSDictionary *_layerFramesBeforeResize;
    NSDictionary *_absoluteLayerFramesBeforeResize;
    struct CGPoint _midPoint;
    struct CGPoint _oppositePoint;
    struct CGRect _originalRect;
}

@property(nonatomic) struct CGPoint oppositePoint; // @synthesize oppositePoint=_oppositePoint;
@property(nonatomic) struct CGPoint midPoint; // @synthesize midPoint=_midPoint;
@property(retain, nonatomic) NSDictionary *absoluteLayerFramesBeforeResize; // @synthesize absoluteLayerFramesBeforeResize=_absoluteLayerFramesBeforeResize;
@property(retain, nonatomic) NSDictionary *layerFramesBeforeResize; // @synthesize layerFramesBeforeResize=_layerFramesBeforeResize;
@property(nonatomic) double originalProportions; // @synthesize originalProportions=_originalProportions;
@property(nonatomic) struct CGRect originalRect; // @synthesize originalRect=_originalRect;
@property(retain, nonatomic) MSNormalEventData *eventData; // @synthesize eventData=_eventData;
@property(retain, nonatomic) MSSnapper *layerSnapper; // @synthesize layerSnapper=_layerSnapper;
@property(nonatomic) long long resizingCorner; // @synthesize resizingCorner=_resizingCorner;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (long long)oppositeCorner;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (struct CGRect)placeRectInOppositeCorner:(struct CGRect)arg1;
- (struct CGRect)makeRectConform:(struct CGRect)arg1 toProportions:(BOOL)arg2;
- (unsigned long long)validSnapEdgesForResizingCorner;
- (struct CGRect)snapRect:(struct CGRect)arg1;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)calculateOppositePoint;
- (void)calculateMidPoint;
- (void)displayResizeCursor;
- (void)storeCurrentLayerFrame;
- (void)flattenSubpathsIfNecessary:(id)arg1;
- (void)flattenRotatedShapes;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;

@end

@interface MSShapeAction : MSDocumentAction
{
}

- (BOOL)hasSubMenu;
- (id)tooltip;
- (id)submenuActionIDs;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface MSNormalResizeEventHandler : MSNormalBaseEventHandler
{
    struct CGPoint _midPoint;
    struct CGPoint _oppositePoint;
    struct CGPoint _oppositeRotatedPoint;
    BOOL _layerRectWasIntegral;
    long long _resizingCorner;
    MSLayer *_resizingLayer;
    MSSnapper *_layerSnapper;
    MSNormalEventData *_eventData;
    MSResizeGestureRecognizer *_resizeGestureRecognizer;
    MSSavedLayerFrames *_originalFrames;
}

@property(retain, nonatomic) MSSavedLayerFrames *originalFrames; // @synthesize originalFrames=_originalFrames;
@property(nonatomic) BOOL layerRectWasIntegral; // @synthesize layerRectWasIntegral=_layerRectWasIntegral;
@property(readonly, nonatomic) MSResizeGestureRecognizer *resizeGestureRecognizer; // @synthesize resizeGestureRecognizer=_resizeGestureRecognizer;
@property(retain, nonatomic) MSNormalEventData *eventData; // @synthesize eventData=_eventData;
@property(retain, nonatomic) MSSnapper *layerSnapper; // @synthesize layerSnapper=_layerSnapper;
@property(retain, nonatomic) MSLayer *resizingLayer; // @synthesize resizingLayer=_resizingLayer;
@property(nonatomic) long long resizingCorner; // @synthesize resizingCorner=_resizingCorner;
- (void).cxx_destruct;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (void)finishResizing;
- (void)flipResizingLayerIfNecessary:(struct CGPoint)arg1;
- (unsigned long long)validSnapEdgesForResizingCorner;
- (long long)oppositeCorner;
- (struct CGRect)placeRectInOppositeCorner:(struct CGRect)arg1;
- (struct CGRect)makeRect:(struct CGRect)arg1 conformToProportions:(BOOL)arg2;
- (struct CGPoint)mouseAfterAccountingForRotation:(struct CGPoint)arg1;
- (void)makeLayerIntegral:(id)arg1;
- (struct CGRect)snapRect:(struct CGRect)arg1 constrainProportions:(BOOL)arg2;
- (struct CGRect)newRectForResize:(struct CGPoint)arg1 gestureRecognizer:(id)arg2;
- (void)updateResize:(id)arg1;
- (void)calculateOppositeRotatedPoint;
- (void)calculateOppositePoint;
- (void)calculateMidPoint;
- (void)displayResizeCursor;
- (void)prepareForResize;
- (void)resizeLayer:(id)arg1;
- (id)initWithManager:(id)arg1;

@end

@interface MSCloudInvalidLicenseViewController : MSCloudBaseViewController
{
    NSButton *_learnMoreButton;
}

@property(retain, nonatomic) NSButton *learnMoreButton; // @synthesize learnMoreButton=_learnMoreButton;
- (void).cxx_destruct;
- (void)learnMore:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;

@end

@interface MSToggleBaseAction : MSDocumentAction
{
}

- (BOOL)isActive;
- (id)root;
- (void)setGrid:(id)arg1;
- (id)grid;
- (id)prepareNewGrid;
- (void)doPerformAction:(id)arg1;

@end

@interface MSToggleGridAction : MSToggleBaseAction
{
}

- (BOOL)validate;
- (id)label;
- (id)imageName;
- (void)setGrid:(id)arg1;
- (id)grid;
- (id)prepareNewGrid;
- (void)toggleGrid:(id)arg1;

@end

@interface MSToggleLayoutAction : MSToggleBaseAction
{
}

- (BOOL)validate;
- (id)label;
- (id)imageName;
- (void)setGrid:(id)arg1;
- (id)grid;
- (id)prepareNewGrid;
- (void)toggleLayout:(id)arg1;

@end

@interface MSHideAllGridsAndLayoutsAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)hideAllGridsAndLayouts:(id)arg1;
- (BOOL)validate;

@end

@interface MSFastPathBuilder : NSObject
{
    unsigned long long mWidth;
    unsigned long long mHeight;
    char *mMaskData;
    unsigned long long mMaskRowBytes;
}

+ (id)pathForMaskImage:(id)arg1;
- (void)flushPath:(id)arg1 cachedPoint2:(struct CGPoint *)arg2;
- (void)addPoint:(struct CGPoint)arg1 toPath:(id)arg2 cachedPoint1:(struct CGPoint *)arg3 cachedPoint2:(struct CGPoint *)arg4;
- (void)removeSegment:(id)arg1 fromSegmentPath:(id)arg2;
- (void)unwindOneSegmentPath:(id)arg1 intoPath:(id)arg2;
- (id)convertSegmentsIntoPath:(id)arg1;
- (struct CGPoint)pointFromValue:(id)arg1;
- (id)valueFromPoint:(struct CGPoint)arg1;
- (void)insertLineStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2 intoDictionary:(id)arg3;
- (id)buildLineSegments;
- (id)path;
- (void)dealloc;
- (id)initWithMask:(struct CGImage *)arg1;

@end

@interface MSNormalResizeLineEventHandler : MSNormalBaseEventHandler
{
    MSShapeGroup *_lineShape;
    long long _pointIndex;
    MSSnapper *_layerSnapper;
    MSNormalEventData *_eventData;
}

@property(retain, nonatomic) MSNormalEventData *eventData; // @synthesize eventData=_eventData;
@property(retain, nonatomic) MSSnapper *layerSnapper; // @synthesize layerSnapper=_layerSnapper;
@property(nonatomic) long long pointIndex; // @synthesize pointIndex=_pointIndex;
@property(retain, nonatomic) MSShapeGroup *lineShape; // @synthesize lineShape=_lineShape;
- (void).cxx_destruct;
- (struct CGPoint)roundMouse:(struct CGPoint)arg1;
- (id)cursorForDegrees:(long long)arg1;
- (void)displayResizeCursor;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (struct CGPoint)alignPoint:(struct CGPoint)arg1 withShiftTo:(struct CGPoint)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;

@end

@interface MSScaleAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)scale:(id)arg1;

@end

@interface MSFillInspectorViewController : MSStylePartInspectorViewController
{
    NSPopUpButton *_blendingPopUpButton;
    MSStylePartPreviewButton *_colorButton;
    NSTextField<MSUpDownProtocol> *_opacityField;
}

@property(retain, nonatomic) NSTextField<MSUpDownProtocol> *opacityField; // @synthesize opacityField=_opacityField;
@property(retain, nonatomic) MSStylePartPreviewButton *colorButton; // @synthesize colorButton=_colorButton;
@property(retain, nonatomic) NSPopUpButton *blendingPopUpButton; // @synthesize blendingPopUpButton=_blendingPopUpButton;
- (void).cxx_destruct;
- (void)dealloc;
- (void)opacityFieldAction:(id)arg1;
- (void)prepare;
- (void)viewDidLoad;

@end

@interface MSFontNamesTableView : NSTableView
{
    NSSearchField *_searchField;
}

@property(nonatomic) __weak NSSearchField *searchField; // @synthesize searchField=_searchField;
- (void).cxx_destruct;
- (void)cancelOperation:(id)arg1;
- (void)keyDown:(id)arg1;

@end

@interface MSPluginsPreferencePane : MSPreferencePane <NSTableViewDelegate, MSDropableViewDelegate, NSTextFieldDelegate>
{
    MSPluginsPreferenceTableCellView *_pluginCellViewForHeightCalculations;
    BOOL _enableUpdateAllButton;
    BOOL _observingPlugins;
    NSArrayController *_pluginsArrayController;
    NSPredicate *_pluginFilterPredicate;
    NSImage *_zeroPluginsImage;
    NSString *_zeroPluginsTitle;
    NSString *_zeroPluginsText;
    NSSearchField *_filterTextField;
    BCKeyEventActionTableView *_tableView;
    NSButton *_getPluginsButton;
    NSControl *_contextMenuControl;
    NSMenu *_contextMenu;
    NSButton *_spyglassFilterButton;
    MSPluginManager *_pluginManager;
    NSArray *_filteredPlugins;
    NSCache *_rowHeightCache;
    NSImageView *_zeroPluginsImageView;
    long long _originalHeightUpdatesAvailable;
    long long _originalHeightIncompatiblePlugin;
    NSArray *_selectedItemIdentifiers;
    NSNib *_tableCellViewNib;
}

+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;
@property(retain, nonatomic) NSNib *tableCellViewNib; // @synthesize tableCellViewNib=_tableCellViewNib;
@property(retain, nonatomic) NSArray *selectedItemIdentifiers; // @synthesize selectedItemIdentifiers=_selectedItemIdentifiers;
@property(nonatomic) long long originalHeightIncompatiblePlugin; // @synthesize originalHeightIncompatiblePlugin=_originalHeightIncompatiblePlugin;
@property(nonatomic) long long originalHeightUpdatesAvailable; // @synthesize originalHeightUpdatesAvailable=_originalHeightUpdatesAvailable;
@property(nonatomic) __weak NSImageView *zeroPluginsImageView; // @synthesize zeroPluginsImageView=_zeroPluginsImageView;
@property(nonatomic) BOOL observingPlugins; // @synthesize observingPlugins=_observingPlugins;
@property(retain, nonatomic) NSCache *rowHeightCache; // @synthesize rowHeightCache=_rowHeightCache;
@property(copy, nonatomic) NSArray *filteredPlugins; // @synthesize filteredPlugins=_filteredPlugins;
@property(nonatomic) __weak MSPluginManager *pluginManager; // @synthesize pluginManager=_pluginManager;
@property(nonatomic) BOOL enableUpdateAllButton; // @synthesize enableUpdateAllButton=_enableUpdateAllButton;
@property(nonatomic) __weak NSButton *spyglassFilterButton; // @synthesize spyglassFilterButton=_spyglassFilterButton;
@property(nonatomic) __weak NSMenu *contextMenu; // @synthesize contextMenu=_contextMenu;
@property(nonatomic) __weak NSControl *contextMenuControl; // @synthesize contextMenuControl=_contextMenuControl;
@property(nonatomic) __weak NSButton *getPluginsButton; // @synthesize getPluginsButton=_getPluginsButton;
@property(nonatomic) __weak BCKeyEventActionTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak NSSearchField *filterTextField; // @synthesize filterTextField=_filterTextField;
@property(copy, nonatomic) NSString *zeroPluginsText; // @synthesize zeroPluginsText=_zeroPluginsText;
@property(copy, nonatomic) NSString *zeroPluginsTitle; // @synthesize zeroPluginsTitle=_zeroPluginsTitle;
@property(retain, nonatomic) NSImage *zeroPluginsImage; // @synthesize zeroPluginsImage=_zeroPluginsImage;
@property(copy, nonatomic) NSPredicate *pluginFilterPredicate; // @synthesize pluginFilterPredicate=_pluginFilterPredicate;
@property(retain, nonatomic) NSArrayController *pluginsArrayController; // @synthesize pluginsArrayController=_pluginsArrayController;
- (void).cxx_destruct;
- (void)updateAndReloadPluginsWithBlock:(CDUnknownBlockType)arg1;
- (BOOL)view:(id)arg1 performDragOperation:(id)arg2;
- (void)installPluginsWithURLArray:(id)arg1;
- (unsigned long long)view:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)view:(id)arg1 draggingEntered:(id)arg2;
- (id)draggedURLsFromPasteboard:(id)arg1;
- (id)draggedTypesForView:(id)arg1;
- (id)makePluginCellView;
@property(readonly, nonatomic) MSPluginsPreferenceTableCellView *pluginCellViewForHeightCalculations;
- (id)attributedStringUpdateAvailableLinkForString:(id)arg1;
- (void)configurePluginUpdateInfoButton:(id)arg1 withPluginInfo:(id)arg2;
- (id)tableCellViewContainingControl:(id)arg1;
- (unsigned long long)rowForControl:(id)arg1;
- (void)setSelectedIndexesFromSelectionIdentifierArray;
- (void)setSelectionIdentifierArrayFromSelectionIndexes;
- (void)addPluginEnableToggleMenuItemWithPluginInfos:(id)arg1 toMenu:(id)arg2;
- (BOOL)areAnyPluginsDisabled;
- (BOOL)areAnyPluginsEnabled;
- (BOOL)areAllPluginsDisabled:(id)arg1;
- (void)disablePluginInfo:(id)arg1;
- (void)enablePluginInfo:(id)arg1;
- (void)disableAllPlugins:(id)arg1;
- (void)enableAllPlugins:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *pluginSortDescriptors;
- (void)menuNeedsUpdate:(id)arg1;
- (void)viewDocumentation:(id)arg1;
- (void)editCode:(id)arg1;
- (void)revealInFinder:(id)arg1;
- (void)toggleItemsEnabled:(id)arg1;
- (void)toggleSelectedItemsEnabled;
- (void)toggleSelectedItemsEnabled:(id)arg1;
- (void)tableContextMenu:(id)arg1;
- (void)activateSearchField:(id)arg1;
- (void)getPlugins:(id)arg1;
- (void)openPluginURL:(id)arg1;
- (void)installPluginUpdates:(id)arg1;
- (void)installPluginUpdate:(id)arg1;
- (void)togglePluginEnabled:(id)arg1;
- (void)uninstallSelectedPlugins:(id)arg1;
- (void)uninstallPlugins:(id)arg1;
- (void)uninstallSelectedPlugins;
- (void)openPluginsFolder:(id)arg1;
@property(readonly, nonatomic) BOOL updatesAvailable;
@property(readonly, copy, nonatomic) NSFont *zeroPluginsTitleFont;
- (id)searchString;
- (void)updateUIForPluginsChange;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithPreferencesController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSReversePathAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)reversePath:(id)arg1;

@end

@interface MSPDFBookExporter : NSObject
{
}

+ (id)pdfFromArtboard:(id)arg1;
+ (void)exportPages:(id)arg1 defaultFilename:(id)arg2;

@end

@interface MSFlowBaseAction : MSDocumentAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)refreshLayerListInspectorAndOverlay;
- (void)performAction:(id)arg1;

@end

@interface MSChangeFlowAnimationAction : MSDocumentAction
{
}

- (BOOL)isActive;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (long long)animationType;

@end

@interface MSChangeFlowAnimationNoAnimationAction : MSChangeFlowAnimationAction
{
}

- (void)changeFlowAnimationToNoAnimation:(id)arg1;
- (long long)animationType;

@end

@interface MSChangeFlowAnimationFromLeftAnimationAction : MSChangeFlowAnimationAction
{
}

- (void)changeFlowAnimationToFromLeftAnimation:(id)arg1;
- (long long)animationType;

@end

@interface MSChangeFlowAnimationFromRightAnimationAction : MSChangeFlowAnimationAction
{
}

- (void)changeFlowAnimationToFromRightAnimation:(id)arg1;
- (long long)animationType;

@end

@interface MSChangeFlowAnimationFromTopAnimationAction : MSChangeFlowAnimationAction
{
}

- (void)changeFlowAnimationToFromTopAnimation:(id)arg1;
- (long long)animationType;

@end

@interface MSChangeFlowAnimationFromBottomAnimationAction : MSChangeFlowAnimationAction
{
}

- (void)changeFlowAnimationToFromBottomAnimation:(id)arg1;
- (long long)animationType;

@end

@interface MSSwitchModeButtonCell : NSButtonCell
{
}

- (void)drawSelectionBackgroundInRect:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSConstraintAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (BOOL)validate;
- (long long)stateForConstraint;
- (BOOL)isActive;
@property(readonly, nonatomic) NSString *validationKeyPath;
@property(readonly, nonatomic) NSString *actionKeyPath;

@end

@interface MSConstraintPinLeftAction : MSConstraintAction
{
}

- (id)validationKeyPath;
- (id)actionKeyPath;
- (void)pinLeftAction:(id)arg1;

@end

@interface MSConstraintPinRightAction : MSConstraintAction
{
}

- (id)validationKeyPath;
- (id)actionKeyPath;
- (void)pinRightAction:(id)arg1;

@end

@interface MSConstraintPinTopAction : MSConstraintAction
{
}

- (id)validationKeyPath;
- (id)actionKeyPath;
- (void)pinTopAction:(id)arg1;

@end

@interface MSConstraintPinBottomAction : MSConstraintAction
{
}

- (id)validationKeyPath;
- (id)actionKeyPath;
- (void)pinBottomAction:(id)arg1;

@end

@interface MSConstraintFixWidthAction : MSConstraintAction
{
}

- (id)validationKeyPath;
- (id)actionKeyPath;
- (void)fixWidthAction:(id)arg1;

@end

@interface MSConstraintFixHeightAction : MSConstraintAction
{
}

- (id)validationKeyPath;
- (id)actionKeyPath;
- (void)fixHeightAction:(id)arg1;

@end

@interface MSConstraintResetAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)resetConstraintAction:(id)arg1;

@end

@interface MSClippingMaskModeAction : MSDocumentAction
{
}

- (id)shapesWithClippingMask;
- (void)doPerformAction:(id)arg1;
- (void)clippingMaskMode:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validate;

@end

@interface MSPencilEventHandler : MSEventHandler
{
    BOOL _isDragging;
    MSShapePathLayer *_shape;
    MSLayerGroup *_currentGroup;
    struct CGPoint _lastMouse;
}

@property(nonatomic) struct CGPoint lastMouse; // @synthesize lastMouse=_lastMouse;
@property(nonatomic) BOOL isDragging; // @synthesize isDragging=_isDragging;
@property(retain, nonatomic) MSLayerGroup *currentGroup; // @synthesize currentGroup=_currentGroup;
@property(retain, nonatomic) MSShapePathLayer *shape; // @synthesize shape=_shape;
- (void).cxx_destruct;
- (void)cursorUpdate:(id)arg1;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (BOOL)shouldDrawLayerSelection;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)addCurvePoint:(id)arg1;
- (void)addPoint:(struct CGPoint)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (BOOL)mouseDownEvent:(id)arg1;
- (BOOL)pathShouldClose;
- (void)removeRedundantPoints:(id)arg1;
- (id)fittedBezierPathFromShapePath:(id)arg1;
- (void)unflattenResult;
- (void)selectShape;
- (void)removeShape;
- (void)finishShapeOrRemoveIfEmpty;
- (void)handlerWillLoseFocus;
- (id)toolbarIdentifier;
- (void)handlerGotFocus;
- (void)adjustStyleForGroup:(id)arg1;
- (void)insertNewShapeForEditingAtPoint:(struct CGPoint)arg1;

@end

@interface MSSmartRotateAction : MSDocumentAction
{
}

- (id)label;
- (BOOL)isSelectable;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)smartRotate:(id)arg1;

@end

@interface MSRenameLayerAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)renameLayer:(id)arg1;

@end

@interface MSPointsEventHandler : MSEventHandler
{
    MSLayer *layer;
    NSMutableDictionary *currentSnaps;
    BOOL firstDrag;
    long long _selectedPoint;
}

@property(nonatomic) long long selectedPoint; // @synthesize selectedPoint=_selectedPoint;
- (void).cxx_destruct;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (struct CGPoint)snapPoint:(struct CGPoint)arg1 toLines:(id)arg2;
- (id)snapsForPoints:(id)arg1;
- (id)snapsForShape;
- (BOOL)useSnaps;
- (void)drawDotAtPoint:(struct CGPoint)arg1 index:(long long)arg2 selected:(BOOL)arg3;
- (void)drawHandles;
- (void)drawSnaps;
- (void)concatTransformsForDrawSnaps;
- (id)handleLinesPath;
- (id)handleLinesColor;
- (void)drawHandleLines;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)keyDown:(id)arg1;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1;
- (BOOL)shouldReturnToDefaultHandlerInCurrentState;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (BOOL)point:(struct CGPoint)arg1 isNearPoint:(struct CGPoint)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (long long)indexForMouse:(struct CGPoint)arg1;
- (BOOL)allowsEmptySelection;
- (struct CGPoint)relMouse:(struct CGPoint)arg1;
- (BOOL)shouldDrawLayerSelection;
- (void)sendUpdate;
- (struct CGRect)bounds;
- (id)points;
- (void)setLayer:(id)arg1;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)layerFromSelectedLayers;
- (id)initWithManager:(id)arg1;

@end

@interface MSTextLabelForUpDownField : NSTextField
{
    NSTextField<MSUpDownProtocol> *_upDownTextField;
    NSArray *_textFields;
}

@property(copy, nonatomic) NSArray *textFields; // @synthesize textFields=_textFields;
@property(nonatomic) __weak NSTextField<MSUpDownProtocol> *upDownTextField; // @synthesize upDownTextField=_upDownTextField;
- (void).cxx_destruct;
- (BOOL)canScrub;
- (BOOL)trackMouseDraggingWithDownEvent:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)mouseDown:(id)arg1;
- (id)textField;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)awakeFromNib;
- (BOOL)clickShouldDismissPopover:(id)arg1;

@end

@interface MSMirrorWebView : WKWebView
{
}

+ (BOOL)developerToolsEnabled;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)acceptsFirstResponder;

@end

@interface MSIncompatiblePluginsDisabledAction : MSDocumentAction <MSWindowBadgeAction>
{
}

@property(readonly, nonatomic) unsigned long long numberOfBadges;
- (id)label;
@property(readonly, nonatomic) NSColor *badgeTint;
- (void)doPerformAction:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSAttributedString *badgeTitle; // @dynamic badgeTitle;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCloudWelcomeViewController : MSCloudBaseViewController
{
    NSButton *_signinButton;
    NSButton *_signupButton;
    MSCursorButton *_infoButton;
    NSStackView *_buttonStackView;
}

@property(retain, nonatomic) NSStackView *buttonStackView; // @synthesize buttonStackView=_buttonStackView;
- (void).cxx_destruct;
- (void)learnMore:(id)arg1;
- (void)signIn:(id)arg1;
- (void)signUp:(id)arg1;
- (id)actionView;
@property(readonly, nonatomic) MSCursorButton *infoButton; // @synthesize infoButton=_infoButton;
@property(readonly, nonatomic) NSButton *signupButton; // @synthesize signupButton=_signupButton;
@property(readonly, nonatomic) NSButton *signinButton; // @synthesize signinButton=_signinButton;
- (void)viewDidLoad;
- (void)loadView;
- (struct NSEdgeInsets)edgeInsets;

@end

@interface MSEditColorSpaceSheetController : CHSheetController
{
    NSButton *_assignButton;
    NSTextField *_assignDescriptionTextField;
    NSPopUpButton *_colorSpacePopUpButton;
    NSTextField *_descriptionTextField;
    NSButton *_confirmButton;
    NSButton *_convertButton;
    NSTextField *_convertDescriptionTextField;
    double _optionsViewBottomMargin;
    double _optionsViewHeight;
}

@property(readonly, nonatomic) double optionsViewHeight; // @synthesize optionsViewHeight=_optionsViewHeight;
@property(readonly, nonatomic) double optionsViewBottomMargin; // @synthesize optionsViewBottomMargin=_optionsViewBottomMargin;
@property(nonatomic) __weak NSTextField *convertDescriptionTextField; // @synthesize convertDescriptionTextField=_convertDescriptionTextField;
@property(nonatomic) __weak NSButton *convertButton; // @synthesize convertButton=_convertButton;
@property(nonatomic) __weak NSButton *confirmButton; // @synthesize confirmButton=_confirmButton;
@property(nonatomic) __weak NSTextField *descriptionTextField; // @synthesize descriptionTextField=_descriptionTextField;
@property(nonatomic) __weak NSPopUpButton *colorSpacePopUpButton; // @synthesize colorSpacePopUpButton=_colorSpacePopUpButton;
@property(nonatomic) __weak NSTextField *assignDescriptionTextField; // @synthesize assignDescriptionTextField=_assignDescriptionTextField;
@property(nonatomic) __weak NSButton *assignButton; // @synthesize assignButton=_assignButton;
- (void).cxx_destruct;
- (void)confirm:(id)arg1;
- (void)viewDocumentation:(id)arg1;
- (void)disableUI;
- (void)showOptionsViewIfAppropriate;
- (void)refreshDescription;
- (void)validateConfirmButton;
- (void)pickChangeLogic:(id)arg1;
- (void)pickColorSpace:(id)arg1;
- (void)windowDidLoad;
@property(readonly, nonatomic) NSLayoutConstraint *optionsViewBottomMarginConstraint;
@property(readonly, nonatomic) NSView *optionsView;
@property(readonly, nonatomic) unsigned long long selectedColorSpace;
@property(readonly, nonatomic) unsigned long long currentColorSpace;
@property(readonly, nonatomic) MSDocument *currentDocument;

@end

@interface MSRunCustomScriptAction : MSAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)runCustomScript:(id)arg1;

@end

@interface MSHotspotOverrideViewController : MSOverrideViewController <MSFlowMenuBuilderTarget>
{
    NSPopUpButton *_popup;
}

@property(retain, nonatomic) NSPopUpButton *popup; // @synthesize popup=_popup;
- (void).cxx_destruct;
- (void)removeFlowAction:(id)arg1;
- (void)flowTargetAction:(id)arg1;
- (void)flowBackAction:(id)arg1;
- (id)documentData;
- (id)controlViewForEditingOverride;

@end

@interface MSFeedbackAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)feedback:(id)arg1;

@end

@interface MSPreferencesController : NSWindowController <NSToolbarDelegate, NSWindowDelegate>
{
    MSPreferencePane *_currentPreferencePane;
    NSArray *_toolbarItemIdentifiers;
    NSDictionary *_preferencePaneClasses;
    NSCache *_preferencePanes;
    NSToolbar *_toolbar;
}

+ (id)sharedController;
@property(nonatomic) __weak NSToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) NSCache *preferencePanes; // @synthesize preferencePanes=_preferencePanes;
@property(copy, nonatomic) NSDictionary *preferencePaneClasses; // @synthesize preferencePaneClasses=_preferencePaneClasses;
@property(copy, nonatomic) NSArray *toolbarItemIdentifiers; // @synthesize toolbarItemIdentifiers=_toolbarItemIdentifiers;
@property(retain, nonatomic) MSPreferencePane *currentPreferencePane; // @synthesize currentPreferencePane=_currentPreferencePane;
- (void).cxx_destruct;
- (BOOL)validateToolbarItem:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
@property(nonatomic) unsigned long long selectedTabIndex;
- (void)updateWindowFrame;
- (id)switchToPaneWithIdentifier:(id)arg1;
- (void)switchPanes:(id)arg1;
- (void)adjustColorsAction:(id)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPresetPickerButton : NSButton
{
    struct CGPoint destinationAnimationPoint;
}

- (void)animateToOrigin:(struct CGPoint)arg1;

@end

@interface MSPresetPickerPresetButton : MSPresetPickerButton <NSDraggingSource>
{
}

- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)mouseDown:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)innerShadow;
- (struct CGRect)frameConsideringAnimation;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSExportPresetsPreferencePane : MSPreferencePane <NSTableViewDataSource, NSTableViewDelegate>
{
    NSButton *_addButton;
    NSButton *_addFormatButton;
    NSView *_exportFormatEditorView;
    NSView *_exportFormatFooterView;
    NSLayoutConstraint *_exportFormatFooterBottomConstraint;
    NSStackView *_exportFormatsView;
    MSExportFormatViewController *_exportFormatsViewController;
    NSView *_noPresetsPlaceholderView;
    NSTextField *_presetNameTextField;
    NSButton *_removeButton;
    NSTableView *_tableView;
    double _designedExportFormatFooterBottomDistance;
    NSArray *_exportFormatViewControllers;
    struct CGSize _designedSize;
}

+ (id)localizedNewExportPresetName;
+ (BOOL)exportPresetWithNameExists:(id)arg1;
+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;
@property(retain, nonatomic) NSArray *exportFormatViewControllers; // @synthesize exportFormatViewControllers=_exportFormatViewControllers;
@property(readonly, nonatomic) double designedExportFormatFooterBottomDistance; // @synthesize designedExportFormatFooterBottomDistance=_designedExportFormatFooterBottomDistance;
@property(readonly, nonatomic) struct CGSize designedSize; // @synthesize designedSize=_designedSize;
@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak NSButton *removeButton; // @synthesize removeButton=_removeButton;
@property(nonatomic) __weak NSTextField *presetNameTextField; // @synthesize presetNameTextField=_presetNameTextField;
@property(nonatomic) __weak NSView *noPresetsPlaceholderView; // @synthesize noPresetsPlaceholderView=_noPresetsPlaceholderView;
@property(nonatomic) __weak MSExportFormatViewController *exportFormatsViewController; // @synthesize exportFormatsViewController=_exportFormatsViewController;
@property(nonatomic) __weak NSStackView *exportFormatsView; // @synthesize exportFormatsView=_exportFormatsView;
@property(nonatomic) __weak NSLayoutConstraint *exportFormatFooterBottomConstraint; // @synthesize exportFormatFooterBottomConstraint=_exportFormatFooterBottomConstraint;
@property(nonatomic) __weak NSView *exportFormatFooterView; // @synthesize exportFormatFooterView=_exportFormatFooterView;
@property(nonatomic) __weak NSView *exportFormatEditorView; // @synthesize exportFormatEditorView=_exportFormatEditorView;
@property(nonatomic) __weak NSButton *addFormatButton; // @synthesize addFormatButton=_addFormatButton;
@property(nonatomic) __weak NSButton *addButton; // @synthesize addButton=_addButton;
- (void).cxx_destruct;
- (void)adjustFirstResponderIfNeeded;
- (void)restoreDefaultExportPresets:(id)arg1;
- (void)removeExportFormatFromPreset:(id)arg1;
- (void)addExportFormat:(id)arg1;
- (void)commitExportPresetName:(id)arg1;
- (id)uniqueNonEmptyName:(id)arg1 forPreset:(id)arg2;
- (id)presetWithName:(id)arg1;
- (void)pickDefaultExportPreset:(id)arg1;
- (void)removeExportPreset:(id)arg1;
- (void)addExportPreset:(id)arg1;
- (void)refreshExportFormats;
- (void)refreshExportPresets;
- (void)commitPendingTextEditsIfNeeded;
- (void)editExportPreset:(id)arg1;
- (BOOL)selectPreset:(id)arg1;
- (BOOL)selectPresetAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) MSExportPreset *selectedPreset;
@property(readonly, copy, nonatomic) NSArray *presets;
- (id)globalAssets;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (struct CGSize)preferredSize;
- (void)viewDidAppear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSExportPresetTableCellView : NSTableCellView
{
    NSButton *_defaultPresetButton;
}

@property(retain, nonatomic) NSButton *defaultPresetButton; // @synthesize defaultPresetButton=_defaultPresetButton;
- (void).cxx_destruct;

@end

@interface MSFlippedClipView : NSClipView
{
}

- (BOOL)isFlipped;

@end

@interface MSImageView : NSImageView
{
}

- (void)concludeDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)webpURLFromDragData:(id)arg1;

@end

@interface MSAssetPickerView : NSView <NSScrubberDataSource, NSScrubberDelegate, NSTouchBarDelegate>
{
    id <MSPresetPickerViewDelegate> _delegate;
    double _tileMargin;
    unsigned long long _hoveringIndex;
    NSIndexSet *_currentIndexes;
    MSAssetCollection *_assetCollection;
    unsigned long long _assetType;
    long long _sourceDragIndex;
    struct CGSize _tileSize;
    struct NSEdgeInsets _edgeMargins;
}

@property(nonatomic) long long sourceDragIndex; // @synthesize sourceDragIndex=_sourceDragIndex;
@property(nonatomic) unsigned long long assetType; // @synthesize assetType=_assetType;
@property(retain, nonatomic) MSAssetCollection *assetCollection; // @synthesize assetCollection=_assetCollection;
@property(copy, nonatomic) NSIndexSet *currentIndexes; // @synthesize currentIndexes=_currentIndexes;
@property(nonatomic) unsigned long long hoveringIndex; // @synthesize hoveringIndex=_hoveringIndex;
@property(nonatomic) struct NSEdgeInsets edgeMargins; // @synthesize edgeMargins=_edgeMargins;
@property(nonatomic) double tileMargin; // @synthesize tileMargin=_tileMargin;
@property(nonatomic) struct CGSize tileSize; // @synthesize tileSize=_tileSize;
@property(nonatomic) __weak id <MSPresetPickerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)scrubber:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (id)scrubber:(id)arg1 viewForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsForScrubber:(id)arg1;
- (id)scrubber;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (BOOL)delegateInsertPresetFromPasteboardData:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)delegateDidDragPresetToIndex:(unsigned long long)arg1;
- (BOOL)delegateSupportsDrop;
- (BOOL)delegateShowMenuForIndex:(unsigned long long)arg1;
- (void)delegateDrawContentInRect:(struct CGRect)arg1 tag:(unsigned long long)arg2;
- (id)delegateTooltipForIndex:(unsigned long long)arg1;
- (BOOL)delegateShouldShowAddButton;
- (void)delegateRemovePresetAtIndex:(unsigned long long)arg1;
- (void)delegatePickPresetAtIndex:(unsigned long long)arg1;
- (void)addPreset;
- (unsigned long long)delegateNumberOfPresets;
- (struct MSPresetIteratorStruct)incrementIterator:(struct MSPresetIteratorStruct)arg1;
- (long long)columnCount;
- (struct MSPresetIteratorStruct)newIterator;
- (void)moveDraggedViewToRowAtIndex:(long long)arg1;
- (long long)hoverIndexForDraggingInfo:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)canDragFromIndex:(unsigned long long)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)removePresetForButton:(id)arg1;
- (void)removePresetWithTag:(long long)arg1;
- (void)pickPresetForButton:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)shouldShowMenuForButton:(id)arg1;
- (void)drawContentForButton:(id)arg1 inRect:(struct CGRect)arg2;
- (BOOL)isInStackView;
- (void)stackIfPossible;
- (void)addPreset:(id)arg1;
- (id)addPresetButtonWithOffset:(struct CGPoint)arg1;
- (id)presetButtonForIndex:(unsigned long long)arg1 withOffset:(struct CGPoint)arg2;
- (void)reloadData;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSRemoveFlowAction : MSFlowBaseAction
{
}

- (id)label;
- (BOOL)hasDynamicTitle;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)removeFlow:(id)arg1;

@end

@interface MSDropdownButtonCell : MSSmallButtonCell
{
    double _imageRightEdgeInset;
}

@property(nonatomic) double imageRightEdgeInset; // @synthesize imageRightEdgeInset=_imageRightEdgeInset;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;

@end

@interface MSMirrorWindowController : NSWindowController <MSMirrorWindowControllerContent, NSWindowDelegate, WKNavigationDelegate, WKScriptMessageHandler>
{
    NSToolbarItem *_artboardToolbarItem;
    NSPopUpButton *_artboardButton;
    NSButton *_startpointButton;
    NSButton *_backButton;
    NSToolbarItem *_backToolbarItem;
    MSBackgroundColorView *_backgroundView;
    WKWebView *_webView;
}

+ (void)close;
+ (void)show;
+ (id)sharedController;
@property(nonatomic) __weak WKWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) __weak MSBackgroundColorView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) __weak NSToolbarItem *backToolbarItem; // @synthesize backToolbarItem=_backToolbarItem;
@property(nonatomic) __weak NSButton *backButton; // @synthesize backButton=_backButton;
@property(nonatomic) __weak NSButton *startpointButton; // @synthesize startpointButton=_startpointButton;
@property(nonatomic) __weak NSPopUpButton *artboardButton; // @synthesize artboardButton=_artboardButton;
@property(nonatomic) __weak NSToolbarItem *artboardToolbarItem; // @synthesize artboardToolbarItem=_artboardToolbarItem;
- (void).cxx_destruct;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (void)windowWillClose:(id)arg1;
- (void)windowDidChangeBackingProperties:(id)arg1;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (void)scrollWheel:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)relayResponderAction:(SEL)arg1 with:(id)arg2;
- (BOOL)shouldInterceptResponderActions;
- (void)showContextualMenuWithEvent:(id)arg1;
- (void)goBack:(id)arg1;
- (void)toggleFlowHome:(id)arg1;
- (void)openStartpoint:(id)arg1;
- (id)startpointsMenuShowingArtboardID:(id)arg1;
- (id)startpointsMenu;
- (id)menuItemForArtboard:(id)arg1 shownArtboard:(id)arg2;
- (void)selectArtboardMenuItem:(id)arg1 shownArtboard:(id)arg2;
- (void)updateBackButtonEnabled;
- (void)updateArtboardButtonShowingArtboard:(id)arg1;
- (void)updateArtboardButtonShowingArtboardID:(id)arg1;
- (void)currentArtboardDidChangeNotification:(id)arg1;
- (void)documentDidUpdateNotification:(id)arg1;
- (void)documentDidChangeNotification:(id)arg1;
- (id)urlRequest;
- (void)whitelistClientID;
- (void)startLoading;
- (BOOL)validateMenuItem:(id)arg1;
@property(readonly, nonatomic) struct CGRect fittingWindowFrame;
@property(readonly, nonatomic) struct CGRect viewPort; // @dynamic viewPort;
- (void)windowDidLoad;
- (void)showWindow:(id)arg1;
- (void)loadWindow;
- (void)dealloc;
- (id)initWithWindowNibName:(id)arg1;
- (void)changeVisibleArtboardID:(id)arg1;
@property(readonly, nonatomic) MSImmutableArtboardGroup *previousArtboard;
@property(readonly, nonatomic) MSImmutableArtboardGroup *nextArtboard;
@property(readonly, nonatomic) MSImmutableArtboardGroup *currentStartpoint;
- (id)sortedArtboards:(id)arg1;
@property(readonly, nonatomic) NSArray *startpoints;
@property(readonly, nonatomic) NSString *firstArtboardID;
@property(readonly, nonatomic) NSString *defaultArtboardID;
@property(readonly, nonatomic) NSString *visibleArtboardID;
@property(readonly, nonatomic) NSString *currentArtboardID;
@property(readonly, nonatomic) MSDocumentData *currentMutableDocument;
@property(readonly, nonatomic) MSImmutableDocumentData *currentDocument;
@property(readonly, nonatomic) MSMirrorDataProvider *dataProvider;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAddFlowAction : MSFlowBaseAction
{
}

- (id)imageName;
- (BOOL)validate;
- (BOOL)hasDynamicTitle;
- (id)labelForToolbar;
- (id)label;
- (BOOL)showInToolbar;
- (void)doPerformAction:(id)arg1;
- (void)addFlow:(id)arg1;

@end

@interface MSPrintAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)makeArtboardBeforePrinting:(id)arg1;
- (BOOL)validate;
- (BOOL)hasDynamicTitle;
- (id)menuItemsForPage:(id)arg1;
- (void)addMenuItems:(id)arg1 toMenu:(id)arg2;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface MSArtboardInspectorViewController : MSBaseExportableInspectorViewController <MSArtboardPresetsViewControllerDelegate, MSEditArtboardPresetViewControllerDelegate, MSColorInspectorDelegate, BCPopoverDelegate, MSStylePartPreviewButtonDelegate>
{
    NSView *_artboardBackgroundView;
    NSView *_symbolStandardPropertiesView;
    NSView *_artboardResizingView;
    MSStylePartPreviewButton *_artboardBackgroundColorButton;
    NSView *_bottomLabelView;
    NSArrayController *_layersController;
    BCPopover *_colorPopover;
    MSArtboardPresetStore *_presetStore;
    NSButton *_presetButton;
    MSArtboardPresetsViewController *_presetsViewController;
    NSSegmentedControl *_orientationControl;
    NSButton *_sizeToFitButton;
}

@property(retain, nonatomic) NSButton *sizeToFitButton; // @synthesize sizeToFitButton=_sizeToFitButton;
@property(retain, nonatomic) NSSegmentedControl *orientationControl; // @synthesize orientationControl=_orientationControl;
@property(retain, nonatomic) MSArtboardPresetsViewController *presetsViewController; // @synthesize presetsViewController=_presetsViewController;
@property(retain, nonatomic) NSButton *presetButton; // @synthesize presetButton=_presetButton;
@property(readonly, nonatomic) MSArtboardPresetStore *presetStore; // @synthesize presetStore=_presetStore;
@property(retain, nonatomic) BCPopover *colorPopover; // @synthesize colorPopover=_colorPopover;
@property(retain, nonatomic) NSArrayController *layersController; // @synthesize layersController=_layersController;
@property(retain, nonatomic) NSView *bottomLabelView; // @synthesize bottomLabelView=_bottomLabelView;
@property(retain, nonatomic) MSStylePartPreviewButton *artboardBackgroundColorButton; // @synthesize artboardBackgroundColorButton=_artboardBackgroundColorButton;
@property(retain, nonatomic) NSView *artboardResizingView; // @synthesize artboardResizingView=_artboardResizingView;
@property(retain, nonatomic) NSView *symbolStandardPropertiesView; // @synthesize symbolStandardPropertiesView=_symbolStandardPropertiesView;
@property(retain, nonatomic) NSView *artboardBackgroundView; // @synthesize artboardBackgroundView=_artboardBackgroundView;
- (void).cxx_destruct;
- (id)stylePartPreviewButtonPreviewColorSpace:(id)arg1;
- (void)artboardPresetsViewController:(id)arg1 didSelectOrientation:(long long)arg2;
- (void)artboardPresetsViewController:(id)arg1 didSelectPreset:(id)arg2;
- (id)views;
- (void)prepareForDisplay;
- (void)selectionDidChangeTo:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dismissAllPresentedViewControllers;
- (void)viewWillDisappear;
- (void)dismissViewController:(id)arg1;
- (void)presentViewController:(id)arg1 animator:(id)arg2;
- (void)colorMagnifierAction:(id)arg1;
- (BOOL)canHandleColorMagnifierAction;
- (void)changeBackgroundColorTo:(id)arg1;
- (BOOL)colorInspectorShouldAdjustInspectorToPopover:(id)arg1;
- (void)editArtboardPresetViewController:(id)arg1 savePreset:(id)arg2;
- (void)showCustomPresetSheet:(id)arg1;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)validateArtboardBackgroundButtons;
- (void)backgroundColorAction:(id)arg1;
- (void)prepareArtboardsForFill;
- (void)artboardBackgroundCheckAction:(id)arg1;
- (void)refreshSizeToFitButton;
- (id)orientationOfArtboard:(id)arg1;
- (id)orientation;
- (void)didChangeOrientation:(long long)arg1;
- (void)toggleOrientation:(id)arg1;
- (void)applyOrientation:(long long)arg1;
- (void)refreshOrientationControl;
- (void)applyPreset:(id)arg1;
- (id)selectedPreset;
- (void)refreshPresetButtonAndPopover;
- (void)showPresets:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPreviewImageCache : NSObject
{
    NSURL *_directoryURL;
    NSOperationQueue *_fetchQueue;
    BCSketchToolRunner *_sketchToolRunner;
    NSString *_subdirectoryName;
}

+ (id)bundledSketchToolURL;
@property(readonly, copy, nonatomic) NSString *subdirectoryName; // @synthesize subdirectoryName=_subdirectoryName;
@property(readonly, nonatomic) BCSketchToolRunner *sketchToolRunner; // @synthesize sketchToolRunner=_sketchToolRunner;
@property(readonly, nonatomic) NSOperationQueue *fetchQueue; // @synthesize fetchQueue=_fetchQueue;
@property(readonly, nonatomic) NSURL *directoryURL; // @synthesize directoryURL=_directoryURL;
- (void).cxx_destruct;
- (void)exportPreviewImageForDocumentFileURL:(id)arg1 maximumPixelSize:(double)arg2 handler:(CDUnknownBlockType)arg3;
- (id)cachedPreviewImageForDocumentFileURL:(id)arg1 maximumPixelSize:(double)arg2 error:(id *)arg3;
- (id)cachedPreviewImageURLForDocumentFileURL:(id)arg1 maximumPixelSize:(double)arg2 createDirectoriesIfNeeded:(BOOL)arg3 error:(id *)arg4;
- (id)directoryURLCreateIfNeeded:(BOOL)arg1 error:(id *)arg2;
- (void)fetchPreviewImageForDocumentAtURL:(id)arg1 maximumPixelSize:(double)arg2 handler:(CDUnknownBlockType)arg3;
- (id)initWithSubdirectoryName:(id)arg1;

@end

@interface MSCloudPreferencesIntroViewController : MSCloudPreferencesViewController <MSCloudLoginWindowControllerDelegate>
{
    NSTextField *_titleLabel;
    NSTextField *_descriptionLabel;
    NSButton *_learnMoreButton;
    NSProgressIndicator *_progressIndicator;
    NSButton *_loginButton;
}

@property(retain, nonatomic) NSButton *loginButton; // @synthesize loginButton=_loginButton;
@property(retain, nonatomic) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain, nonatomic) NSButton *learnMoreButton; // @synthesize learnMoreButton=_learnMoreButton;
@property(retain, nonatomic) NSTextField *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) NSTextField *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (void)cloudLoginControllerDidSignIn:(id)arg1;
- (void)cloudLoginControllerDidCancel:(id)arg1;
- (void)cloudLoginControllerDidOpenBrowser:(id)arg1;
- (void)cloudEnvironmentDidChangeNotification:(id)arg1;
- (void)updateTitleLabelValue;
- (void)learnMore:(id)arg1;
- (void)dismissLoginWindowController:(id)arg1;
- (void)login:(id)arg1;
- (void)loginToBrowser:(id)arg1;
- (void)signup:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSRadialGradientEventHandler : MSGradientEventHandler
{
    BOOL ellipseSelected;
    struct CGSize deltaBetweenRadialPointBeforeDrag;
}

- (void)setEllipsePoint:(struct CGPoint)arg1;
- (struct CGPoint)ellipsePoint;
- (id)ovalPath;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)hasSelectedPoint;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (BOOL)mouseIsNearEllipsePoint:(struct CGPoint)arg1;

@end

@interface MSReplaceWithSymbolMenuBuilder : MSMenuBuilder
{
}

- (void)updateMenuItem:(id)arg1 forDocument:(id)arg2;

@end

@interface MSReorderingContainerView : NSView
{
    long long sourceDragIndex;
    id <MSReorderingContainerDelegate> _delegate;
    NSArray *_subViewDestinationFrames;
}

@property(retain, nonatomic) NSArray *subViewDestinationFrames; // @synthesize subViewDestinationFrames=_subViewDestinationFrames;
@property(nonatomic) __weak id <MSReorderingContainerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)performDragOperation:(id)arg1;
- (double)startOffsetForStacking;
- (id)destinationFramesForSubviews;
- (void)reorderSubviewsAnimated:(BOOL)arg1;
- (id)draggingView;
- (unsigned long long)numberOfReorderableSubviews;
- (long long)hoverIndexForDraggingInfo:(id)arg1;
- (void)moveDraggedViewToRowAtIndex:(long long)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSReplaceImageAction : MSDocumentAction
{
}

- (id)openPanel;
- (void)applyImage:(id)arg1 tolayer:(id)arg2;
- (void)replaceImage:(id)arg1;
- (BOOL)validate;

@end

@interface MSReorderingView : NSView <NSDraggingSource>
{
    SEL _deleteAction;
    SEL _duplicateAction;
    id _target;
    long long _reorderingTag;
}

@property(nonatomic) long long reorderingTag; // @synthesize reorderingTag=_reorderingTag;
@property(nonatomic) __weak id target; // @synthesize target=_target;
@property(nonatomic) SEL duplicateAction; // @synthesize duplicateAction=_duplicateAction;
@property(nonatomic) SEL deleteAction; // @synthesize deleteAction=_deleteAction;
- (void).cxx_destruct;
- (id)menuForEvent:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)startDragWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSLayoutSheet : MSGridSheetBase
{
    NSButton *_centerGridButton;
}

@property(retain, nonatomic) NSButton *centerGridButton; // @synthesize centerGridButton=_centerGridButton;
- (void).cxx_destruct;
- (void)offsetChanged:(id)arg1;
- (void)centerGrid:(id)arg1;
- (void)setAsDefault:(id)arg1;
- (void)awakeFromNib;
- (void)applyObject:(id)arg1 toLayer:(id)arg2;
- (id)defaultObject;
- (id)baseObjectForRootLayer:(id)arg1;

@end

@interface MSToggleLayerListVisibilityAction : MSToggleVisibilityAction
{
}

- (void)hide;
- (void)show;
- (BOOL)isActive;
- (void)toggleLayerListVisibility:(id)arg1;

@end

@interface MSScaleSheet : CHSheetController
{
    BOOL _hasDoneFirstScale;
    double _scale;
    NSDictionary *_selectedObjectsBackup;
    NSTimer *_refreshTimer;
    NSTextField *_scalingField;
    NSTextField *_widthField;
    NSTextField *_heightField;
    NSTextField *_labelField;
    long long _scalingOriginCorner;
    NSView *_originButtonsContainer;
    NSTextField *_originLabel;
    struct CGRect _originalRect;
}

@property(retain, nonatomic) NSTextField *originLabel; // @synthesize originLabel=_originLabel;
@property(retain, nonatomic) NSView *originButtonsContainer; // @synthesize originButtonsContainer=_originButtonsContainer;
@property(nonatomic) long long scalingOriginCorner; // @synthesize scalingOriginCorner=_scalingOriginCorner;
@property(retain, nonatomic) NSTextField *labelField; // @synthesize labelField=_labelField;
@property(retain, nonatomic) NSTextField *heightField; // @synthesize heightField=_heightField;
@property(retain, nonatomic) NSTextField *widthField; // @synthesize widthField=_widthField;
@property(retain, nonatomic) NSTextField *scalingField; // @synthesize scalingField=_scalingField;
@property(nonatomic) BOOL hasDoneFirstScale; // @synthesize hasDoneFirstScale=_hasDoneFirstScale;
@property(retain, nonatomic) NSTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(readonly, nonatomic) struct CGRect originalRect; // @synthesize originalRect=_originalRect;
@property(readonly, nonatomic) NSDictionary *selectedObjectsBackup; // @synthesize selectedObjectsBackup=_selectedObjectsBackup;
@property(nonatomic) double scale; // @synthesize scale=_scale;
- (void).cxx_destruct;
- (id)doc;
- (void)restoreCurrentPage;
- (void)saveBackupOfSelection;
- (void)scaleSelectedObjects;
- (void)cancel:(id)arg1;
- (void)confirm:(id)arg1;
- (void)doScaling;
- (void)scheduleRefreshTimerIfNeeded;
- (void)selectScalingOrigin:(id)arg1;
- (void)refreshScalingOriginButton:(id)arg1;
- (void)refreshScalingOriginControls;
- (void)didChangeValues;
- (void)willChangeValues;
@property(nonatomic) double height; // @dynamic height;
- (void)setNilValueForKey:(id)arg1;
@property(nonatomic) double width; // @dynamic width;
- (void)windowDidLoad;
- (id)initWithWindow:(id)arg1;

@end

@interface MSRotateEventHandler : MSNormalBaseEventHandler <NSTouchBarDelegate>
{
    long long _startingDegrees;
    double _startingRotation;
    struct CGPoint _previousMouseLocation;
    BOOL _exitOnMouseUp;
    BOOL _disableMoving;
    MSDragGestureRecognizer *_dragGestureRecognizer;
    unsigned long long _draggedComponent;
    struct CGPoint _rotationCenter;
}

+ (id)cursorForDegrees:(long long)arg1;
+ (long long)degreesForPoint:(struct CGPoint)arg1 inLayer:(id)arg2 rotationCenter:(struct CGPoint)arg3;
@property(nonatomic) unsigned long long draggedComponent; // @synthesize draggedComponent=_draggedComponent;
@property(readonly, nonatomic) MSDragGestureRecognizer *dragGestureRecognizer; // @synthesize dragGestureRecognizer=_dragGestureRecognizer;
@property(nonatomic) struct CGPoint rotationCenter; // @synthesize rotationCenter=_rotationCenter;
@property(nonatomic) BOOL disableMoving; // @synthesize disableMoving=_disableMoving;
@property(nonatomic) BOOL exitOnMouseUp; // @synthesize exitOnMouseUp=_exitOnMouseUp;
- (void).cxx_destruct;
- (void)refreshTouchBarItemWithIdentifier:(id)arg1;
- (void)rotationBarAction:(id)arg1;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeTouchBar;
- (void)drawRotationCenter;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (double)alignDegreesTo45Angles:(double)arg1;
- (long long)degreesForPoint:(struct CGPoint)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseDraggedRotateLayer:(id)arg1 mouse:(struct CGPoint)arg2 flags:(unsigned long long)arg3;
- (void)mouseDraggedMoveLayer:(id)arg1 mouse:(struct CGPoint)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)handleDrag:(id)arg1;
- (unsigned long long)componentAtPoint:(struct CGPoint)arg1;
- (struct CGPoint)rotationCenterInAbsoluteCoordinates;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSEditShapeInspectorViewController : NSViewController <MSInspectorChildController>
{
    BOOL _isMakingRectSelection;
    MSPathController *_pathController;
    MSShapeEventHandler *_shapeEventHandler;
    NSTextField *_cornerRadiusField;
    NSPopUpButton *_roundingPopUpButton;
    NSView *_curveModeBackgroundView;
    NSButton *_makeRectSelectionButton;
    NSButton *_closePathButton;
    NSTextField *_curvePointXField;
    NSTextField *_curvePointYField;
    NSSlider *_cornerRadiusSlider;
}

@property(retain, nonatomic) NSSlider *cornerRadiusSlider; // @synthesize cornerRadiusSlider=_cornerRadiusSlider;
@property(retain, nonatomic) NSTextField *curvePointYField; // @synthesize curvePointYField=_curvePointYField;
@property(retain, nonatomic) NSTextField *curvePointXField; // @synthesize curvePointXField=_curvePointXField;
@property(retain, nonatomic) NSButton *closePathButton; // @synthesize closePathButton=_closePathButton;
@property(retain, nonatomic) NSButton *makeRectSelectionButton; // @synthesize makeRectSelectionButton=_makeRectSelectionButton;
@property(retain, nonatomic) NSView *curveModeBackgroundView; // @synthesize curveModeBackgroundView=_curveModeBackgroundView;
@property(retain, nonatomic) NSPopUpButton *roundingPopUpButton; // @synthesize roundingPopUpButton=_roundingPopUpButton;
@property(retain, nonatomic) NSTextField *cornerRadiusField; // @synthesize cornerRadiusField=_cornerRadiusField;
@property(nonatomic) BOOL isMakingRectSelection; // @synthesize isMakingRectSelection=_isMakingRectSelection;
@property(nonatomic) MSShapeEventHandler *shapeEventHandler; // @synthesize shapeEventHandler=_shapeEventHandler;
@property(retain, nonatomic) MSPathController *pathController; // @synthesize pathController=_pathController;
- (void).cxx_destruct;
- (void)selectionDidChangeTo:(id)arg1;
- (void)prepareForDisplay;
- (void)changeTool:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)titleForRoundingPopUp;
- (void)refreshRoundingPopUpTitle;
- (void)roundingPopUpAction:(id)arg1;
- (void)cornerRadiusAction:(id)arg1;
- (void)refreshCornerRadiusButton;
- (void)vectorModeSegmentedButtonAction:(id)arg1;
- (void)refreshCurveModeControls;
- (void)takeHandleLocationOnAxis:(unsigned long long)arg1 fromTextField:(id)arg2;
- (void)changeYPosition:(id)arg1;
- (void)changeXPosition:(id)arg1;
- (void)updateCoordinateValueForField:(id)arg1 onAxis:(unsigned long long)arg2;
- (void)refreshXYFields;
- (void)finishEditingAction:(id)arg1;
- (void)closePathAction:(id)arg1;
- (void)refreshClosePathButton;
- (id)views;
- (void)refresh;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSRulerView : NSView
{
    unsigned long long dragIndex;
    double baseOffset;
    double previousBase;
    NSNumberFormatter *metricsFormatter;
    BOOL _mouseDidDrag;
    MSRulerData *_rulerData;
    MSDocument *_document;
    MSContentDrawView *_contentView;
    unsigned long long _axis;
    double _temporaryRulerGuide;
    MSRulerViewLayer *_rulerViewLayer;
    struct CGPoint _mouseDownPoint;
}

@property(retain, nonatomic) MSRulerViewLayer *rulerViewLayer; // @synthesize rulerViewLayer=_rulerViewLayer;
@property(nonatomic) double temporaryRulerGuide; // @synthesize temporaryRulerGuide=_temporaryRulerGuide;
@property(nonatomic) unsigned long long axis; // @synthesize axis=_axis;
@property(nonatomic) struct CGPoint mouseDownPoint; // @synthesize mouseDownPoint=_mouseDownPoint;
@property(nonatomic) BOOL mouseDidDrag; // @synthesize mouseDidDrag=_mouseDidDrag;
@property(nonatomic) __weak MSContentDrawView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) MSRulerData *rulerData; // @synthesize rulerData=_rulerData;
- (void).cxx_destruct;
- (long long)rulerHeight;
- (long long)rulerLength;
- (double)zoomValue;
- (struct CGPoint)scrollOrigin;
- (id)occupiedRegionForRect:(struct CGRect)arg1 withOffset:(long long)arg2 zoom:(double)arg3;
- (id)bezierPathForLineAtPosition:(double)arg1 inRect:(struct CGRect)arg2;
- (void)drawGuide:(double)arg1 onCanvasInRect:(struct CGRect)arg2;
- (void)drawGuidesOnCanvasInRect:(struct CGRect)arg1;
- (void)setHidden:(BOOL)arg1;
- (double)baseLineIncludingScrollOrigin:(BOOL)arg1;
- (double)baseLine;
- (id)snapLineWithPosition:(double)arg1;
- (struct CGPoint)mouseEventToPoint:(id)arg1;
- (void)refreshGuidesForGrid:(id)arg1;
- (void)refreshAllGuidesInDrawView;
- (void)refreshGuideInDrawViewAtPosition:(double)arg1;
- (void)refreshGuideInDrawViewAtIndex:(unsigned long long)arg1;
- (void)turnAlignmentGuidesBackOn;
- (void)mouseUp:(id)arg1;
- (struct CGRect)rulerBasedRectForLayer:(id)arg1;
- (double)snapGuideToSelectedLayers:(double)arg1;
- (double)guidePositionForMouse:(struct CGPoint)arg1;
- (void)showAppropriateCursorForMouse:(struct CGPoint)arg1;
- (void)dragSelectedGuideWithMouse:(struct CGPoint)arg1;
- (void)updateSelectedLayerOriginsInInspector;
- (struct CGPoint)distanceFromDragOrigin:(struct CGPoint)arg1;
- (void)dragRulerBaseWithMouse:(struct CGPoint)arg1;
- (void)mouseDraggedAtPoint:(struct CGPoint)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseExited:(id)arg1;
- (unsigned long long)indexOfGuideAtMousePoint:(struct CGPoint)arg1;
- (void)addNewGuideAtMousePoint:(struct CGPoint)arg1;
- (void)mouseDown:(id)arg1;
- (void)setDragCursor;
- (void)setResizeCursor;
- (double)otherAxisForPoint:(struct CGPoint)arg1;
- (double)relevantAxisForPoint:(struct CGPoint)arg1;
- (void)refreshGuide:(double)arg1;
- (void)refreshTemporaryRulerGuide;
- (void)mouseMoved:(id)arg1;
- (BOOL)eventInView:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)removeAllGuides:(id)arg1;
- (void)removeGuide:(id)arg1;
- (void)addAction:(id)arg1 toMenu:(id)arg2;
- (id)titleForRemoveAllGuidesMenuItem;
- (id)menuForEvent:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)guides;
- (struct CGRect)occupiedRegion;
- (void)prepareRulerViewLayer:(struct CGRect)arg1;
- (Class)rulerViewLayerClass;
- (id)makeRulerViewLayer;
- (void)calculateContentsScale;
- (void)viewDidChangeBackingProperties;
- (void)awakeFromNib;

@end

@interface MSLayerMeasurementTarget : NSObject
{
    MSLayer *_layer;
    NSArray *_guideLines;
}

@property(readonly, copy, nonatomic) NSArray *guideLines; // @synthesize guideLines=_guideLines;
@property(readonly, nonatomic) MSLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
- (id)initWithLayer:(id)arg1 guides:(id)arg2;

@end

@interface MSAboutLinkButton : MSHoverButton
{
}

- (void)resetCursorRects;

@end

@interface MSAboutLinkButtonCell : MSHoverButtonCell
{
}

- (id)attributedTitle;

@end

@interface MSTextWindow : NSWindow
{
    MSContentDrawView *_contentDrawView;
    NSTextView *_textView;
}

+ (struct CGRect)adjustFrameWidth:(struct CGRect)arg1 alignment:(unsigned long long)arg2;
+ (struct CGRect)adjustFrameHeight:(struct CGRect)arg1;
+ (struct CGRect)makeBiggerRect:(struct CGRect)arg1 withBehaviour:(long long)arg2 alignment:(unsigned long long)arg3;
@property(retain, nonatomic) NSTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) MSContentDrawView *contentDrawView; // @synthesize contentDrawView=_contentDrawView;
- (void).cxx_destruct;
- (BOOL)canBecomeKeyWindow;
- (void)addTextView:(id)arg1 toView:(id)arg2;
- (void)moveToRect:(struct CGRect)arg1 contentDrawViewRect:(struct CGRect)arg2 behaviour:(long long)arg3;
- (void)mouseDown:(id)arg1;
- (id)initWithRect:(struct CGRect)arg1;

@end

@interface MSTouchBarGroupAction : MSDocumentAction
{
}

- (BOOL)supportsState;
- (void)doPerformAction:(id)arg1;
- (id)actionNames;
- (void)refreshTouchBarItem;
- (id)makeTouchBarItem;

@end

@interface MSStandardInspectorViewControllers : NSObject
{
    MSLayerInspectorViewController *_layerViewController;
    MSMultipleFillInspectorViewController *_fillViewController;
    MSMultipleBorderInspectorViewController *_borderViewController;
    MSBlurInspectorViewController *_blurViewController;
    MSColorControlsInspectorViewController *_colorControlsViewController;
    MSMultipleShadowInspectorViewController *_shadowViewController;
    MSMultipleShadowInspectorViewController *_innerShadowViewController;
    MSFlowInspectorViewController *_flowInspectorViewController;
    MSOpacityBlendingInspectorViewController *_opacityBlendingViewController;
    MSSharedStylesInspectorSection *_sharedStyledInspectorSection;
    MSSpecialLayerViewController *_specialLayerViewController;
}

@property(readonly, nonatomic) MSSpecialLayerViewController *specialLayerViewController; // @synthesize specialLayerViewController=_specialLayerViewController;
@property(readonly, nonatomic) MSSharedStylesInspectorSection *sharedStyledInspectorSection; // @synthesize sharedStyledInspectorSection=_sharedStyledInspectorSection;
@property(readonly, nonatomic) MSOpacityBlendingInspectorViewController *opacityBlendingViewController; // @synthesize opacityBlendingViewController=_opacityBlendingViewController;
@property(readonly, nonatomic) MSFlowInspectorViewController *flowInspectorViewController; // @synthesize flowInspectorViewController=_flowInspectorViewController;
@property(readonly, nonatomic) MSMultipleShadowInspectorViewController *innerShadowViewController; // @synthesize innerShadowViewController=_innerShadowViewController;
@property(readonly, nonatomic) MSMultipleShadowInspectorViewController *shadowViewController; // @synthesize shadowViewController=_shadowViewController;
@property(readonly, nonatomic) MSColorControlsInspectorViewController *colorControlsViewController; // @synthesize colorControlsViewController=_colorControlsViewController;
@property(readonly, nonatomic) MSBlurInspectorViewController *blurViewController; // @synthesize blurViewController=_blurViewController;
@property(readonly, nonatomic) MSMultipleBorderInspectorViewController *borderViewController; // @synthesize borderViewController=_borderViewController;
@property(readonly, nonatomic) MSMultipleFillInspectorViewController *fillViewController; // @synthesize fillViewController=_fillViewController;
@property(readonly, nonatomic) MSLayerInspectorViewController *layerViewController; // @synthesize layerViewController=_layerViewController;
- (void).cxx_destruct;
- (id)init;

@end

@interface MSSelectAllArtboardsAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)selectAllArtboards:(id)arg1;

@end

@interface MSUpDownComboBox : NSComboBox <NSTextViewDelegate, MSUpDownProtocol>
{
    id _refreshDelegate;
    MSUpDownController *_upDownController;
}

@property(retain, nonatomic) MSUpDownController *upDownController; // @synthesize upDownController=_upDownController;
@property(nonatomic) __weak id refreshDelegate; // @synthesize refreshDelegate=_refreshDelegate;
- (void).cxx_destruct;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)keyUp:(id)arg1;
- (double)incrementValue;
- (id)maximum;
- (id)minimum;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSFontSizeUpDownComboBox : MSUpDownComboBox
{
}

- (id)minimum;

@end

@interface MSRunCustomScriptSheet : CHSheetController <NSTextViewDelegate>
{
    JSTTextView *inputField;
    NSButton *saveButton;
    NSTextField *scriptNameField;
    NSButton *runButton;
    NSTextView *_logField;
    NSUndoManager *_undoManager;
    NSButton *_touchBarSave;
    NSButton *_touchBarRun;
}

@property(nonatomic) __weak NSButton *touchBarRun; // @synthesize touchBarRun=_touchBarRun;
@property(nonatomic) __weak NSButton *touchBarSave; // @synthesize touchBarSave=_touchBarSave;
@property(retain, nonatomic) NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
@property(retain, nonatomic) NSTextView *logField; // @synthesize logField=_logField;
- (void).cxx_destruct;
- (void)redoAction:(id)arg1;
- (void)undoAction:(id)arg1;
- (id)undoManagerForTextView:(id)arg1;
- (void)scriptingMenuAction:(id)arg1;
- (void)commentSelection:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)saveAction:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)runScript:(id)arg1;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (SEL)selectorForTouchbarItemIdentifier:(id)arg1;
- (id)touchBarItemIdentifiers;
- (id)commandToRunWithName:(id)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSInsertHotspotAction : MSDocumentAction
{
}

- (BOOL)showInToolbar;
- (id)imageName;
- (void)doPerformAction:(id)arg1;
- (void)insertHotspot:(id)arg1;
- (SEL)preferredMenuAction;
- (id)menuItemsForMenu:(id)arg1;

@end

@interface MSScissorsEventHandler : MSEventHandler
{
    BOOL _didCutOnMouseDown;
    NSIndexPath *_hoveringSegment;
}

@property(nonatomic) BOOL didCutOnMouseDown; // @synthesize didCutOnMouseDown=_didCutOnMouseDown;
@property(retain, nonatomic) NSIndexPath *hoveringSegment; // @synthesize hoveringSegment=_hoveringSegment;
- (void).cxx_destruct;
- (id)toolbarIdentifier;
- (BOOL)shouldDrawLayerSelection;
- (id)imageName;
- (void)cursorUpdate:(id)arg1;
- (void)strokePath:(id)arg1 isHovering:(BOOL)arg2;
- (id)trimPathOnBothSides:(id)arg1;
- (void)drawThinStrokeBezierSegments:(id)arg1 hoverIndex:(unsigned long long)arg2;
- (void)drawThickStrokeBezierPath:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (id)hoverSegmentForMouse:(struct CGPoint)arg1;
- (id)shapeForIndexPath:(id)arg1;
- (void)cut;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (void)handlerWillLoseFocus;
- (BOOL)canCutSegments;
- (void)handlerGotFocus;

@end

@interface MSSectionBackgroundSeparatorView : NSView
{
}

+ (id)separator;
- (BOOL)wantsSeparatorBetweenSelfAndView:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)color;

@end

@interface MSColorInspectorSeparatorView : MSSectionBackgroundSeparatorView
{
}

- (id)color;

@end

@interface MSFlatSectionBackgroundSeparatorView : MSSectionBackgroundSeparatorView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSSectionBackgroundView : NSView
{
}

+ (long long)requiredHeightForViews:(id)arg1;
+ (id)separatorBetweenView:(id)arg1 andView:(id)arg2;
+ (id)sectionBackgroundWithController:(id)arg1;
- (BOOL)isFlipped;
- (void)drawWhiteHeader;
- (void)drawRect:(struct CGRect)arg1;
- (void)stackSubviews;
- (void)recalculateHeight;

@end

@interface MSWhiteHeaderView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSDocumentController : NSDocumentController
{
}

- (void)noteNewRecentDocumentURL:(id)arg1;
- (void)noteNewRecentDocument:(id)arg1;
- (BOOL)shoudNoteRecentDocumentForType:(id)arg1;
- (void)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)typeForContentsOfURL:(id)arg1 error:(id *)arg2;

@end

@interface MSShadowInspectorViewController : MSStylePartInspectorViewController
{
    NSString *_type;
    MSUpDownTextField *_xOffsetField;
    MSUpDownTextField *_yOffsetField;
    MSUpDownTextField *_blurRadiusField;
    MSUpDownTextField *_spreadField;
    MSStylePartPreviewButton *_colorButton;
}

@property(retain, nonatomic) MSStylePartPreviewButton *colorButton; // @synthesize colorButton=_colorButton;
@property(retain, nonatomic) MSUpDownTextField *spreadField; // @synthesize spreadField=_spreadField;
@property(retain, nonatomic) MSUpDownTextField *blurRadiusField; // @synthesize blurRadiusField=_blurRadiusField;
@property(retain, nonatomic) MSUpDownTextField *yOffsetField; // @synthesize yOffsetField=_yOffsetField;
@property(retain, nonatomic) MSUpDownTextField *xOffsetField; // @synthesize xOffsetField=_xOffsetField;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)dealloc;
- (void)didGetAddedToInspector;
- (id)sectionTitle;
- (id)title;
- (id)keyPath;
- (BOOL)isSpreadFieldAvailable;
- (BOOL)allowsNegativeSpread;
- (void)prepare;

@end

@interface MSCloudPreferencesViewController : NSViewController
{
}

- (void)showAlert:(id)arg1;
- (void)popToRootViewController:(id)arg1;
@property(readonly) MSCloudPreferencePane *preferencePane;

@end

@interface MSBaseShapeAction : MSBaseInsertAction
{
}

+ (id)insertShapeLayer:(id)arg1 identifier:(id)arg2 document:(id)arg3;
- (id)historyMomentTitle;
- (id)label;
- (id)exitToNormalEventHandler;
- (id)insertShape:(id)arg1;
- (id)prototypeLayer;
- (void)doPerformAction:(id)arg1;
- (id)tooltip;
- (BOOL)isSelectable;
- (id)recipeName;

@end

@interface MSRectangleShapeAction : MSBaseShapeAction
{
}

- (id)touchBarImage;
- (void)rectangleShape:(id)arg1;

@end

@interface MSOvalShapeAction : MSBaseShapeAction
{
}

- (id)touchBarImage;
- (id)tooltip;
- (void)ovalShape:(id)arg1;

@end

@interface MSRoundedRectangleShapeAction : MSBaseShapeAction
{
}

- (id)imageName;
- (id)tooltip;
- (id)label;
- (id)recipeName;
- (id)prototypeLayer;
- (void)roundedRectangleShape:(id)arg1;

@end

@interface MSStarShapeAction : MSBaseShapeAction
{
}

- (void)starShape:(id)arg1;

@end

@interface MSPolygonShapeAction : MSBaseShapeAction
{
}

- (void)polygonShape:(id)arg1;

@end

@interface MSTriangleShapeAction : MSBaseShapeAction
{
}

- (void)triangleShape:(id)arg1;

@end

@interface MSSpiralShapeAction : MSBaseShapeAction
{
}

- (void)spiralShape:(id)arg1;

@end

@interface MSAlignmentBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSClosePathAction : MSDocumentAction
{
}

- (void)refreshTouchBarItem;
- (void)doPerformAction:(id)arg1;
- (void)closePath:(id)arg1;
- (id)changeContext;
- (void)enumerateSelectedPathLayersUsingBlock:(CDUnknownBlockType)arg1;
- (id)label;
- (BOOL)hasDynamicTitle;
- (BOOL)validate;

@end

@interface MSReplaceWithSymbolAction : MSSharedSymbolAction
{
    id <NSObject> _documentCloseObserver;
}

@property(retain, nonatomic) id <NSObject> documentCloseObserver; // @synthesize documentCloseObserver=_documentCloseObserver;
- (void).cxx_destruct;
- (id)menuItemsForMenu:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)removeDocumentCloseObserver;
- (BOOL)showInToolbar;
- (void)doPerformAction:(id)arg1;
- (BOOL)hasSubMenu;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validate;
- (SEL)preferredMenuAction;
- (void)replaceWithSymbol:(id)arg1;

@end

@interface MSExportPDFBookAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)exportPDFBook:(id)arg1;

@end

@interface MSManageForeignSymbolTableCellView : NSTableCellView
{
    NSTextField *_secondaryTextField;
    MSSymbolView *_symbolView;
}

@property(retain, nonatomic) MSSymbolView *symbolView; // @synthesize symbolView=_symbolView;
@property(retain, nonatomic) NSTextField *secondaryTextField; // @synthesize secondaryTextField=_secondaryTextField;
- (void).cxx_destruct;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setObjectValue:(id)arg1;

@end

@interface MSShapeEventHandler : MSEventHandler <MSVectorCanvasDelegate, NSTextDelegate, NSMenuDelegate, MSGestureRecognizerDelegate>
{
    unsigned long long _ignoreSelectionChangesCount;
    MSEditShapeInspectorViewController *_inspectorViewController;
    NSArray *_layers;
    MSVectorCanvas *_canvasHandler;
    MSPathController *_pathController;
    MSShapeEditingBehavior *_editingBehavior;
}

@property(retain, nonatomic) MSShapeEditingBehavior *editingBehavior; // @synthesize editingBehavior=_editingBehavior;
@property(readonly, nonatomic) MSPathController *pathController; // @synthesize pathController=_pathController;
@property(readonly, nonatomic) MSVectorCanvas *canvasHandler; // @synthesize canvasHandler=_canvasHandler;
@property(readonly, copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)vectorCanvasDidEditPoints:(id)arg1;
- (void)vectorCanvas:(id)arg1 didSelectLayers:(id)arg2;
- (void)vectorCanvasDidFinishInteractiveSelection:(id)arg1;
- (void)vectorCanvas:(id)arg1 didDeselectHandlesAtIndexPaths:(id)arg2;
- (void)vectorCanvas:(id)arg1 didSelectHandlesAtIndexPaths:(id)arg2;
- (void)vectorCanvas:(id)arg1 didUnhighlightHandleAtIndexPath:(id)arg2;
- (void)vectorCanvas:(id)arg1 didHighlightHandleAtIndexPath:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)performPathControllerUpdate:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) BOOL ignorePathController;
- (void)refreshCloseOrOpenPathUI;
- (void)pathDidOpenOrClose;
- (id)makeTouchBar;
- (BOOL)inspectorShouldShowPositions;
@property(readonly, nonatomic) MSEditShapeInspectorViewController *inspectorViewController; // @synthesize inspectorViewController=_inspectorViewController;
- (unsigned long long)inspectorLocation;
- (id)inspectorViewControllersForLayers:(id)arg1 standardControllers:(id)arg2;
- (id)toolbarIdentifier;
- (void)changeColor:(id)arg1;
- (BOOL)shouldDrawLayerSelection;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)didMoveThroughHistory:(id)arg1;
- (void)delete:(id)arg1;
- (long long)curveModeForPressedKey:(long long)arg1;
- (void)flagsChanged:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)duplicate:(id)arg1;
- (id)layersToCopy;
- (void)trackMouse:(id)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (id)parentGroupForInserting;
- (void)insertNewShapeForEditingAtPoint:(struct CGPoint)arg1;
- (BOOL)mouseDownEvent:(id)arg1;
- (struct CGRect)selectedRect;
- (void)zoomToSelection;
- (void)updateToolButton;
- (void)setAllowSelectionOnly:(BOOL)arg1;
- (void)toggleForceSelection:(id)arg1;
- (void)forceSelection:(id)arg1;
- (void)markLayer:(id)arg1 asEditing:(BOOL)arg2;
- (void)setLayers:(id)arg1;
- (void)resetWithOptions:(unsigned long long)arg1;
- (void)layerListSelectionDidChange:(id)arg1;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (void)dealloc;
- (id)initWithManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSModePickerView : NSView
{
    long long _pickerMode;
    id <MSModeModePickerDelegate> _delegate;
    NSButton *_button1;
    NSButton *_button2;
    NSButton *_button3;
    NSButton *_button4;
    NSButton *_button5;
    NSButton *_button6;
    NSTextField *_labelField;
}

@property(nonatomic) __weak NSTextField *labelField; // @synthesize labelField=_labelField;
@property(nonatomic) __weak NSButton *button6; // @synthesize button6=_button6;
@property(nonatomic) __weak NSButton *button5; // @synthesize button5=_button5;
@property(nonatomic) __weak NSButton *button4; // @synthesize button4=_button4;
@property(nonatomic) __weak NSButton *button3; // @synthesize button3=_button3;
@property(nonatomic) __weak NSButton *button2; // @synthesize button2=_button2;
@property(nonatomic) __weak NSButton *button1; // @synthesize button1=_button1;
@property(nonatomic) __weak id <MSModeModePickerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long pickerMode; // @synthesize pickerMode=_pickerMode;
- (void).cxx_destruct;
- (id)buttons;
- (void)deselectAllButtons;
- (id)cellForMode:(long long)arg1;
- (id)buttonForMode:(long long)arg1;
- (id)labelForMode:(long long)arg1;
- (long long)pickerModeForEvent:(id)arg1;
- (long long)highlightCount;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)addTrackingAreaForButton:(id)arg1;
- (void)buttonAction:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSColorModePickerCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSCreateDetachSymbolButtonCell : MSHoverButtonCell
{
    NSImage *_artboardPreviewImage;
}

@property(retain, nonatomic) NSImage *artboardPreviewImage; // @synthesize artboardPreviewImage=_artboardPreviewImage;
- (void).cxx_destruct;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSSliceDragView : NSView <NSDraggingSource, NSPasteboardWriting>
{
    NSImage *_previewImage;
    MSImmutableLayerAncestry *_ancestry;
    MSExportRequest *_cachedExportRequest;
}

+ (void)initialize;
@property(retain, nonatomic) MSExportRequest *cachedExportRequest; // @synthesize cachedExportRequest=_cachedExportRequest;
@property(retain, nonatomic) MSImmutableLayerAncestry *ancestry; // @synthesize ancestry=_ancestry;
@property(retain, nonatomic) NSImage *previewImage; // @synthesize previewImage=_previewImage;
- (void).cxx_destruct;
- (struct CGRect)imageDrawRect;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)sizeToFit;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (id)imageDataInFormat:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (id)writableTypesForPasteboard:(id)arg1;
- (void)beginDragWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)setExportableLayer:(id)arg1 previewCompletionBlock:(CDUnknownBlockType)arg2;
- (id)exportingColorSpace;
- (void)setup;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSmallButtonCell : NSButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSColorInspectorModePickerAction : MSDocumentAction
{
}

- (BOOL)isTouchBarItemSelected;
- (void)doPerformAction:(id)arg1;
- (unsigned long long)colorInspectorMode;
- (id)colorInspector;
- (void)switchToColorTabAtIndex:(unsigned long long)arg1;

@end

@interface MSColorInspectorColorTabAction : MSColorInspectorModePickerAction
{
}

- (id)touchBarImage;
- (unsigned long long)colorInspectorMode;

@end

@interface MSColorInspectorLinearGradientTabAction : MSColorInspectorModePickerAction
{
}

- (id)touchBarImage;
- (unsigned long long)colorInspectorMode;

@end

@interface MSColorInspectorRadialGradientTabAction : MSColorInspectorModePickerAction
{
}

- (id)touchBarImage;
- (unsigned long long)colorInspectorMode;

@end

@interface MSColorInspectorCircularGradientTabAction : MSColorInspectorModePickerAction
{
}

- (id)touchBarImage;
- (unsigned long long)colorInspectorMode;

@end

@interface MSColorInspectorImageTabAction : MSColorInspectorModePickerAction
{
}

- (id)touchBarImage;
- (unsigned long long)colorInspectorMode;

@end

@interface MSColorInspectorModeFillTouchBarGroupAction : MSColorInspectorModeBorderTouchBarGroupAction
{
}

- (id)actionNames;

@end

@interface MSColorInspectorModeBorderTouchBarGroupAction : MSTouchBarGroupAction
{
}

- (BOOL)supportsState;
- (id)actionNames;

@end

@interface MSReplaceColorSheetController : CHSheetController <NSWindowDelegate, NSMenuDelegate, MSColorInspectorDelegate>
{
    NSButton *_cancelButton;
    NSButton *_ignoreAlphaWhenMatchingOriginalColorButton;
    MSStylePartPreviewButton *_originalColorButton;
    MSStylePartPreviewButton *_replacementColorButton;
    NSButton *_keepAlphaOfOriginalColorButton;
    MSPopoverDismisserView *_replacementColorPopoverDismissingView;
    NSButton *_replaceButton;
    NSMenu *_frequentColorsMenu;
    BCPopover *_popover;
}

@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSMenu *frequentColorsMenu; // @synthesize frequentColorsMenu=_frequentColorsMenu;
@property(nonatomic) __weak NSButton *replaceButton; // @synthesize replaceButton=_replaceButton;
@property(nonatomic) __weak MSPopoverDismisserView *replacementColorPopoverDismissingView; // @synthesize replacementColorPopoverDismissingView=_replacementColorPopoverDismissingView;
@property(nonatomic) __weak NSButton *keepAlphaOfOriginalColorButton; // @synthesize keepAlphaOfOriginalColorButton=_keepAlphaOfOriginalColorButton;
@property(nonatomic) __weak MSStylePartPreviewButton *replacementColorButton; // @synthesize replacementColorButton=_replacementColorButton;
@property(nonatomic) __weak MSStylePartPreviewButton *originalColorButton; // @synthesize originalColorButton=_originalColorButton;
@property(nonatomic) __weak NSButton *ignoreAlphaWhenMatchingOriginalColorButton; // @synthesize ignoreAlphaWhenMatchingOriginalColorButton=_ignoreAlphaWhenMatchingOriginalColorButton;
@property(nonatomic) __weak NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
- (void).cxx_destruct;
- (void)confirm:(id)arg1;
- (void)disableUI;
- (void)validateUI;
- (void)windowDidBecomeKey:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)colorInspectorShouldAdjustInspectorToPopover:(id)arg1;
- (void)validateReplaceButton;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)pickReplacementColor:(id)arg1;
- (BOOL)dismissReplacementColorPopover;
- (void)validateReplacementColorButton;
- (void)setOriginalColor:(id)arg1;
- (void)commitOriginalColor:(id)arg1;
- (void)pickOriginalColor:(id)arg1;
- (void)validateOriginalColorButton;
- (void)refreshOriginalColorButtonFromSelection;
- (void)menuNeedsUpdate:(id)arg1;
- (void)updateFrequentColorsMenu;
- (void)toggleIgnoreAlpha:(id)arg1;
- (id)currentDocument;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSColorReplacement : NSObject <MSReplaceColorActionDetails>
{
    BOOL _ignoreAlphaWhenMatchingOriginalColor;
    BOOL _replaceAlphaOfOriginalColor;
    MSColor *_originalColor;
    MSColor *_replacementColor;
}

@property(readonly, nonatomic) MSColor *replacementColor; // @synthesize replacementColor=_replacementColor;
@property(readonly, nonatomic) BOOL replaceAlphaOfOriginalColor; // @synthesize replaceAlphaOfOriginalColor=_replaceAlphaOfOriginalColor;
@property(readonly, nonatomic) MSColor *originalColor; // @synthesize originalColor=_originalColor;
@property(readonly, nonatomic) BOOL ignoreAlphaWhenMatchingOriginalColor; // @synthesize ignoreAlphaWhenMatchingOriginalColor=_ignoreAlphaWhenMatchingOriginalColor;
- (void).cxx_destruct;
- (id)initWithOriginalColor:(id)arg1 replacementColor:(id)arg2 ignoreAlphaWhenMatchingOriginalColor:(BOOL)arg3 replaceAlphaOfOriginalColor:(BOOL)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPopoverDismisserView : NSView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface MSSmartRotateEventHandler : MSEventHandler
{
    struct CGPoint rotationCenter;
    BOOL hasRotationCenterSelected;
    unsigned long long _numberOfRepetitions;
    NSArray *_shapeLayers;
    NSArray *_shapeLayersCopies;
}

@property(copy, nonatomic) NSArray *shapeLayersCopies; // @synthesize shapeLayersCopies=_shapeLayersCopies;
@property(copy, nonatomic) NSArray *shapeLayers; // @synthesize shapeLayers=_shapeLayers;
@property(nonatomic) unsigned long long numberOfRepetitions; // @synthesize numberOfRepetitions=_numberOfRepetitions;
- (void).cxx_destruct;
- (BOOL)shouldDrawLayerSelection;
- (id)imageName;
- (id)toolbarIdentifier;
- (void)dealloc;
- (void)willMoveThroughHistory:(id)arg1;
- (void)unregisterObservers;
- (void)registerObservers;
- (double)rotationForRepetitionAtIndex:(unsigned long long)arg1;
- (void)drawControlPoints;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (struct CGPoint)tryToSnapPoint:(struct CGPoint)arg1 toMid:(struct CGPoint)arg2;
- (void)rotateCopies;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (id)currentGroup;
- (void)adjustGroup;
- (id)transformForRotatingShape:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)adjustFrameForShapeCopy:(id)arg1 shape:(id)arg2 index:(unsigned long long)arg3;
- (void)adjustBooleanOperationForShapeCopyIfNecessary:(id)arg1;
- (void)adjustRotationForShapeCopy:(id)arg1 atIndex:(unsigned long long)arg2 baseRotation:(double)arg3;
- (void)rotateCopy:(id)arg1 ofShape:(id)arg2 toIndex:(unsigned long long)arg3;
- (void)rotateCopiesForShape:(id)arg1 shapeIndex:(unsigned long long)arg2;
- (void)handlerWillLoseFocus;
- (void)determineOriginalRotationCenter;
- (void)createShapeCopies;
- (void)findShapes;
- (void)handlerGotFocus;

@end

@interface MSSmartRotateSheet : CHSheetController
{
    NSTextField *_explanationLabel;
    long long _numberOfCopies;
}

@property(nonatomic) long long numberOfCopies; // @synthesize numberOfCopies=_numberOfCopies;
@property(retain, nonatomic) NSTextField *explanationLabel; // @synthesize explanationLabel=_explanationLabel;
- (void).cxx_destruct;
- (id)doc;
- (void)setNilValueForKey:(id)arg1;
- (void)confirm:(id)arg1;
- (void)cancel:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSBaseFlipAction : MSDocumentAction
{
}

- (BOOL)validate;

@end

@interface MSFlipHorizontalAction : MSBaseFlipAction
{
}

- (id)touchBarItem;
- (BOOL)areAllSelectedLayersFlippedHorizontally;
- (id)touchBarImage;
- (void)doPerformAction:(id)arg1;
- (void)flipHorizontal:(id)arg1;
- (id)historyMomentTitle;

@end

@interface MSFlipVerticalAction : MSBaseFlipAction
{
}

- (id)touchBarItem;
- (BOOL)areAllSelectedLayersFlippedVertically;
- (id)touchBarImage;
- (void)doPerformAction:(id)arg1;
- (void)flipVertical:(id)arg1;
- (id)historyMomentTitle;

@end

@interface MSApplyFlipAction : MSBaseFlipAction
{
    BOOL _momentWasVertical;
}

- (id)touchBarImage;
- (void)doPerformAction:(id)arg1;
- (void)applyFlip:(id)arg1;
- (id)historyMomentTitle;

@end

@interface MSSplitAction : MSDocumentAction
{
}

- (id)imageName;
- (BOOL)validate;
- (id)historyMomentTitle;
- (void)doPerformAction:(id)arg1;
- (void)split:(id)arg1;

@end

@interface MSSplitView : NSSplitView
{
}

- (void)drawDividerInRect:(struct CGRect)arg1;
- (double)dividerThickness;

@end

@interface MSSidebarSplitView : NSSplitView
{
}

- (void)setFrame:(struct CGRect)arg1;
- (BOOL)shouldDrawDivider;
- (id)dividerColor;
- (double)dividerThickness;

@end

@interface MSDocumentWindow : NSWindow <MSInterfaceTheme>
{
    BCWindowBadge *_titleBarBadge;
    NSEvent *_lastForwardedKeyEvent;
}

@property(nonatomic) __weak NSEvent *lastForwardedKeyEvent; // @synthesize lastForwardedKeyEvent=_lastForwardedKeyEvent;
@property(retain, nonatomic) BCWindowBadge *titleBarBadge; // @synthesize titleBarBadge=_titleBarBadge;
- (void).cxx_destruct;
- (id)touchBar;
- (BOOL)shouldDismissPopover:(id)arg1 event:(id)arg2;
- (void)mouseDown:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)sendEvent:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMainSplitViewController : NSObject <NSSplitViewDelegate>
{
    BOOL _isInVersionBrowser;
    NSView *_layerListView;
    NSView *_canvasView;
    NSView *_inspectorView;
    NSSplitView *_splitView;
    NSWindow *_window;
    long long _leftSide;
    long long _rightSide;
    NSView *_savedInspectorView;
}

@property(retain, nonatomic) NSView *savedInspectorView; // @synthesize savedInspectorView=_savedInspectorView;
@property(nonatomic) BOOL isInVersionBrowser; // @synthesize isInVersionBrowser=_isInVersionBrowser;
@property(nonatomic) long long rightSide; // @synthesize rightSide=_rightSide;
@property(nonatomic) long long leftSide; // @synthesize leftSide=_leftSide;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) NSSplitView *splitView; // @synthesize splitView=_splitView;
@property(nonatomic) __weak NSView *inspectorView; // @synthesize inspectorView=_inspectorView;
@property(nonatomic) __weak NSView *canvasView; // @synthesize canvasView=_canvasView;
@property(nonatomic) __weak NSView *layerListView; // @synthesize layerListView=_layerListView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)didExitVersionBrowser;
- (void)didEnterVersionBrowser;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)dividerIndexBelongsToInspectorView:(long long)arg1;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (void)splitViewDidResizeSubviews:(id)arg1;
@property(nonatomic) long long layerListWidth;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSeparatorlessView : NSView
{
}

- (BOOL)isFlipped;
- (BOOL)wantsSeparator;

@end

@interface MSSquareButtonCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSStackViewScrollView : NSScrollView
{
}

- (id)enclosedStackView;
- (void)setFrame:(struct CGRect)arg1;

@end

@interface MSExportFormatNamingTextField : NSTextField
{
    NSArray *_exportFormats;
}

+ (id)sharedFieldEditor;
+ (Class)cellClass;
@property(copy, nonatomic) NSArray *exportFormats; // @synthesize exportFormats=_exportFormats;
- (void).cxx_destruct;
- (void)applyNamingScheme:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)resetCursorRects;
- (void)mouseDown:(id)arg1;
- (struct CGRect)dropDownArrowHitTestRect;

@end

@interface MSExportFormatNamingTextFieldCell : NSTextFieldCell
{
    NSAttributedString *_prefixedLayerNamePlaceholder;
    NSAttributedString *_suffixedLayerNamePlaceholder;
    double _layerNamePlaceholderWidth;
}

@property(nonatomic) double layerNamePlaceholderWidth; // @synthesize layerNamePlaceholderWidth=_layerNamePlaceholderWidth;
@property(retain, nonatomic) NSAttributedString *suffixedLayerNamePlaceholder; // @synthesize suffixedLayerNamePlaceholder=_suffixedLayerNamePlaceholder;
@property(retain, nonatomic) NSAttributedString *prefixedLayerNamePlaceholder; // @synthesize prefixedLayerNamePlaceholder=_prefixedLayerNamePlaceholder;
- (void).cxx_destruct;
- (id)setUpFieldEditorAttributes:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)fittingFrameForFieldEditor:(id)arg1 controlView:(id)arg2 counterSelectionInset:(BOOL)arg3;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
@property(readonly, nonatomic) BOOL isPrefixed;
@property(readonly, nonatomic) long long namingScheme;

@end

@interface MSInsertSymbolEventHandler : MSEventHandler
{
    BOOL _isMakingPreview;
    MSSymbolMasterReference *_symbolReference;
    NSMutableDictionary *_previewImages;
    NSOperationQueue *_renderQueue;
    MSSnapperData *_snapperData;
    struct CGPoint _mouseLocation;
}

@property(retain, nonatomic) MSSnapperData *snapperData; // @synthesize snapperData=_snapperData;
@property(retain, nonatomic) NSOperationQueue *renderQueue; // @synthesize renderQueue=_renderQueue;
@property(retain, nonatomic) NSMutableDictionary *previewImages; // @synthesize previewImages=_previewImages;
@property(nonatomic) BOOL isMakingPreview; // @synthesize isMakingPreview=_isMakingPreview;
@property(nonatomic) struct CGPoint mouseLocation; // @synthesize mouseLocation=_mouseLocation;
@property(retain, nonatomic) MSSymbolMasterReference *symbolReference; // @synthesize symbolReference=_symbolReference;
- (void).cxx_destruct;
- (void)generatePreviewAndRefreshWhenDone;
- (BOOL)pasteboardContainsSymbolInfo:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)previewImage;
- (struct CGRect)rectAroundMouseFromBoundsCoordinates:(struct CGRect)arg1;
- (struct CGPoint)originForInserting;
- (struct CGRect)previewRectForInserting;
- (void)refresh;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (BOOL)insertSymbolAtCurrentMouseLocation;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)initWithManager:(id)arg1;

@end

@interface MSMaskWithShapeAction : MSDocumentAction
{
}

- (id)label;
- (BOOL)showInToolbar;
- (void)doPerformAction:(id)arg1;
- (void)maskWithShape:(id)arg1;
- (BOOL)validate;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface MSExportSheetItem : NSCollectionViewItem
{
    BOOL _showWarningLabel;
    MSSliceDragView *_previewView;
    NSTextField *_titleField;
    NSTextField *_subTitleField;
    NSButton *_checkBox;
    NSImageView *_warningView;
    MSExportSheet *_exportSheet;
}

@property(nonatomic) BOOL showWarningLabel; // @synthesize showWarningLabel=_showWarningLabel;
@property(nonatomic) __weak MSExportSheet *exportSheet; // @synthesize exportSheet=_exportSheet;
@property(retain, nonatomic) NSImageView *warningView; // @synthesize warningView=_warningView;
@property(retain, nonatomic) NSButton *checkBox; // @synthesize checkBox=_checkBox;
@property(retain, nonatomic) NSTextField *subTitleField; // @synthesize subTitleField=_subTitleField;
@property(retain, nonatomic) NSTextField *titleField; // @synthesize titleField=_titleField;
@property(retain, nonatomic) MSSliceDragView *previewView; // @synthesize previewView=_previewView;
- (void).cxx_destruct;
@property(nonatomic) BOOL isExportable;
- (id)subTitle;
- (void)loadUI;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSStylePartInspectorViewController : NSViewController <NSPopoverDelegate, MSInspectorSection, NSWindowDelegate, MSColorInspectorDelegate, MSStylePartPreviewButtonDelegate>
{
    NSView *nameView;
    NSArray *_styleParts;
    NSArrayController *_arrayController;
    id <MSStylePartInspectorDelegate> _delegate;
    unsigned long long _index;
    MSStylePartPreviewButton *_colorPickerButton;
    BCPopover *_popover;
}

+ (id)reusableControllerArray;
+ (id)stylePartViewController;
@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) MSStylePartPreviewButton *colorPickerButton; // @synthesize colorPickerButton=_colorPickerButton;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(nonatomic) __weak id <MSStylePartInspectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
@property(retain, nonatomic) NSArray *styleParts; // @synthesize styleParts=_styleParts;
- (void).cxx_destruct;
- (id)stylePartPreviewButtonPreviewColorSpace:(id)arg1;
- (id)views;
- (void)didGetAddedToInspector;
- (BOOL)hasEnabledStyle;
- (void)prepare;
- (void)colorInspectorDidChange:(id)arg1;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)updateColorInActiveInspector;
- (void)checkBoxAction:(id)arg1;
- (void)dismissViewController:(id)arg1;
- (void)closePopover;
- (void)previewCellAction:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithDelegate:(id)arg1;
- (id)init;
- (void)prepareForReuse;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSTextFieldKeyEventForwarder : MSUpDownTextField <NSTextDelegate>
{
}

- (id)keyEventFromString:(id)arg1;
- (void)sendKeyEventFromString:(id)arg1;
- (id)findCanvasView;
- (BOOL)addedTextContainsOnlyDigits:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSTextFieldKeyEventForwarderMini : MSTextFieldKeyEventForwarder
{
}

- (double)incrementValue;

@end

@interface MSTextFieldKeyEventForwarderNano : MSTextFieldKeyEventForwarder
{
}

- (double)incrementValue;

@end

@interface MSTextLayerEventHandler : MSEventHandler <NSLayoutManagerDelegate, NSTextViewDelegate, NSTextStorageDelegate, NSWindowDelegate, MSTextLayerEditingDelegate, MSTextLayerTextViewDelegate, MSFirstLineTypesetterDelegate>
{
    MSTextLayerTextView *_textView;
    MSTextWindow *_textViewWindow;
    MSTextLayer *_textLayer;
    NSTextStorage *_textStorage;
    NSTimer *_updateInsertionPointColorTimer;
    NSNumber *_firstBaselineOffsetBeforeEditing;
}

@property(retain, nonatomic) NSNumber *firstBaselineOffsetBeforeEditing; // @synthesize firstBaselineOffsetBeforeEditing=_firstBaselineOffsetBeforeEditing;
@property(retain, nonatomic) NSTimer *updateInsertionPointColorTimer; // @synthesize updateInsertionPointColorTimer=_updateInsertionPointColorTimer;
@property(retain, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(retain, nonatomic) MSTextLayer *textLayer; // @synthesize textLayer=_textLayer;
@property(retain, nonatomic) MSTextWindow *textViewWindow; // @synthesize textViewWindow=_textViewWindow;
@property(retain, nonatomic) MSTextLayerTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (id)selectionTouchBar;
- (BOOL)shouldExitOnContentViewResize;
- (BOOL)validateMenuItem:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (BOOL)canDuplicate;
- (void)dealloc;
- (BOOL)shouldDrawLayerSelection;
- (id)toolbarIdentifier;
- (void)doTextModification:(CDUnknownBlockType)arg1;
- (void)removeTextTransform:(id)arg1;
- (void)makeLowercase:(id)arg1;
- (void)makeUppercase:(id)arg1;
- (void)applyTextTransform:(id)arg1;
- (void)removeTextView;
- (void)handlerDidLoseFocus;
- (void)handlerWillLoseFocus;
- (void)commitPendingEdits;
- (BOOL)handlesHistoryCoalescing;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)selectAll:(id)arg1;
- (struct CGRect)windowFrameForDrawView;
- (void)scrollWheel:(id)arg1;
- (void)zoomValueWillChangeTo:(double)arg1;
- (void)viewDidScroll:(id)arg1;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (void)adjustTextViewFrame;
- (void)scheduleUpdateInsertionPointColorTimer;
- (id)layoutManager:(id)arg1 shouldUseTemporaryAttributes:(id)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (id)firstBaselineOffset;
- (id)documentColorSpaceForTextLayerTextView:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textDidChange:(id)arg1;
- (id)undoManager;
- (void)dispatchTryPutFirstFocusBack;
- (void)tryPutFirstFocusBack;
- (void)windowDidResignKey:(id)arg1;
- (void)adjustForegroundColor;
- (id)insertionPointColor;
- (struct CGImage *)newTextLayerImageFromWindowBackingStore;
- (void)beginEditing;
- (void)updateTextViewStyling;
- (double)baselineAdjustmentForLayoutManager:(id)arg1;
- (struct CGRect)frameForTextViewOnCanvasBasedOnBaseFrame:(struct CGRect)arg1;
- (struct CGRect)frameForTextView;
- (void)makeTextWindow;
- (void)makeTextView;
- (void)addTextView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)reloadFollowingBackgroundChangesToDocument;
- (void)handlerGotFocus;
- (void)setupTextLayer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCMagicWand : NSOperation
{
    unsigned long long _width;
    unsigned long long _height;
    int _tolerance;
    struct BCPixel _reference;
    NSBitmapImageRep *_bitmap;
    CDUnknownBlockType _wandCompletionBlock;
    NSBitmapImageRep *_maskImage;
    struct BCPixel *_pixels;
    struct BCPixel *_mask;
    unsigned long long _unvisitedIndex;
    unsigned long long _visitedIndex;
    char *_planned;
    unsigned long long *_nextVisits;
    struct CGPoint _startPoint;
}

@property(nonatomic) unsigned long long *nextVisits; // @synthesize nextVisits=_nextVisits;
@property(nonatomic) char *planned; // @synthesize planned=_planned;
@property(nonatomic) struct BCPixel reference; // @synthesize reference=_reference;
@property(nonatomic) unsigned long long visitedIndex; // @synthesize visitedIndex=_visitedIndex;
@property(nonatomic) unsigned long long unvisitedIndex; // @synthesize unvisitedIndex=_unvisitedIndex;
@property(nonatomic) struct BCPixel *mask; // @synthesize mask=_mask;
@property(nonatomic) struct BCPixel *pixels; // @synthesize pixels=_pixels;
@property(retain, nonatomic) NSBitmapImageRep *maskImage; // @synthesize maskImage=_maskImage;
@property(copy, nonatomic) CDUnknownBlockType wandCompletionBlock; // @synthesize wandCompletionBlock=_wandCompletionBlock;
@property(retain, nonatomic) NSBitmapImageRep *bitmap; // @synthesize bitmap=_bitmap;
@property(nonatomic) int tolerance; // @synthesize tolerance=_tolerance;
@property(nonatomic) struct CGPoint startPoint; // @synthesize startPoint=_startPoint;
- (void).cxx_destruct;
- (struct CGPoint)nextUnvisitedPoint;
- (void)pushVisit:(struct CGPoint)arg1;
- (void)collectVisitsForPoint:(struct CGPoint)arg1;
- (BOOL)pointMatch:(struct CGPoint)arg1;
- (void)run;
- (void)setUpMaskImage;
- (void)main;

@end

@interface MSWelcomeCollectionView : NSCollectionView
{
}

- (id)newItemForRepresentedObject:(id)arg1;

@end

@interface MSBaseSharedStyleAction : MSDocumentAction
{
}

- (void)reloadInspector;
- (id)sharedObjectContainer;
- (BOOL)selectionContainsLayersWithSharedStyleOutOfSync;
- (BOOL)validate;

@end

@interface MSResetSymbolSizeAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)resetSymbolSize:(id)arg1;

@end

@interface MSTextLayerSection : MSLayerSection <NSMenuDelegate, MSColorInspectorDelegate, NSComboBoxDataSource, MSStylePartPreviewButtonDelegate>
{
    NSView *_basicView;
    NSView *_missingFontsView;
    NSTextField *_missingFontsLabel;
    NSButton *_fontFamilyButton;
    NSButton *_missingFontFamilyButton;
    NSPopUpButton *_fontWeightPopUpButton;
    NSComboBox *_fontSizeField;
    MSStylePartPreviewButton *_colorPickerButton;
    NSTextField *_kerningField;
    MSUpDownTextField *_lineHeightField;
    NSTextField *_paragraphHeightField;
    NSSegmentedControl *_alignmentButton;
    NSSegmentedControl *_verticalAlignmentButton;
    BCPopover *_popover;
    NSSet *_fontPostscriptNames;
    NSSet *_fontFamilyNames;
    NSSet *_fontPointSizes;
}

+ (void)initialize;
@property(copy, nonatomic) NSSet *fontPointSizes; // @synthesize fontPointSizes=_fontPointSizes;
@property(copy, nonatomic) NSSet *fontFamilyNames; // @synthesize fontFamilyNames=_fontFamilyNames;
@property(copy, nonatomic) NSSet *fontPostscriptNames; // @synthesize fontPostscriptNames=_fontPostscriptNames;
@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSSegmentedControl *verticalAlignmentButton; // @synthesize verticalAlignmentButton=_verticalAlignmentButton;
@property(retain, nonatomic) NSSegmentedControl *alignmentButton; // @synthesize alignmentButton=_alignmentButton;
@property(retain, nonatomic) NSTextField *paragraphHeightField; // @synthesize paragraphHeightField=_paragraphHeightField;
@property(retain, nonatomic) MSUpDownTextField *lineHeightField; // @synthesize lineHeightField=_lineHeightField;
@property(retain, nonatomic) NSTextField *kerningField; // @synthesize kerningField=_kerningField;
@property(retain, nonatomic) MSStylePartPreviewButton *colorPickerButton; // @synthesize colorPickerButton=_colorPickerButton;
@property(retain, nonatomic) NSComboBox *fontSizeField; // @synthesize fontSizeField=_fontSizeField;
@property(retain, nonatomic) NSPopUpButton *fontWeightPopUpButton; // @synthesize fontWeightPopUpButton=_fontWeightPopUpButton;
@property(retain, nonatomic) NSButton *missingFontFamilyButton; // @synthesize missingFontFamilyButton=_missingFontFamilyButton;
@property(retain, nonatomic) NSButton *fontFamilyButton; // @synthesize fontFamilyButton=_fontFamilyButton;
@property(retain, nonatomic) NSTextField *missingFontsLabel; // @synthesize missingFontsLabel=_missingFontsLabel;
@property(retain, nonatomic) NSView *missingFontsView; // @synthesize missingFontsView=_missingFontsView;
@property(retain, nonatomic) NSView *basicView; // @synthesize basicView=_basicView;
- (void).cxx_destruct;
- (id)stylePartPreviewButtonPreviewColorSpace:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (void)colorMagnifierAction:(id)arg1;
- (BOOL)canHandleColorMagnifierAction;
- (BOOL)hasMoreThanOneMissingFont;
- (BOOL)hasMissingFonts;
- (id)views;
- (id)firstOccurrenceOfAttributeWithName:(id)arg1;
- (void)updateKerningForFontChangeTo:(id)arg1 string:(id)arg2 range:(struct _NSRange)arg3 effectiveRange:(struct _NSRange)arg4 oldPointSize:(double)arg5;
- (void)changeFontPropertiesInBlock:(CDUnknownBlockType)arg1;
- (void)changeFontPropertiesOfTextObjectsInBlock:(CDUnknownBlockType)arg1;
- (void)applyFontPropertyChanges:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)colorInspectorUndoManager:(id)arg1;
- (void)dismissViewController:(id)arg1;
- (void)reloadFontWeightPopUp;
- (void)reloadFontFamilyButton;
- (void)reloadPointSizesTextField;
- (id)firstColor;
- (void)changeFontFamilyTo:(id)arg1;
- (void)changeParagraphStyleInBlock:(CDUnknownBlockType)arg1;
- (id)textEventHandler;
- (id)textView;
- (void)verticalAlignmentAction:(id)arg1;
- (void)textBehaviourButtonAction:(id)arg1;
- (void)alignmentButtonAction:(id)arg1;
- (id)contentDrawView;
- (void)paragraphHeightAction:(id)arg1;
- (double)valueForUpDownTextField:(id)arg1;
- (void)lineHeightAction:(id)arg1;
- (void)maintainTextLayerBaselinesInBlock:(CDUnknownBlockType)arg1;
- (void)kerningAction:(id)arg1;
- (void)putFocusOnTextView;
- (void)colorInspectorWillClose:(id)arg1;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (id)document;
- (id)documentColorSpace;
- (id)canvasColorSpace;
- (void)changeTextLayerFont:(id)arg1;
- (void)showColorPickerAction:(id)arg1;
- (void)showParagraphStylingAction:(id)arg1;
- (void)fontSizeAction:(id)arg1;
- (void)fontWeightAction:(id)arg1;
- (void)fontFamilyAction:(id)arg1;
- (void)commitHistory;
- (void)closeExistingPopoverOrShowNewOneWithContentClass:(Class)arg1 sender:(id)arg2 viewCreatorBlock:(CDUnknownBlockType)arg3;
- (void)viewWillDisappear;
- (void)dealloc;
- (double)defaultLineHeight;
- (double)lineHeight;
- (void)reloadLineHeightField;
- (void)reloadKerningField;
- (void)reloadVerticalAlignmentButton;
- (void)reloadData;
- (void)storeCurrentFontNamesAndSizes;
- (id)fontDescriptorsForSelection;
- (id)missingFontTitle;
- (void)textViewDidChange:(id)arg1;
- (void)updateControlFormatterNativeDecimal:(id)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSRotationBar : NSControl
{
    BOOL _currentlyTrackingTouch;
    BOOL _didSnapRotation;
    double _rotation;
    double _currentX;
    double _lastTouchTime;
    double _startingRotation;
    double _startingX;
    NSTimer *_inertialTimer;
    double _inertialSpeed;
}

+ (BOOL)shouldContinueInertialScrollingAtSpeed:(double)arg1;
@property(nonatomic) double inertialSpeed; // @synthesize inertialSpeed=_inertialSpeed;
@property(retain, nonatomic) NSTimer *inertialTimer; // @synthesize inertialTimer=_inertialTimer;
@property(nonatomic) double startingX; // @synthesize startingX=_startingX;
@property(nonatomic) double startingRotation; // @synthesize startingRotation=_startingRotation;
@property(nonatomic) double lastTouchTime; // @synthesize lastTouchTime=_lastTouchTime;
@property(nonatomic) BOOL didSnapRotation; // @synthesize didSnapRotation=_didSnapRotation;
@property(nonatomic) double currentX; // @synthesize currentX=_currentX;
@property(nonatomic) BOOL currentlyTrackingTouch; // @synthesize currentlyTrackingTouch=_currentlyTrackingTouch;
@property(nonatomic) double rotation; // @synthesize rotation=_rotation;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)endInertialScrolling;
- (void)inertialScrollingTimerDidFire:(id)arg1;
- (void)startInertialScrollingAtSpeed:(double)arg1;
- (void)liveUpdateRotation;
- (void)panGestureAction:(id)arg1;
- (void)resetTouchToX:(double)arg1;
- (void)stopTrackingTouch;
- (void)failTouchTracking;
- (void)updateTouchTracking:(id)arg1;
- (void)startTrackingTouch:(id)arg1;
- (void)setUpGestureRecognizer;
- (unsigned long long)allowedTouchTypes;
- (BOOL)acceptsTouchEvents;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSFixedPanGestureRecognizer : NSPanGestureRecognizer
{
}

- (unsigned long long)allowedTouchTypes;

@end

@interface MSOpacityBlendingInspectorViewController : NSViewController <MSInspectorSection, NSMenuDelegate>
{
    NSArray *_layers;
    NSNumberFormatter *_numberFormatter;
}

@property(retain, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=_numberFormatter;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (id)views;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCloudAvatarView : NSView
{
    SCKAvatar *_avatar;
    NSImageView *_imageView;
}

@property(retain, nonatomic) NSImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) SCKAvatar *avatar; // @synthesize avatar=_avatar;
- (void).cxx_destruct;
- (void)loadAvatar;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MSEditArtboardPresetViewController : NSViewController <NSTouchBarDelegate>
{
    MSArtboardPreset *_preset;
    id <MSEditArtboardPresetViewControllerDelegate> _delegate;
    NSButton *_confirmButton;
    NSButton *_cancelButton;
}

@property(retain, nonatomic) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) NSButton *confirmButton; // @synthesize confirmButton=_confirmButton;
@property(nonatomic) __weak id <MSEditArtboardPresetViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MSArtboardPreset *preset; // @synthesize preset=_preset;
- (void).cxx_destruct;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeTouchBar;
- (void)confirm:(id)arg1;
- (void)cancel:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSBadgeMenuAction : MSDocumentAction <MSWindowBadgeAction>
{
}

@property(readonly, nonatomic) unsigned long long numberOfBadges;
- (id)label;
@property(readonly, nonatomic) NSColor *badgeTint;
- (void)doPerformAction:(id)arg1;
- (id)badgedActions;
- (id)buildMenu;

// Remaining properties
@property(readonly, nonatomic) NSAttributedString *badgeTitle; // @dynamic badgeTitle;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSBackToInstanceAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)backToInstance:(id)arg1;

@end

@interface MSTextOnPathAction : MSDocumentAction
{
}

- (id)textLayers;
- (BOOL)validate;
- (BOOL)isActive;
- (void)doPerformAction:(id)arg1;
- (void)textOnPath:(id)arg1;

@end

@interface MSToolbarConstructor : NSObject <NSToolbarDelegate>
{
    MSDocument *_doc;
    NSArray *_toolbarSelectableIdentifiers;
    NSToolbar *_toolbar;
}

+ (id)toolbarForDocument:(id)arg1;
@property(retain, nonatomic) NSToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(copy, nonatomic) NSArray *toolbarSelectableIdentifiers; // @synthesize toolbarSelectableIdentifiers=_toolbarSelectableIdentifiers;
@property(nonatomic) __weak MSDocument *doc; // @synthesize doc=_doc;
- (void).cxx_destruct;
- (void)dealloc;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)allActions;
- (id)standardToolbarIdentifiers;
- (void)constructToolbarForWindow:(id)arg1;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSToolbar : NSToolbar
{
}

- (double)ms_toolbarHeight;
- (BOOL)_allowsDisplayMode:(unsigned long long)arg1;
- (void)setDisplayMode:(unsigned long long)arg1;
- (BOOL)_allowsSizeMode:(unsigned long long)arg1;
- (void)setSizeMode:(unsigned long long)arg1;

@end

@interface MSOverrideViewController : NSViewController <MSDataMenuProviderDelegate>
{
    MSAvailableOverride *_primaryOverride;
    NSArray *_instances;
    NSSet *_allOverrides;
    MSDataMenuProvider *_dataController;
}

@property(retain, nonatomic) MSDataMenuProvider *dataController; // @synthesize dataController=_dataController;
@property(retain, nonatomic) NSSet *allOverrides; // @synthesize allOverrides=_allOverrides;
@property(retain, nonatomic) NSArray *instances; // @synthesize instances=_instances;
@property(readonly, nonatomic) MSAvailableOverride *primaryOverride; // @synthesize primaryOverride=_primaryOverride;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL hasSingleOverride;
- (void)applyOverrideToSelectedLayers:(id)arg1;
- (void)overrideValueAction:(id)arg1;
- (void)dataMenuProvider:(id)arg1 didChooseData:(id)arg2;
- (unsigned long long)dataMenuProviderDataTypeForMenuBuilding:(id)arg1;
- (BOOL)dataMenuProviderIsInspectorPopupMenu:(id)arg1;
- (BOOL)dataMenuProvider:(id)arg1 canChooseDataOfType:(unsigned long long)arg2;
- (unsigned long long)supportedDataProviders;
- (id)labelView;
- (id)valueFromControlView:(id)arg1;
- (id)controlViewForEditingOverride;
- (void)build;
- (id)views;
- (id)initWithPrimaryOverride:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSTransformEventHandler : MSPointsEventHandler
{
    MSPointArray *_transformPoints;
    MSPointArray *_mouseDownPoints;
    NSMapTable *_shapeMapping;
    DKDistortionTransform *_transform;
    NSMutableArray *_originalPoints;
    MSLayerGroup *_currentGroup;
    unsigned long long _directionLock;
    struct CGPoint _firstSelectedLocation;
    struct CGRect _originalRect;
}

@property(nonatomic) struct CGPoint firstSelectedLocation; // @synthesize firstSelectedLocation=_firstSelectedLocation;
@property(nonatomic) unsigned long long directionLock; // @synthesize directionLock=_directionLock;
@property(retain, nonatomic) MSLayerGroup *currentGroup; // @synthesize currentGroup=_currentGroup;
@property(retain, nonatomic) NSMutableArray *originalPoints; // @synthesize originalPoints=_originalPoints;
@property(retain, nonatomic) DKDistortionTransform *transform; // @synthesize transform=_transform;
@property(retain, nonatomic) NSMapTable *shapeMapping; // @synthesize shapeMapping=_shapeMapping;
@property(retain, nonatomic) MSPointArray *mouseDownPoints; // @synthesize mouseDownPoints=_mouseDownPoints;
@property(retain, nonatomic) MSPointArray *transformPoints; // @synthesize transformPoints=_transformPoints;
@property(nonatomic) struct CGRect originalRect; // @synthesize originalRect=_originalRect;
- (void).cxx_destruct;
- (void)concatTransformsForDrawSnaps;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (BOOL)shouldDrawLayerSelection;
- (void)drawHandleLines;
- (void)resetTransformsForLayer:(id)arg1;
- (void)transformShape;
- (id)cursorForCorner:(long long)arg1;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)keyDown:(id)arg1;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1;
- (struct CGRect)bounds;
- (void)movePointsRelatedToCorner:(long long)arg1 newLocation:(struct CGPoint)arg2 previous:(struct CGPoint)arg3;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (void)replacePointAtCorner:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (struct CGPoint)pointAtCorner:(long long)arg1;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 flags:(unsigned long long)arg3;
- (id)points;
- (void)handlerWillLoseFocus;
- (id)snapsForShape;
- (id)pointsToSnap;
- (void)recordOriginalShapes;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSToolsMenuAction : MSDocumentAction
{
}

- (id)submenuActionIDs;

@end

@interface MSTransformAction : MSEventHandlerAction
{
}

- (id)tooltip;
- (void)doPerformAction:(id)arg1;
- (void)transform:(id)arg1;
- (BOOL)validate;

@end

@interface MSScissorsAction : MSEventHandlerAction
{
}

- (id)tooltip;
- (BOOL)validate;
- (void)scissors:(id)arg1;

@end

@interface MSConvertToOutlinesAction : MSDocumentAction
{
}

- (BOOL)validate;
- (id)imageName;
- (id)historyMomentTitle;
- (id)label;
- (void)doPerformAction:(id)arg1;
- (void)convertToOutlines:(id)arg1;

@end

@interface MSUnavailableUpdatesWindowController : NSWindowController <NSWindowDelegate>
{
    NSTextField *_descriptionTextField;
    NSString *_lastVersion;
    NSString *_lastBuildNumber;
}

+ (void)showModalWithVersion:(id)arg1 buildNumber:(id)arg2;
@property(retain, nonatomic) NSString *lastBuildNumber; // @synthesize lastBuildNumber=_lastBuildNumber;
@property(retain, nonatomic) NSString *lastVersion; // @synthesize lastVersion=_lastVersion;
@property(nonatomic) __weak NSTextField *descriptionTextField; // @synthesize descriptionTextField=_descriptionTextField;
- (void).cxx_destruct;
- (void)learnMore:(id)arg1;
- (void)openUpdatesPage:(id)arg1;
- (void)renewLicense:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidLoad;
- (id)initWithWindowNibName:(id)arg1 version:(id)arg2 buildNumber:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSVerticalRulerView : MSRulerView
{
}

- (id)titleForRemoveAllGuidesMenuItem;
- (id)snapLineWithPosition:(double)arg1;
- (id)occupiedRegionForRect:(struct CGRect)arg1 withOffset:(long long)arg2 zoom:(double)arg3;
- (id)bezierPathForLineAtPosition:(double)arg1 inRect:(struct CGRect)arg2;
- (void)refreshTemporaryRulerGuide;
- (void)refreshGuideInDrawViewAtPosition:(double)arg1;
- (void)setResizeCursor;
- (BOOL)isFlipped;
- (Class)rulerViewLayerClass;
- (void)awakeFromNib;

@end

@interface MSGradientBarView : BCColorPickerBaseView
{
    id <MSGradientBarViewDelegate> _delegate;
    MSGradient *_gradient;
    unsigned long long _selectedStopIndex;
}

@property(nonatomic) unsigned long long selectedStopIndex; // @synthesize selectedStopIndex=_selectedStopIndex;
@property(retain, nonatomic) MSGradient *gradient; // @synthesize gradient=_gradient;
@property(nonatomic) __weak id <MSGradientBarViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)canBecomeKeyView;
- (BOOL)canDoAdvancedGradientStopModifications;
- (void)centerStopBetween;
- (void)setSelectedStopToPercentage:(long long)arg1;
- (void)insertText:(id)arg1;
- (id)previousStop;
- (id)nextStop;
- (id)selectedStop;
- (void)moveSelectedStopBy:(double)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)drawSelectedMarkerInRect:(struct CGRect)arg1 color:(id)arg2;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (double)stopPositionForEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (unsigned long long)stopIndexForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (struct CGRect)normaliseRect:(struct CGRect)arg1;
- (struct CGRect)rectForMarkerAtIndex:(unsigned long long)arg1;
- (void)awakeFromNib;
- (BOOL)canBeKeyView;

@end

@interface MSViewMenuAction : MSDocumentAction
{
}

- (id)tooltip;
- (id)submenuActionIDs;

@end

@interface MSTogglePixelGridAction : MSDocumentAction
{
}

- (BOOL)isActive;
- (BOOL)validateMenuItem:(id)arg1;
- (id)imageName;
- (BOOL)isShowingPixelatedView;
- (void)doPerformAction:(id)arg1;
- (id)label;
- (void)togglePixelGrid:(id)arg1;

@end

@interface MSZoomBlurEventHandler : MSPointsEventHandler
{
    MSStyleBlur *_blurStyle;
}

@property(retain, nonatomic) MSStyleBlur *blurStyle; // @synthesize blurStyle=_blurStyle;
- (void).cxx_destruct;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (id)currentGroup;
- (id)points;

@end

@interface MSSpecialLayerViewController : NSViewController <MSInspectorSection, NSMenuDelegate>
{
    NSArray *_layers;
    NSArray *_layerInspectorControllers;
}

@property(retain, nonatomic) NSArray *layerInspectorControllers; // @synthesize layerInspectorControllers=_layerInspectorControllers;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)changeTextLayerFont:(id)arg1;
- (id)views;
- (id)inspectorsWithProperContent;
- (id)layerOrContentsOfLayer:(id)arg1 ifKindOfClass:(Class)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSExportInspectorViewController : MSStylePartInspectorViewController
{
    NSArray *_layers;
    NSView *_topFillerView;
    NSView *_bottomLabelView;
    NSView *_exportButtonView;
    NSView *_separatorView;
    NSView *_separatorView2;
    NSView *_bigExportLabel;
    NSButton *_addExportFormatButton;
    NSButton *_shareButton;
    NSButton *_exportButton;
    NSButton *_knifeButton;
    NSButton *_exportPresetsMenuButton;
    NSTextField *_exportFormatLabelTextField;
    NSArray *_formatViewControllers;
    MSShareButtonHandler *_shareButtonHandler;
}

@property(retain, nonatomic) MSShareButtonHandler *shareButtonHandler; // @synthesize shareButtonHandler=_shareButtonHandler;
@property(copy, nonatomic) NSArray *formatViewControllers; // @synthesize formatViewControllers=_formatViewControllers;
@property(retain, nonatomic) NSTextField *exportFormatLabelTextField; // @synthesize exportFormatLabelTextField=_exportFormatLabelTextField;
@property(retain, nonatomic) NSButton *exportPresetsMenuButton; // @synthesize exportPresetsMenuButton=_exportPresetsMenuButton;
@property(retain, nonatomic) NSButton *knifeButton; // @synthesize knifeButton=_knifeButton;
@property(retain, nonatomic) NSButton *exportButton; // @synthesize exportButton=_exportButton;
@property(retain, nonatomic) NSButton *shareButton; // @synthesize shareButton=_shareButton;
@property(retain, nonatomic) NSButton *addExportFormatButton; // @synthesize addExportFormatButton=_addExportFormatButton;
@property(retain, nonatomic) NSView *bigExportLabel; // @synthesize bigExportLabel=_bigExportLabel;
@property(retain, nonatomic) NSView *separatorView2; // @synthesize separatorView2=_separatorView2;
@property(retain, nonatomic) NSView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) NSView *exportButtonView; // @synthesize exportButtonView=_exportButtonView;
@property(retain, nonatomic) NSView *bottomLabelView; // @synthesize bottomLabelView=_bottomLabelView;
@property(retain, nonatomic) NSView *topFillerView; // @synthesize topFillerView=_topFillerView;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)dealloc;
- (id)firstResponderIgnoringFieldEditor;
- (void)commitScaleFieldEditsWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)editExportPresets:(id)arg1;
- (void)addExportPreset:(id)arg1;
- (void)applyExportPreset:(id)arg1;
- (id)findExportFormatAmong:(id)arg1 equalToFormat:(id)arg2;
- (BOOL)exportPresetAppliesToSelectedLayers:(id)arg1;
- (void)showExportPresetMenu:(id)arg1;
- (void)exportSingleSlice:(id)arg1;
- (void)shareAction:(id)arg1;
- (void)createSliceAction:(id)arg1;
- (id)document;
- (void)addExportFormat:(id)arg1;
- (id)views;
- (id)view;
- (BOOL)hasEnabledStyle;
- (id)exportButtonDisplayName;
- (void)applyDisplayNameToExportButton;
- (void)prepare;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)awakeFromNib;

@end

@interface MSUnderlineAction : MSDocumentAction
{
}

- (BOOL)isActive;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (BOOL)areOneOrMoreLayersUnderlinedInArray:(id)arg1;
- (id)selectedTextLayers;
- (void)underline:(id)arg1;

@end

@interface MSBitmapOverrideViewController : MSOverrideViewController <MSDataMenuProviderDelegate>
{
    MSImageOverrideView *_imageView;
    NSPopUpButton *_dataPopUpButton;
}

@property(retain, nonatomic) NSPopUpButton *dataPopUpButton; // @synthesize dataPopUpButton=_dataPopUpButton;
@property(retain, nonatomic) MSImageOverrideView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGRect controlRect;
- (void)dataMenuProvider:(id)arg1 didChooseData:(id)arg2;
- (unsigned long long)supportedDataProviders;
- (id)overrideImage;
- (id)NSImage;
- (id)valueFromControlView:(id)arg1;
- (void)choosePatternImage:(id)arg1;
- (void)build;
- (void)imageViewAction:(id)arg1;
- (id)controlViewForEditingOverride;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSNewsTriggerWindowController : CHWindowController <WebFrameLoadDelegate, WebPolicyDelegate, WebResourceLoadDelegate>
{
    BOOL _finishedLoadingData;
    NSURL *_url;
    NSString *_newsID;
    WebView *_webView;
    NSButton *_dontShowAgainButton;
}

@property(nonatomic) BOOL finishedLoadingData; // @synthesize finishedLoadingData=_finishedLoadingData;
@property(nonatomic) NSButton *dontShowAgainButton; // @synthesize dontShowAgainButton=_dontShowAgainButton;
@property(nonatomic) WebView *webView; // @synthesize webView=_webView;
@property(copy, nonatomic) NSString *newsID; // @synthesize newsID=_newsID;
@property(copy, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)dontShowNewsWithIDAnymore:(id)arg1;
- (void)close:(id)arg1;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithURL:(id)arg1 newsID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSInsertHotspotEventHandler : MSInsertLayerEventHandler
{
}

- (id)cursorForInsertingFromExisting;
- (unsigned long long)layerSelectionOptionsForInsertingFromExistingLayer;
- (BOOL)allowsInsertLayerFromExistingLayer;
- (id)toolbarIdentifier;

@end

@interface MSReplaceFontsSheet : CHSheetController <NSTableViewDataSource, NSTableViewDelegate, BCPopoverDelegate, NSWindowDelegate>
{
    NSTableView *_tableView;
    NSMutableArray *_fonts;
    NSViewController *_viewController;
    BCPopover *_popover;
}

@property(nonatomic) __weak BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) NSMutableArray *fonts; // @synthesize fonts=_fonts;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (BOOL)popoverShouldCauseExistingPopoversToClose:(id)arg1;
- (BOOL)popoverShouldCloseWhenNewPopoverOpens:(id)arg1 newPopover:(id)arg2;
- (BOOL)closePopover;
- (void)confirm:(id)arg1;
- (void)cancel:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)displayNameForSystemFontname:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)fontFamilyAction:(id)arg1;
- (void)reloadFontWeightPopup:(id)arg1 familyName:(id)arg2 row:(long long)arg3;
- (void)fontWeightAction:(id)arg1;
- (void)changeFontFamilyTo:(id)arg1 forRow:(long long)arg2;
- (void)setObject:(id)arg1;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAssetSyncSheetHeader : NSObject <MSAssetSyncSheetItem>
{
    MSAssetLibrary *library;
}

@property(retain, nonatomic) MSAssetLibrary *library; // @synthesize library;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *modifiedDateString;
@property(readonly, nonatomic) NSString *displayName;
@property(readonly, nonatomic) unsigned long long type;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMirrorDataProvider : NSObject <SMKMirrorDataSource>
{
    BOOL _requiresImmediateUpdate;
    BOOL _isAlreadyComparing;
    BOOL _needsUpdateMetadata;
    NSString *_currentArtboardID;
    SMKMirrorController *_connectionController;
    MSDocument *_document;
    MSImmutableDocumentData *_documentData;
    NSDictionary *_manifestContent;
    NSObject<OS_dispatch_queue> *_mirrorQueue;
    NSTimer *_updateTimer;
}

@property(nonatomic) BOOL needsUpdateMetadata; // @synthesize needsUpdateMetadata=_needsUpdateMetadata;
@property(retain, nonatomic) NSTimer *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(nonatomic) BOOL isAlreadyComparing; // @synthesize isAlreadyComparing=_isAlreadyComparing;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *mirrorQueue; // @synthesize mirrorQueue=_mirrorQueue;
@property(retain, nonatomic) NSDictionary *manifestContent; // @synthesize manifestContent=_manifestContent;
@property(nonatomic) BOOL requiresImmediateUpdate; // @synthesize requiresImmediateUpdate=_requiresImmediateUpdate;
@property(readonly, nonatomic) MSImmutableDocumentData *documentData; // @synthesize documentData=_documentData;
@property(retain, nonatomic) MSDocument *document; // @synthesize document=_document;
@property(nonatomic) __weak SMKMirrorController *connectionController; // @synthesize connectionController=_connectionController;
- (void).cxx_destruct;
- (id)currentArtboard;
@property(readonly, nonatomic) BOOL hasConnectedClients;
- (void)lookupUpdateTypeWithHandler:(CDUnknownBlockType)arg1;
- (BOOL)treeDiff:(id)arg1 containsFlowLayerChangesInNewDocument:(id)arg2;
- (void)sendUpdateFromOldArtboard:(id)arg1 toNewArtboard:(id)arg2 newDocument:(id)arg3 diffRect:(struct CGRect)arg4;
- (void)sendVisualUpdateForNewDocument:(id)arg1;
- (void)sendUpdate;
- (void)updateIfNeeded;
- (void)setNeedsUpdateMetadata;
- (void)setNeedsUpdate;
@property(copy, nonatomic) NSString *currentArtboardID; // @synthesize currentArtboardID=_currentArtboardID;
- (id)createManifestContent;
- (void)documentDidResignCurrentNotification:(id)arg1;
- (void)documentDidBecomeCurrentNotification:(id)arg1;
- (void)mirrorConnectionsDidChangeNotification:(id)arg1;
- (void)currentArtboardDidChange;
- (void)setDocumentData:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)imageData:(id)arg1 dataByInsertingBackgroundColor:(id)arg2;
- (void)renderExportForRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSLockLayerAction : MSDocumentAction
{
}

- (id)label;
- (BOOL)hasDynamicTitle;
- (void)doPerformAction:(id)arg1;
- (void)lockLayer:(id)arg1;
- (BOOL)validate;

@end

@interface MSWelcomeCollectionViewItem : NSCollectionViewItem <NSMenuDelegate>
{
    struct CGSize _designedImageViewSize;
}

- (void)menuNeedsUpdate:(id)arg1;
- (void)setRepresentedObject:(id)arg1;
@property(readonly, nonatomic) MSWelcomeCollectionItem *collectionItem;
- (void)setSelected:(BOOL)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSZoomActionToolbarItem : NSToolbarItem
{
    MSZoomAction *_zoomAction;
}

@property(nonatomic) __weak MSZoomAction *zoomAction; // @synthesize zoomAction=_zoomAction;
- (void).cxx_destruct;
- (void)validate;

@end

@interface MSZoomAction : MSDocumentAction
{
}

- (id)zoomValueString;
- (void)zoomValueDidChange;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)handlesKeyEvent:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (void)zoomModeToggle:(id)arg1;
- (id)zoomView;
- (id)makeToolbarItemForToolbar:(BOOL)arg1;

@end

@interface MSZoomInAction : MSDocumentAction
{
}

- (void)zoomIn:(id)arg1;
- (BOOL)validate;
- (id)touchBarImage;
- (void)doPerformAction:(id)arg1;

@end

@interface MSZoomOutAction : MSDocumentAction
{
}

- (void)zoomOut:(id)arg1;
- (BOOL)validate;
- (id)touchBarImage;
- (void)doPerformAction:(id)arg1;

@end

@interface MSZoomActions : MSTouchBarGroupAction
{
}

- (unsigned long long)touchBarItemSizing;
- (id)actionNames;

@end

@interface MSPreviewAtActualSizeAction : MSDocumentAction
{
    MSViewPort *_viewPortBeforeZoomOut;
}

- (void).cxx_destruct;
- (void)keyUp:(id)arg1;
- (void)doPerformAction:(id)arg1;

@end

@interface MSPluginManagerWithActions : MSPluginManager <MSActionObserver>
{
    BOOL _wilcardsEnabled;
    NSDictionary *_commandsWithHandler;
}

@property(nonatomic) BOOL wilcardsEnabled; // @synthesize wilcardsEnabled=_wilcardsEnabled;
@property(retain, nonatomic) NSDictionary *commandsWithHandler; // @synthesize commandsWithHandler=_commandsWithHandler;
- (void).cxx_destruct;
- (void)sendCommandActionWithID:(id)arg1 toPlugins:(id)arg2 withIdentifiers:(id)arg3 context:(id)arg4;
- (id)pluginsToSendStartupMessageToWithOldPlugins:(id)arg1 andNewPlugins:(id)arg2;
- (id)pluginsToSendShutdownMessageToWithOldPlugins:(id)arg1 andNewPlugins:(id)arg2;
- (id)enabledPluginsWithPlugins:(id)arg1;
- (void)actionController:(id)arg1 didInstantActionWithID:(id)arg2 context:(id)arg3;
- (void)actionController:(id)arg1 didFinishActionWithID:(id)arg2 context:(id)arg3;
- (void)actionController:(id)arg1 willBeginActionWithID:(id)arg2 context:(id)arg3;
- (void)sendToCommandActionsForPlugin:(id)arg1 withID:(id)arg2 context:(id)arg3;
- (void)sendToInterestedCommandsActionWithID:(id)arg1 context:(id)arg2;
- (id)contextForActionWithID:(id)arg1 context:(id)arg2;
- (void)buildHandlerIndex;
- (void)applicationWillTerminate:(id)arg1;
- (void)setPlugins:(id)arg1;
- (id)initWithPluginsFolderURLs:(id)arg1 updater:(id)arg2 pluginStateManager:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSliceInspectorViewController : MSBaseExportableInspectorViewController <MSSliceLayerWatcher, MSColorInspectorDelegate, BCPopoverDelegate, MSStylePartPreviewButtonDelegate>
{
    NSView *_sliceExportPropertiesView;
    NSView *_standardPropertiesView;
    NSView *_sliceBackgroundView;
    NSButton *_groupContentsOnlyButton;
    MSStylePartPreviewButton *_sliceBackgroundColorButton;
    BCPopover *_popover;
}

@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) MSStylePartPreviewButton *sliceBackgroundColorButton; // @synthesize sliceBackgroundColorButton=_sliceBackgroundColorButton;
@property(retain, nonatomic) NSButton *groupContentsOnlyButton; // @synthesize groupContentsOnlyButton=_groupContentsOnlyButton;
@property(retain, nonatomic) NSView *sliceBackgroundView; // @synthesize sliceBackgroundView=_sliceBackgroundView;
@property(retain, nonatomic) NSView *standardPropertiesView; // @synthesize standardPropertiesView=_standardPropertiesView;
@property(retain, nonatomic) NSView *sliceExportPropertiesView; // @synthesize sliceExportPropertiesView=_sliceExportPropertiesView;
- (void).cxx_destruct;
- (id)stylePartPreviewButtonPreviewColorSpace:(id)arg1;
- (id)documentColorSpace;
- (id)canvasColorSpace;
- (void)colorMagnifierAction:(id)arg1;
- (BOOL)canHandleColorMagnifierAction;
- (id)nibName;
- (id)views;
- (void)prepareForDisplay;
- (void)dealloc;
- (void)selectionDidChangeTo:(id)arg1;
- (void)changeBackgroundColorTo:(id)arg1;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)viewWillDisappear;
- (void)dismissViewController:(id)arg1;
- (void)backgroundColorAction:(id)arg1;
- (void)groupContentsOnlyAction:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSWelcomeWindow : NSWindow
{
}

- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;

@end

@interface MSVisitDocumentationAction : MSAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)visitDocumentation:(id)arg1;

@end

@interface MSExportPresetFormatViewController : MSExportFormatViewController
{
}

- (void)viewDidLoad;

@end

@interface MSUpDownTextField : NSTextField <NSTextViewDelegate, MSUpDownProtocol, NSTouchBarDelegate>
{
    BOOL _hasMinimum;
    BOOL _hasMaximum;
    id _refreshDelegate;
    MSUpDownController *_upDownController;
    double _ownMinimum;
    double _ownMaximum;
    unsigned long long _scrubberCount;
    unsigned long long _scrubberIndex;
}

@property(nonatomic) unsigned long long scrubberIndex; // @synthesize scrubberIndex=_scrubberIndex;
@property(nonatomic) unsigned long long scrubberCount; // @synthesize scrubberCount=_scrubberCount;
@property(nonatomic) double ownMaximum; // @synthesize ownMaximum=_ownMaximum;
@property(nonatomic) double ownMinimum; // @synthesize ownMinimum=_ownMinimum;
@property(nonatomic) BOOL hasMaximum; // @synthesize hasMaximum=_hasMaximum;
@property(nonatomic) BOOL hasMinimum; // @synthesize hasMinimum=_hasMinimum;
@property(readonly, nonatomic) MSUpDownController *upDownController; // @synthesize upDownController=_upDownController;
@property(nonatomic) __weak id refreshDelegate; // @synthesize refreshDelegate=_refreshDelegate;
- (void).cxx_destruct;
- (id)makeTouchBar;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)keyUp:(id)arg1;
- (id)maximum;
- (id)minimum;
- (double)incrementValue;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSUpDownMiniTextField : MSUpDownTextField
{
}

- (double)incrementValue;

@end

@interface MSUpDownNanoTextField : MSUpDownTextField
{
}

- (double)incrementValue;

@end

@interface MSCloudInitialViewController : MSCloudBaseViewController
{
    NSButton *_uploadButton;
}

@property(retain, nonatomic) NSButton *uploadButton; // @synthesize uploadButton=_uploadButton;
- (void).cxx_destruct;
- (void)upload:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;

@end

@interface MSColorInspectorSectionNoise : MSColorInspectorSection
{
}

- (void)refreshNoiseIntensityTouchBarSlider;
- (void)adjustNoiseIntensity:(id)arg1;
- (id)makeTouchBarItemForIdentifier:(id)arg1;
- (id)customTouchBarItemIdentifiers;
- (double)minimumHeight;
- (BOOL)hasPresetPickers;
- (void)refreshAction:(id)arg1;
- (id)viewsWithColorPickerView:(id)arg1 blendingView:(id)arg2 topViewIsEmpty:(BOOL)arg3;

@end

@interface MSCopySVGCodeAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)copySVG:(id)arg1;

@end

@interface MSBitmapEditInspectorViewController : NSViewController <MSModeModePickerDelegate, BCPopoverDelegate, MSColorInspectorDelegate, MSInspectorChildController>
{
    BOOL _hasSelection;
    long long _currentMode;
    MSBitmapEditEventHandler *_eventHandler;
    MSModePickerView *_pickerView;
    NSButton *_rectSelectionButton;
    NSButton *_magicWandButton;
    BCPopover *_popover;
}

@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSButton *magicWandButton; // @synthesize magicWandButton=_magicWandButton;
@property(retain, nonatomic) NSButton *rectSelectionButton; // @synthesize rectSelectionButton=_rectSelectionButton;
@property(retain, nonatomic) MSModePickerView *pickerView; // @synthesize pickerView=_pickerView;
@property(nonatomic) MSBitmapEditEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
@property(nonatomic) BOOL hasSelection; // @synthesize hasSelection=_hasSelection;
@property(nonatomic) long long currentMode; // @synthesize currentMode=_currentMode;
- (void).cxx_destruct;
- (void)selectionDidChangeTo:(id)arg1;
- (void)prepareForDisplay;
- (id)views;
- (void)pickerViewChanged:(id)arg1;
- (void)pickerViewWillChange:(id)arg1;
- (id)pickerView:(id)arg1 labelForMode:(long long)arg2;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)colorMagnifierAction:(id)arg1;
- (void)colorizeAction:(id)arg1;
- (void)finishEditing:(id)arg1;
- (void)cropAction:(id)arg1;
- (void)invertAction:(id)arg1;
- (void)magicWandAction:(id)arg1;
- (void)rectSelectionAction:(id)arg1;
- (void)refresh;
- (void)dismissViewController:(id)arg1;
- (void)viewWillDisappear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCloudPreferencesAccountViewController : MSCloudPreferencesViewController
{
    NSTextField *_introLabel;
    NSView *_userMetadataView;
    MSCloudAvatarView *_avatarView;
    NSTextField *_nameLabel;
    NSTextField *_emailLabel;
    NSProgressIndicator *_progressIndicator;
}

@property(retain, nonatomic) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(retain, nonatomic) NSTextField *emailLabel; // @synthesize emailLabel=_emailLabel;
@property(retain, nonatomic) NSTextField *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(retain, nonatomic) MSCloudAvatarView *avatarView; // @synthesize avatarView=_avatarView;
@property(retain, nonatomic) NSView *userMetadataView; // @synthesize userMetadataView=_userMetadataView;
@property(retain, nonatomic) NSTextField *introLabel; // @synthesize introLabel=_introLabel;
- (void).cxx_destruct;
- (void)showAccountSettings:(id)arg1;
- (void)logout:(id)arg1;
- (void)updateUserData;
- (void)updateUserLoading;
- (void)userDidChangeLoadingNotification:(id)arg1;
- (void)platformDidChangeNotification:(id)arg1;
- (void)userDidChangeNotification:(id)arg1;
- (void)applicationDidBecomeActiveNotification:(id)arg1;
- (void)dealloc;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (void)viewDidLoad;

@end

@interface MSUpdateController : NSObject <SUUpdaterDelegate>
{
    BOOL _hasAvailableUpdates;
    BOOL _updateInProgress;
    unsigned long long _unavailableUpdateCount;
}

@property(nonatomic) BOOL updateInProgress; // @synthesize updateInProgress=_updateInProgress;
@property(nonatomic) BOOL hasAvailableUpdates; // @synthesize hasAvailableUpdates=_hasAvailableUpdates;
@property(nonatomic) unsigned long long unavailableUpdateCount; // @synthesize unavailableUpdateCount=_unavailableUpdateCount;
- (id)bestValidUpdateInAppcast:(id)arg1 forUpdater:(id)arg2;
- (id)checkerWithAppcast:(id)arg1;
- (void)parseAppcast:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)storeResultsFromChecker:(id)arg1;
- (id)feedURLStringForUpdater:(id)arg1;
- (void)appCastFetchFailedWithError:(id)arg1;
- (void)fetchAppcastWithCompletion:(CDUnknownBlockType)arg1;
- (id)commandLabel;
- (BOOL)commandEnabled;
- (void)checkNormally;
- (void)checkSilently;
- (void)checkQuietly;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DKDistortionTransform : NSObject
{
    struct CGPoint m_q[4];
    BOOL m_inverted;
}

+ (id)transformWithInitialRect:(struct CGRect)arg1;
- (id)transformBezierPath:(id)arg1 inRect:(struct CGRect)arg2;
- (id)transformBezierPath:(id)arg1;
- (struct CGPoint)transformPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2;
- (void)invert;
- (void)differentialPerspectiveBy:(double)arg1;
- (void)shearVerticallyBy:(double)arg1;
- (void)shearHorizontallyBy:(double)arg1;
- (void)offsetByX:(double)arg1 byY:(double)arg2;
- (struct CGRect)bounds;
- (void)getEnvelopePoints:(struct CGPoint *)arg1;
- (void)setEnvelopePoints:(struct CGPoint *)arg1;
- (id)initWithEnvelope:(struct CGPoint *)arg1;
- (id)initWithRect:(struct CGRect)arg1;

@end

@interface MSUndoBaseAction : MSDocumentAction
{
}

- (BOOL)isEditingTextLayerContents;

@end

@interface MSUndoAction : MSUndoBaseAction
{
}

- (id)historyMomentTitle;
- (id)label;
- (BOOL)hasDynamicTitle;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)undo:(id)arg1;

@end

@interface MSRedoAction : MSUndoBaseAction
{
}

- (id)historyMomentTitle;
- (id)label;
- (BOOL)hasDynamicTitle;
- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)redo:(id)arg1;

@end

@interface MSCloudViewController : NSViewController
{
    MSCloudBaseViewController *_contentViewController;
    MSCloudAction *_action;
}

@property(readonly, nonatomic) MSCloudAction *action; // @synthesize action=_action;
@property(retain, nonatomic) MSCloudBaseViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
- (void).cxx_destruct;
- (void)refreshLicenseIfIneligible;
- (void)resetContentViewController:(id)arg1;
- (void)licenseDidChangeNotification:(id)arg1;
- (void)shareUploadDidChangeNotification:(id)arg1;
- (void)userDidUpdateNotification:(id)arg1;
- (void)userDidChangeNotification:(id)arg1;
- (void)environmentDidChangeNotification:(id)arg1;
- (void)updateFrame;
- (void)animateFrameWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)animateAlpha:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)defaultContentViewController;
- (void)addContentViewController:(id)arg1;
- (void)removeContentViewController:(id)arg1;
- (void)setContentViewController:(id)arg1 animated:(BOOL)arg2;
- (void)dealloc;
- (void)viewDidLoad;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (void)loadView;
- (id)initWithAction:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface MSDataAction : MSDocumentAction <MSDataMenuProviderDelegate, NSMenuDelegate>
{
    MSDataMenuProvider *_data;
    NSMenu *_dataMenu;
}

@property(retain, nonatomic) NSMenu *dataMenu; // @synthesize dataMenu=_dataMenu;
@property(retain, nonatomic) MSDataMenuProvider *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)overridePropertyForDataType:(unsigned long long)arg1;
- (id)firstOverridePointInOverridePoints:(id)arg1 withProperty:(id)arg2;
- (void)applyDataTo:(id)arg1 withDataMenu:(id)arg2 withDataFrom:(id)arg3;
- (void)dataMenuProvider:(id)arg1 didChooseData:(id)arg2;
- (unsigned long long)dataMenuProviderDataTypeForMenuBuilding:(id)arg1;
- (BOOL)dataMenuProviderIsInspectorPopupMenu:(id)arg1;
- (BOOL)dataMenuProvider:(id)arg1 canChooseDataOfType:(unsigned long long)arg2;
- (BOOL)validate;
- (unsigned long long)dataTypeForSelection;
- (unsigned long long)supportedDataTypeForSelection;
- (unsigned long long)dataTypeForSelectionContainingOnlySymbolInstancesWithOneOverridePerDataType;
- (id)menu;
- (BOOL)hasSubMenu;
- (id)imageName;
- (BOOL)showInToolbar;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSelectVectorHandleGestureRecognizer : MSGestureRecognizer
{
    struct CGPoint _location;
    BOOL _waitingForMouseUpToDeselect;
    unsigned long long _modifierFlags;
}

@property(readonly, nonatomic) unsigned long long modifierFlags; // @synthesize modifierFlags=_modifierFlags;
- (void)reset;
- (void)mouseUp:(id)arg1 location:(struct CGPoint)arg2;
- (void)mouseDragged:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (void)mouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 modifierFlags:(unsigned long long)arg3;
@property(readonly, nonatomic) BOOL toggleSelection;
- (struct CGPoint)locationInLayer:(id)arg1;

// Remaining properties
@property(nonatomic) __weak id <MSSelectVectorHandleGestureRecognizerDelegate> delegate; // @dynamic delegate;

@end

@interface MSScriptDocument : NSDocument
{
}

- (BOOL)showBundleIncompatibleAlert:(id)arg1;
- (BOOL)showBundleAlreadyInstalledAlert:(id)arg1 isIncompatible:(BOOL)arg2 existingPlugin:(id)arg3;
- (BOOL)showBundleUpgradeAlert:(id)arg1 isIncompatible:(BOOL)arg2 existingPlugin:(id)arg3;
- (id)titleFromPlugin:(id)arg1;
- (BOOL)copyPluginBundle:(id)arg1 toPluginsFolderURL:(id)arg2;
- (void)removeExistingPlugin:(id)arg1;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface MSBackButtonWindowController : NSWindowController
{
    MSDocument *_doc;
    NSView *_attachedView;
    MSArtboardGroup *_artboard;
}

@property(nonatomic) __weak MSArtboardGroup *artboard; // @synthesize artboard=_artboard;
@property(nonatomic) __weak NSView *attachedView; // @synthesize attachedView=_attachedView;
@property(nonatomic) __weak MSDocument *doc; // @synthesize doc=_doc;
- (void).cxx_destruct;
- (void)dealloc;
- (void)attachedViewChanged:(id)arg1;
- (void)hide;
- (void)attach;
- (void)attachToView:(id)arg1 forArtboard:(id)arg2;
- (void)backButtonAction:(id)arg1;

@end

@interface MSBackButtonContentView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;

@end

@interface MSFlattenSelectionAction : MSDocumentAction
{
}

- (BOOL)validate;
- (void)doPerformAction:(id)arg1;
- (void)flattenSelection:(id)arg1;

@end

@interface MSCreateSymbolAction : MSDocumentAction
{
}

- (BOOL)shouldUseImageForTouchBarItem;
- (BOOL)hasDynamicTitle;
- (id)historyMomentTitle;
- (id)label;
- (id)imageName;
- (void)createSymbolFromLayers:(id)arg1;
- (void)doCreateSymbolsFromArtboards:(id)arg1;
- (void)createSymbolsFromArtboards:(id)arg1;
- (void)doPerformAction:(id)arg1;
- (BOOL)canCreateSymbolsFromArtboards:(id)arg1;
- (BOOL)validate;
- (void)createSymbolAction:(id)arg1;

@end

@interface MSWelcomeBackgroundView : NSView
{
}

- (BOOL)mouseDownCanMoveWindow;

@end

@interface MSWelcomeTopFadeView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (double)gradientAngle;

@end

@interface MSWelcomeBottomFadeView : MSWelcomeTopFadeView
{
}

- (double)gradientAngle;

@end

@interface MSWelcomeControlContainerView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)mouseDownCanMoveWindow;

@end

@interface MSWelcomeDebugView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSAssetLibraryTableCellView : NSTableCellView
{
    BOOL _quickLookButtonHidden;
    BOOL _downloadButtonHidden;
    BOOL _downloadProgressHidden;
    NSTextField *_primaryTextField;
    NSTextField *_secondaryTextField;
    NSTextField *_updateAvailablePrimaryTextField;
    NSTextField *_updateAvailableSecondaryTextField;
    MSAssetLibrariesPreferencePane *_libraryPreferencePane;
    MSAssetLibraryPreview *_previewContainer;
    NSProgressIndicator *_downloadProgress;
    NSWindow *_libraryInstallerPanelWindow;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)initialize;
@property(nonatomic) __weak NSWindow *libraryInstallerPanelWindow; // @synthesize libraryInstallerPanelWindow=_libraryInstallerPanelWindow;
@property(nonatomic) BOOL downloadProgressHidden; // @synthesize downloadProgressHidden=_downloadProgressHidden;
@property(nonatomic) BOOL downloadButtonHidden; // @synthesize downloadButtonHidden=_downloadButtonHidden;
@property(nonatomic) BOOL quickLookButtonHidden; // @synthesize quickLookButtonHidden=_quickLookButtonHidden;
@property(nonatomic) __weak NSProgressIndicator *downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(nonatomic) __weak MSAssetLibraryPreview *previewContainer; // @synthesize previewContainer=_previewContainer;
@property(nonatomic) __weak MSAssetLibrariesPreferencePane *libraryPreferencePane; // @synthesize libraryPreferencePane=_libraryPreferencePane;
@property(nonatomic) __weak NSTextField *updateAvailableSecondaryTextField; // @synthesize updateAvailableSecondaryTextField=_updateAvailableSecondaryTextField;
@property(nonatomic) __weak NSTextField *updateAvailablePrimaryTextField; // @synthesize updateAvailablePrimaryTextField=_updateAvailablePrimaryTextField;
@property(nonatomic) __weak NSTextField *secondaryTextField; // @synthesize secondaryTextField=_secondaryTextField;
@property(nonatomic) __weak NSTextField *primaryTextField; // @synthesize primaryTextField=_primaryTextField;
- (void).cxx_destruct;
- (id)sketchRemoteLibraryPlaceholderImage;
- (id)missingLibraryPlaceholderImage;
- (id)placeholderImage;
- (void)setPrimaryTextFieldTextColor:(id)arg1;
- (void)setSecondaryTextFieldTextColor:(id)arg1;
- (void)downloadLibrary:(id)arg1;
@property(nonatomic) BOOL enabled;
@property(readonly, nonatomic) MSAssetPreferenceItem *assetPreferenceItem;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dismissInstallerPanelWindow;
- (void)startDownloading;
- (void)setupButtons;
- (void)generatePreviewImage;
- (void)setObjectValue:(id)arg1;
- (void)setBackgroundStyle:(long long)arg1;

@end

@interface MSRulerBlock : NSView
{
    MSContentDrawView *_contentDrawView;
}

@property(nonatomic) __weak MSContentDrawView *contentDrawView; // @synthesize contentDrawView=_contentDrawView;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSDocumentImporter : NSObject
{
    MSLayerGroup *_group;
    id <MSImporter> _importer;
    NSURL *_fileURL;
    CHProgressSheet *_sheet;
    NSString *_name;
    NSArray *_addedLayers;
}

+ (void)importFromURL:(id)arg1 inPage:(id)arg2 importer:(id)arg3;
@property(retain, nonatomic) NSArray *addedLayers; // @synthesize addedLayers=_addedLayers;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) CHProgressSheet *sheet; // @synthesize sheet=_sheet;
@property(retain, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(retain, nonatomic) id <MSImporter> importer; // @synthesize importer=_importer;
@property(retain, nonatomic) MSLayerGroup *group; // @synthesize group=_group;
- (void).cxx_destruct;
@property(readonly, nonatomic) __weak MSContentDrawView *view; // @dynamic view;
- (id)showProgressSheet;
- (void)importerDidFinish;
- (void)close;
- (void)collapseSinglePage;
- (BOOL)expandPages;
- (void)run;

@end

@interface MSConvertFlowToHotspotAction : MSFlowBaseAction
{
}

- (void)doPerformAction:(id)arg1;
- (BOOL)validate;
- (void)convertFlowToHotspot:(id)arg1;

@end

@interface MSToolbarPopoverContentViewController : NSViewController
{
    NSImageView *_imageView;
    NSTextField *_titleLabel;
    NSTextField *_descriptionLabel;
    NSView *_actionView;
    NSTextField *_footerLabel;
    MSPopoverAction *_action;
    NSStackView *_stackView;
}

@property(retain, nonatomic) NSStackView *stackView; // @synthesize stackView=_stackView;
@property(readonly, nonatomic) __weak MSPopoverAction *action; // @synthesize action=_action;
- (void).cxx_destruct;
- (void)animateFrameWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSTextField *footerLabel; // @synthesize footerLabel=_footerLabel;
@property(readonly, nonatomic) NSView *actionView; // @synthesize actionView=_actionView;
@property(readonly, nonatomic) NSTextField *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(readonly, nonatomic) NSTextField *titleLabel; // @synthesize titleLabel=_titleLabel;
- (id)newActionButtonWithTitle:(id)arg1 action:(SEL)arg2;
- (id)newLabel;
@property(readonly, nonatomic) NSImageView *imageView; // @synthesize imageView=_imageView;
- (void)loadView;
@property(readonly, nonatomic) struct NSEdgeInsets edgeInsets;
- (id)initWithAction:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface MSAssetLibrariesPreferencePane : MSPreferencePane <MSAssetPreferenceItemDelegate, MSDropableViewDelegate, QLPreviewPanelDataSource, QLPreviewPanelDelegate, NSTableViewDelegate, NSTableViewDataSource>
{
    BOOL _hasAssets;
    BOOL _shouldEnableCogMenu;
    NSTableView *_tableView;
    NSArray *_items;
    NSMenu *_contextMenu;
}

+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;
@property(nonatomic) BOOL shouldEnableCogMenu; // @synthesize shouldEnableCogMenu=_shouldEnableCogMenu;
@property(nonatomic) BOOL hasAssets; // @synthesize hasAssets=_hasAssets;
@property(retain, nonatomic) NSMenu *contextMenu; // @synthesize contextMenu=_contextMenu;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)learnMoreAboutLibraries:(id)arg1;
- (void)updateQLPreview;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (void)toggleQLPreview:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)menuForEvent:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateLocateLibraryMenuItem:(id)arg1;
- (void)locateLibraryAction:(id)arg1;
- (BOOL)canLocateLibrary:(id)arg1;
- (BOOL)validateOpenInSketchMenuItem:(id)arg1;
- (void)openInSketchAction:(id)arg1;
- (BOOL)validateRemoveLibraryMenuItem:(id)arg1;
- (void)removeLibraryAction:(id)arg1;
- (BOOL)availableUserLibrariesFromLibraries:(id)arg1;
- (id)sketchShareURLsFromLibraries:(id)arg1;
- (BOOL)validateRevealInFinderMenuItem:(id)arg1;
- (void)revealInFinderAction:(id)arg1;
- (BOOL)validateToggleLibraryMenuItem:(id)arg1;
- (id)pluraliseMenuItemTitle:(id)arg1;
- (void)toggleLibraryEnabled:(id)arg1;
- (BOOL)hasDisabledLibrariesSelected;
- (unsigned long long)view:(id)arg1 draggingUpdated:(id)arg2;
- (unsigned long long)view:(id)arg1 draggingEntered:(id)arg2;
- (id)draggedURLsFromPasteboard:(id)arg1;
- (BOOL)view:(id)arg1 performDragOperation:(id)arg2;
- (id)draggedTypesForView:(id)arg1;
- (id)tableCellForRemoteLibrary:(id)arg1;
- (void)startDownloadForRemoteLibrary:(id)arg1;
- (void)reloadSelectingLibrary:(id)arg1;
- (void)preferenceItemHasUpdated:(id)arg1;
- (void)showContextMenu:(id)arg1;
@property(readonly, nonatomic) NSArray *selectedLibraries;
@property(readonly, nonatomic) NSArray *selection;
- (id)currentLibrary;
- (void)addLibrariesFromURLS:(id)arg1;
- (void)importLibraryAction:(id)arg1;
- (void)addNextLibraryFromURLs:(id)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)syncLibraryItems;
@property(readonly, nonatomic) MSAssetLibraryController *assetLibraryController;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCollapseAllGroupsAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)collapseAllGroups:(id)arg1;

@end

@interface MSTextTransformAction : MSDocumentAction
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)performTextTransform;
- (id)textTransformValue;
- (unsigned long long)textTransform;

@end

@interface MSMakeUppercaseAction : MSTextTransformAction
{
}

- (void)makeUppercase:(id)arg1;
- (unsigned long long)textTransform;

@end

@interface MSMakeLowercaseAction : MSTextTransformAction
{
}

- (void)makeLowercase:(id)arg1;
- (unsigned long long)textTransform;

@end

@interface MSRemoveTextTransformAction : MSTextTransformAction
{
}

- (void)removeTextTransform:(id)arg1;
- (id)textTransformValue;

@end

@interface MSFillAndBorderColorScreenPicker : NSObject
{
}

+ (void)setPreferredStylePartName:(id)arg1;
+ (void)changeColorForTextLayer:(id)arg1 color:(id)arg2;
+ (id)stylesForColorAdjusting:(id)arg1;
+ (void)changeColorForNormalLayer:(id)arg1 color:(id)arg2;
+ (void)applyColor:(id)arg1 toLayers:(id)arg2;
+ (void)pickColorForLayers:(id)arg1 colorSpace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface MSFontFamilyPickerViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource>
{
    CDUnknownBlockType _completionBlock;
    MSFontList *_fontList;
    NSTableView *_tableView;
}

@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) MSFontList *fontList; // @synthesize fontList=_fontList;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (void).cxx_destruct;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)doubleClickTableView:(id)arg1;
- (void)awakeFromNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSShareButtonHandler : NSObject <NSSharingServiceDelegate, NSSharingServicePickerDelegate>
{
    NSWindow *_window;
    MSLayer *_sliceLayer;
    MSContentDrawView *_canvas;
}

@property(nonatomic) __weak MSContentDrawView *canvas; // @synthesize canvas=_canvas;
@property(retain, nonatomic) MSLayer *sliceLayer; // @synthesize sliceLayer=_sliceLayer;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (id)itemsFromSlice:(id)arg1;
- (void)showShareMenuForLayer:(id)arg1 sender:(id)arg2 canvas:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMirrorToolbarItemView : NSView
{
}

- (id)hitTest:(struct CGPoint)arg1;
@property(readonly, nonatomic) NSArray *controls;

@end

@interface MSSharedStylesInspectorSection : NSViewController <MSInspectorSection, NSMenuDelegate>
{
    MSLayerArray *_layers;
    MSShareableObjectPopUpButton *_sharedObjectsPopUpButton;
    NSTextField *_editNameField;
    NSButton *_syncOrResetButton;
    MSSharedObject *_renamingObject;
    CDUnknownBlockType _renameBlock;
    MSForeignObjectMenuBuilder *_menuBuilder;
}

@property(retain, nonatomic) MSForeignObjectMenuBuilder *menuBuilder; // @synthesize menuBuilder=_menuBuilder;
@property(copy, nonatomic) CDUnknownBlockType renameBlock; // @synthesize renameBlock=_renameBlock;
@property(retain, nonatomic) MSSharedObject *renamingObject; // @synthesize renamingObject=_renamingObject;
@property(retain, nonatomic) NSButton *syncOrResetButton; // @synthesize syncOrResetButton=_syncOrResetButton;
@property(retain, nonatomic) NSTextField *editNameField; // @synthesize editNameField=_editNameField;
@property(retain, nonatomic) MSShareableObjectPopUpButton *sharedObjectsPopUpButton; // @synthesize sharedObjectsPopUpButton=_sharedObjectsPopUpButton;
@property(copy, nonatomic) MSLayerArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (id)views;
- (id)document;
- (struct MSModelObject *)firstStyle;
- (id)firstSharedObject;
- (id)sharedObjectContainer;
- (BOOL)hasTextLayers;
- (BOOL)hasOnlyTextLayers;
- (unsigned long long)sharedObjectType;
- (BOOL)validateMenuItem:(id)arg1;
- (void)syncOrResetSharedStyleAction:(id)arg1;
- (void)renameSharedObjectAction:(id)arg1;
- (void)renameSharedObject:(id)arg1;
- (void)layerWithSharedStyleDidChange;
- (void)beginRenameSharedObject:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (BOOL)hasLayersOutOfSyncWithSharedObject;
- (void)validateSyncButtons;
- (void)prepareForDisplay;
- (void)reloadData;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSClippingMaskAction : MSDocumentAction
{
}

- (void)doPerformAction:(id)arg1;
- (void)clippingMask:(id)arg1;
- (BOOL)validate;
- (BOOL)isActive;

@end

@interface MSWelcomeCollectionItem : NSObject <MSWelcomeCollectionItemPreviewImageLoading>
{
    NSString *_title;
    MSWelcomeWindowController *_welcomeWindowController;
    NSImage *_cachedPreviewImage;
}

+ (id)userTemplatesDirectoryURL;
+ (id)bundledTemplatesDirectoryURL;
@property(retain, nonatomic) NSImage *cachedPreviewImage; // @synthesize cachedPreviewImage=_cachedPreviewImage;
@property(nonatomic) __weak MSWelcomeWindowController *welcomeWindowController; // @synthesize welcomeWindowController=_welcomeWindowController;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL providesPreviewImage;
@property(readonly, nonatomic) NSImage *placeholderImage;
- (id)initWithController:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSURL *URL;

@end

@interface MSExistingDocumentCollectionItem : MSWelcomeCollectionItem
{
    NSURL *_URL;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (void)fetchPreviewImageWithMaximumPixelSize:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)providesPreviewImage;
- (id)title;
- (id)initWithController:(id)arg1 URL:(id)arg2;

@end

@interface MSNewDocumentCollectionItem : MSWelcomeCollectionItem
{
}

- (BOOL)providesPreviewImage;
- (id)title;
- (id)placeholderImage;

@end

@interface NSAlternatingViewBackgroundView : NSView
{
}

@end

@interface MSBitmapRectangleEditor : MSBitmapEditor
{
    BOOL _didDrag;
    long long _dragMode;
    NSBezierPath *_selectionBeforeDrag;
    struct CGPoint _mouseDownPoint;
    struct CGPoint _mouseEndPoint;
}

@property(retain, nonatomic) NSBezierPath *selectionBeforeDrag; // @synthesize selectionBeforeDrag=_selectionBeforeDrag;
@property(nonatomic) struct CGPoint mouseEndPoint; // @synthesize mouseEndPoint=_mouseEndPoint;
@property(nonatomic) struct CGPoint mouseDownPoint; // @synthesize mouseDownPoint=_mouseDownPoint;
@property(nonatomic) BOOL didDrag; // @synthesize didDrag=_didDrag;
@property(nonatomic) long long dragMode; // @synthesize dragMode=_dragMode;
- (void).cxx_destruct;
- (struct CGRect)rectFromDraggingPoints;
- (struct CGSize)sizeForLabel;
- (void)draw;
- (void)resetDraggingPoints;
- (void)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseDragged:(struct CGPoint)arg1;
- (void)mouseDown:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)init;

@end

@interface MSBitmapMagicWandEditor : MSBitmapEditor
{
    BOOL _didDrag;
    NSBitmapImageRep *_mask;
    NSBitmapImageRep *_cachedBitSafeRep;
    NSOperationQueue *_queue;
    struct CGPoint _mouseDownPoint;
    struct CGPoint _mouseEndPoint;
}

@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) BOOL didDrag; // @synthesize didDrag=_didDrag;
@property(retain, nonatomic) NSBitmapImageRep *cachedBitSafeRep; // @synthesize cachedBitSafeRep=_cachedBitSafeRep;
@property(retain, nonatomic) NSBitmapImageRep *mask; // @synthesize mask=_mask;
@property(nonatomic) struct CGPoint mouseEndPoint; // @synthesize mouseEndPoint=_mouseEndPoint;
@property(nonatomic) struct CGPoint mouseDownPoint; // @synthesize mouseDownPoint=_mouseDownPoint;
- (void).cxx_destruct;
- (BOOL)isValidRect:(struct CGRect)arg1;
- (void)drawOvals;
@property(readonly, nonatomic) struct CGRect dragCirclePageBounds;
@property(readonly, nonatomic) struct CGRect dragCircleBounds;
- (void)drawMask;
- (void)draw;
- (void)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (double)tolerance;
- (void)magicWandWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)mouseDragged:(struct CGPoint)arg1;
- (void)mouseDown:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)init;

@end

@interface MSBitmapEditor : NSObject
{
    MSBitmapEditEventHandler *_eventHandler;
}

@property(nonatomic) __weak MSBitmapEditEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
- (void).cxx_destruct;
- (struct CGRect)imageBounds;
- (struct CGSize)imageSize;
- (double)zoomValue;
- (void)drawMarchingAntsForPath:(id)arg1;
- (struct CGPoint)pointInBitmapLayer:(struct CGPoint)arg1;
- (void)refreshRectInBitmapCoordinates:(struct CGRect)arg1;
@property(retain, nonatomic) NSBezierPath *accumulatedSelection; // @dynamic accumulatedSelection;
@property(readonly, nonatomic) MSLayer<MSBitmapEditable> *bitmapEditableLayer; // @dynamic bitmapEditableLayer;
- (void)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseDragged:(struct CGPoint)arg1;
- (void)mouseDown:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)draw;

@end

@interface MSFillOptionsInspectorViewController : NSViewController
{
    NSArray *_layers;
}

@property(retain, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;

@end

@interface MSCallToActionButtonDividerView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSOverrideView : NSView
{
}

- (BOOL)isFlipped;
- (BOOL)wantsSeparatorBetweenSelfAndView:(id)arg1;

@end

@interface MSInsertSliceEventHandler : MSInsertLayerEventHandler
{
    NSArray *_allSlices;
}

@property(retain, nonatomic) NSArray *allSlices; // @synthesize allSlices=_allSlices;
- (void).cxx_destruct;
- (id)toolbarIdentifier;
- (struct CGPoint)alignPointToGrid:(struct CGPoint)arg1;
- (id)performActionWithRect:(struct CGRect)arg1 fromLayer:(id)arg2 constrainProportions:(BOOL)arg3;
- (id)cursorForInsertingFromExisting;
- (unsigned long long)layerSelectionOptionsForInsertingFromExistingLayer;
- (BOOL)allowsInsertLayerFromExistingLayer;

@end

@interface MSManageSharedObjectSheet : CHSheetController
{
    NSSegmentedControl *_tabSegmentControl;
    NSView *_containerView;
    NSViewController *_contentDrawViewController;
}

+ (void)setTabIndex:(unsigned long long)arg1;
+ (unsigned long long)tabIndex;
@property(retain, nonatomic) NSViewController *contentDrawViewController; // @synthesize contentDrawViewController=_contentDrawViewController;
@property(retain, nonatomic) NSView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) NSSegmentedControl *tabSegmentControl; // @synthesize tabSegmentControl=_tabSegmentControl;
- (void).cxx_destruct;
- (void)segmentedAction:(id)arg1;
- (id)childControllerClasses;
- (void)awakeFromNib;

@end

@interface MSCloudPreferencePane : MSPreferencePane
{
    NSStoryboard *_cloudStoryboard;
    MSCloudPreferencesViewController *_currentViewController;
    SCKAPIOperation *_updateUserOperation;
}

+ (long long)cloudLoginOverrideBehaviorWithUser:(id)arg1;
+ (long long)cloudLoginSwitchPlatformBehavior;
+ (void)loginWithURLParameters:(id)arg1;
+ (id)toolbarIcon;
+ (id)title;
+ (id)identifier;
@property(retain, nonatomic) SCKAPIOperation *updateUserOperation; // @synthesize updateUserOperation=_updateUserOperation;
@property(retain, nonatomic) MSCloudPreferencesViewController *currentViewController; // @synthesize currentViewController=_currentViewController;
@property(retain, nonatomic) NSStoryboard *cloudStoryboard; // @synthesize cloudStoryboard=_cloudStoryboard;
- (void).cxx_destruct;
- (void)updateAuthenticatedUser;
@property(readonly, nonatomic) BOOL isUpdatingAuthenticatedUser;
- (void)cloudURLDidOpenNotification:(id)arg1;
- (void)applicationDidOpenURL:(id)arg1;
- (void)platformDidChangeNotification:(id)arg1;
- (void)applicationDidBecomeActiveNotification:(id)arg1;
- (void)userDidChangeNotification:(id)arg1;
- (void)fixFirstResponder;
- (void)updateWindowFrame;
- (void)showRootViewController;
- (void)showAccountViewController;
- (void)showIntroViewController;
- (void)showCloudViewControllerOfClass:(Class)arg1;
- (void)dealloc;
- (void)viewDidLoad;
- (void)loadView;

@end

@interface MSNewsletterSignup : NSObject
{
}

+ (void)registerEmail:(id)arg1;

@end

@interface CHPlainWhiteView : NSView
{
    NSString *_displayString;
}

@property(copy, nonatomic) NSString *displayString; // @synthesize displayString=_displayString;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface CHWhiteView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface CHLinedWhiteView : CHPlainWhiteView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSUpDownController : NSResponder
{
    BOOL didChangeTextDuringEditing;
    NSTextField<MSUpDownProtocol> *_textField;
    MSIntegratedStepper *_stepper;
}

+ (void)initialize;
@property(retain, nonatomic) MSIntegratedStepper *stepper; // @synthesize stepper=_stepper;
@property(nonatomic) __weak NSTextField<MSUpDownProtocol> *textField; // @synthesize textField=_textField;
- (void).cxx_destruct;
- (BOOL)isEditable;
- (BOOL)isEnabled;
- (BOOL)hasValidFirstResponder;
- (double)floatValue;
- (double)incrementValueAccountingForModifierFlags;
- (double)adjustValueForMinimum:(double)arg1;
- (void)decrement;
- (double)adjustValueForMaximum:(double)arg1;
- (void)increment;
- (double)incrementValue;
- (void)keyUp;
- (void)setFloatValueAndNotifyBindings:(double)arg1;
- (void)cancelOperation:(id)arg1;
- (BOOL)cancelTextEditingForInvalidReplacementString:(id)arg1;
- (BOOL)doCommandBySelector:(SEL)arg1;
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing;
- (BOOL)becomeFirstResponder;
- (BOOL)eventIsInsideView:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)hideStepper;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)makeStepper;
- (id)initWithTextField:(id)arg1 createStepper:(BOOL)arg2;

@end

@interface BCSketchToolRunner : BCToolRunner
{
    NSURL *_sketchToolURL;
    NSOperationQueue *_sketchToolSubprocessQueue;
}

@property(readonly, nonatomic) NSOperationQueue *sketchToolSubprocessQueue; // @synthesize sketchToolSubprocessQueue=_sketchToolSubprocessQueue;
@property(readonly, nonatomic) NSURL *sketchToolURL; // @synthesize sketchToolURL=_sketchToolURL;
- (void).cxx_destruct;
- (void)exportPreviewImageForDocumentAtURL:(id)arg1 additionalArguments:(id)arg2 intoURL:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)initWithSketchToolURL:(id)arg1 maximumConcurrentOperations:(long long)arg2;

@end

@interface BCSideBarViewController : NSViewController <NSSplitViewDelegate>
{
    BOOL _userUpdatedPageHeight;
    NSObject<BCSideBarViewControllerDelegate> *_delegate;
    BCFilterInfo *_filter;
    BCOutlineViewDataController *_pageListDataController;
    NSView *_pageCreationView;
    BCPageListViewController *_pageListViewController;
    NSView *_pageListContainer;
    long long _pageCount;
    NSTextField *_currentPageLabel;
    NSPopUpButton *_pagePopup;
    BCOutlineViewDataController *_layerListDataController;
    NSView *_layerListContainer;
    BCOutlineViewController *_layerListViewController;
    NSSearchField *_filterStringTextField;
    NSButton *_togglePageListButton;
    NSSplitView *_splitView;
}

@property(nonatomic) BOOL userUpdatedPageHeight; // @synthesize userUpdatedPageHeight=_userUpdatedPageHeight;
@property(nonatomic) __weak NSSplitView *splitView; // @synthesize splitView=_splitView;
@property(nonatomic) __weak NSButton *togglePageListButton; // @synthesize togglePageListButton=_togglePageListButton;
@property(nonatomic) __weak NSSearchField *filterStringTextField; // @synthesize filterStringTextField=_filterStringTextField;
@property(retain, nonatomic) BCOutlineViewController *layerListViewController; // @synthesize layerListViewController=_layerListViewController;
@property(retain, nonatomic) NSView *layerListContainer; // @synthesize layerListContainer=_layerListContainer;
@property(retain, nonatomic) BCOutlineViewDataController *layerListDataController; // @synthesize layerListDataController=_layerListDataController;
@property(nonatomic) __weak NSPopUpButton *pagePopup; // @synthesize pagePopup=_pagePopup;
@property(nonatomic) __weak NSTextField *currentPageLabel; // @synthesize currentPageLabel=_currentPageLabel;
@property(nonatomic) long long pageCount; // @synthesize pageCount=_pageCount;
@property(retain, nonatomic) NSView *pageListContainer; // @synthesize pageListContainer=_pageListContainer;
@property(retain, nonatomic) BCPageListViewController *pageListViewController; // @synthesize pageListViewController=_pageListViewController;
@property(retain, nonatomic) NSView *pageCreationView; // @synthesize pageCreationView=_pageCreationView;
@property(retain, nonatomic) BCOutlineViewDataController *pageListDataController; // @synthesize pageListDataController=_pageListDataController;
@property(retain, nonatomic) BCFilterInfo *filter; // @synthesize filter=_filter;
@property(nonatomic) __weak NSObject<BCSideBarViewControllerDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)onTogglePageList:(id)arg1;
@property(readonly, nonatomic) BOOL isPageListCollapsed;
- (void)showPageView;
- (void)hidePageView;
- (void)flagsChangedNotification;
- (void)findLayer:(id)arg1;
- (void)renamePage;
- (void)renameLayerAfterNextLayerListRefresh;
- (void)renameLayer;
- (void)controlTextDidChange:(id)arg1;
- (void)checkPageListHeight;
- (void)refreshWithMask:(unsigned long long)arg1;
- (void)refreshPagePopup;
- (void)pagePopupChanged:(id)arg1;
- (void)updatePopupWithBlock:(CDUnknownBlockType)arg1;
- (void)refreshPageLabel;
@property(readonly, nonatomic) id <BCOutlineViewNode> currentPage;
- (void)viewDidAppear;
@property(nonatomic) double currentPageHeight;
- (void)awakeFromNib;
- (void)embedView:(id)arg1 inView:(id)arg2;
- (void)dealloc;
- (id)initWithPageListDataSource:(id)arg1 delegate:(id)arg2 layerListDataSource:(id)arg3 delegate:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCOutlineViewDataController : NSObject
{
    BCFilterInfo *_filter;
    id _cachedNode;
    NSArray *_cachedNodesChildren;
    NSObject<BCOutlineViewDelegate> *_delegate;
    NSObject<BCOutlineViewDataSource> *_dataSource;
}

@property(readonly, nonatomic) NSObject<BCOutlineViewDataSource> *dataSource; // @synthesize dataSource=_dataSource;
@property(readonly, nonatomic) NSObject<BCOutlineViewDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *cachedNodesChildren; // @synthesize cachedNodesChildren=_cachedNodesChildren;
@property(retain, nonatomic) id cachedNode; // @synthesize cachedNode=_cachedNode;
@property(retain, nonatomic) BCFilterInfo *filter; // @synthesize filter=_filter;
- (void).cxx_destruct;
@property(readonly, nonatomic) id rootObject;
- (void)refreshPreviewsOnNodes:(id)arg1;
- (void)handleBadgePressedOnNode:(id)arg1 withAltState:(BOOL)arg2;
- (void)hoverNodeDidChangeTo:(id)arg1;
- (id)menuItemsForSelectedObjects:(id)arg1;
@property(readonly, nonatomic) BOOL canProvideContextMenuItems;
@property(readonly, nonatomic) NSArray *dragTypes;
- (void)updateNode:(id)arg1 expandedState:(unsigned long long)arg2;
- (BOOL)isNodeExpandable:(id)arg1;
- (BOOL)isNodeExpanded:(id)arg1;
- (BOOL)isNodeSelected:(id)arg1;
- (void)changeSelectionTo:(id)arg1;
- (BOOL)handleDragWithPasteboard:(id)arg1 forProposedItem:(id)arg2 proposedChildIndex:(long long)arg3 copying:(BOOL)arg4 validationOnly:(BOOL)arg5;
- (BOOL)writeNodes:(id)arg1 toPasteboard:(id)arg2;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1 forDraggedItems:(id)arg2;
- (BOOL)shouldExpandNode:(id)arg1;
- (id)childOfNode:(id)arg1 atIndex:(long long)arg2;
- (unsigned long long)numberOfChildrenOfNode:(id)arg1;
- (id)childrenOfNode:(id)arg1;
@property(readonly, nonatomic) NSPredicate *nodeFilterPredicate;
- (BOOL)nodeOrChildMatchesFilter:(id)arg1;
- (id)initWithDataSource:(id)arg1 delegate:(id)arg2;
- (id)init;

@end

@interface BCTableCellView : NSTableCellView
{
    BOOL _currentSelectedState;
    BOOL _isDrawingFocused;
    id <BCTableCellViewDelegate> _delegate;
    unsigned long long _displayState;
    NSButton *_badgeButton;
    NSPopUpButton *_popupBadgeButton;
    BCCollapsableImageView *_previewView;
    NSDictionary *_previewImages;
    BCCollapsableImageView *_secondaryPreviewView;
    NSLayoutConstraint *_badgeTrailingSpaceConstraint;
}

+ (void)initialize;
@property(nonatomic) BOOL isDrawingFocused; // @synthesize isDrawingFocused=_isDrawingFocused;
@property(nonatomic) BOOL currentSelectedState; // @synthesize currentSelectedState=_currentSelectedState;
@property(nonatomic) __weak NSLayoutConstraint *badgeTrailingSpaceConstraint; // @synthesize badgeTrailingSpaceConstraint=_badgeTrailingSpaceConstraint;
@property(nonatomic) __weak BCCollapsableImageView *secondaryPreviewView; // @synthesize secondaryPreviewView=_secondaryPreviewView;
@property(retain, nonatomic) NSDictionary *previewImages; // @synthesize previewImages=_previewImages;
@property(nonatomic) __weak BCCollapsableImageView *previewView; // @synthesize previewView=_previewView;
@property(nonatomic) __weak NSPopUpButton *popupBadgeButton; // @synthesize popupBadgeButton=_popupBadgeButton;
@property(nonatomic) __weak NSButton *badgeButton; // @synthesize badgeButton=_badgeButton;
@property(nonatomic) unsigned long long displayState; // @synthesize displayState=_displayState;
@property(nonatomic) __weak id <BCTableCellViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSWindow *destinationWindow;
- (void)drawDragImageInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) double widthForDragImage;
- (void)refreshPreviewImages;
- (void)updateTextColour;
- (void)renameNode;
@property(readonly, nonatomic) BOOL isTextFieldEditing;
- (void)updatePreviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawTextFieldBorder;
- (void)handleBadgePressed:(id)arg1;
- (void)updateBadge;
- (void)updateBadgeImages;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (BOOL)isEventCurrent:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (void)stopObserving;
- (void)startObserving;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)addBadgeWithName:(id)arg1 badgeMaskName:(id)arg2 withRect:(struct CGRect)arg3 toImage:(id)arg4;
- (id)addFlowIconToImage:(id)arg1;
- (id)addSliceIconToImage:(id)arg1;
@property(readonly, nonatomic) id <BCOutlineViewNode> node;
@property(readonly, nonatomic, getter=isNodeSelected) BOOL nodeSelected;
- (void)dealloc;

@end

@interface BCStringWithoutNewlineTransformer : NSValueTransformer
{
}

+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;
- (BOOL)allowsReverseTransformation;

@end

@interface BCSplitView : NSSplitView
{
}

+ (void)initialize;
- (id)dividerColor;

@end

@interface BCOutlineViewController : NSViewController <NSMenuDelegate, NSTextFieldDelegate, BCTableCellViewDelegate, BCTableRowViewDelegate, NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    BOOL _selectionStateUpdating;
    BOOL _expansionStateUpdating;
    BOOL _draggingInProgress;
    BCOutlineView *_outlineView;
    BCOutlineViewDataController *_dataController;
    NSEvent *_ignoreSelectionChangingEvent;
    NSEvent *_ignoreExpansionChangingEvent;
    NSArray *_contextMenuSelection;
    id _currentlyHoveredNode;
    NSTextField *_menuDisabledTextField;
    NSMutableSet *_referencedNodes;
    unsigned long long _refreshMask;
    NSArray *_postRefreshBlocks;
}

@property(retain, nonatomic) NSArray *postRefreshBlocks; // @synthesize postRefreshBlocks=_postRefreshBlocks;
@property(nonatomic) unsigned long long refreshMask; // @synthesize refreshMask=_refreshMask;
@property(retain, nonatomic) NSMutableSet *referencedNodes; // @synthesize referencedNodes=_referencedNodes;
@property(retain, nonatomic) NSTextField *menuDisabledTextField; // @synthesize menuDisabledTextField=_menuDisabledTextField;
@property(readonly, nonatomic) id currentlyHoveredNode; // @synthesize currentlyHoveredNode=_currentlyHoveredNode;
@property(retain, nonatomic) NSArray *contextMenuSelection; // @synthesize contextMenuSelection=_contextMenuSelection;
@property(nonatomic) BOOL draggingInProgress; // @synthesize draggingInProgress=_draggingInProgress;
@property(retain, nonatomic) NSEvent *ignoreExpansionChangingEvent; // @synthesize ignoreExpansionChangingEvent=_ignoreExpansionChangingEvent;
@property(retain, nonatomic) NSEvent *ignoreSelectionChangingEvent; // @synthesize ignoreSelectionChangingEvent=_ignoreSelectionChangingEvent;
@property(nonatomic) BOOL expansionStateUpdating; // @synthesize expansionStateUpdating=_expansionStateUpdating;
@property(nonatomic) BOOL selectionStateUpdating; // @synthesize selectionStateUpdating=_selectionStateUpdating;
@property(retain, nonatomic) BCOutlineViewDataController *dataController; // @synthesize dataController=_dataController;
@property(retain, nonatomic) BCOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (void).cxx_destruct;
- (id)tableCellViewDestinationWindow:(id)arg1;
- (unsigned long long)tableRowView:(id)arg1 displayTypeOfRowAtIndex:(long long)arg2;
- (long long)indexOfTableRowView:(id)arg1;
- (BOOL)isNodeExpandedInTableRowView:(id)arg1;
- (BOOL)isNodeSelectedInTableRowView:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)handleTabFromControl:(id)arg1 forward:(BOOL)arg2;
- (void)performNecessaryRefreshOperations;
- (void)queueRefreshIfRequired;
@property(nonatomic) BOOL isLayoutDirty;
@property(nonatomic) BOOL arePreviewImagesDirty;
@property(nonatomic) BOOL isExpansionDirty;
@property(nonatomic) BOOL isSelectionDirty;
- (void)refreshWithMask:(unsigned long long)arg1;
- (void)refreshPreviewImages;
- (void)internalRefreshPreviewImages;
- (void)executeAfterRefreshCompleted:(CDUnknownBlockType)arg1;
- (void)refresh;
- (void)internalRefresh;
- (void)renameNode;
- (void)flagsChangedNotification;
- (id)tableCellViewForNode:(id)arg1;
- (void)updateDisplayStateOnView:(id)arg1;
- (void)setCurrentlyHoveredNode:(id)arg1 notifyDelegate:(BOOL)arg2;
- (void)setCurrentlyHoveredView:(id)arg1 notifyDelegate:(BOOL)arg2;
@property(readonly, nonatomic) __weak BCTableCellView *currentlyHoveredView;
- (void)tableCellViewDidBeginEditing:(id)arg1;
- (void)tableCellViewMouseExited:(id)arg1;
- (void)tableCellViewMouseEntered:(id)arg1;
- (void)tableCellViewHandleBadgePressed:(id)arg1;
- (BOOL)isTableCellViewNodeSelected:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)viewAtCurrentMousePoint;
- (id)nodeAtCurrentMousePoint;
- (long long)rowAtCurrentMousePoint;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (BOOL)determineCopyStateFromDraggingInfo:(id)arg1;
- (long long)translateDropIndex:(long long)arg1 toParentOfChild:(id)arg2;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)outlineView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedItems:(id)arg3;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(id)arg4;
@property(retain, nonatomic) BCFilterInfo *filter;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)updateSelectionFromNotification:(id)arg1;
@property(readonly, nonatomic) NSArray *selectedItems;
- (void)updateSelectionState;
- (void)modifySelectionInBlock:(CDUnknownBlockType)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (void)outlineViewItemDidExpand:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (unsigned long long)determineCollapsionStateForNode:(id)arg1;
- (unsigned long long)determineExpansionStateForNode:(id)arg1;
- (void)notifyExpansionStateChanged:(unsigned long long)arg1 forNode:(id)arg2;
- (void)updateExpansionStateForNodesUnder:(id)arg1;
- (void)updateSelectionAndExpansion;
- (void)modifyExpansionInBlock:(CDUnknownBlockType)arg1;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)childrenForItem:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) BOOL hasSourceListStyle;
@property(readonly, nonatomic) double preferredHeight;
- (void)awakeFromNib;
- (id)initWithDataController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCNoClickTextField : NSTextField
{
}

- (void)mouseDown:(id)arg1;

@end

@interface BCFilterInfo : NSObject
{
    NSString *_filterString;
}

@property(copy, nonatomic) NSString *filterString; // @synthesize filterString=_filterString;
- (void).cxx_destruct;
- (BOOL)shouldIncludeNode:(id)arg1;

@end

@interface BCCollapsableImageView : NSView
{
    NSImage *_image;
    NSLayoutConstraint *_widthConstraint;
    double _expandedWidth;
}

@property(nonatomic) double expandedWidth; // @synthesize expandedWidth=_expandedWidth;
@property(nonatomic) __weak NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)connectWidthConstraint;
- (void)awakeFromNib;

@end

@interface BCLayerListViewController : BCOutlineViewController
{
}

@end

@interface BCTableRowView : NSTableRowView
{
    NSTableView *_parent;
    NSObject<BCOutlineViewNode> *_node;
    NSObject<BCTableRowViewDelegate> *_delegate;
    unsigned long long _expansionState;
}

+ (void)initialize;
@property(nonatomic) unsigned long long expansionState; // @synthesize expansionState=_expansionState;
@property(nonatomic) __weak NSObject<BCTableRowViewDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSObject<BCOutlineViewNode> *node; // @synthesize node=_node;
@property(nonatomic) __weak NSTableView *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
- (void)drawSelectionInRect:(struct CGRect)arg1;
- (void)drawDraggingDestinationFeedbackInRect:(struct CGRect)arg1;
- (void)drawHighlight;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)fillBackgroundInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) unsigned long long displayType;
@property(readonly, nonatomic, getter=isHighlit) BOOL hightlighted;
@property(readonly, nonatomic, getter=isNodeExpanded) BOOL nodeExpanded;
@property(readonly, nonatomic, getter=isNodeSelected) BOOL nodeSelected;
@property(readonly, nonatomic) BOOL isOdd;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface MSBlueButtonCell : NSButtonCell
{
}

- (id)colorForTitle;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface BCOutlineView : NSOutlineView
{
    BCOutlineViewDataController *_dataController;
    id _discloserTriangleClickedItem;
    SEL _disclosureButtonAction;
    NSMutableDictionary *_viewCache;
    NSMutableSet *_registeredViews;
}

@property(retain, nonatomic) NSMutableSet *registeredViews; // @synthesize registeredViews=_registeredViews;
@property(retain, nonatomic) NSMutableDictionary *viewCache; // @synthesize viewCache=_viewCache;
@property(nonatomic) SEL disclosureButtonAction; // @synthesize disclosureButtonAction=_disclosureButtonAction;
@property(retain, nonatomic) id discloserTriangleClickedItem; // @synthesize discloserTriangleClickedItem=_discloserTriangleClickedItem;
@property(nonatomic) __weak BCOutlineViewDataController *dataController; // @synthesize dataController=_dataController;
- (void).cxx_destruct;
- (void)reloadData;
- (void)addViewToCache:(id)arg1;
- (void)deliberateScrollRowToVisible:(long long)arg1;
- (void)scrollRowToVisible:(long long)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (id)menuForEvent:(id)arg1;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (id)makeViewWithIdentifier:(id)arg1 owner:(id)arg2;
- (void)registerView:(id)arg1 withIdentifier:(id)arg2;
- (void)disclosureTriangleClicked:(id)arg1;
- (BOOL)becomeFirstResponder;
- (void)mouseDown:(id)arg1;
- (void)awakeFromNib;

@end

@interface BCPageListViewController : BCOutlineViewController
{
}

@end

@interface DeprecatedChannelState : NSObject
{
    BOOL _enabled;
    ECLogHandler *_handler;
}

@property(nonatomic) BOOL enabled; // @synthesize enabled=_enabled;
@property(retain, nonatomic) ECLogHandler *handler; // @synthesize handler=_handler;
- (void).cxx_destruct;

@end

@interface MSPluginCommand : NSObject
{
    MSPluginCommandSpecifier *_commandSpecifier;
    BOOL _disableCocoaScriptPreprocessor;
    BOOL _hasAPI;
    BOOL _errorInScript;
    BOOL _skipNextLog;
    NSString *_identifier;
    MSPluginScript *_script;
    NSString *_name;
    NSDictionary *_handlers;
    NSString *_shortcut;
    MSPluginBundle *_pluginBundle;
    unsigned long long _scope;
    ECLogChannel *_logger;
    NSMutableString *_log;
    COScript *_session;
    NSMutableDictionary *_context;
    NSString *_executingScript;
    NSDictionary *_coreModuleMap;
}

+ (id)commandWithJSON:(id)arg1 scripts:(id)arg2 scriptsURL:(id)arg3;
+ (id)actionIDsNotToReload;
@property(retain, nonatomic) NSDictionary *coreModuleMap; // @synthesize coreModuleMap=_coreModuleMap;
@property(retain, nonatomic) NSString *executingScript; // @synthesize executingScript=_executingScript;
@property(nonatomic) BOOL skipNextLog; // @synthesize skipNextLog=_skipNextLog;
@property(nonatomic) BOOL errorInScript; // @synthesize errorInScript=_errorInScript;
@property(nonatomic) BOOL hasAPI; // @synthesize hasAPI=_hasAPI;
@property(retain, nonatomic) NSMutableDictionary *context; // @synthesize context=_context;
@property(retain, nonatomic) COScript *session; // @synthesize session=_session;
@property(retain, nonatomic) NSMutableString *log; // @synthesize log=_log;
@property(retain, nonatomic) ECLogChannel *logger; // @synthesize logger=_logger;
@property(nonatomic) BOOL disableCocoaScriptPreprocessor; // @synthesize disableCocoaScriptPreprocessor=_disableCocoaScriptPreprocessor;
@property(readonly, nonatomic) unsigned long long scope; // @synthesize scope=_scope;
@property(nonatomic) __weak MSPluginBundle *pluginBundle; // @synthesize pluginBundle=_pluginBundle;
@property(readonly, nonatomic) NSString *shortcut; // @synthesize shortcut=_shortcut;
@property(readonly, copy, nonatomic) NSDictionary *handlers; // @synthesize handlers=_handlers;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) MSPluginScript *script; // @synthesize script=_script;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forKey:(id)arg2 onDocument:(id)arg3;
- (id)valueForKey:(id)arg1 onDocument:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2 onLayer:(id)arg3;
- (id)valueForKey:(id)arg1 onLayer:(id)arg2;
- (id)pluginBundleIdentifierForMetadata;
- (void)setValue:(id)arg1 forKey:(id)arg2 onObject:(id)arg3 forPluginIdentifier:(id)arg4;
- (void)setValue:(id)arg1 forKey:(id)arg2 onDocument:(id)arg3 forPluginIdentifier:(id)arg4;
- (void)setValue:(id)arg1 forKey:(id)arg2 onLayer:(id)arg3 forPluginIdentifier:(id)arg4;
- (id)valueForKey:(id)arg1 onDocument:(id)arg2 forPluginIdentifier:(id)arg3;
- (id)valueForKey:(id)arg1 onLayer:(id)arg2 forPluginIdentifier:(id)arg3;
- (id)logs;
- (id)metadata;
- (BOOL)shouldReloadWithActionID:(id)arg1;
- (id)menuItemWithAction:(SEL)arg1;
- (unsigned long long)shortcutModifiers;
- (id)shortcutKey;
- (void)testDeprecationLogging;
@property(readonly, nonatomic) MSPluginCommandSpecifier *commandSpecifier;
- (void)error:(id)arg1;
- (void)print:(id)arg1;
- (void)resetLogger;
@property(nonatomic) BOOL stayRunning;
- (void)coscript:(id)arg1 hadError:(id)arg2 onLineNumber:(long long)arg3 atSourceURL:(id)arg4;
- (id)executeScript:(id)arg1;
- (id)executeScriptAtURL:(id)arg1;
- (BOOL)hasRunHandler;
- (BOOL)tearDownIfFinished;
- (id)runHandler:(id)arg1 context:(id)arg2 manager:(id)arg3 onComplete:(CDUnknownBlockType)arg4;
- (id)runHandler:(id)arg1 context:(id)arg2 manager:(id)arg3;
- (id)runHandlerWithKey:(id)arg1 context:(id)arg2 manager:(id)arg3 onComplete:(CDUnknownBlockType)arg4;
- (id)runHandlerWithKey:(id)arg1 context:(id)arg2 manager:(id)arg3;
- (id)run:(id)arg1 manager:(id)arg2 onComplete:(CDUnknownBlockType)arg3;
- (id)run:(id)arg1 manager:(id)arg2;
- (id)runHandler:(id)arg1 withOptionalKey:(id)arg2 context:(id)arg3 manager:(id)arg4 onComplete:(CDUnknownBlockType)arg5;
- (id)fullContextFromContext:(id)arg1 url:(id)arg2;
- (void)tearDownSession;
- (void)setUpSessionWithContext:(id)arg1;
- (void)newSessionForURL:(id)arg1 shouldReload:(BOOL)arg2;
- (void)loadAPISupport;
- (void)stopCapturingDeprecatedChannel:(id)arg1;
- (id)startCapturingDeprecatedChannel;
- (id)flattenedHandlerIndexWithHandlers:(id)arg1;
- (void)dealloc;
- (id)initWithScript:(id)arg1 identifier:(id)arg2 name:(id)arg3 handlers:(id)arg4 shortcut:(id)arg5 scope:(unsigned long long)arg6;
- (id)initWithScript:(id)arg1 identifier:(id)arg2 name:(id)arg3 runHandler:(id)arg4 scope:(unsigned long long)arg5;
- (double)timeToExecuteSelector:(id)arg1 target:(id)arg2 iterations:(unsigned long long)arg3;
- (id)callback:(id)arg1 asBlockWithArguments:(unsigned long long)arg2 data:(id)arg3;
- (void)callCallback:(id)arg1 withBlockArguments:(id)arg2 data:(id)arg3 timestamp:(double)arg4;
- (void)runCallback:(id)arg1 withDocumentAtURL:(id)arg2 data:(id)arg3;
- (void)finishTestingMultipleItems;
- (void)testNextItem;
- (void)finishTestingItem:(id)arg1 results:(id)arg2;
- (void)beginTestingMultipleItems:(id)arg1 withItemCallback:(id)arg2 finishCallback:(id)arg3;
- (void)finishPerformanceTestingWithResults:(id)arg1;
- (void)beginPerformanceTesting:(id)arg1 minimumAPI:(unsigned long long)arg2;
- (void)prepareForPerformanceTesting;
- (id)URLForPerformanceTempFileWithName:(id)arg1;
- (id)URLForPerformanceDocumentWithName:(id)arg1;
@property(retain, nonatomic) NSDictionary *performanceData;

@end

@interface MSPluginBundle : NSObject
{
    BOOL _enabled;
    BOOL _disableCocoaScriptPreprocessor;
    NSURL *_url;
    NSDictionary *_commands;
    NSString *_version;
    NSString *_name;
    NSString *_identifier;
    NSString *_pluginDescription;
    NSDictionary *_menuDescription;
    NSURL *_homepageURL;
    NSString *_author;
    NSString *_authorEmail;
    NSURL *_appcastURL;
    NSString *_compatibleVersion;
    NSString *_maximumCompatibleVersion;
}

+ (id)commandsFromArray:(id)arg1 sketchPluginURL:(id)arg2 pluginBundle:(id)arg3;
+ (id)pluginBundleWithURL:(id)arg1;
@property(nonatomic) BOOL disableCocoaScriptPreprocessor; // @synthesize disableCocoaScriptPreprocessor=_disableCocoaScriptPreprocessor;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(readonly, copy, nonatomic) NSString *maximumCompatibleVersion; // @synthesize maximumCompatibleVersion=_maximumCompatibleVersion;
@property(readonly, copy, nonatomic) NSString *compatibleVersion; // @synthesize compatibleVersion=_compatibleVersion;
@property(readonly, copy, nonatomic) NSURL *appcastURL; // @synthesize appcastURL=_appcastURL;
@property(readonly, copy, nonatomic) NSString *authorEmail; // @synthesize authorEmail=_authorEmail;
@property(readonly, copy, nonatomic) NSString *author; // @synthesize author=_author;
@property(readonly, copy, nonatomic) NSURL *homepageURL; // @synthesize homepageURL=_homepageURL;
@property(copy, nonatomic) NSDictionary *menuDescription; // @synthesize menuDescription=_menuDescription;
@property(readonly, copy, nonatomic) NSString *pluginDescription; // @synthesize pluginDescription=_pluginDescription;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, copy, nonatomic) NSDictionary *commands; // @synthesize commands=_commands;
@property(readonly, copy, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)urlForResourceNamed:(id)arg1;
@property(readonly, copy, nonatomic) NSString *versionedIdentifier;
- (BOOL)writeToURL:(id)arg1;
- (id)metadata;
@property(readonly, nonatomic, getter=isCompatible) BOOL compatible;
- (id)initWithName:(id)arg1 identifier:(id)arg2 commands:(id)arg3;
- (id)initPluginBundleWithURL:(id)arg1;

@end

@interface MSPluginDebugController : NSObject <CODebugController>
{
}

- (void)output:(id)arg1 args:(struct __va_list_tag [1])arg2;

@end

@interface MSPluginStandaloneScript : MSPluginScript
{
    NSString *_wrappedScript;
}

+ (id)wrappedScript:(id)arg1 handler:(id)arg2;
@property(copy, nonatomic) NSString *wrappedScript; // @synthesize wrappedScript=_wrappedScript;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *handler;
- (id)script;
@property(readonly, copy, nonatomic) NSString *rawScript;

@end

@interface MSPluginManager : NSObject
{
    NSDictionary *_plugins;
    BOOL _disableAllPlugins;
    BOOL _monitorForChanges;
    NSArray *_pluginsFolderURLs;
    long long _numberOfIncompatiblePluginsDisabled;
    long long _updatesAddedToWarehouse;
    NSURL *_metadataURL;
    NSDictionary *_metadata;
    NSMutableDictionary *_runningCommands;
    NSMutableDictionary *_runningCommandCallbacks;
    NSTimer *_sessionTimer;
    double _lastTimerInterval;
    id <MSPluginUpdater> _updater;
    NSArray *_folderMonitors;
    MSPluginManagingState *_pluginStateManager;
    NSMutableDictionary *_pluginVersions;
    NSMutableArray *_downloadPluginsErrors;
    NSDictionary *_incompatiblePluginVersions;
}

+ (id)warehousePluginFolderForIdentifier:(id)arg1 withVersion:(id)arg2;
+ (id)pluginsWarehouseURL;
+ (id)pluginsURLs;
+ (id)defaultPluginURL;
+ (id)mainPluginsFolderURL;
+ (void)initialisePlugins;
@property(retain, nonatomic) NSDictionary *incompatiblePluginVersions; // @synthesize incompatiblePluginVersions=_incompatiblePluginVersions;
@property(retain, nonatomic) NSMutableArray *downloadPluginsErrors; // @synthesize downloadPluginsErrors=_downloadPluginsErrors;
@property(retain, nonatomic) NSMutableDictionary *pluginVersions; // @synthesize pluginVersions=_pluginVersions;
@property(readonly, nonatomic) MSPluginManagingState *pluginStateManager; // @synthesize pluginStateManager=_pluginStateManager;
@property(readonly, nonatomic) BOOL monitorForChanges; // @synthesize monitorForChanges=_monitorForChanges;
@property(retain, nonatomic) NSArray *folderMonitors; // @synthesize folderMonitors=_folderMonitors;
@property(readonly, copy, nonatomic) id <MSPluginUpdater> updater; // @synthesize updater=_updater;
@property(nonatomic) double lastTimerInterval; // @synthesize lastTimerInterval=_lastTimerInterval;
@property(retain, nonatomic) NSTimer *sessionTimer; // @synthesize sessionTimer=_sessionTimer;
@property(retain, nonatomic) NSMutableDictionary *runningCommandCallbacks; // @synthesize runningCommandCallbacks=_runningCommandCallbacks;
@property(retain, nonatomic) NSMutableDictionary *runningCommands; // @synthesize runningCommands=_runningCommands;
@property(copy, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(copy, nonatomic) NSURL *metadataURL; // @synthesize metadataURL=_metadataURL;
@property(nonatomic) BOOL disableAllPlugins; // @synthesize disableAllPlugins=_disableAllPlugins;
@property(nonatomic) long long updatesAddedToWarehouse; // @synthesize updatesAddedToWarehouse=_updatesAddedToWarehouse;
@property(nonatomic) long long numberOfIncompatiblePluginsDisabled; // @synthesize numberOfIncompatiblePluginsDisabled=_numberOfIncompatiblePluginsDisabled;
@property(readonly, copy, nonatomic) NSArray *pluginsFolderURLs; // @synthesize pluginsFolderURLs=_pluginsFolderURLs;
- (void).cxx_destruct;
- (void)removePluginVersionsNotInIdentifiers:(id)arg1;
- (void)addDownloadAndDecompressPluginError:(id)arg1;
- (id)compatiblePluginUpdatesNotDownloaded;
- (id)latestPluginUpdatesNotDownloaded;
@property(readonly, nonatomic) long long numberOfPluginsWithUpdates;
@property(readonly, nonatomic) long long numberOfPluginsWithSketchCompatibleUpdates;
- (id)downloadedPluginURLWithIdentifier:(id)arg1 version:(id)arg2;
- (id)firstPluginBundleFoundInFolder:(id)arg1;
- (BOOL)installPluginAtURL:(id)arg1 withIdentifier:(id)arg2 error:(id *)arg3;
- (void)resetAllPluginMetadataToBeDisabled;
- (BOOL)contentsSameForSmallTextFiles:(id)arg1 file2:(id)arg2;
- (void)downloadRemotePluginsBlacklist;
- (BOOL)isPluginUpdateDownloadedWithIdentifier:(id)arg1 version:(id)arg2;
- (BOOL)installPluginWithIdentifier:(id)arg1 version:(id)arg2 error:(id *)arg3;
- (void)downloadAndInstallPluginWithIdentifier:(id)arg1 version:(id)arg2 downloadCompletionHandler:(CDUnknownBlockType)arg3;
- (void)downloadPluginUpdate:(id)arg1 withVersion:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)clearPluginsCache;
- (void)cancelDownloadingPluginVersions;
- (void)downloadLatestPluginUpdatesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)downloadCompatiblePluginUpdatesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)downloadPluginUpdates:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)checkForPluginUpdatesWithHandler:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)checkForPluginUpdates:(id)arg1 handler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)shouldEnablePluginIdentifier:(id)arg1 withVersion:(id)arg2;
- (void)registerIncompatiblePlugins;
- (BOOL)isPluginWithIdentifier:(id)arg1 incompatibleWithVersion:(id)arg2;
- (BOOL)isIncompatiblePlugin:(id)arg1;
- (id)versionsForPlugin:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *incompatiblePluginsWithCompatibleUpdates;
@property(readonly, copy, nonatomic) NSDictionary *incompatiblePluginsWithUpdates;
@property(readonly, copy, nonatomic) NSArray *incompatiblePlugins;
- (id)disabledPlugins;
- (id)enabledPlugins;
- (void)disablePlugin:(id)arg1;
- (void)enablePlugin:(id)arg1;
- (void)addPluginsToMenu:(id)arg1 selector:(SEL)arg2;
- (void)addCommands:(id)arg1 toMenu:(id)arg2 fromDescription:(id)arg3 selector:(SEL)arg4;
- (void)sortMenu:(id)arg1 recursively:(BOOL)arg2;
- (void)runHandlerWithKey:(id)arg1 fromCommand:(id)arg2 inPlugin:(id)arg3 withContext:(id)arg4;
- (void)editBundle:(id)arg1;
- (void)cleanupFinishedCommands;
- (void)trackLongRunningCommand:(id)arg1 onComplete:(CDUnknownBlockType)arg2;
- (id)stopTrackingLongRunningCommandWithSpecifier:(id)arg1;
- (id)commandWithSpecifier:(id)arg1;
@property(copy, nonatomic) NSDictionary *plugins;
- (void)setupFolderMonitoringWithVisitedURLs:(id)arg1;
- (void)clearFolderMonitors;
- (void)reloadPlugins;
- (id)pluginsFromResolvedFolderAtURL:(id)arg1 visitedURLs:(id)arg2 relativeFolderPath:(id)arg3 ignoredNames:(id)arg4;
- (id)pluginsByResolvingFolderAtURL:(id)arg1 visitedURLs:(id)arg2 relativeFolderPath:(id)arg3 ignoredNames:(id)arg4;
- (id)relativePathByDeletingCommonPathComponentsWithFileURL:(id)arg1 fromURL:(id)arg2;
- (id)folderNamesToIgnore;
@property(readonly, copy, nonatomic) NSURL *mainPluginsFolderURL;
- (void)dealloc;
- (id)initWithPluginsFolderURLs:(id)arg1 updater:(id)arg2 pluginStateManager:(id)arg3;
- (id)init;

@end

@interface MSPluginScript : NSObject
{
    NSURL *_URL;
    NSString *_filename;
    NSString *_script;
}

@property(readonly, copy, nonatomic) NSString *script; // @synthesize script=_script;
@property(readonly, copy, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (void)reload;
- (BOOL)loadWithError:(id *)arg1;
- (id)initWithString:(id)arg1 filename:(id)arg2;
- (id)initWithURL:(id)arg1 error:(id *)arg2;

@end

@interface MSPluginUpdaterImplementation : NSObject
{
    long long _downloadingAppcastsStatus;
    long long _downloadingPluginVersionsStatus;
    BCDownloadManager *_pluginDownloader;
}

@property(retain, nonatomic) BCDownloadManager *pluginDownloader; // @synthesize pluginDownloader=_pluginDownloader;
@property(nonatomic) long long downloadingPluginVersionsStatus; // @synthesize downloadingPluginVersionsStatus=_downloadingPluginVersionsStatus;
@property(nonatomic) long long downloadingAppcastsStatus; // @synthesize downloadingAppcastsStatus=_downloadingAppcastsStatus;
- (void).cxx_destruct;
- (BOOL)makeDecompressError:(id *)arg1 withDescription:(id)arg2;
- (BOOL)decompressCurrentFile:(void *)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)decompressPluginZip:(id)arg1 toFolder:(id)arg2 error:(id *)arg3;
- (id)versionsDictionaryFromAppcast:(id)arg1;
- (void)cancelDownloadingPluginVersions;
- (void)downloadPlugins:(id)arg1 downloadPluginHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)downloadPluginFromURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)downloadPluginAppcasts:(id)arg1 downloadAppcastHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface MSPluginCommandSpecifier : NSObject <NSCopying>
{
    NSString *_pluginBundleIdentifier;
    NSString *_commandIdentifier;
}

@property(readonly, copy, nonatomic) NSString *commandIdentifier; // @synthesize commandIdentifier=_commandIdentifier;
@property(readonly, copy, nonatomic) NSString *pluginBundleIdentifier; // @synthesize pluginBundleIdentifier=_pluginBundleIdentifier;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToCommandSpecifier:(id)arg1;
- (unsigned long long)hash;
- (id)stringValue;
- (id)initWithPluginBundleIdentifier:(id)arg1 commandIdentifier:(id)arg2;

@end

@interface MSPluginLogHandler : ECLogHandler
{
    MSPluginCommand *_command;
}

@property(nonatomic) __weak MSPluginCommand *command; // @synthesize command=_command;
- (void).cxx_destruct;
- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (id)initWithCommand:(id)arg1;

@end

@interface MSPluginManagingState : NSObject
{
    NSURL *_metadataURL;
    NSDictionary *_metadata;
    NSDictionary *_incompatiblePluginVersions;
}

+ (id)incompatiblePlugins;
+ (id)existingDownloadededBlacklistURL;
@property(readonly, copy, nonatomic) NSDictionary *incompatiblePluginVersions; // @synthesize incompatiblePluginVersions=_incompatiblePluginVersions;
@property(copy, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(readonly, nonatomic) NSURL *metadataURL; // @synthesize metadataURL=_metadataURL;
- (void).cxx_destruct;
- (void)removeIncompatibilityRegistrations;
- (void)removeDisableOverrides;
- (BOOL)registerIncompatibilityForPluginIdentifier:(id)arg1 withVersion:(id)arg2;
- (BOOL)setMetadataValue:(id)arg1 forKey:(id)arg2 identifier:(id)arg3;
- (id)metadataValueForKey:(id)arg1 identifier:(id)arg2;
- (BOOL)setPluginMetadaDictionary:(id)arg1 forIdentifier:(id)arg2;
- (BOOL)isPluginVersion:(id)arg1 incompatibleWithVersion:(id)arg2;
- (BOOL)isPluginWithIdentifier:(id)arg1 incompatibleWithVersion:(id)arg2;
- (long long)registerPluginIncompatibilityForVersions:(id)arg1;
- (void)updateMetadataWithPluginIndentifiers:(id)arg1;
- (BOOL)shouldEnablePluginIdentifier:(id)arg1 withVersion:(id)arg2;
- (void)setEnabled:(BOOL)arg1 forPluginIdentifier:(id)arg2 withVersion:(id)arg3;
- (void)resetIncompatiblePluginMetadata;
- (id)initWithMetadataURL:(id)arg1 incompatiblePlugins:(id)arg2;

@end

@interface MSPluginVersions : NSObject
{
    NSString *_identifier;
    NSURL *_appcastURL;
    NSMutableDictionary *__versionsDictionary;
}

@property(readonly, nonatomic) NSMutableDictionary *_versionsDictionary; // @synthesize _versionsDictionary=__versionsDictionary;
@property(readonly, copy, nonatomic) NSURL *appcastURL; // @synthesize appcastURL=_appcastURL;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (BOOL)isUpdateAvailableForVersion:(id)arg1;
@property(readonly, copy, nonatomic) NSString *latestVersionAvailable;
@property(readonly, copy, nonatomic) NSDictionary *versionsDictionary;
- (BOOL)isVersionListed:(id)arg1;
- (BOOL)isVersionDownloaded:(id)arg1;
- (id)downloadURLForVersion:(id)arg1;
- (void)addVersions:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *versions;
- (id)initWithIdentifier:(id)arg1 appcastURL:(id)arg2;

@end

@interface BCKeyEventTargetAction : NSObject
{
    id <NSObject> _target;
    SEL _action;
}

@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) __weak id <NSObject> target; // @synthesize target=_target;
- (void).cxx_destruct;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface BCKeyEventActionTableView : NSTableView
{
    NSMutableDictionary *_keyEvents;
}

@property(retain, nonatomic) NSMutableDictionary *keyEvents; // @synthesize keyEvents=_keyEvents;
- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (void)setTarget:(id)arg1 action:(SEL)arg2 forKeyDownEventWithCharacters:(id)arg3;

@end

@interface BCHighlightColorButtonCell : NSButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSAltButton : MSHoverButton
{
    id _bc_weakTarget;
}

@property(nonatomic) __weak id bc_weakTarget; // @synthesize bc_weakTarget=_bc_weakTarget;
- (void).cxx_destruct;
- (void)dealloc;
- (void)flagsChangedNotification:(id)arg1;
- (void)setTarget:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSAltButtonCell : MSHoverButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface BCJSONZippedDecoder : BCJSONDecoder
{
    void *_zip;
}

@property(nonatomic) void *zip; // @synthesize zip=_zip;
- (id)decodeFileAtSubpath:(id)arg1 error:(id *)arg2;
- (id)rawDataAtSubpath:(id)arg1 error:(id *)arg2;
- (BOOL)containsFileAtSubpath:(id)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

@interface CHImagelessPopupButtonCell : NSPopUpButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSHoverButton : NSButton
{
    BOOL _mouseIsHovering;
}

+ (Class)cellClass;
@property(nonatomic) BOOL mouseIsHovering; // @synthesize mouseIsHovering=_mouseIsHovering;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSHoverButtonCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (id)init;

@end

@interface BCHighlightImageCell : NSImageCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSPlainButton : MSHoverButton
{
}

+ (Class)cellClass;
- (struct CGRect)alignmentRectForFrame:(struct CGRect)arg1;

@end

@interface MSPlainButtonCell : MSHoverButtonCell
{
}

- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface CHFlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface CHVerticallyCentredPopupButtonCell : NSPopUpButtonCell
{
    struct CGRect _textClipRect;
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;

@end

@interface BCIOSStyleSwitchButton : NSButton
{
    CALayer *_backgroundOn;
    CALayer *_backgroundOff;
    CALayer *_knob;
    CALayer *_knobPressed;
}

@property(retain, nonatomic) CALayer *knobPressed; // @synthesize knobPressed=_knobPressed;
@property(retain, nonatomic) CALayer *knob; // @synthesize knob=_knob;
@property(retain, nonatomic) CALayer *backgroundOff; // @synthesize backgroundOff=_backgroundOff;
@property(retain, nonatomic) CALayer *backgroundOn; // @synthesize backgroundOn=_backgroundOn;
- (void).cxx_destruct;
- (void)moveLayer:(id)arg1 toX:(double)arg2;
- (void)performAnimated:(BOOL)arg1 block:(CDUnknownBlockType)arg2;
- (id)layerWithImageNamed:(id)arg1;
- (void)setState:(long long)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)mouseDown:(id)arg1;
- (void)reflectStateAnimated:(BOOL)arg1;
- (void)awakeFromNib;

@end

@interface BCZeroHeightWhenEmptyTextField : NSTextField
{
    double _paddingIfNotEmpty;
}

@property(nonatomic) double paddingIfNotEmpty; // @synthesize paddingIfNotEmpty=_paddingIfNotEmpty;
- (struct CGSize)intrinsicContentSize;

@end

@interface BCZipableFile : NSObject
{
    BOOL _encodeAsJSON;
    BOOL _writen;
    NSString *_subPath;
    NSObject *_objectToEncode;
}

+ (id)dataZipableForObject:(id)arg1 withSubPath:(id)arg2;
+ (id)jsonZipableForObject:(id)arg1 withSubPath:(id)arg2;
@property(nonatomic) BOOL writen; // @synthesize writen=_writen;
@property(readonly, nonatomic) BOOL encodeAsJSON; // @synthesize encodeAsJSON=_encodeAsJSON;
@property(readonly, nonatomic) NSObject *objectToEncode; // @synthesize objectToEncode=_objectToEncode;
@property(readonly, nonatomic) NSString *subPath; // @synthesize subPath=_subPath;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (BOOL)filePathMatches:(id)arg1;
- (id)initWithObject:(id)arg1 subPath:(id)arg2 asJSON:(BOOL)arg3;

@end

@interface BCJSONZippedEncoder : BCJSONEncoder
{
    void *_buffer;
    int _currentPos;
    BOOL _hasOpenFile;
    void *_zip;
    NSMutableArray *_objectsToEncode;
}

+ (id)zipEncoderForWritingAtURL:(id)arg1;
@property(retain, nonatomic) NSMutableArray *objectsToEncode; // @synthesize objectsToEncode=_objectsToEncode;
@property(nonatomic) BOOL hasOpenFile; // @synthesize hasOpenFile=_hasOpenFile;
@property(nonatomic) void *zip; // @synthesize zip=_zip;
- (void).cxx_destruct;
- (void)finishWriting;
- (void)writeData:(const void *)arg1 length:(unsigned long long)arg2;
- (void)archivePending;
- (id)nextObjectToEncode;
- (void)encodeZipable:(id)arg1;
- (BOOL)addZipable:(id)arg1;
- (BOOL)returnCheckingForError:(id *)arg1;
- (void)dealloc;
- (id)init;
- (BOOL)finishEncodingError:(id *)arg1;
- (BOOL)encodeRawData:(id)arg1 toSubpath:(id)arg2 error:(id *)arg3;
- (BOOL)encodeObject:(id)arg1 toSubpath:(id)arg2 error:(id *)arg3;

@end

@interface CHWindowController : NSWindowController
{
}

- (void)dealloc;

@end

@interface CHProgressSheet : CHSheetController
{
    NSTextField *textField;
    NSProgressIndicator *progress;
    NSTextField *titleField;
    NSTextField *subtitleField;
    NSButton *cancelButton;
    long long _maximum;
    long long _value;
}

@property(nonatomic) long long value; // @synthesize value=_value;
@property(nonatomic) long long maximum; // @synthesize maximum=_maximum;
- (void).cxx_destruct;
- (void)setIndeterminate:(BOOL)arg1;
- (void)setShowsCancelButton:(BOOL)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (BOOL)isMaximum;
- (void)setMessage:(id)arg1;
- (void)incrementProgressBy:(long long)arg1;
- (void)incrementProgress;
- (void)setProgressMaximum:(long long)arg1;
- (void)awakeFromNib;

@end

@interface BCPasteboardMock : NSObject
{
    NSString *_name;
    NSMutableDictionary *_storage;
}

+ (id)pasteboardWithName:(id)arg1;
+ (id)generalPasteboard;
@property(retain, nonatomic) NSMutableDictionary *storage; // @synthesize storage=_storage;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)clearContents;
@property(readonly) long long changeCount;
- (BOOL)writeObjects:(id)arg1;
- (id)types;
- (id)availableTypeFromArray:(id)arg1;
- (id)propertyListForType:(id)arg1;
- (BOOL)setPropertyList:(id)arg1 forType:(id)arg2;
- (id)stringForType:(id)arg1;
- (BOOL)setString:(id)arg1 forType:(id)arg2;
- (id)dataForType:(id)arg1;
- (void)setData:(id)arg1 forType:(id)arg2;
- (void)addTypes:(id)arg1 owner:(id)arg2;
- (void)declareTypes:(id)arg1 owner:(id)arg2;
- (void)addDataForTypes:(id)arg1 fromOwner:(id)arg2;
- (id)init;

@end

@interface CHSheetController : CHWindowController <NSTouchBarDelegate>
{
    id _object;
    NSWindow *_parentWindow;
}

+ (id)findSuitableWindowForSheet;
+ (id)runForWindow:(id)arg1 withObject:(id)arg2;
+ (id)runForWindow:(id)arg1;
@property(nonatomic) __weak NSWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
@property(retain, nonatomic) id object; // @synthesize object=_object;
- (void).cxx_destruct;
- (id)_init;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeTouchBar;
- (SEL)selectorForTouchbarItemIdentifier:(id)arg1;
- (id)touchBarItemIdentifiers;
- (id)windowNibName;
- (void)closeSheet;
- (void)cancel:(id)arg1;
- (void)confirm:(id)arg1;
- (id)run;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCPopoverContentView : NSView
{
    NSColor *_backgroundColor;
    unsigned long long _arrowEdge;
    double _arrowPosition;
}

@property(nonatomic) double arrowPosition; // @synthesize arrowPosition=_arrowPosition;
@property(nonatomic) unsigned long long arrowEdge; // @synthesize arrowEdge=_arrowEdge;
@property(copy, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)backgroundPath;
- (struct CGRect)availableContentRect;
- (BOOL)canBecomeKeyView;
- (void)cancelOperation:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)keyDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSFolderMonitor : NSObject
{
    struct __FSEventStream *_eventStream;
    NSURL *_folderURL;
    CDUnknownBlockType _contentsChangedBlock;
}

@property(copy, nonatomic) CDUnknownBlockType contentsChangedBlock; // @synthesize contentsChangedBlock=_contentsChangedBlock;
@property(copy, nonatomic) NSURL *folderURL; // @synthesize folderURL=_folderURL;
- (void).cxx_destruct;
- (void)dealloc;
- (void)flush;
- (unsigned int)flags;
- (id)initWithURL:(id)arg1 latency:(double)arg2 contentsChangedBlock:(CDUnknownBlockType)arg3;
- (id)initWithURL:(id)arg1 contentsChangedBlock:(CDUnknownBlockType)arg2;

@end

@interface CHTransparentWindow : NSWindow
{
}

- (BOOL)canBecomeKeyWindow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (id)initWithContentRect:(struct CGRect)arg1;

@end

@interface MSFileMonitor : MSFolderMonitor
{
}

- (unsigned int)flags;
- (id)initWithURL:(id)arg1 contentsChangedBlock:(CDUnknownBlockType)arg2;

@end

@interface BCPopoverWindow : NSWindow
{
}

+ (id)attachedWindowWithView:(id)arg1;
- (id)arrowView;
@property(nonatomic) double arrowPosition; // @dynamic arrowPosition;
@property(nonatomic) unsigned long long arrowEdge; // @dynamic arrowEdge;
- (unsigned long long)collectionBehavior;
- (BOOL)canBecomeKeyWindow;
- (void)sendEvent:(id)arg1;
- (void)resignMainWindow;
- (id)initWithContentRect:(struct CGRect)arg1;

@end

@interface CHStringAttributes : NSDictionary <NSCopying>
{
    NSMutableDictionary *attributes;
}

+ (id)stringAttributesWithFont:(id)arg1 color:(id)arg2 alignment:(unsigned long long)arg3;
+ (id)stringAttributesWithFont:(id)arg1 color:(id)arg2;
+ (id)stringAttributesWithFont:(id)arg1;
- (void).cxx_destruct;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(retain, nonatomic) NSShadow *shadow;
@property(nonatomic) unsigned long long alignment;
@property(retain, nonatomic) NSColor *color;
@property(nonatomic) double fontSize;
@property(retain, nonatomic) NSFont *font;
- (id)initWithDictionary:(id)arg1;
- (id)init;
- (id)initWithObjects:(const id *)arg1 forKeys:(const id *)arg2 count:(unsigned long long)arg3;

@end

@interface CHTransparentView : NSView
{
    NSColor *_backgroundColor;
}

@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BCColorButtonCell : NSButtonCell
{
    NSString *_backgroundColorStringRepresentation;
    NSString *_backgroundHighlightedColor;
    NSString *_textColor;
    NSString *_backgroundSelectedColor;
    NSString *_backgroundSelectedHighlightedColor;
    NSString *_textSelectedColor;
}

@property(retain, nonatomic) NSString *textSelectedColor; // @synthesize textSelectedColor=_textSelectedColor;
@property(retain, nonatomic) NSString *backgroundSelectedHighlightedColor; // @synthesize backgroundSelectedHighlightedColor=_backgroundSelectedHighlightedColor;
@property(retain, nonatomic) NSString *backgroundSelectedColor; // @synthesize backgroundSelectedColor=_backgroundSelectedColor;
@property(retain, nonatomic) NSString *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) NSString *backgroundHighlightedColor; // @synthesize backgroundHighlightedColor=_backgroundHighlightedColor;
@property(retain, nonatomic) NSString *backgroundColorStringRepresentation; // @synthesize backgroundColorStringRepresentation=_backgroundColorStringRepresentation;
- (void).cxx_destruct;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSInterfaceColorFactory : NSObject
{
}

+ (id)colorNamed:(id)arg1;
+ (void)initialize;

@end

@interface BCPopover : NSObject <NSWindowDelegate, NSViewControllerPresentationAnimator>
{
    BOOL dontSendNextPopoverWindowSizeNotification;
    BOOL _closesOnWindowDidResignKey;
    BOOL _closed;
    NSViewController *_contentViewController;
    id <BCPopoverDelegate> _delegate;
    BCPopoverWindow *_window;
    long long _screenEdgeBehaviour;
    long long _layerDependency;
    NSView *_attachedToView;
    double _attachedToViewMargin;
    unsigned long long _preferredEdge;
}

@property(nonatomic, getter=isClosed) BOOL closed; // @synthesize closed=_closed;
@property(nonatomic) unsigned long long preferredEdge; // @synthesize preferredEdge=_preferredEdge;
@property(nonatomic) double attachedToViewMargin; // @synthesize attachedToViewMargin=_attachedToViewMargin;
@property(retain, nonatomic) NSView *attachedToView; // @synthesize attachedToView=_attachedToView;
@property(nonatomic) BOOL closesOnWindowDidResignKey; // @synthesize closesOnWindowDidResignKey=_closesOnWindowDidResignKey;
@property(nonatomic) long long layerDependency; // @synthesize layerDependency=_layerDependency;
@property(nonatomic) long long screenEdgeBehaviour; // @synthesize screenEdgeBehaviour=_screenEdgeBehaviour;
@property(retain, nonatomic) BCPopoverWindow *window; // @synthesize window=_window;
@property(nonatomic) __weak id <BCPopoverDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
- (void).cxx_destruct;
- (void)animateDismissalOfViewController:(id)arg1 fromViewController:(id)arg2;
- (void)animatePresentationOfViewController:(id)arg1 fromViewController:(id)arg2;
- (void)dealloc;
- (void)closeIgnoringViewControllerPresentations;
- (void)close;
- (id)windowWillReturnUndoManager:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (struct CGRect)windowRectForViewSize:(struct CGSize)arg1 above:(struct CGRect)arg2 pointingTo:(struct CGPoint)arg3 edge:(unsigned long long)arg4;
- (struct CGPoint)pointAtEdge:(unsigned long long)arg1 ofRect:(struct CGRect)arg2;
- (void)attachedViewDidMove:(id)arg1;
- (struct CGRect)ensureRectFitsInParentWindow:(struct CGRect)arg1;
- (struct CGPoint)attachToPointInScreenCoordinates;
- (struct CGRect)screenAnchorRect;
@property(readonly, nonatomic) double minimumHeight;
- (struct CGRect)popoverWindowFrame;
- (struct CGRect)screenFrame;
- (double)popoverArrowPosition;
- (void)otherPopoverDidShow:(id)arg1;
- (void)contentViewDidResizeNotification:(id)arg1;
- (void)attachedWindowDidMove:(id)arg1;
- (void)configureNotifications:(id)arg1;
- (void)move;
- (void)showRelativeToView:(id)arg1 preferredEdge:(unsigned long long)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCWindowBadgeCell : MSHoverButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGSize)fittingTitleSize;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)dotColorForBadge:(id)arg1;
- (id)backgroundColorForBadge:(id)arg1;
- (id)init;

@end

@interface BCWindowBadge : MSHoverButton
{
    NSColor *_tintColor;
}

+ (Class)cellClass;
@property(retain, nonatomic) NSColor *tintColor; // @synthesize tintColor=_tintColor;
- (void).cxx_destruct;
- (struct CGSize)fittingSize;
- (void)windowDidChangeKeyState:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BCHighlightColorTextFieldCell : NSTextFieldCell
{
    NSColor *_highlightColor;
}

@property(retain, nonatomic) NSColor *highlightColor; // @synthesize highlightColor=_highlightColor;
- (void).cxx_destruct;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSPasteboardImageWriter : NSObject <MSPasteboardWriter>
{
}

- (id)includedObjectIDsForLayers:(id)arg1;
- (BOOL)containsSingleArtboard:(id)arg1;
- (struct CGRect)bitmapRectForLayers:(id)arg1;
- (id)exportRequestForPasteboardLayers:(id)arg1;
- (void)writeData:(id)arg1 toPasteboard:(id)arg2;
- (id)supportedPasteboardTypes;
- (BOOL)canWriteDataToPasteboard:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSToolbarPopUpButtonCell : NSButtonCell
{
    id <MSPopToolbarItemActionObject> _actionObject;
}

@property(nonatomic) __weak id <MSPopToolbarItemActionObject> actionObject; // @synthesize actionObject=_actionObject;
- (void).cxx_destruct;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (id)arrowBezierInRect:(struct CGRect)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface KBDelayedPopUpButton : NSButton
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSPopUpToolbarItem : NSToolbarItem
{
}

- (void)validate;
- (id)toolTip;
- (void)setToolTip:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)target;
- (SEL)action;
- (void)setAction:(SEL)arg1;
@property(nonatomic) __weak id <MSPopToolbarItemActionObject> actionObject; // @dynamic actionObject;
- (void)setTarget:(id)arg1;
@property(retain, nonatomic) NSMenu *menu; // @dynamic menu;
- (id)popupCell;
- (id)menuButtonWithSize:(unsigned long long)arg1;
- (id)initWithItemIdentifier:(id)arg1 size:(unsigned long long)arg2;

@end

@interface MSAssetLibraryUpdater : NSObject
{
    BCDownloadManager *_downloadManager;
    NSMutableDictionary *_downloadTasks;
}

+ (id)downloadManagerSessionConfiguration;
@property(retain, nonatomic) NSMutableDictionary *downloadTasks; // @synthesize downloadTasks=_downloadTasks;
@property(retain, nonatomic) BCDownloadManager *downloadManager; // @synthesize downloadManager=_downloadManager;
- (void).cxx_destruct;
- (id)dictionaryValueForDownloadTaskWithIdentifier:(id)arg1 key:(id)arg2;
- (CDUnknownBlockType)completionHandlerForIdentifier:(id)arg1;
- (CDUnknownBlockType)progressHandlerForIdentifier:(id)arg1;
- (void)downloadManager:(id)arg1 downloadTaskWithIdentifier:(id)arg2 failedWithError:(id)arg3;
- (void)downloadManager:(id)arg1 downloadTaskFinishedForIdentifier:(id)arg2 downloadedURL:(id)arg3 httpStatusCode:(long long)arg4;
- (void)downloadManager:(id)arg1 downloadTaskHasUpdatedForIdentifier:(id)arg2 downloadedSoFar:(unsigned long long)arg3 withDownloadSize:(unsigned long long)arg4;
- (BOOL)updateAssetLibrary:(id)arg1 withLibraryDownloadedTo:(id)arg2;
- (void)startFileDownload:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startDownloadingAssetLibrary:(id)arg1 progressHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)updatingInfoForLatestVersionInAppcast:(id)arg1;
- (void)downloadAppcastAtURL:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)downloadAssetLibraryAppcasts:(id)arg1 downloadAppcastHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface MSRenderMonitor : NSObject
{
    BOOL _shouldRemoveWhenDone;
    BOOL _shouldClearAllCaches;
    BOOL _shouldForceFullRedraw;
    NSMutableArray *_hooks;
    CDStruct_aac06691 _timestamps;
}

@property(retain, nonatomic) NSMutableArray *hooks; // @synthesize hooks=_hooks;
@property(nonatomic) CDStruct_aac06691 timestamps; // @synthesize timestamps=_timestamps;
@property(nonatomic) BOOL shouldForceFullRedraw; // @synthesize shouldForceFullRedraw=_shouldForceFullRedraw;
@property(nonatomic) BOOL shouldClearAllCaches; // @synthesize shouldClearAllCaches=_shouldClearAllCaches;
@property(nonatomic) BOOL shouldRemoveWhenDone; // @synthesize shouldRemoveWhenDone=_shouldRemoveWhenDone;
- (void).cxx_destruct;
- (double)timeIntervalBetweenStartEvent:(unsigned long long)arg1 endEvent:(unsigned long long)arg2;
- (unsigned long long)timestampForEvent:(unsigned long long)arg1;
- (void)registerHook:(CDUnknownBlockType)arg1 forEvent:(unsigned long long)arg2;
- (void)recordEvent:(unsigned long long)arg1 timestamp:(unsigned long long)arg2;
- (void)recordEvent:(unsigned long long)arg1;
- (id)init;

@end

@interface MSSidebarListController : NSObject
{
    id <MSSidebarControllerDelegate> _delegate;
    id _rootObject;
}

@property(readonly, nonatomic) id rootObject; // @synthesize rootObject=_rootObject;
@property(nonatomic) __weak id <MSSidebarControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)dataController:(id)arg1 exportNodes:(id)arg2 toFolder:(id)arg3;
- (BOOL)dataController:(id)arg1 copyFromPasteboard:(id)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)dataController:(id)arg1 moveFromPasteboard:(id)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)moveNode:(id)arg1 toParent:(id)arg2 after:(id)arg3;
- (BOOL)dataController:(id)arg1 canCopyFromPasteboard:(id)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)canCopyNode:(id)arg1 toParent:(id)arg2 after:(id)arg3;
- (BOOL)dataController:(id)arg1 canMoveFromPasteboard:(id)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)canMoveNode:(id)arg1 toParent:(id)arg2 after:(id)arg3;
- (id)dragTypesForDataController:(id)arg1;
- (id)readDragNodesFromPasteboard:(id)arg1;
- (BOOL)dataController:(id)arg1 writeNodes:(id)arg2 toPasteboard:(id)arg3;
@property(readonly, nonatomic) Class pasteboardWriterClass;
- (id)layerForNode:(id)arg1;
@property(readonly, nonatomic) __weak MSDocumentData *documentData;
- (id)initWithDelegate:(id)arg1;

@end

@interface MSDragGestureRecognizer : MSGestureRecognizer
{
    struct CGPoint _location;
    BOOL _receivedMouseDown;
    BOOL _beginsUponMouseDown;
    BOOL _lockTranslation;
    unsigned long long _modifierFlags;
    struct CGPoint _translation;
}

@property(readonly, nonatomic) unsigned long long modifierFlags; // @synthesize modifierFlags=_modifierFlags;
@property(nonatomic) BOOL lockTranslation; // @synthesize lockTranslation=_lockTranslation;
@property(nonatomic) struct CGPoint translation; // @synthesize translation=_translation;
@property(nonatomic) BOOL beginsUponMouseDown; // @synthesize beginsUponMouseDown=_beginsUponMouseDown;
- (void)flagsChanged:(id)arg1;
- (void)mouseDragged:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (void)mouseUp:(id)arg1 location:(struct CGPoint)arg2;
- (void)mouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 modifierFlags:(unsigned long long)arg3;
- (struct CGPoint)locationInLayer:(id)arg1;

@end

@interface MSAttributeConverter : NSObject
{
    NSString *_attributeName;
    CDUnknownBlockType _conversionBlock;
}

+ (id)converterWithAttributeName:(id)arg1 block:(CDUnknownBlockType)arg2;
@property(readonly, copy, nonatomic) CDUnknownBlockType conversionBlock; // @synthesize conversionBlock=_conversionBlock;
@property(readonly, copy, nonatomic) NSString *attributeName; // @synthesize attributeName=_attributeName;
- (void).cxx_destruct;
- (id)convertAttributes:(id)arg1;
- (id)initWithAttributeName:(id)arg1 block:(CDUnknownBlockType)arg2;

@end

@interface MSRotatedSnapItem : MSSnapItem
{
}

- (void)setY:(double)arg1;
- (void)setX:(double)arg1;
- (void)setRectForSnapping:(struct CGRect)arg1;
- (struct CGRect)rectForSnapping;

@end

@interface AFAmazonS3Manager : AFHTTPRequestOperationManager <NSSecureCoding, NSCopying>
{
    NSURL *_s3_baseURL;
}

+ (id)keyPathsForValuesAffectingBaseURL;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_s3_baseURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)deleteObjectWithPath:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)setObjectWithMethod:(id)arg1 file:(id)arg2 destinationPath:(id)arg3 parameters:(id)arg4 progress:(CDUnknownBlockType)arg5 success:(CDUnknownBlockType)arg6 failure:(CDUnknownBlockType)arg7;
- (id)putObjectWithFile:(id)arg1 destinationPath:(id)arg2 parameters:(id)arg3 progress:(CDUnknownBlockType)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (id)postObjectWithFile:(id)arg1 destinationPath:(id)arg2 parameters:(id)arg3 progress:(CDUnknownBlockType)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (id)getObjectWithPath:(id)arg1 outputStream:(id)arg2 progress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)getObjectWithPath:(id)arg1 progress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)headObjectWithPath:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)deleteBucket:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)putBucket:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)getBucket:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)getServiceWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)enqueueS3RequestOperationWithMethod:(id)arg1 path:(id)arg2 parameters:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)initWithAccessKeyID:(id)arg1 secret:(id)arg2;
- (id)initWithBaseURL:(id)arg1;

// Remaining properties
@property(retain, nonatomic) AFAmazonS3RequestSerializer<AFURLRequestSerialization> *requestSerializer; // @dynamic requestSerializer;

@end

@interface MSShareableObjectPopUpButton : NSPopUpButton
{
    MSForeignObjectMenuBuilder *_menuBuilder;
    NSArray *_layers;
    MSShareableObjectReference *_selectedObjectReference;
    NSArray *_objectLibraryMapping;
}

@property(retain, nonatomic) NSArray *objectLibraryMapping; // @synthesize objectLibraryMapping=_objectLibraryMapping;
@property(retain, nonatomic) MSShareableObjectReference *selectedObjectReference; // @synthesize selectedObjectReference=_selectedObjectReference;
@property(nonatomic) __weak NSArray *layers; // @synthesize layers=_layers;
@property(nonatomic) __weak MSForeignObjectMenuBuilder *menuBuilder; // @synthesize menuBuilder=_menuBuilder;
- (void).cxx_destruct;
- (void)libraryControllerDidChange:(id)arg1;
- (void)awakeFromNib;
- (void)updateWithMenuBuilder:(id)arg1 forLayers:(id)arg2;
- (void)addOriganiseMenu;
- (void)addCreateNewMenu;
- (BOOL)hasLayerWithMissingFonts;
- (void)addUnlinkMenu;
- (void)addReplacementObjectsToMenu;
- (void)addMenuItemForActionName:(id)arg1 title:(id)arg2;
- (id)objectsAtSameLevelAsMaster;
- (void)addObjectsAtSameLevelToMenu;
- (void)addDetachMenuItem;
- (void)addTitleMenuItem;
- (id)masterObjects;
- (id)localizedTypeString:(id)arg1;
@property(readonly, nonatomic) NSString *objectTypeName;
@property(readonly, nonatomic) NSDictionary *menuItemSelectorDictionary;
@property(readonly, nonatomic) unsigned long long objectType;
- (id)textStyleMenuItemSelectorDictionary;
- (id)layerStyleMenuItemSelectorDictionary;
- (id)symbolMenuItemSelectorDictionary;

@end

@interface MSCompoundSnapItem : MSSnapItem
{
    NSArray *_layers;
    NSArray *_relativeRects;
    struct CGRect _unionRect;
}

@property(nonatomic) struct CGRect unionRect; // @synthesize unionRect=_unionRect;
@property(retain, nonatomic) NSArray *relativeRects; // @synthesize relativeRects=_relativeRects;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)setRectForSnapping:(struct CGRect)arg1;
- (struct CGRect)rectForSnapping;
- (struct CGRect)boundsRect;
- (void)concatAncestorsAndSelfTransforms;
- (double)rotation;
- (BOOL)shouldConstrainProportions;
- (id)otherLayersForSnapping;
- (struct CGRect)originalRect;
- (id)layer;
- (id)snapLines;
- (id)initWithLayers:(id)arg1;

@end

@interface MSOpacityKeyboardShortcutRecognizer : NSObject
{
    NSMutableArray *_accumulatedNumberKeyEvents;
    id _target;
    SEL _action;
    double _concatenationDuration;
    double _opacity;
}

@property(readonly, nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) double concatenationDuration; // @synthesize concatenationDuration=_concatenationDuration;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (void)discardAccumulatedEvents;
- (double)opacityFromCharacters:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)init;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface MSTextStyleMenuPreview : NSObject
{
}

+ (id)textAttachmentForImageNamed:(id)arg1;
+ (id)attributedTitle:(id)arg1 styles:(id)arg2 colorSpace:(id)arg3 includeStyleInfo:(BOOL)arg4 inMainMenu:(BOOL)arg5;
+ (void)applyTextStylesToMenuItem:(id)arg1 colorSpace:(id)arg2 includeStyleInfo:(BOOL)arg3;

@end

@interface MSRulerGuides : NSObject
{
}

+ (struct CGRect)absoluteFrameOfSelectedLayersOnPage:(id)arg1;
+ (id)snapGuidesForRulerData:(id)arg1 axis:(unsigned long long)arg2;
+ (id)verticalGuidesForGrid:(id)arg1 ruler:(id)arg2 forDrawing:(BOOL)arg3 inRect:(struct CGRect)arg4 rulersVisible:(BOOL)arg5;
+ (id)verticalGuidesForHorizontalRulerOnPage:(id)arg1 forDrawing:(BOOL)arg2 inRect:(struct CGRect)arg3 rulersVisible:(BOOL)arg4;
+ (id)verticalGuidesForHorizontalRulerOnPage:(id)arg1 forDrawing:(BOOL)arg2 rulersVisible:(BOOL)arg3;
+ (id)horizontalGuidesForGrid:(id)arg1 ruler:(id)arg2 forDrawing:(BOOL)arg3 inRect:(struct CGRect)arg4;
+ (id)horizontalGuidesForVerticalRulerOnPage:(id)arg1 forDrawing:(BOOL)arg2 inRect:(struct CGRect)arg3 rulersVisible:(BOOL)arg4;
+ (id)horizontalGuidesForVerticalRulerOnPage:(id)arg1 forDrawing:(BOOL)arg2 rulersVisible:(BOOL)arg3;
+ (id)findHoverGuidesOnPage:(id)arg1 mouse:(struct CGPoint)arg2 rulesVisible:(BOOL)arg3;

@end

@interface MSLayerSection : NSViewController <MSInspectorSection>
{
    NSArray *_layers;
}

@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (id)views;
- (id)initWithLayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPasteboardPathsReader : NSObject <MSPasteboardReader>
{
}

- (unsigned long long)imageImportMode;
- (id)pasteboardDataFromPasteboard:(id)arg1 colorSpace:(id)arg2 options:(unsigned long long)arg3 sender:(id)arg4;
- (id)supportedPasteboardTypes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMaskWithShape : NSObject
{
}

+ (id)nameForMaskWithLayers:(id)arg1;
+ (id)createMaskWithShapeFromMultipleLayers:(id)arg1;
+ (id)toggleMaskForSingleShape:(id)arg1;
+ (id)createMaskForSingleBitmap:(id)arg1;
+ (id)createMaskWithShapeForLayers:(id)arg1;

@end

@interface MSPDFImporter : NSObject <MSImporter>
{
    id <PDFParser> _parser;
    MSPDFScanner *_scanner;
    NSString *_type;
}

+ (id)epsImporter;
+ (id)pdfImporter;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) MSPDFScanner *scanner; // @synthesize scanner=_scanner;
@property(retain, nonatomic) id <PDFParser> parser; // @synthesize parser=_parser;
- (void).cxx_destruct;
- (BOOL)shouldCollapseSinglePage;
- (BOOL)shouldExpandPages;
- (id)secondPhaseSubtitleForValue:(long long)arg1 maximum:(long long)arg2;
- (id)firstPhaseSubtitle;
- (void)finishImporting;
- (id)unwrappedLayer:(id)arg1;
- (id)importAsLayer;
- (void)importIntoPage:(id)arg1 name:(id)arg2 progress:(CDUnknownBlockType)arg3;
- (id)name;
- (unsigned long long)prepareToImportFromData:(id)arg1;
- (unsigned long long)prepareToImportFromURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPointSnappingGuide : NSObject <NSCopying>
{
    struct CGPoint _start;
    struct CGPoint _end;
}

@property(readonly, nonatomic) struct CGPoint end; // @synthesize end=_end;
@property(readonly, nonatomic) struct CGPoint start; // @synthesize start=_start;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)drawWithLineWidth:(double)arg1;
- (id)bezierPath;
- (id)initWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;

@end

@interface MSPointSnappingResult : NSObject <NSCopying>
{
    NSArray *_guides;
    unsigned long long _snappedAxes;
    struct CGPoint _point;
}

+ (id)snappingResultWithPoint:(struct CGPoint)arg1 axes:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long snappedAxes; // @synthesize snappedAxes=_snappedAxes;
@property(readonly, copy, nonatomic) NSArray *guides; // @synthesize guides=_guides;
@property(readonly, nonatomic) struct CGPoint point; // @synthesize point=_point;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)drawAtZoomValue:(double)arg1;
- (id)initWithPoint:(struct CGPoint)arg1 guides:(id)arg2 snappedAxes:(unsigned long long)arg3;

@end

@interface MSForeignObjectCollector : NSObject
{
    id <MSForeignObjectProvider> _provider;
    CDUnknownBlockType _filter;
}

@property(copy, nonatomic) CDUnknownBlockType filter; // @synthesize filter=_filter;
@property(readonly, nonatomic) id <MSForeignObjectProvider> provider; // @synthesize provider=_provider;
- (void).cxx_destruct;
- (id)buildCollectionWithFilter:(CDUnknownBlockType)arg1;
- (void)enumerateForeignObjects:(CDUnknownBlockType)arg1;
- (id)buildLibraryToSharedObjectMap;
- (id)initWithProvider:(id)arg1;

@end

@interface MSTiledLayerPile : NSObject <MSTiledLayerDelegate>
{
    double _zoomValue;
    id <MSRenderingContextCacheProvider> _renderingCacheProvider;
    NSView<MSTiledLayerPileHostView> *_hostView;
    NSMutableArray *_tiledLayers;
    MSImmutableDocumentData *_document;
    MSImmutablePage *_page;
    struct CGPoint _scrollOrigin;
}

@property(retain, nonatomic) MSImmutablePage *page; // @synthesize page=_page;
@property(retain, nonatomic) MSImmutableDocumentData *document; // @synthesize document=_document;
@property(retain, nonatomic) NSMutableArray *tiledLayers; // @synthesize tiledLayers=_tiledLayers;
@property(readonly, nonatomic) __weak NSView<MSTiledLayerPileHostView> *hostView; // @synthesize hostView=_hostView;
@property(retain, nonatomic) id <MSRenderingContextCacheProvider> renderingCacheProvider; // @synthesize renderingCacheProvider=_renderingCacheProvider;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
- (void).cxx_destruct;
- (void)tiledLayerDidRefreshTileContent:(id)arg1 finishTime:(unsigned long long)arg2;
- (void)tiledLayer:(id)arg1 requiresRedrawInRect:(struct CGRect)arg2;
- (void)tiledLayer:(id)arg1 didChangeToState:(unsigned long long)arg2;
@property(readonly, nonatomic) BOOL isRendering;
- (void)refreshContentForPage:(id)arg1 document:(id)arg2 quality:(long long)arg3;
- (void)refreshContentRect:(struct CGRect)arg1 forPage:(id)arg2 document:(id)arg3 quality:(long long)arg4;
- (void)redraw;
- (void)tile;
- (void)adaptToPixelGridChange;
@property(readonly, nonatomic) struct CGRect tiledRect;
- (void)zoomBy:(double)arg1 centeredOnViewPoint:(struct CGPoint)arg2;
- (void)scrollBy:(struct CGPoint)arg1;
- (void)clearAllSupercededTiledLayers;
- (void)removeAllTiledLayers;
- (void)removeObsoleteTiledLayers;
@property(readonly, nonatomic) NSArray *supercededTiledLayers;
@property(readonly, nonatomic) MSTiledLayer *currentTiledLayer;
- (void)addNewTiledLayer:(id)arg1;
- (id)prepareNewTiledLayerWithZoomValue:(double)arg1 scrollOrigin:(struct CGPoint)arg2 colorSpace:(id)arg3;
- (void)dealloc;
- (id)init;
- (id)initWithHostView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSnapItem : NSObject <SnapItem>
{
    MSLayer *_layer;
    struct CGRect _rectAtInit;
}

+ (id)snapLinesForLayer:(id)arg1;
+ (id)snapperObjectWithLayers:(id)arg1;
@property(nonatomic) struct CGRect rectAtInit; // @synthesize rectAtInit=_rectAtInit;
@property(retain, nonatomic) MSLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) id <SnapItem> snapItemForDrawing;
- (struct CGRect)distanceRectangleToItem:(id)arg1 axis:(unsigned long long)arg2;
@property(readonly, copy) NSString *description;
@property(nonatomic) struct CGRect rectForSnapping;
- (struct CGRect)boundsRect;
- (void)concatAncestorsAndSelfTransforms;
- (struct CGAffineTransform)preDrawingTransform;
- (void)refreshOverlayWithAbsoluteMargins:(struct CGSize)arg1;
- (double)rotation;
- (BOOL)shouldConstrainProportions;
- (BOOL)supportsResizingForSnapping;
- (struct CGRect)originalRect;
- (BOOL)shouldDrawDistanceOnSnapTo:(id)arg1;
- (id)otherLayersForSnapping;
- (id)otherLayersForSizeSnapping;
- (id)artboardForSnapping;
@property(readonly, nonatomic) NSArray *snapLines;
- (void)snapInBlock:(CDUnknownBlockType)arg1;
- (id)initWithLayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSClickGestureRecognizer : MSGestureRecognizer
{
    struct CGPoint _location;
    BOOL _isDrag;
    unsigned long long _buttonMask;
    long long _numberOfClicksRequired;
}

@property(nonatomic) BOOL isDrag; // @synthesize isDrag=_isDrag;
@property(nonatomic) long long numberOfClicksRequired; // @synthesize numberOfClicksRequired=_numberOfClicksRequired;
@property(nonatomic) unsigned long long buttonMask; // @synthesize buttonMask=_buttonMask;
- (void)mouseUp:(id)arg1 location:(struct CGPoint)arg2;
- (void)mouseDragged:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (void)mouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 modifierFlags:(unsigned long long)arg3;
- (void)setLocation:(struct CGPoint)arg1;
- (struct CGPoint)locationInLayer:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface AFAmazonS3RequestSerializer : AFHTTPRequestSerializer
{
    BOOL _useSSL;
    NSString *_bucket;
    NSString *_region;
    NSString *_sessionToken;
    NSString *_accessKey;
    NSString *_secret;
}

@property(copy, nonatomic) NSString *secret; // @synthesize secret=_secret;
@property(copy, nonatomic) NSString *accessKey; // @synthesize accessKey=_accessKey;
@property(nonatomic) BOOL useSSL; // @synthesize useSSL=_useSSL;
@property(copy, nonatomic) NSString *sessionToken; // @synthesize sessionToken=_sessionToken;
@property(copy, nonatomic) NSString *region; // @synthesize region=_region;
@property(copy, nonatomic) NSString *bucket; // @synthesize bucket=_bucket;
- (void).cxx_destruct;
- (id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (id)preSignedRequestWithRequest:(id)arg1 expiration:(id)arg2 error:(id *)arg3;
- (id)requestBySettingAuthorizationHeadersForRequest:(id)arg1 error:(id *)arg2;
@property(readonly, copy, nonatomic) NSURL *endpointURL;
- (void)setAccessKeyID:(id)arg1 secret:(id)arg2;
- (id)init;

@end

@interface MSColorSpaceConverter : NSObject <MSColorConverter>
{
    unsigned long long _oldColorSpace;
    unsigned long long _targetColorSpace;
    NSColorSpace *_oldNSColorSpace;
    NSColorSpace *_targetNSColorSpace;
}

@property(readonly, nonatomic) NSColorSpace *targetNSColorSpace; // @synthesize targetNSColorSpace=_targetNSColorSpace;
@property(readonly, nonatomic) NSColorSpace *oldNSColorSpace; // @synthesize oldNSColorSpace=_oldNSColorSpace;
@property(readonly, nonatomic) unsigned long long targetColorSpace; // @synthesize targetColorSpace=_targetColorSpace;
@property(readonly, nonatomic) unsigned long long oldColorSpace; // @synthesize oldColorSpace=_oldColorSpace;
- (void).cxx_destruct;
- (BOOL)shouldConvertImmutableColor:(id)arg1;
- (BOOL)shouldConvertColor:(id)arg1;
- (id)convertColor:(id)arg1;
- (id)convertImmutableColor:(id)arg1;
- (id)initForConversionFromColorSpace:(unsigned long long)arg1 to:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDataSupplier : NSObject <NSCoding>
{
    NSString *_dataName;
    unsigned long long _dataType;
    NSString *_dataIdentifier;
}

@property(readonly, nonatomic) NSString *dataIdentifier; // @synthesize dataIdentifier=_dataIdentifier;
@property(readonly, nonatomic) unsigned long long dataType; // @synthesize dataType=_dataType;
@property(readonly, nonatomic) NSString *dataName; // @synthesize dataName=_dataName;
- (void).cxx_destruct;
- (id)dataForItem:(id)arg1;
@property(readonly, nonatomic) BOOL valid;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToDataSupplier:(id)arg1;
- (unsigned long long)hash;
- (id)imageFileURLForDataItem:(id)arg1;
- (void)generateDataWithCount:(unsigned long long)arg1 dataSupplierManager:(id)arg2 dataApplier:(CDUnknownBlockType)arg3;
- (void)applyDataWithCount:(unsigned long long)arg1 data:(id)arg2 dataApplier:(CDUnknownBlockType)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataIdentifier:(id)arg1 dataName:(id)arg2 dataType:(unsigned long long)arg3;
- (BOOL)inAGroup;
- (id)dataNameWithoutGroup;
- (BOOL)inGroupWithName:(id)arg1;

@end

@interface MSShapeEditingBehavior : NSObject
{
    BOOL _isNewShape;
    BOOL _allowSelectionOnly;
    BOOL _allowClosingPathUsingMouse;
}

+ (void)initialize;
@property(nonatomic) BOOL allowClosingPathUsingMouse; // @synthesize allowClosingPathUsingMouse=_allowClosingPathUsingMouse;
@property(nonatomic) BOOL allowSelectionOnly; // @synthesize allowSelectionOnly=_allowSelectionOnly;
@property(readonly, nonatomic) BOOL isNewShape; // @synthesize isNewShape=_isNewShape;
- (BOOL)shouldClosePathWhenMouseDownOnHandleAtIndexPath:(id)arg1 modifierFlags:(unsigned long long)arg2 context:(id)arg3;
- (BOOL)canInsertPoints;
- (BOOL)isAddingPoints:(id)arg1;
- (void)dealloc;
- (id)initForDrawingNewShape:(BOOL)arg1;

@end

@interface MSSVGImporter : NSObject <MSImporter>
{
    SVGImporter *_importer;
    id _graph;
}

+ (id)svgImporter;
@property(retain, nonatomic) id graph; // @synthesize graph=_graph;
@property(retain, nonatomic) SVGImporter *importer; // @synthesize importer=_importer;
- (void).cxx_destruct;
- (BOOL)shouldCollapseSinglePage;
- (BOOL)shouldExpandPages;
- (id)secondPhaseSubtitleForValue:(long long)arg1 maximum:(long long)arg2;
- (id)firstPhaseSubtitle;
- (void)finishImporting;
- (id)importAsLayer;
- (void)importIntoPage:(id)arg1 name:(id)arg2 progress:(CDUnknownBlockType)arg3;
- (unsigned long long)prepareToImportFromData:(id)arg1;
- (unsigned long long)prepareToImportFromURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAveragingRenderMonitor : MSRenderMonitor
{
    long long _framesSinceStart;
    unsigned long long _start;
    NSTimer *_updateTimer;
}

@property(retain, nonatomic) NSTimer *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(nonatomic) unsigned long long start; // @synthesize start=_start;
- (void).cxx_destruct;
- (void)incrementFrames;
- (double)resetFrames;
- (void)runUpdateBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithUpdateBlock:(CDUnknownBlockType)arg1;

@end

@interface MSSnapDrawInstruction : NSObject
{
    NSNumberFormatter *_numberFormatter;
}

@property(retain, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=_numberFormatter;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (struct CGRect)rect;
- (void)drawWithZoom:(double)arg1 context:(id)arg2;

@end

@interface MSSnapDrawSizeInstruction : MSSnapDrawInstruction
{
    MSSnapItem *_item;
    unsigned long long _axis;
}

+ (id)sizeInstructionForLayer:(id)arg1 axis:(unsigned long long)arg2;
+ (id)sizeInstructionForItem:(id)arg1 axis:(unsigned long long)arg2;
@property(nonatomic) unsigned long long axis; // @synthesize axis=_axis;
@property(retain, nonatomic) MSSnapItem *item; // @synthesize item=_item;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (struct CGRect)rect;
- (void)drawWithZoom:(double)arg1 context:(id)arg2;

@end

@interface MSSnapDrawDistanceInstruction : MSSnapDrawInstruction
{
    NSArray *_items;
    unsigned long long _axis;
}

+ (id)distanceInstructionBetween:(id)arg1 axis:(unsigned long long)arg2;
@property(nonatomic) unsigned long long axis; // @synthesize axis=_axis;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (void)drawWithZoom:(double)arg1 context:(id)arg2;
- (struct CGRect)rect;

@end

@interface MSAlignLayersUnion : BCRect
{
    id _layers;
}

+ (id)unionWithLayers:(id)arg1;
@property(retain, nonatomic) id layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)makeOriginIntegral;
- (id)frame;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)absoluteRect;
- (BOOL)isLocked;

@end

@interface MSPluginDataSupplier : MSDataSupplier
{
    NSString *_pluginIdentifier;
    NSString *_commandIdentifier;
    NSString *_dynamicDataKey;
}

@property(readonly, nonatomic) NSString *dynamicDataKey; // @synthesize dynamicDataKey=_dynamicDataKey;
@property(readonly, nonatomic) NSString *commandIdentifier; // @synthesize commandIdentifier=_commandIdentifier;
@property(readonly, nonatomic) NSString *pluginIdentifier; // @synthesize pluginIdentifier=_pluginIdentifier;
- (void).cxx_destruct;
- (BOOL)valid;
- (id)imageFileURLForDataItem:(id)arg1;
- (void)generateDataWithCount:(unsigned long long)arg1 dataSupplierManager:(id)arg2 dataApplier:(CDUnknownBlockType)arg3;
- (id)feedIdentifier;
- (id)initWithPluginIdentifier:(id)arg1 commandIdentifier:(id)arg2 dataName:(id)arg3 dataTypeStringRepresentation:(id)arg4 dynamicDataKey:(id)arg5;

@end

@interface MSCloudShareUploadController : NSObject <SCKShareUploadDataSource>
{
    BOOL _cancelled;
    id <MSCloudShareUploadControllerDelegate> _delegate;
    SCKShare *_existingShare;
    id <MSCloudExportableDocument> _document;
    NSURL *_localURL;
    NSString *_name;
    MSWebExporter *_webExporter;
    SCKShareUploadOperation *_operation;
}

@property(retain, nonatomic) SCKShareUploadOperation *operation; // @synthesize operation=_operation;
@property(retain, nonatomic) MSWebExporter *webExporter; // @synthesize webExporter=_webExporter;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSURL *localURL; // @synthesize localURL=_localURL;
@property(nonatomic) __weak id <MSCloudExportableDocument> document; // @synthesize document=_document;
@property(readonly, nonatomic) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(retain, nonatomic) SCKShare *existingShare; // @synthesize existingShare=_existingShare;
@property(nonatomic) __weak id <MSCloudShareUploadControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)documentFileURLForShareUploadOperation:(id)arg1;
- (id)shareUploadOperation:(id)arg1 fileURLForItemWithHash:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)cancel;
- (id)loadManifest;
- (void)uploadManifest;
- (void)startUpload;
@property(readonly, nonatomic) NSProgress *progress;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSLayerSelector : NSObject
{
    MSLayerArray *_initialSelection;
}

@property(copy, nonatomic) MSLayerArray *initialSelection; // @synthesize initialSelection=_initialSelection;
- (void).cxx_destruct;
- (BOOL)shouldUseArtboardSelectionModeForRect:(struct CGRect)arg1 page:(id)arg2 extendSelection:(BOOL)arg3 options:(unsigned long long)arg4;
- (void)updateSelectionWithRect:(struct CGRect)arg1 page:(id)arg2 extendSelection:(BOOL)arg3 options:(unsigned long long)arg4;

@end

@interface MSDocumentationSearchEntry : NSObject
{
    BOOL _isDuplicateResult;
    NSDictionary *_data;
}

+ (void)markSearchEntriesAsDuplicates:(id)arg1;
+ (id)searchEntryWithDictionary:(id)arg1;
@property BOOL isDuplicateResult; // @synthesize isDuplicateResult=_isDuplicateResult;
@property(copy, nonatomic) NSDictionary *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (void)show;
- (BOOL)matchesSearchQuery:(id)arg1;
- (id)titles;

@end

@interface MSPointSnapperWorkings : NSObject
{
    BOOL _snapped;
    unsigned long long _axis;
    double _snapThreshold;
    double _snapLocation;
    double _guideStart;
    double _guideEnd;
    struct CGPoint _pointToSnap;
}

@property(readonly, nonatomic) double guideEnd; // @synthesize guideEnd=_guideEnd;
@property(readonly, nonatomic) double guideStart; // @synthesize guideStart=_guideStart;
@property(readonly, nonatomic) double snapLocation; // @synthesize snapLocation=_snapLocation;
@property(readonly, nonatomic) BOOL snapped; // @synthesize snapped=_snapped;
@property(nonatomic) double snapThreshold; // @synthesize snapThreshold=_snapThreshold;
@property(nonatomic) unsigned long long axis; // @synthesize axis=_axis;
@property(nonatomic) struct CGPoint pointToSnap; // @synthesize pointToSnap=_pointToSnap;
- (struct CGPoint)snapPoint:(struct CGPoint)arg1 andMakeGuide:(id *)arg2 forLayer:(id)arg3;
- (BOOL)trySnapToTarget:(id)arg1;
- (void)extendGuideToTarget:(id)arg1;

@end

@interface MSPointSnapper : NSObject
{
    BOOL _snapToRulerGuides;
    double _snapThreshold;
    unsigned long long _allowedAxes;
    NSArray *_snapTargets;
    NSArray *_rulerGuideTargets;
    MSPointSnapperWorkings *_xWorkings;
    MSPointSnapperWorkings *_yWorkings;
}

@property(readonly, nonatomic) MSPointSnapperWorkings *yWorkings; // @synthesize yWorkings=_yWorkings;
@property(readonly, nonatomic) MSPointSnapperWorkings *xWorkings; // @synthesize xWorkings=_xWorkings;
@property(nonatomic) BOOL snapToRulerGuides; // @synthesize snapToRulerGuides=_snapToRulerGuides;
@property(copy, nonatomic) NSArray *rulerGuideTargets; // @synthesize rulerGuideTargets=_rulerGuideTargets;
@property(copy, nonatomic) NSArray *snapTargets; // @synthesize snapTargets=_snapTargets;
@property(nonatomic) unsigned long long allowedAxes; // @synthesize allowedAxes=_allowedAxes;
@property(nonatomic) double snapThreshold; // @synthesize snapThreshold=_snapThreshold;
- (void).cxx_destruct;
- (void)snapToTargets:(id)arg1;
- (id)snapPoint:(struct CGPoint)arg1 inLayer:(id)arg2;
- (id)init;
- (void)configureRulerGuideTargetsForPage:(id)arg1;
- (id)targetForSnappingToHandleAtIndexPath:(id)arg1 location:(struct CGPoint)arg2 shape:(id)arg3 excluding:(id)arg4;
- (void)populateArray:(id)arg1 withTargetsForSnappingToMidpointOfLayer:(id)arg2;
- (id)targetsForMidpointsOfLayers:(id)arg1;
- (id)shapePointTargetsWithContext:(id)arg1 excludingPointsAtIndexPaths:(id)arg2;

@end

@interface MSDataMenuProvider : NSObject <NSMenuDelegate>
{
    MSDataSupplier *_lastDataSupplier;
    MSDataSupplierManager *_dataManager;
    id <MSDataMenuProviderDelegate> _delegate;
}

@property(nonatomic) __weak id <MSDataMenuProviderDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) MSDataSupplierManager *dataManager; // @synthesize dataManager=_dataManager;
@property(nonatomic) __weak MSDataSupplier *lastDataSupplier; // @synthesize lastDataSupplier=_lastDataSupplier;
- (void).cxx_destruct;
- (void)menuNeedsUpdate:(id)arg1;
- (id)sortedMenuItems:(id)arg1;
- (id)dataSuppliersForDataType:(unsigned long long)arg1;
- (id)dataSupplierGroupsForDataSuppliers:(id)arg1;
- (id)menuItemForDataSupplier:(id)arg1 indentationLevel:(long long)arg2;
- (id)menuItemsInGroup:(id)arg1 forDataSuppliers:(id)arg2;
- (id)menuItemsForDataSuppliers:(id)arg1 indentationLevel:(long long)arg2;
- (id)menuItemsForGroups:(id)arg1 indentationLevel:(long long)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)menuItemAction:(id)arg1;
- (id)submenuInMenuItems:(id)arg1 forGroup:(id)arg2;
- (BOOL)addDataSuppliersForType:(unsigned long long)arg1 toMenu:(id)arg2 typeTitle:(id)arg3;
- (void)updateMenu:(id)arg1;
- (void)updateOverridesMenu:(id)arg1;
- (id)overridesMenu;
- (id)menu;
- (id)initWithDataManager:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSArtboardOrderSorting : NSObject
{
}

+ (id)sortArtboardsInDefaultOrder:(id)arg1;
+ (id)sortArtboards:(id)arg1 inOrder:(unsigned long long)arg2;

@end

@interface MSShapeChangeContext : NSObject <NSCopying>
{
    NSArray *_layers;
    NSArray *_handleIndexPaths;
}

@property(readonly, copy, nonatomic) NSArray *handleIndexPaths; // @synthesize handleIndexPaths=_handleIndexPaths;
@property(readonly, copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGRect)rectOfSelectedPoints;
- (id)selectedHandlesSortedByAxis:(unsigned long long)arg1;
- (void)setLocation:(struct CGPoint)arg1 ofHandleAtIndexPath:(id)arg2;
- (struct CGPoint)locationOfHandleAtIndexPath:(id)arg1 inLayer:(id)arg2;
- (id)curvePointAtIndexPath:(id)arg1;
- (void)enumerateCurvePointsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSArray *orderedHandleIndexPaths;
- (id)initWithLayers:(id)arg1 handleIndexPaths:(id)arg2;

@end

@interface MSShapeChange : NSObject
{
    CDUnknownBlockType _block;
}

+ (id)customActionWithBlock:(CDUnknownBlockType)arg1;
+ (id)deleteHandle;
+ (id)distributeAlongAxis:(unsigned long long)arg1;
+ (id)alignToKey:(id)arg1;
+ (void)guessControlPointsForPointAtIndex:(unsigned long long)arg1 shape:(id)arg2;
+ (id)changeToCurveMode:(long long)arg1;
+ (id)nudgeWithKey:(unsigned short)arg1 distance:(double)arg2 flags:(unsigned long long)arg3;
+ (id)moveToLocation:(double)arg1 onAxis:(unsigned long long)arg2;
+ (id)moveByOffset:(struct CGSize)arg1 options:(long long)arg2;
+ (void)moveHandle:(unsigned long long)arg1 ofCurvePoint:(id)arg2 toLocation:(struct CGPoint)arg3 options:(long long)arg4;
+ (id)moveToPoint:(struct CGPoint)arg1 options:(long long)arg2;
- (void).cxx_destruct;
- (void)executeWithContext:(id)arg1;

@end

@interface MSForeignObjectMenuBuilder : MSSortableObjectMenuBuilder
{
    BOOL _requiresSymbolSubmenu;
    CDUnknownBlockType _filter;
    MSForeignObjectCollector *_collector;
}

+ (CDUnknownBlockType)filterForReplacingSymbolInstances:(id)arg1;
@property(retain, nonatomic) MSForeignObjectCollector *collector; // @synthesize collector=_collector;
@property(nonatomic) BOOL requiresSymbolSubmenu; // @synthesize requiresSymbolSubmenu=_requiresSymbolSubmenu;
@property(copy, nonatomic) CDUnknownBlockType filter; // @synthesize filter=_filter;
- (void).cxx_destruct;
- (id)buildMenuItemsForMenu:(id)arg1 withAction:(id)arg2;
- (id)buildMenuItemsForMenu:(id)arg1 withTarget:(id)arg2 selector:(SEL)arg3;
- (id)menuItemForLibrary:(id)arg1 mainMenu:(BOOL)arg2 target:(id)arg3 selector:(SEL)arg4;
- (id)gatherSymbolsForMenus;
- (id)initWithProvider:(id)arg1 delegate:(id)arg2;
- (id)initWithCollector:(id)arg1 delegate:(id)arg2;

@end

@interface MSResizeArtboardToFitValidator : NSObject
{
}

+ (BOOL)isValidForSelectedLayers:(id)arg1;

@end

@interface MSWebExporter : NSObject
{
    BOOL _selectiveExport;
    BOOL _includeDocument;
    BOOL _cancelled;
    MSDocumentData *_documentData;
    NSURL *_destinationURL;
    NSString *_name;
    MSCacheManager *_cacheManager;
    NSObject<OS_dispatch_queue> *_exportingQueue;
}

+ (id)fileURLWithHash:(id)arg1 inDirectory:(id)arg2;
+ (id)documentURLInDirectory:(id)arg1;
+ (void)exportDocument:(id)arg1 withName:(id)arg2 includeDocument:(BOOL)arg3 toLocalURL:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
+ (void)exportSelectedArtboardsOfDocument:(id)arg1 withName:(id)arg2 includeDocument:(BOOL)arg3 toLocalURL:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
@property(nonatomic) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *exportingQueue; // @synthesize exportingQueue=_exportingQueue;
@property(nonatomic) BOOL includeDocument; // @synthesize includeDocument=_includeDocument;
@property(nonatomic) BOOL selectiveExport; // @synthesize selectiveExport=_selectiveExport;
@property(retain, nonatomic) MSCacheManager *cacheManager; // @synthesize cacheManager=_cacheManager;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(retain, nonatomic) MSDocumentData *documentData; // @synthesize documentData=_documentData;
- (void).cxx_destruct;
- (BOOL)saveManifestFile:(id)arg1 withError:(id *)arg2;
- (id)imageRepresentationFromRootLayer:(id)arg1 onPage:(id)arg2 scale:(double)arg3;
- (id)exportedImageDataForRoot:(id)arg1 onPage:(id)arg2 scale:(double)arg3;
- (id)metadataForDocument:(id)arg1;
@property(readonly, nonatomic) unsigned long long documentFileSize;
- (void)callCompletionBlock:(CDUnknownBlockType)arg1 withDidExport:(BOOL)arg2 error:(id)arg3;
- (void)exportWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithDocument:(id)arg1 name:(id)arg2 includeDocument:(BOOL)arg3 localURL:(id)arg4;

@end

@interface MSSymbolPreviewGenerator : NSObject
{
}

+ (id)imageForSymbolAncestry:(id)arg1 withSize:(struct CGSize)arg2 colorSpace:(id)arg3 trimmed:(BOOL)arg4;
+ (id)imageRepForArtboardAncestry:(id)arg1 withSize:(struct CGSize)arg2 drawingRect:(struct CGRect)arg3 colorSpace:(id)arg4 trimmed:(BOOL)arg5;

@end

@interface MSSymbolPreviewGeneratorOperation : NSOperation <MSRenderingContextCacheProvider>
{
    MSImmutableLayerAncestry *_symbolAncestry;
    NSColorSpace *_colorSpace;
    CDUnknownBlockType _imageBlock;
    BCCache *_renderingCache;
    struct CGSize _size;
}

@property(retain, nonatomic) BCCache *renderingCache; // @synthesize renderingCache=_renderingCache;
@property(copy, nonatomic) CDUnknownBlockType imageBlock; // @synthesize imageBlock=_imageBlock;
@property(retain, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(retain, nonatomic) MSImmutableLayerAncestry *symbolAncestry; // @synthesize symbolAncestry=_symbolAncestry;
- (void).cxx_destruct;
@property(readonly, nonatomic) BCCache *zoomIndependentCache;
- (id)cacheForZoomLevel:(double)arg1;
- (void)main;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSToggleHUDAction : MSAction
{
}

- (id)label;
- (BOOL)hasDynamicTitle;
- (void)doPerformAction:(id)arg1;
- (id)mainHUD;
- (void)toggleHUD:(id)arg1;

@end

@interface MSSnapperData : NSObject
{
    NSMutableDictionary *_sizeItems;
    NSMutableDictionary *_distanceItems;
    NSMutableDictionary *_lines;
}

@property(retain, nonatomic) NSMutableDictionary *lines; // @synthesize lines=_lines;
@property(retain, nonatomic) NSMutableDictionary *distanceItems; // @synthesize distanceItems=_distanceItems;
@property(retain, nonatomic) NSMutableDictionary *sizeItems; // @synthesize sizeItems=_sizeItems;
- (void).cxx_destruct;
- (void)drawForGroup:(id)arg1 zoom:(double)arg2;
- (void)enumerateInstructions:(CDUnknownBlockType)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)linesForAxis:(unsigned long long)arg1;
- (void)removeAllDistanceInstructionsForAxis:(unsigned long long)arg1;
- (void)addDistanceInstruction:(id)arg1;
- (id)firstDistanceForAxis:(unsigned long long)arg1;
- (BOOL)hasDistanceInstructionsForAxis:(unsigned long long)arg1;
- (void)removeAllSizeInstructionsForAxis:(unsigned long long)arg1;
- (void)addSizeInstruction:(id)arg1;
- (id)firstSizeForAxis:(unsigned long long)arg1;
- (BOOL)hasSizeInstructionsForAxis:(unsigned long long)arg1;
- (id)axisDictionary;
- (id)init;

@end

@interface MSAssetLibraryUpdatingInfo : NSObject <NSCoding>
{
    NSURL *_downloadURL;
    NSString *_versionNumberForUpdate;
    unsigned long long _downloadSize;
    NSString *_libraryName;
    NSURL *_imageURL;
    MSFolderMonitor *_folderMonitor;
    NSURL *_shareLink;
}

@property(readonly, nonatomic) NSURL *shareLink; // @synthesize shareLink=_shareLink;
@property(retain, nonatomic) MSFolderMonitor *folderMonitor; // @synthesize folderMonitor=_folderMonitor;
@property(readonly, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(readonly, nonatomic) NSString *libraryName; // @synthesize libraryName=_libraryName;
@property(readonly, nonatomic) unsigned long long downloadSize; // @synthesize downloadSize=_downloadSize;
@property(readonly, nonatomic) NSString *versionNumberForUpdate; // @synthesize versionNumberForUpdate=_versionNumberForUpdate;
@property(readonly, nonatomic) NSURL *downloadURL; // @synthesize downloadURL=_downloadURL;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToAssetLibraryUpdatingInfo:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDownloadURL:(id)arg1 libraryName:(id)arg2 imageURL:(id)arg3 newVersionNumber:(id)arg4 shareLink:(id)arg5 downloadSize:(unsigned long long)arg6;

@end

@interface MSRemoteAssetLibrary : MSAssetLibrary
{
    BOOL _newUpdatingInfo;
    NSURL *_appcastURL;
    NSString *_libraryVersion;
    NSString *_originalName;
    NSString *_infoText;
    MSAssetLibraryUpdatingInfo *_updatingInfo;
}

+ (id)URLForApplicationSupportLibraryNamed:(id)arg1;
+ (id)assetLibraryFolder;
@property(retain, nonatomic) MSAssetLibraryUpdatingInfo *updatingInfo; // @synthesize updatingInfo=_updatingInfo;
@property(nonatomic) BOOL newUpdatingInfo; // @synthesize newUpdatingInfo=_newUpdatingInfo;
@property(retain, nonatomic) NSString *infoText; // @synthesize infoText=_infoText;
@property(copy, nonatomic) NSString *originalName; // @synthesize originalName=_originalName;
@property(retain, nonatomic) NSString *libraryVersion; // @synthesize libraryVersion=_libraryVersion;
@property(retain, nonatomic) NSURL *appcastURL; // @synthesize appcastURL=_appcastURL;
- (void).cxx_destruct;
- (id)previewURL;
- (void)resolveLocationOnDisk;
@property(readonly, nonatomic) BOOL downloadAvailable;
@property(readonly, nonatomic) BOOL updateAvailable;
- (unsigned long long)libraryType;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 appcastURL:(id)arg2 version:(id)arg3 infoText:(id)arg4;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentAtURL:(id)arg1;

@end

@interface MSTextSnapItem : MSSnapItem
{
}

+ (id)snapLinesForLayer:(id)arg1;
- (double)xHeight;
- (double)baseline;
- (BOOL)supportsResizingForSnapping;

@end

@interface MSTiledLayer : CALayer <MSTilePlacerDelegate>
{
    BOOL _isRendering;
    double _zoomLevel;
    id <MSTiledLayerDelegate> _tiledLayerDelegate;
    unsigned long long _state;
    double _renderingZoomLevel;
    NSColorSpace *_colorSpace;
    MSCGContextPool *_contextPool;
    id <MSRenderingContextCacheProvider> _renderingCacheProvider;
    MSRenderingDriver *_driver;
    MSTilePlacer *_tilePlacer;
    NSSet *_renderingTiles;
    CDUnknownBlockType _tileRenderingCompletion;
    NSOperationQueue *_renderingQueue;
    MSTileUpdateOperation *_layerUpdateOperation;
    struct CGPoint _scrollOrigin;
    struct CGRect _viewBounds;
}

@property(retain, nonatomic) MSTileUpdateOperation *layerUpdateOperation; // @synthesize layerUpdateOperation=_layerUpdateOperation;
@property(retain, nonatomic) NSOperationQueue *renderingQueue; // @synthesize renderingQueue=_renderingQueue;
@property(copy, nonatomic) CDUnknownBlockType tileRenderingCompletion; // @synthesize tileRenderingCompletion=_tileRenderingCompletion;
@property(retain, nonatomic) NSSet *renderingTiles; // @synthesize renderingTiles=_renderingTiles;
@property(retain, nonatomic) MSTilePlacer *tilePlacer; // @synthesize tilePlacer=_tilePlacer;
@property(readonly, nonatomic) MSRenderingDriver *driver; // @synthesize driver=_driver;
@property(retain, nonatomic) id <MSRenderingContextCacheProvider> renderingCacheProvider; // @synthesize renderingCacheProvider=_renderingCacheProvider;
@property(retain, nonatomic) MSCGContextPool *contextPool; // @synthesize contextPool=_contextPool;
@property(nonatomic) BOOL isRendering; // @synthesize isRendering=_isRendering;
@property(readonly, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(nonatomic) struct CGRect viewBounds; // @synthesize viewBounds=_viewBounds;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
@property(nonatomic) double renderingZoomLevel; // @synthesize renderingZoomLevel=_renderingZoomLevel;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) __weak id <MSTiledLayerDelegate> tiledLayerDelegate; // @synthesize tiledLayerDelegate=_tiledLayerDelegate;
@property(nonatomic) double zoomLevel; // @synthesize zoomLevel=_zoomLevel;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopObservingRenderingTiles;
- (void)observeRenderingOfTiles:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)transitionFromState:(unsigned long long)arg1 toState:(unsigned long long)arg2;
- (void)replace;
- (void)prepare;
- (void)clear;
- (BOOL)makeCurrentIfPossible;
- (void)concatTransform:(struct CATransform3D)arg1;
- (BOOL)isRenderable;
- (BOOL)isRenderableOrNew;
- (void)scrollBy:(struct CGPoint)arg1;
- (void)zoomBy:(double)arg1 centeredOnViewPoint:(struct CGPoint)arg2;
- (void)zoomBy:(double)arg1;
- (struct CGPoint)midPoint;
- (void)tilePlacer:(id)arg1 requiresRedrawInRect:(struct CGRect)arg2;
- (double)tileContentLayerScale;
@property(readonly, nonatomic) long long renderingQuality;
- (void)removeOffscreenTiles;
- (void)adaptToColorSpaceChange;
- (void)adaptToPixelGridChange;
@property(readonly, nonatomic) struct CGRect tiledRect;
@property(readonly, nonatomic) unsigned long long tileCount;
- (BOOL)shouldDrawPixelated;
- (void)refreshContentForPage:(id)arg1 document:(id)arg2 quality:(long long)arg3;
- (void)tileUpdateOperationDidComplete:(id)arg1;
- (void)refreshContentRect:(struct CGRect)arg1 forPage:(id)arg2 document:(id)arg3 quality:(long long)arg4;
- (id)actionForKey:(id)arg1;
- (void)setupContextPool;
- (void)dealloc;
- (id)initWithDriver:(id)arg1 zoomLevel:(double)arg2 scrollOrigin:(struct CGPoint)arg3 viewBounds:(struct CGRect)arg4 colorSpace:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSVectorHandleStateDecider : NSObject
{
    long long _visibilityAroundSelectedHandles;
    long long _visibilityAroundHighlight;
    MSShapeChangeContext *_selectionContext;
    NSIndexPath *_indexPathForHighlightedComponent;
}

@property(copy, nonatomic) NSIndexPath *indexPathForHighlightedComponent; // @synthesize indexPathForHighlightedComponent=_indexPathForHighlightedComponent;
@property(copy, nonatomic) MSShapeChangeContext *selectionContext; // @synthesize selectionContext=_selectionContext;
@property(nonatomic) long long visibilityAroundHighlight; // @synthesize visibilityAroundHighlight=_visibilityAroundHighlight;
@property(nonatomic) long long visibilityAroundSelectedHandles; // @synthesize visibilityAroundSelectedHandles=_visibilityAroundSelectedHandles;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)indexPathOfHandleAtPoint:(struct CGPoint)arg1 tolerance:(double)arg2;
- (unsigned long long)stateOfCurvePointAtIndexPath:(id)arg1 curveToState:(unsigned long long *)arg2 curveFromState:(unsigned long long *)arg3;
- (BOOL)isCurveAdjustmentHandleVisibleDueToHighlightedHandle:(id)arg1;
- (BOOL)isCurveAdjustmentHandleVisibleDueToSelectedHandles:(id)arg1;
- (BOOL)isHandleAtIndexPath:(id)arg1 relevantToSegmentAtIndexPath:(id)arg2;
- (BOOL)isHandleAtIndexPathVisible:(id)arg1;
- (id)indexPathOfPointAfterIndexPath:(id)arg1;
- (id)indexPathOfPointBeforeIndexPath:(id)arg1;
- (BOOL)isCurvePointAtIndexPathSelected:(id)arg1;
- (unsigned long long)highlightedOrSelectedStateForHandleAtIndexPath:(id)arg1;
- (BOOL)isHandleAtIndexPathSelected:(id)arg1;
- (void)reset;
- (id)init;

@end

@interface MSSortableObjectMenuBuilder : NSObject <NSMenuDelegate>
{
    NSMutableDictionary *_collatedImages;
    id <MSMenuBuilderDelegate> _delegate;
}

@property(readonly, nonatomic) __weak id <MSMenuBuilderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)validateMenuItem:(id)arg1;
- (void)prepareForDisplay:(id)arg1;
- (void)updateImages;
@property(readonly, nonatomic) NSMutableDictionary *collatedImages; // @synthesize collatedImages=_collatedImages;
- (void)menuWillOpen:(id)arg1;
- (id)menuItemWithName:(id)arg1 target:(id)arg2 selector:(SEL)arg3 sharedObjects:(id)arg4;
- (id)sharedObjectsFromDescriptorsContents:(id)arg1;
- (id)menuItemsForSortedSharedObjects:(id)arg1 selectedObjects:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
- (id)menuItemsForSortableObjects:(id)arg1 selectedObjects:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
- (void)addSortedSharedObjects:(id)arg1 selectedObjects:(id)arg2 toMenu:(id)arg3 target:(id)arg4 selector:(SEL)arg5;
- (void)selectMenuItemsInPopUpButton:(id)arg1 selectedObjects:(id)arg2;
- (void)addSortableObjects:(id)arg1 selectedObjects:(id)arg2 toPopUpButton:(id)arg3 target:(id)arg4 selector:(SEL)arg5;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSContentCALayer : MSRenderingCALayer
{
}

- (id)init;

@end

@interface MSTileUpdateOperation : NSOperation
{
    MSTiledLayer *_tiledLayer;
    unsigned long long _finishTime;
    NSMapTable *_operationsToTilesMapTable;
}

+ (void)layerContentsUpdateThreadMain;
+ (void)initialize;
@property(retain, nonatomic) NSMapTable *operationsToTilesMapTable; // @synthesize operationsToTilesMapTable=_operationsToTilesMapTable;
@property(nonatomic) unsigned long long finishTime; // @synthesize finishTime=_finishTime;
@property(readonly, nonatomic) __weak MSTiledLayer *tiledLayer; // @synthesize tiledLayer=_tiledLayer;
- (void).cxx_destruct;
- (void)cancel;
- (void)main;
- (void)addRenderOperation:(id)arg1 forTile:(id)arg2;
- (id)initWithTiledLayer:(id)arg1;
- (id)init;

@end

@interface MSHistory : NSObject
{
    BOOL _allowsCoalescingOfMomentsCloseInTime;
    NSMutableArray *_moments;
    long long _indexOfCurrentMoment;
}

@property(nonatomic) long long indexOfCurrentMoment; // @synthesize indexOfCurrentMoment=_indexOfCurrentMoment;
@property(retain, nonatomic) NSMutableArray *moments; // @synthesize moments=_moments;
@property(nonatomic) BOOL allowsCoalescingOfMomentsCloseInTime; // @synthesize allowsCoalescingOfMomentsCloseInTime=_allowsCoalescingOfMomentsCloseInTime;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long numberOfMoments;
@property(readonly, nonatomic) BOOL canProgressToNextMoment;
- (BOOL)progressToNextMoment;
- (void)commitCurrentMoment;
@property(readonly, nonatomic) BOOL canRevertToPreviousMoment;
- (BOOL)revertToPreviousMoment;
@property(readonly, nonatomic) MSMoment *nextMoment;
@property(readonly, nonatomic) MSMoment *previousMoment;
@property(readonly, nonatomic) MSMoment *currentMoment;
- (unsigned long long)addMomentWithTitle:(id)arg1 documentData:(id)arg2 adaptability:(unsigned long long)arg3;
- (unsigned long long)addMomentWithTitle:(id)arg1 documentData:(id)arg2;
- (void)removeFutureMoments;
- (BOOL)pagesListChangedFromMoment:(id)arg1 toMoment:(id)arg2;
- (BOOL)onlyPageSwitchedFromMoment:(id)arg1 toMoment:(id)arg2;
- (unsigned long long)addMoment:(id)arg1;
- (id)init;
- (id)initWithInitialMoment:(id)arg1;

@end

@interface MSLayerListController : MSSidebarListController <BCOutlineViewDataSource, BCOutlineViewDelegate>
{
    NSMutableSet *_layersRequiringPreviewRefresh;
    long long _numberOfLayersRequiringPreviewRefresh;
}

@property long long numberOfLayersRequiringPreviewRefresh; // @synthesize numberOfLayersRequiringPreviewRefresh=_numberOfLayersRequiringPreviewRefresh;
@property(retain, nonatomic) NSMutableSet *layersRequiringPreviewRefresh; // @synthesize layersRequiringPreviewRefresh=_layersRequiringPreviewRefresh;
- (void).cxx_destruct;
- (Class)pasteboardWriterClass;
- (void)dataController:(id)arg1 refreshPreviewsOnNodes:(id)arg2;
- (void)dataController:(id)arg1 hoverNodeDidChangeTo:(id)arg2;
- (id)dataController:(id)arg1 menuItemsForSelectedObjects:(id)arg2;
- (void)dataController:(id)arg1 handleBadgePressedOnNode:(id)arg2 withAltState:(BOOL)arg3;
- (void)dataController:(id)arg1 updateNode:(id)arg2 expandedState:(unsigned long long)arg3;
- (long long)mapExpandedStateToLayerListStatus:(unsigned long long)arg1;
- (BOOL)dataController:(id)arg1 isNodeExpandable:(id)arg2;
- (BOOL)dataController:(id)arg1 isNodeExpanded:(id)arg2;
- (void)dataController:(id)arg1 changeSelectionTo:(id)arg2;
- (BOOL)dataController:(id)arg1 isNodeSelected:(id)arg2;
- (id)layerForNode:(id)arg1;
- (id)dataController:(id)arg1 childrenOfNode:(id)arg2;
- (id)rootObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDocumentationSearcher : NSObject <NSUserInterfaceItemSearching>
{
    NSOperationQueue *_queue;
    NSArray *_searchEntries;
}

@property(retain) NSArray *searchEntries; // @synthesize searchEntries=_searchEntries;
@property(retain) NSOperationQueue *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (id)downloadRequest;
- (id)localizedTitlesForItem:(id)arg1;
- (void)performActionForItem:(id)arg1;
- (void)addSearchOperationForItemsWithSearchString:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)addDownloadOperation;
- (void)searchForItemsWithSearchString:(id)arg1 resultLimit:(long long)arg2 matchedItemHandler:(CDUnknownBlockType)arg3;
- (void)documentationMightHaveChanged;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSBooleanOperations : NSObject
{
}

+ (void)convertLineToOutline:(id)arg1;
+ (void)convertLinesToOutlinesInShape:(id)arg1;
+ (void)resetSubPathsBooleanOperationsTo:(long long)arg1 onLayers:(id)arg2;
+ (void)applyBooleanOperation:(long long)arg1 toShape:(id)arg2;
+ (void)applyNameToChildren:(id)arg1;
+ (void)mergeShapes:(id)arg1 withShape:(id)arg2 usingBooleanOp:(long long)arg3;
+ (void)finishFinalShape:(id)arg1;
+ (void)prepareLayers:(id)arg1;
+ (void)doBooleanOperation:(long long)arg1 onLayers:(id)arg2;
+ (BOOL)layersContainShapePaths:(id)arg1;
+ (void)booleanOperation:(long long)arg1 onLayers:(id)arg2;
+ (id)historyMomentTitleForOperation:(long long)arg1 onLayers:(id)arg2;

@end

@interface MSShareableObjectReference : NSObject <BCSortable, MSSharedObjectStyling>
{
    MSAssetLibrary *_sourceLibrary;
    struct MSModelObject *_shareableObject;
}

+ (id)referenceForShareableObject:(struct MSModelObject *)arg1 inLibrary:(id)arg2;
+ (id)referenceForShareableObject:(struct MSModelObject *)arg1;
@property(retain, nonatomic) MSModelObject<BCSortable><MSSharedObjectStyling> *shareableObject; // @synthesize shareableObject=_shareableObject;
@property(retain, nonatomic) MSAssetLibrary *sourceLibrary; // @synthesize sourceLibrary=_sourceLibrary;
- (void).cxx_destruct;
- (void)applyStyleToMenuItem:(id)arg1 withColorSpace:(id)arg2;
- (id)generatePreviewForManageSheetWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)generatePreviewForPopup:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)generatePreviewForMenuItem:(id)arg1 withColorSpace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSString *locationPath;
@property(readonly, nonatomic) NSString *name;
- (BOOL)isEqual:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPasteboardImageProvider : NSObject
{
    NSOperationQueue *_queue;
    MSExportRequest *_request;
    NSData *_data;
}

+ (void)preparePasteboard:(id)arg1 withExportRequest:(id)arg2;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(copy, nonatomic) MSExportRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
@property(readonly, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;

@end

@interface MSDataSupplierManager : NSObject <MSLocalDataSupplierDelegate>
{
    id <MSDataSupplierManagerDelegate> _delegate;
    NSString *_objectID;
    NSMutableArray *_pluginData;
    NSMutableArray *_localData;
    NSMutableDictionary *_replyContexts;
}

+ (BOOL)validLocalDataFileSystemURL:(id)arg1;
+ (id)makeObjectID;
@property(retain, nonatomic) NSMutableDictionary *replyContexts; // @synthesize replyContexts=_replyContexts;
@property(retain, nonatomic) NSMutableArray *localData; // @synthesize localData=_localData;
@property(retain, nonatomic) NSMutableArray *pluginData; // @synthesize pluginData=_pluginData;
@property(readonly, copy, nonatomic) NSString *objectID; // @synthesize objectID=_objectID;
@property(readonly, nonatomic) __weak id <MSDataSupplierManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)postLocalDataSupplierChangeNotification;
- (void)locaDataSupplierDataChanged:(id)arg1;
- (void)loadLocalData;
- (void)saveLocalData;
- (void)removeLocalData:(id)arg1;
- (void)addLocalData:(id)arg1;
@property(readonly, nonatomic) NSArray *localDataSuppliers;
@property(readonly, nonatomic) NSArray *dataSuppliers;
- (void)supplyData:(id)arg1 forKey:(id)arg2;
- (void)requestDataFromPluginDataSupplier:(id)arg1 numberOfItems:(unsigned long long)arg2 applierBlock:(CDUnknownBlockType)arg3;
- (void)deregisterDataSuppliersForPluginWithIdentifier:(id)arg1;
- (void)registerPluginDataSupplier:(id)arg1 withName:(id)arg2 dataType:(id)arg3 pluginIdentifier:(id)arg4 commandIdentifier:(id)arg5;
- (void)setPluginDataReplyContext:(id)arg1 forDataKey:(id)arg2;
- (id)initWithDelegate:(id)arg1;

@end

@interface MSPasteboardTextWriting : NSObject
{
}

+ (BOOL)writeAttributedString:(id)arg1 toPasteboard:(id)arg2 type:(id)arg3 documentColorSpace:(id)arg4;
+ (id)supportedTypes;

@end

@interface MSImageSizeReducer : NSObject
{
}

+ (id)showImageReductionWarningForWindow:(id)arg1 fileSizeDifference:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)showWaitingSheetForWindow:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
+ (id)showUnableToReduceAlert:(id)arg1;
+ (void)setResizedData:(id)arg1 originalData:(id)arg2 forOwners:(id)arg3;
+ (id)largestSizeForImagesMapTableFromOwners:(id)arg1;
+ (void)reduceImageSizeOfLayers:(id)arg1 windowForSheet:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface MSNetworkHelper : NSObject
{
}

+ (id)currentIPv4Address;
+ (id)currentSubnet;
+ (BOOL)isValidIPWithPort:(id)arg1;
+ (BOOL)isValidIP:(id)arg1;

@end

@interface MSHUDWindowController : NSWindowController <NSWindowDelegate>
{
    NSView *_hudView;
    MSHUDViewController *_hudViewController;
}

+ (id)makeHUD;
@property(retain, nonatomic) MSHUDViewController *hudViewController; // @synthesize hudViewController=_hudViewController;
@property(nonatomic) __weak NSView *hudView; // @synthesize hudView=_hudView;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL isVisible;
- (void)toggle;
- (void)trackIfDocumentWindow:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)unregisterForNotifications;
- (void)registerForNotifications;
- (void)windowDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDataSupplierFileSystemMonitor : MSFolderMonitor
{
}

- (unsigned int)flags;
- (id)initWithURL:(id)arg1 contentsChangedBlock:(CDUnknownBlockType)arg2;

@end

@interface MSLocalDataSupplier : MSDataSupplier
{
    NSURL *_dataSource;
    id <MSLocalDataSupplierDelegate> _delegate;
    MSFolderMonitor *_folderMonitor;
    NSArray *_data;
}

+ (id)validImageFileUTIs;
+ (id)imageFileNamesFromFolderURL:(id)arg1;
+ (id)textDataFromFileURL:(id)arg1;
@property(retain, nonatomic) NSArray *data; // @synthesize data=_data;
@property(retain, nonatomic) MSFolderMonitor *folderMonitor; // @synthesize folderMonitor=_folderMonitor;
@property(nonatomic) __weak id <MSLocalDataSupplierDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSURL *dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)respondToContentChanged;
- (id)arrayWithCount:(unsigned long long)arg1 fromArray:(id)arg2;
- (void)makeTextDataFileSystemMonitor;
- (void)makeImageDataFileSystemMonitor;
- (void)makeFolderMonitor;
- (id)imageFileURLForDataItem:(id)arg1;
- (void)generateDataWithCount:(unsigned long long)arg1 dataSupplierManager:(id)arg2 dataApplier:(CDUnknownBlockType)arg3;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)valid;
- (id)initWithCoder:(id)arg1;
- (id)initWithFileSystemURL:(id)arg1;

@end

@interface MSLine : NSObject
{
    struct CGRect _area;
    BOOL _areaIsInitial;
    unsigned long long _axis;
    double _position;
    unsigned long long _snapTag;
    id _associatedObject;
    Class _snapClass;
}

+ (id)lineOnAxis:(unsigned long long)arg1 position:(double)arg2 inRect:(struct CGRect)arg3 snapTag:(unsigned long long)arg4 snapClass:(Class)arg5 associatedObject:(id)arg6;
+ (id)linesForRect:(struct CGRect)arg1 associatedObject:(id)arg2;
+ (id)verticalLineWithPosition:(double)arg1;
+ (id)horizontalLineWithPosition:(double)arg1;
@property(retain, nonatomic) Class snapClass; // @synthesize snapClass=_snapClass;
@property(nonatomic) __weak id associatedObject; // @synthesize associatedObject=_associatedObject;
@property(readonly, nonatomic) unsigned long long snapTag; // @synthesize snapTag=_snapTag;
@property(nonatomic) double position; // @synthesize position=_position;
@property(nonatomic) unsigned long long axis; // @synthesize axis=_axis;
- (void).cxx_destruct;
- (id)description;
- (struct CGRect)dirtyAbsoluteRectInFrame:(struct CGRect)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)drawWithZoomValue:(double)arg1;
- (void)addRect:(struct CGRect)arg1;
- (id)initOnAxis:(unsigned long long)arg1 position:(double)arg2 rect:(struct CGRect)arg3 snapTag:(unsigned long long)arg4 snapClass:(Class)arg5 associatedObject:(id)arg6;

@end

@interface MSAutoCappingNumberFormatter : MSMathNumberFormatter
{
}

- (id)uncappedFormatter;
- (id)cappedValueForString:(id)arg1 errorDescription:(out id *)arg2;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;

@end

@interface MSColorReplacementConverter : NSObject <MSColorConverter>
{
    BOOL _ignoreAlphaWhenMatching;
    BOOL _replaceAlphaOfOriginalColor;
    MSColor *_color;
    NSColorSpace *_colorSpace;
    MSImmutableColor *_immutableColor;
    MSImmutableColor *_immutableReplacementColor;
    MSColor *_replacementColor;
}

@property(readonly, nonatomic) MSColor *replacementColor; // @synthesize replacementColor=_replacementColor;
@property(readonly, nonatomic) BOOL replaceAlphaOfOriginalColor; // @synthesize replaceAlphaOfOriginalColor=_replaceAlphaOfOriginalColor;
@property(readonly, nonatomic) MSImmutableColor *immutableReplacementColor; // @synthesize immutableReplacementColor=_immutableReplacementColor;
@property(readonly, nonatomic) MSImmutableColor *immutableColor; // @synthesize immutableColor=_immutableColor;
@property(readonly, nonatomic) BOOL ignoreAlphaWhenMatching; // @synthesize ignoreAlphaWhenMatching=_ignoreAlphaWhenMatching;
@property(readonly, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(readonly, nonatomic) MSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (BOOL)shouldConvertImmutableColor:(id)arg1;
- (BOOL)shouldConvertColor:(id)arg1;
- (id)convertImmutableColor:(id)arg1;
- (id)convertColor:(id)arg1;
- (id)initWithColor:(id)arg1 replacementColor:(id)arg2 colorSpace:(id)arg3 ignoreAlphaWhenMatching:(BOOL)arg4 replaceAlphaOfOriginalColor:(BOOL)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSMoment : NSObject
{
    double _timestamp;
    NSString *_title;
    MSImmutableDocumentData *_document;
    unsigned long long _adaptability;
}

@property(nonatomic) unsigned long long adaptability; // @synthesize adaptability=_adaptability;
@property(retain, nonatomic) MSImmutableDocumentData *document; // @synthesize document=_document;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (id)init;
- (id)initWithTitle:(id)arg1 documentData:(id)arg2;

@end

@interface MSTilePlacer : NSObject
{
    id <MSTilePlacerDelegate> _delegate;
    MSTiledLayer *_tiledLayer;
    NSMutableDictionary *_tiles;
    struct CGPoint _scrollOrigin;
    struct CGRect _viewBounds;
}

@property(retain, nonatomic) NSMutableDictionary *tiles; // @synthesize tiles=_tiles;
@property(nonatomic) __weak MSTiledLayer *tiledLayer; // @synthesize tiledLayer=_tiledLayer;
@property(nonatomic) struct CGRect viewBounds; // @synthesize viewBounds=_viewBounds;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
@property(nonatomic) __weak id <MSTilePlacerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (id)allTileIDs;
- (id)allTiles;
- (id)idForTile:(id)arg1;
- (void)setPositionForTile:(id)arg1 withID:(id)arg2;
- (id)makeNewTilesWithIDs:(id)arg1;
- (void)addTiles:(id)arg1 shouldRedraw:(BOOL)arg2;
- (void)addMissingTilesFrom:(id)arg1;
- (void)unregisterTilesWithIDs:(id)arg1;
- (void)removeTilesWithIDsFromSuperLayer:(id)arg1;
- (void)removeTilesWithIDs:(id)arg1;
- (void)removeTilesNotIncludedIn:(id)arg1;
- (double)normaliseOriginValue:(double)arg1;
- (struct CGPoint)originForFirstTile;
- (BOOL)shouldDrawPixelated;
- (double)tileSize;
- (id)identifiersOfVisibleTilesIncludingMargin:(BOOL)arg1;
- (void)repositionExistingTiles;
- (void)tileRemovingOffscreenTiles:(BOOL)arg1;
- (void)cancelAllDrawing;
- (void)moveTiles;
- (id)initWithTiledLayer:(id)arg1;
- (id)init;

@end

@interface MSTextColorProvider : NSObject
{
    MSImmutableColor *_textColor;
    NSColor *_color;
    NSColorSpace *_colorSpace;
    NSArray *_ranges;
}

@property(readonly, copy, nonatomic) NSArray *ranges; // @synthesize ranges=_ranges;
@property(readonly, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(readonly, nonatomic) NSColor *color; // @synthesize color=_color;
@property(readonly, nonatomic) MSImmutableColor *textColor; // @synthesize textColor=_textColor;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)initWithTextColor:(id)arg1 colorSpace:(id)arg2 ranges:(id)arg3;

@end

@interface MSClosePathChange : MSShapeChange
{
}

+ (id)toggleClosePath;
- (id)titleForContext:(id)arg1;
- (BOOL)validateWithContext:(id)arg1;
- (void)executeWithContext:(id)arg1;

@end

@interface MSPasteboardLayerListImageProvider : NSObject
{
}

+ (void)addLayer:(id)arg1 toPasteboard:(id)arg2;

@end

@interface MSPasteboardFileDataProvider : NSObject
{
    NSArray *_layers;
}

+ (id)buildExportRequestsForLayers:(id)arg1 inFolder:(id)arg2;
+ (id)uniqueExportURLForLayer:(id)arg1 inFolder:(id)arg2 comparingTo:(id)arg3;
+ (id)extensionForExportingLayer:(id)arg1;
+ (id)exportLayers:(id)arg1 toFolder:(id)arg2;
+ (void)addLayers:(id)arg1 toPasteboard:(id)arg2;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;

@end

@interface MSPasteboardTextReader : NSObject <MSPasteboardReader>
{
}

- (id)pasteboardDataFromPasteboard:(id)arg1 colorSpace:(id)arg2 options:(unsigned long long)arg3 sender:(id)arg4;
- (id)attributedStringFromPasteboard:(id)arg1 options:(unsigned long long)arg2;
- (id)supportedPasteboardTypes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSViewPort : NSObject
{
    double _zoomValue;
    struct CGPoint _scrollOrigin;
}

+ (double)cappedZoom:(double)arg1;
+ (double)minimumZoomValue;
+ (double)maximumZoomValue;
+ (id)viewPortWithScrollOrigin:(struct CGPoint)arg1 zoom:(double)arg2;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
- (id)description;
- (BOOL)isEqual:(id)arg1;

@end

@interface MSRectSnapItem : MSSnapItem
{
    BOOL _constrainProportions;
    NSArray *_layersForSnapping;
    struct CGRect _storedRect;
}

+ (id)snapperObjectWithRect:(struct CGRect)arg1 layer:(id)arg2;
@property(nonatomic) struct CGRect storedRect; // @synthesize storedRect=_storedRect;
@property(retain, nonatomic) NSArray *layersForSnapping; // @synthesize layersForSnapping=_layersForSnapping;
- (void).cxx_destruct;
@property(nonatomic) BOOL shouldConstrainProportions;
- (void)setRectForSnapping:(struct CGRect)arg1;
- (struct CGRect)rectForSnapping;
- (struct CGRect)boundsRect;
- (void)concatAncestorsAndSelfTransforms;
- (struct CGAffineTransform)preDrawingTransform;
- (void)refreshOverlayWithAbsoluteMargins:(struct CGSize)arg1;
- (double)rotation;
- (BOOL)supportsResizingForSnapping;
- (struct CGRect)originalRect;
- (id)artboardForSnapping;
- (id)snapLines;
- (id)snapItemForDrawing;
- (void)snapInBlock:(CDUnknownBlockType)arg1;
- (id)otherLayersForSnapping;
- (id)otherLayersForSizeSnapping;

@end

@interface MSSnapper : NSObject
{
    BOOL _useAlignmentGuides;
    double _zoomValue;
    MSSnapperData *_snapperData;
}

@property(retain, nonatomic) MSSnapperData *snapperData; // @synthesize snapperData=_snapperData;
@property(nonatomic) BOOL useAlignmentGuides; // @synthesize useAlignmentGuides=_useAlignmentGuides;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
- (void).cxx_destruct;
- (id)snapsForItems:(id)arg1 skipLayers:(id)arg2;
- (void)snapItem:(id)arg1 lines:(id)arg2 visible:(BOOL)arg3 snap:(unsigned long long)arg4 resize:(BOOL)arg5 edgesMask:(long long)arg6;
- (void)snapItem:(id)arg1 toLines:(id)arg2 visible:(BOOL)arg3 snap:(unsigned long long)arg4 resize:(BOOL)arg5 edges:(unsigned long long)arg6;
- (void)changeSnapItem:(id)arg1 forLine:(id)arg2 visible:(BOOL)arg3 direction:(unsigned long long)arg4 snap:(unsigned long long)arg5 block:(CDUnknownBlockType)arg6;
- (void)snapItem:(id)arg1 snap:(unsigned long long)arg2 resize:(BOOL)arg3 rulersVisible:(BOOL)arg4 edges:(unsigned long long)arg5;
- (id)snapLayerKeys:(id)arg1 rulersVisible:(BOOL)arg2;
- (id)snapItemDuringResize:(id)arg1 rulersVisible:(BOOL)arg2 edges:(unsigned long long)arg3;
- (id)snapItemDuringMove:(id)arg1 allowSnaps:(unsigned long long)arg2 rulersVisible:(BOOL)arg3;
- (void)snapItemSize:(id)arg1 onAxis:(unsigned long long)arg2 snap:(unsigned long long)arg3 edges:(long long)arg4;
- (void)collectSnapsForItem:(id)arg1 withLayer:(id)arg2 onAxis:(unsigned long long)arg3 snap:(unsigned long long)arg4;
- (unsigned long long)snapLayerSize:(id)arg1 snap:(unsigned long long)arg2 edges:(long long)arg3;
- (BOOL)rect:(struct CGRect)arg1 isOnLineWithRect:(struct CGRect)arg2 inDirection:(unsigned long long)arg3;
- (struct CGRect)rectBySnappingRect:(struct CGRect)arg1 toClosestDistance:(struct CGRect)arg2 inDirection:(unsigned long long)arg3 mayResize:(BOOL)arg4;
- (id)findClosestDistanceMatchForItem:(id)arg1 againstItems:(id)arg2 direction:(unsigned long long)arg3;
- (void)snapItem:(id)arg1 againstItems:(id)arg2 inDirection:(unsigned long long)arg3 resize:(BOOL)arg4;
- (id)distanceRectanglesBetweenSnapItems:(id)arg1 inDirection:(unsigned long long)arg2;
- (id)snappableItemsOnLineFromLayer:(id)arg1 inDirection:(unsigned long long)arg2 order:(long long)arg3;
- (void)snapItem:(id)arg1 onAxis:(unsigned long long)arg2 resize:(BOOL)arg3;
- (unsigned long long)snapItemByDistance:(id)arg1 edges:(long long)arg2 resize:(BOOL)arg3;

@end

@interface MSCloudManifestMaker : MSManifestMaker
{
    BOOL _allowDocumentUpload;
    unsigned long long _documentFileSize;
    CDUnknownBlockType _imageFileProviderBlock;
}

@property(copy, nonatomic) CDUnknownBlockType imageFileProviderBlock; // @synthesize imageFileProviderBlock=_imageFileProviderBlock;
@property(nonatomic) unsigned long long documentFileSize; // @synthesize documentFileSize=_documentFileSize;
@property(nonatomic) BOOL allowDocumentUpload; // @synthesize allowDocumentUpload=_allowDocumentUpload;
- (void).cxx_destruct;
- (id)fileMetadataForRoot:(id)arg1 onPage:(id)arg2 id:(id)arg3 exportScale:(double)arg4 manifestScale:(double)arg5;
- (id)filesMetadataForRootLayer:(id)arg1 onPage:(id)arg2 id:(id)arg3;
- (id)metadataForRootLayer:(id)arg1 onPage:(id)arg2 earlierSlugs:(id)arg3;
- (id)createManifest;

@end

@interface MSHandleDrawing : NSObject
{
}

+ (void)resetZoomValue;
+ (void)setZoomValue:(double)arg1;
+ (double)zoomValue;
+ (void)drawWithTransformStruct:(struct _CHTransformStruct)arg1 aroundPoint:(struct CGPoint)arg2 usingBlock:(CDUnknownBlockType)arg3;
+ (void)drawShadowForHover:(BOOL)arg1 inBlock:(CDUnknownBlockType)arg2;
+ (id)gradient;
+ (id)shadowForHover:(BOOL)arg1;
+ (void)drawBezier:(id)arg1;
+ (void)drawRectAtPoint:(struct CGPoint)arg1 ofType:(long long)arg2;
+ (void)drawGradientHandleAtPoint:(struct CGPoint)arg1 color:(id)arg2 selected:(BOOL)arg3;
+ (void)drawAtPoint:(struct CGPoint)arg1 ofType:(long long)arg2 state:(unsigned long long)arg3;
+ (double)dotSizeForType:(long long)arg1;
+ (void)load;

@end

@interface MSHUDViewController : NSViewController
{
    NSTextField *_fps;
    NSTextField *_fpsTrend;
    NSTextField *_selection;
    NSTextField *_hovered;
    double *_buffer;
    unsigned long long _bufferPosition;
}

@property(nonatomic) unsigned long long bufferPosition; // @synthesize bufferPosition=_bufferPosition;
@property(nonatomic) double *buffer; // @synthesize buffer=_buffer;
@property(nonatomic) __weak NSTextField *hovered; // @synthesize hovered=_hovered;
@property(nonatomic) __weak NSTextField *selection; // @synthesize selection=_selection;
@property(nonatomic) __weak NSTextField *fpsTrend; // @synthesize fpsTrend=_fpsTrend;
@property(nonatomic) __weak NSTextField *fps; // @synthesize fps=_fps;
- (void).cxx_destruct;
- (void)updateAverage:(double)arg1;
- (void)updateSelection:(id)arg1;
- (void)updateHoveredLayer:(id)arg1;
- (void)hoveredChangedNotification:(id)arg1;
- (void)selectionChangedNotification:(id)arg1;
- (void)uninstallMonitorForClient:(id)arg1;
- (void)installMonitorForClient:(id)arg1;
- (void)updateForClient:(id)arg1;
- (void)unregisterForNotificationsForClient:(id)arg1;
- (void)registerForNotificationsForClient:(id)arg1;
- (void)stopTrackingClient:(id)arg1;
- (void)startTrackingClient:(id)arg1;
- (void)setRepresentedObject:(id)arg1;
- (id)client;

@end

@interface MSPointSnappingTarget : NSObject <NSCopying>
{
    BOOL _showGuide;
    unsigned long long _snappableAxes;
    double _guideLength;
    struct CGPoint _center;
}

@property(readonly, nonatomic) double guideLength; // @synthesize guideLength=_guideLength;
@property(readonly, nonatomic) BOOL showGuide; // @synthesize showGuide=_showGuide;
@property(readonly, nonatomic) unsigned long long snappableAxes; // @synthesize snappableAxes=_snappableAxes;
@property(readonly, nonatomic) struct CGPoint center; // @synthesize center=_center;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithCenter:(struct CGPoint)arg1 snappableAxes:(unsigned long long)arg2 showGuide:(BOOL)arg3 length:(double)arg4;
- (id)initLineWithValue:(double)arg1 onAxis:(unsigned long long)arg2;
- (id)initWithPoint:(struct CGPoint)arg1;

@end

@interface MSSnapperEdgeHelperBase : NSObject
{
}

+ (unsigned long long)edge;
+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSSnapperEdgeHelperTop : MSSnapperEdgeHelperBase
{
}

+ (unsigned long long)edge;
+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSSnapperEdgeHelperLeft : MSSnapperEdgeHelperBase
{
}

+ (unsigned long long)edge;
+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSSnapperEdgeHelperBottom : MSSnapperEdgeHelperBase
{
}

+ (unsigned long long)edge;
+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSSnapperEdgeHelperRight : MSSnapperEdgeHelperBase
{
}

+ (unsigned long long)edge;
+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSSnapperEdgeHelperMidY : MSSnapperEdgeHelperBase
{
}

+ (unsigned long long)edge;
+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSSnapperEdgeHelperMidX : MSSnapperEdgeHelperBase
{
}

+ (unsigned long long)edge;
+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSSnapperEdgeHelperBaseline : MSSnapperEdgeHelperBase
{
}

+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSSnapperEdgeHelperMidXHeight : MSSnapperEdgeHelperBaseline
{
}

+ (struct CGRect)snapLayer:(id)arg1 toLine:(id)arg2 oldFrame:(struct CGRect)arg3 mayResize:(BOOL)arg4;

@end

@interface MSGridConstructor : NSObject
{
    CDStruct_ec0e0888 _options;
}

@property(nonatomic) CDStruct_ec0e0888 options; // @synthesize options=_options;
- (id)duplicateLayers:(id)arg1;
- (id)makeAllLayers:(id)arg1;
- (double)largestHeightInLayers:(id)arg1;
- (struct CGSize)sizeForLayer:(id)arg1;
- (void)makeGridWithLayers:(id)arg1 options:(CDStruct_ec0e0888)arg2;

@end

@interface MSGestureRecognizer : NSObject
{
    id _target;
    SEL _action;
    long long _state;
    id <MSGestureRecognizerDelegate> _delegate;
}

@property(nonatomic) __weak id <MSGestureRecognizerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
@property SEL action; // @synthesize action=_action;
@property __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (struct CGPoint)locationInLayer:(id)arg1;
- (id)init;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (void)flagsChanged:(id)arg1;
- (void)keyUp:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)keyDown:(id)arg1;
- (void)mouseUp:(id)arg1 location:(struct CGPoint)arg2;
- (void)mouseDragged:(struct CGPoint)arg1 modifierFlags:(unsigned long long)arg2;
- (void)mouseDown:(struct CGPoint)arg1 clickCount:(unsigned long long)arg2 modifierFlags:(unsigned long long)arg3;
- (void)reset;
- (void)preflightTransitionFromState:(long long)arg1 toState:(long long)arg2;

@end

@interface MSAssetLibraryController : NSObject <MSAssetLibraryDelegate>
{
    NSArray *_internalLibraries;
    NSMutableArray *_userLibraries;
    NSArray *_remoteLibraries;
    NSHashTable *_delegates;
    MSAssetLibraryUpdater *_assetLibraryUpdater;
}

@property(readonly, nonatomic) MSAssetLibraryUpdater *assetLibraryUpdater; // @synthesize assetLibraryUpdater=_assetLibraryUpdater;
@property(retain, nonatomic) NSHashTable *delegates; // @synthesize delegates=_delegates;
@property(retain, nonatomic) NSArray *remoteLibraries; // @synthesize remoteLibraries=_remoteLibraries;
@property(readonly, nonatomic) NSMutableArray *userLibraries; // @synthesize userLibraries=_userLibraries;
@property(retain, nonatomic) NSArray *internalLibraries; // @synthesize internalLibraries=_internalLibraries;
- (void).cxx_destruct;
- (void)loadVersionZeroLibrariesWithDispatchGroup:(id)arg1;
- (id)loadVersionZeroLibrariesFromUnarchiver:(id)arg1 forKey:(id)arg2 dispatchGroup:(id)arg3;
- (BOOL)shouldAttemptToLoadVersionZeroLibraries;
- (void)createAssetLibraryFolder;
- (id)librariesWithUpdates;
- (void)addRemoteLibraryFromAppcastURL:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)updateAndLoadAssetLibrary:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startDownloadingAssetLibrary:(id)arg1 progressHandler:(CDUnknownBlockType)arg2 downloadCompletionHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)downloadAssetLibraryAppcastsWithHandler:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)previewFromDocumentReader:(id)arg1;
- (void)generatePreviewImageForLibrary:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)libraryForShareableObject:(id)arg1;
- (void)enumerateForeignSymbolsInDocument:(id)arg1 includeDisabled:(BOOL)arg2 block:(CDUnknownBlockType)arg3;
- (void)syncForeignSymbol:(id)arg1 withMaster:(id)arg2 fromLibrary:(id)arg3;
- (id)importForeignSymbol:(id)arg1 fromLibrary:(id)arg2 intoDocument:(id)arg3;
- (void)syncNestedSymbolsOf:(id)arg1 withMaster:(id)arg2 fromLibrary:(id)arg3;
- (id)symbolIDsMappingFrom:(id)arg1 toLibrary:(id)arg2;
- (id)foreignSymbolInDocument:(id)arg1 matchingMaster:(id)arg2 inLibrary:(id)arg3;
- (BOOL)shouldLoadPreviouslySavedLibraries;
- (void)loadInternalLibraryRepresentationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadLibrariesWithDispatchGroup:(id)arg1;
- (void)setupInitialRemoteLibrariesWithDispatchGroup:(id)arg1;
- (void)setupInternalLibrariesWithDispatchGroup:(id)arg1;
- (id)initialInternalLibraries;
- (id)initialRemoteLibraryDefinitions;
- (id)loadLibrariesForKey:(id)arg1 dispatchGroup:(id)arg2;
- (void)assetLibraryEnableStateChanged:(id)arg1;
- (void)assetLibraryChangedOnDisk:(id)arg1;
- (void)reloadLibrary:(id)arg1;
- (void)notifyLibraryChange:(id)arg1;
- (void)removeRemoteAssetLibrary:(id)arg1;
- (void)removeUserAssetLibrary:(id)arg1;
- (void)saveLibraries;
- (void)saveLibraries:(id)arg1 withLibrariesKey:(id)arg2;
- (void)removeAssetLibrary:(id)arg1;
- (long long)addAssetLibraryAtURL:(id)arg1;
@property(readonly, nonatomic) NSArray *libraries; // @dynamic libraries;
@property(readonly, nonatomic) NSArray *availableLibraries;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSharedStylesPopUpButtonCell : NSPopUpButtonCell
{
    BOOL _localIsOutOfSync;
}

@property(nonatomic) BOOL localIsOutOfSync; // @synthesize localIsOutOfSync=_localIsOutOfSync;
- (void)setMenuItem:(id)arg1;
- (void)drawImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)drawDefaultTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)drawSharedObjectTitleWithFrame:(struct CGRect)arg1;
- (struct CGRect)drawSharedObjectSecondaryTitle:(struct CGRect)arg1;
- (struct CGRect)drawSharedObjectMainTitle:(struct CGRect)arg1;
- (void)attachPopUpWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
@property(readonly, nonatomic) MSShareableObjectReference *sharedObject;

@end

@interface MSSynchronousTiledRendererView : NSView <MSTiledLayerPileHostView>
{
    BOOL _ignoreScheduleRedrawRequest;
    BOOL _finished;
    double _zoomValue;
    MSImmutableDocumentData *_documentData;
    double _scale;
    struct CGContext *_contextRef;
    MSTiledLayerPile *_tiledLayerPile;
    struct CGPoint _scrollOrigin;
}

@property(nonatomic) BOOL finished; // @synthesize finished=_finished;
@property BOOL ignoreScheduleRedrawRequest; // @synthesize ignoreScheduleRedrawRequest=_ignoreScheduleRedrawRequest;
@property(retain, nonatomic) MSTiledLayerPile *tiledLayerPile; // @synthesize tiledLayerPile=_tiledLayerPile;
@property(readonly, nonatomic) struct CGContext *contextRef; // @synthesize contextRef=_contextRef;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(readonly, nonatomic) __weak MSImmutableDocumentData *documentData; // @synthesize documentData=_documentData;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
- (void).cxx_destruct;
- (void)tiledLayerPileDidRefreshTileContent:(id)arg1 finishTime:(unsigned long long)arg2;
- (void)tiledLayerPile:(id)arg1 requiresRedrawInRect:(struct CGRect)arg2;
- (id)imageRepresentation;
- (void)draw;
- (void)redrawTiles;
- (void)scheduleRedraw;
- (void)addTiledLayerWithZoom:(double)arg1 scrollOrigin:(struct CGPoint)arg2;
- (BOOL)canDrawConcurrently;
- (BOOL)isFlipped;
- (void)makeCGContext:(struct CGSize)arg1;
- (void)makeTiledLayerPile;
- (void)dealloc;
- (id)driver;
- (id)initWithFrame:(struct CGRect)arg1 scale:(double)arg2 documentData:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCloudUser : NSObject <NSSecureCoding>
{
    BOOL _isAdmin;
    BOOL _isVerified;
    NSString *_identifier;
    NSString *_email;
    NSString *_pendingEmail;
    NSString *_name;
    NSString *_webAccessToken;
}

+ (id)userWithIdentifier:(id)arg1 verified:(BOOL)arg2;
+ (BOOL)supportsSecureCoding;
@property(readonly, copy, nonatomic) NSString *webAccessToken; // @synthesize webAccessToken=_webAccessToken;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) BOOL isVerified; // @synthesize isVerified=_isVerified;
@property(readonly, nonatomic) BOOL isAdmin; // @synthesize isAdmin=_isAdmin;
@property(readonly, copy, nonatomic) NSString *pendingEmail; // @synthesize pendingEmail=_pendingEmail;
@property(readonly, copy, nonatomic) NSString *email; // @synthesize email=_email;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)debugDescription;
- (void)parseDictionary:(id)arg1;
@property(readonly, nonatomic) NSDictionary *dictionary;
- (id)verifiedUser;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface MSTile : MSRenderingCALayer <CALayerDelegate>
{
    BOOL _drawingIsCancelled;
    BOOL _completedFirstRenderOrWasCancelled;
    struct CGColorSpace *_colorSpace;
    MSRenderingDriver *_driver;
    unsigned long long _index;
    MSContentCALayer *_contentLayer;
    MSRenderingRequest *_renderingRequest;
    CATextLayer *_debugLabelLayer;
    CALayer *_debugDrawingAreaLayer;
    MSTileRenderOperation *_currentRenderOperation;
    struct CGPoint _scrollOrigin;
    struct CGPoint _distanceFromScrollOrigin;
}

@property(nonatomic) __weak MSTileRenderOperation *currentRenderOperation; // @synthesize currentRenderOperation=_currentRenderOperation;
@property(retain, nonatomic) CALayer *debugDrawingAreaLayer; // @synthesize debugDrawingAreaLayer=_debugDrawingAreaLayer;
@property(retain, nonatomic) CATextLayer *debugLabelLayer; // @synthesize debugLabelLayer=_debugLabelLayer;
@property(nonatomic) BOOL completedFirstRenderOrWasCancelled; // @synthesize completedFirstRenderOrWasCancelled=_completedFirstRenderOrWasCancelled;
@property(retain) MSRenderingRequest *renderingRequest; // @synthesize renderingRequest=_renderingRequest;
@property(retain, nonatomic) MSContentCALayer *contentLayer; // @synthesize contentLayer=_contentLayer;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(readonly, nonatomic) MSRenderingDriver *driver; // @synthesize driver=_driver;
@property(readonly, nonatomic) BOOL drawingIsCancelled; // @synthesize drawingIsCancelled=_drawingIsCancelled;
@property(nonatomic) struct CGPoint distanceFromScrollOrigin; // @synthesize distanceFromScrollOrigin=_distanceFromScrollOrigin;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
@property(readonly, nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
- (void).cxx_destruct;
- (void)tileRenderingDidFinish;
@property(readonly, copy) NSString *description;
- (void)moveToPosition:(struct CGPoint)arg1;
@property(nonatomic) double contentLayerScale;
- (void)cancelDrawing;
- (struct CGRect)normalizeRect:(struct CGRect)arg1 origin:(struct CGPoint)arg2;
- (id)renderOperationForContentRect:(struct CGRect)arg1 page:(id)arg2 renderingRequest:(id)arg3 contextPool:(id)arg4;
- (void)updateDebugLabel;
- (void)setupDebugLabel;
- (void)setupDebugDrawingArea;
- (void)setDebugOptionsToDrawInner:(BOOL)arg1 outer:(BOOL)arg2 dirty:(BOOL)arg3;
- (void)removeFromSuperlayer;
- (id)init;
- (void)dealloc;
- (id)initWithTiledLayer:(id)arg1 size:(struct CGSize)arg2 colorSpace:(struct CGColorSpace *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSAssetLibrary : NSObject <QLPreviewItem, BCSortable, NSCoding, MSLibraryObject>
{
    NSURL *_locationOnDisk;
    BOOL _enabled;
    unsigned long long _status;
    MSDocumentData *_document;
    NSString *_name;
    id <MSAssetLibraryDelegate> _delegate;
    unsigned long long _libraryType;
    NSDictionary *_propertyListDictionaryRepresentation;
    NSString *_libraryID;
}

+ (id)URLForTemplateLibraryNamed:(id)arg1;
+ (id)keyPathsForValuesAffectingValid;
+ (unsigned long long)assetLibraryStatusForDocumentErrorCode:(unsigned long long)arg1;
@property(retain, nonatomic) NSString *libraryID; // @synthesize libraryID=_libraryID;
@property(readonly, nonatomic) NSDictionary *propertyListDictionaryRepresentation; // @synthesize propertyListDictionaryRepresentation=_propertyListDictionaryRepresentation;
@property(readonly, nonatomic) unsigned long long libraryType; // @synthesize libraryType=_libraryType;
@property(nonatomic) __weak id <MSAssetLibraryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) MSDocumentData *document; // @synthesize document=_document;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(nonatomic) BOOL enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSURL *previewURL;
- (void)resolveLocationOnDisk;
- (id)symbolWithID:(id)arg1;
@property(readonly, nonatomic) NSDate *dateLastModified;
- (void)unload;
- (void)handleAssetLibraryUpdateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadAsyncWithDispatchGroup:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)loadSynchronously;
- (void)handleDocumentLoaded:(id)arg1;
- (id)loadDocument:(unsigned long long *)arg1;
@property(retain) NSURL *locationOnDisk;
@property(readonly, nonatomic) BOOL canLibraryBeRemoved;
@property(readonly, nonatomic) BOOL valid;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1;
- (id)initWithDocumentAtURL:(id)arg1;
@property(readonly) NSString *previewItemTitle;
@property(readonly) NSURL *previewItemURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) id previewItemDisplayState;
@property(readonly) Class superclass;

@end

@interface MSSymbolMasterReference : MSShareableObjectReference
{
}

@property(readonly, nonatomic) MSSymbolMasterReferenceDescriptor *descriptor;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) MSSymbolMaster *symbolMaster;

@end

@interface MSSymbolMasterReferenceDescriptor : NSObject <NSPasteboardWriting, NSPasteboardReading>
{
    NSURL *_libraryLocation;
    NSString *_symbolID;
}

+ (id)readableTypesForPasteboard:(id)arg1;
+ (id)pasteboardType;
@property(copy, nonatomic) NSString *symbolID; // @synthesize symbolID=_symbolID;
@property(copy, nonatomic) NSURL *libraryLocation; // @synthesize libraryLocation=_libraryLocation;
- (void).cxx_destruct;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSManifestMaker : NSObject
{
    BOOL _selectiveExport;
    BOOL _usePageIfMissingArtboard;
    MSImmutableDocumentData *_documentData;
    MSCacheManager *_cacheManager;
    NSString *_name;
}

+ (id)keyForFlowAnimationType:(long long)arg1;
+ (id)manifestValueForColorSpace:(unsigned long long)arg1;
@property(nonatomic) BOOL usePageIfMissingArtboard; // @synthesize usePageIfMissingArtboard=_usePageIfMissingArtboard;
@property(nonatomic) BOOL selectiveExport; // @synthesize selectiveExport=_selectiveExport;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) MSCacheManager *cacheManager; // @synthesize cacheManager=_cacheManager;
@property(readonly, nonatomic) MSImmutableDocumentData *documentData; // @synthesize documentData=_documentData;
- (void).cxx_destruct;
- (id)metadataForFlow:(id)arg1;
- (id)dictForRect:(struct CGRect)arg1 inRootLayer:(id)arg2;
- (id)metadataForLayer:(id)arg1;
- (id)metadataForChildLayersInSymbolInstance:(id)arg1 inRootLayer:(id)arg2 positionTransform:(struct CGAffineTransform)arg3 withAncestors:(id)arg4 earlierSymbols:(id)arg5;
- (id)metadataForChildLayersInLayer:(id)arg1 inRootLayer:(id)arg2 positionTransform:(struct CGAffineTransform)arg3 withAncestors:(id)arg4 earlierSymbols:(id)arg5;
- (id)metadataForLayer:(id)arg1 inRootLayer:(id)arg2 positionTransform:(struct CGAffineTransform)arg3 withAncestors:(id)arg4 earlierSymbols:(id)arg5;
- (id)metadataForLayersInRootLayer:(id)arg1 ancestors:(id)arg2;
- (id)metadataForRootLayer:(id)arg1 onPage:(id)arg2 earlierSlugs:(id)arg3;
- (BOOL)shouldExportLayerGroup:(id)arg1;
- (id)metadataAndExportForArtboardsOnPage:(id)arg1;
- (id)metadataAndExportForPage:(id)arg1 earlierSlugs:(id)arg2;
- (id)metadataAndExportForPages:(id)arg1;
- (id)createManifest;
- (id)initWithDocument:(id)arg1;

@end

@interface MSDigitStringFormatter : NSFormatter
{
}

+ (BOOL)isDigitString:(id)arg1;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;

@end

@interface MSPageListController : MSSidebarListController <BCOutlineViewDataSource, BCOutlineViewDelegate>
{
    NSArray *_selectedPages;
}

@property(retain, nonatomic) NSArray *selectedPages; // @synthesize selectedPages=_selectedPages;
- (void).cxx_destruct;
- (Class)pasteboardWriterClass;
- (void)dataController:(id)arg1 refreshPreviewsOnNodes:(id)arg2;
- (id)dataController:(id)arg1 menuItemsForSelectedObjects:(id)arg2;
- (void)duplicatePages:(id)arg1;
- (void)removePageWithValidation:(id)arg1;
- (void)dataController:(id)arg1 handleBadgePressedOnNode:(id)arg2 withAltState:(BOOL)arg3;
- (BOOL)dataController:(id)arg1 copyFromPasteboard:(id)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)dataController:(id)arg1 moveFromPasteboard:(id)arg2 toParent:(id)arg3 after:(id)arg4;
- (BOOL)moveNode:(id)arg1 toParent:(id)arg2 after:(id)arg3;
- (void)addPage:(id)arg1 after:(id)arg2;
- (BOOL)canMoveNode:(id)arg1 toParent:(id)arg2 after:(id)arg3;
- (BOOL)canCopyNode:(id)arg1 toParent:(id)arg2 after:(id)arg3;
- (void)dataController:(id)arg1 removeNodes:(id)arg2;
- (void)dataController:(id)arg1 updateNode:(id)arg2 expandedState:(unsigned long long)arg3;
- (BOOL)dataController:(id)arg1 isNodeExpandable:(id)arg2;
- (BOOL)dataController:(id)arg1 isNodeExpanded:(id)arg2;
- (void)dataController:(id)arg1 changeSelectionTo:(id)arg2;
- (BOOL)dataController:(id)arg1 isNodeSelected:(id)arg2;
- (id)pageForNode:(id)arg1;
- (id)dataController:(id)arg1 childrenOfNode:(id)arg2;
- (id)rootObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AFAmazonS3ResponseSerializer : AFHTTPResponseSerializer
{
}

- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;

@end

@interface AFAmazonS3ResponseObject : NSObject
{
    NSHTTPURLResponse *_originalResponse;
}

+ (id)responseObject:(id)arg1;
@property(retain, nonatomic) NSHTTPURLResponse *originalResponse; // @synthesize originalResponse=_originalResponse;
- (void).cxx_destruct;
- (id)description;
@property(readonly, copy, nonatomic) NSString *ETag;
@property(readonly, copy, nonatomic) NSURL *URL;

@end

@interface MSSymbolCreator : NSObject
{
}

+ (id)createSymbolInstanceWithName:(id)arg1 rect:(struct CGRect)arg2 symbolID:(id)arg3;
+ (id)createSymbolMasterWitName:(id)arg1 size:(struct CGSize)arg2 onPage:(id)arg3;
+ (void)moveLayers:(id)arg1 toArtboard:(id)arg2;
+ (id)createSymbolFromLayers:(id)arg1 withName:(id)arg2 onSymbolsPage:(BOOL)arg3;
+ (BOOL)canCreateSymbolFromLayers:(id)arg1;

@end

@interface MSFlashView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSFlashViewController : NSViewController
{
    NSTextField *_message;
    NSButton *_helpButton;
    NSButton *_closeButton;
    CDUnknownBlockType _helpBlock;
    CDUnknownBlockType _closeBlock;
}

+ (id)flashViewControllerWithMessage:(id)arg1 closeBlock:(CDUnknownBlockType)arg2 helpBlock:(CDUnknownBlockType)arg3;
@property(copy, nonatomic) CDUnknownBlockType closeBlock; // @synthesize closeBlock=_closeBlock;
@property(copy, nonatomic) CDUnknownBlockType helpBlock; // @synthesize helpBlock=_helpBlock;
@property(retain, nonatomic) NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) NSButton *helpButton; // @synthesize helpButton=_helpButton;
@property(retain, nonatomic) NSTextField *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (void)helpPressed:(id)arg1;
- (void)closeFlash:(id)arg1;
- (id)init;

@end

@interface MSPasteboardInternalImageReader : MSPasteboardImagesReader
{
}

- (id)supportedPasteboardTypes;

@end

@interface MSImageLayerImporter : NSObject
{
}

+ (BOOL)fileIsVectorFormat:(id)arg1;
+ (id)importerForPath:(id)arg1;
+ (id)importLayerFromPath:(id)arg1;
+ (id)layerWithContentsOfPath:(id)arg1 mode:(unsigned long long)arg2;

@end

@interface MSFlattenActionValidator : NSObject
{
}

+ (BOOL)hasFlattenablePathInSelection:(id)arg1;
+ (BOOL)isValidForSelectedLayers:(id)arg1;

@end

@interface MSPasteboardImagesReader : NSObject <MSPasteboardReader>
{
}

- (id)pasteboardDataFromPasteboard:(id)arg1 colorSpace:(id)arg2 options:(unsigned long long)arg3 sender:(id)arg4;
- (id)supportedPasteboardTypes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSTileRenderOperation : NSOperation <CALayerDelegate>
{
    MSTile *_tile;
    MSRenderingDriver *_driver;
    MSRenderingRequest *_renderingRequest;
    struct CGImage *_image;
    MSImmutablePage *_pageForContent;
    MSCGContextPool *_contextPool;
    MSRenderingContext *_context;
    struct CGPoint _distanceFromScrollOrigin;
    struct CGRect _contentBounds;
    struct CGRect _contentRectNeedingRedraw;
}

@property(retain) MSRenderingContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) MSCGContextPool *contextPool; // @synthesize contextPool=_contextPool;
@property(retain, nonatomic) MSImmutablePage *pageForContent; // @synthesize pageForContent=_pageForContent;
@property(nonatomic) struct CGPoint distanceFromScrollOrigin; // @synthesize distanceFromScrollOrigin=_distanceFromScrollOrigin;
@property(nonatomic) struct CGRect contentRectNeedingRedraw; // @synthesize contentRectNeedingRedraw=_contentRectNeedingRedraw;
@property(readonly, nonatomic) struct CGImage *image; // @synthesize image=_image;
@property(nonatomic) struct CGRect contentBounds; // @synthesize contentBounds=_contentBounds;
@property(readonly, nonatomic) MSRenderingRequest *renderingRequest; // @synthesize renderingRequest=_renderingRequest;
@property(readonly, nonatomic) MSRenderingDriver *driver; // @synthesize driver=_driver;
@property(nonatomic) __weak MSTile *tile; // @synthesize tile=_tile;
- (void).cxx_destruct;
- (void)drawBackgroundInContext:(struct CGContext *)arg1;
- (id)makeRenderingContextForPage:(id)arg1 rect:(struct CGRect)arg2 scale:(double)arg3 zoom:(double)arg4 context:(struct CGContext *)arg5;
- (void)drawContentInContext:(struct CGContext *)arg1 clipRect:(struct CGRect)arg2;
- (void)combineContent:(struct CGContext *)arg1 withBackground:(struct CGContext *)arg2;
- (void)main;
- (unsigned long long)_tileIndex;
- (void)cancelDrawing;
- (void)dealloc;
- (id)initWithRenderingRequest:(id)arg1 contextPool:(id)arg2 driver:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSActionController : NSResponder
{
    NSDictionary *_singleKeyShortcuts;
    NSMutableDictionary *_actionsByIdentifier;
    NSMutableSet *_observers;
}

@property(retain, nonatomic) NSMutableSet *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSMutableDictionary *actionsByIdentifier; // @synthesize actionsByIdentifier=_actionsByIdentifier;
@property(copy, nonatomic) NSDictionary *singleKeyShortcuts; // @synthesize singleKeyShortcuts=_singleKeyShortcuts;
- (void).cxx_destruct;
- (id)firstActionToHandleKeyEvent:(id)arg1;
- (BOOL)forwardKeyEvent:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (BOOL)isSystemSeparatorID:(id)arg1;
- (void)performActionWithID:(id)arg1 sender:(id)arg2;
- (id)actionForSelector:(SEL)arg1;
- (id)actionForID:(id)arg1;
- (id)allActions;
- (void)insertAfterResponder:(id)arg1;
- (void)assertValidActionID:(id)arg1;
- (void)registerAction:(id)arg1;
- (id)init;
- (void)performFakeActionWithID:(id)arg1 context:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)unregisterActionObserver:(id)arg1;
- (void)registerActionObserver:(id)arg1;
- (void)didInstantActionWithID:(id)arg1 context:(id)arg2;
- (void)didFinishActionWithID:(id)arg1 context:(id)arg2;
- (void)willBeginActionWithID:(id)arg1 context:(id)arg2;

@end

@interface MSSnapDrawing : NSObject
{
    double _zoomLevel;
    NSNumberFormatter *_formatter;
    struct CGAffineTransform _transform;
}

+ (void)resetSnapColor;
+ (id)snapColor;
@property(nonatomic) struct CGAffineTransform transform; // @synthesize transform=_transform;
@property(retain, nonatomic) NSNumberFormatter *formatter; // @synthesize formatter=_formatter;
@property(nonatomic) double zoomLevel; // @synthesize zoomLevel=_zoomLevel;
- (void).cxx_destruct;
- (void)drawHeightBetweenRect:(struct CGRect)arg1 andRect:(struct CGRect)arg2;
- (void)drawWidthBetweenRect:(struct CGRect)arg1 andRect:(struct CGRect)arg2;
- (void)drawHeightOutsideFrame:(struct CGRect)arg1;
- (void)drawWidthOutsideFrame:(struct CGRect)arg1;
- (id)textAttributes;
- (id)stringForAmount:(double)arg1;
- (void)applyTransformInRect:(struct CGRect)arg1;
- (void)drawBarsForHeightOfRect:(struct CGRect)arg1;
- (void)drawBarsForWidthOfRect:(struct CGRect)arg1;
- (void)drawLabelForHeightOfRect:(struct CGRect)arg1;
- (void)drawLabelForWidthOfRect:(struct CGRect)arg1;
- (void)drawHeightInsideFrame:(struct CGRect)arg1;
- (void)drawWidthInsideFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface MSPasteboardPDFReader : NSObject <MSPasteboardReader>
{
}

- (id)pasteboardDataFromPasteboard:(id)arg1 colorSpace:(id)arg2 options:(unsigned long long)arg3 sender:(id)arg4;
- (id)supportedPasteboardTypes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSRenderingCALayer : CALayer
{
}

- (id)init;

@end

@interface MSMathNumberFormatter : NSNumberFormatter
{
}

- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;

@end

@interface MSUserAssetLibrary : MSAssetLibrary
{
    MSFileMonitor *_fileMonitor;
}

@property(retain, nonatomic) MSFileMonitor *fileMonitor; // @synthesize fileMonitor=_fileMonitor;
- (void).cxx_destruct;
- (void)resolveLocationOnDisk;
- (void)startMonitoring;
- (void)loadAsyncWithDispatchGroup:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)loadSynchronously;
- (void)setEnabled:(BOOL)arg1;
- (unsigned long long)libraryType;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MSFlashController : NSObject
{
    NSStackView *_stackView;
    NSMutableArray *_messages;
    MSFlashViewController *_flash;
}

@property(retain, nonatomic) MSFlashViewController *flash; // @synthesize flash=_flash;
@property(retain, nonatomic) NSMutableArray *messages; // @synthesize messages=_messages;
@property(retain, nonatomic) NSStackView *stackView; // @synthesize stackView=_stackView;
- (void).cxx_destruct;
- (void)clearFlash;
- (void)removeMessage:(id)arg1;
- (id)displayFixedMessage:(id)arg1 withHelpHandler:(CDUnknownBlockType)arg2;
- (id)displayWarningMessage:(id)arg1 withHelpHandler:(CDUnknownBlockType)arg2;
- (id)displayMessage:(id)arg1 userClosable:(BOOL)arg2 helpBlock:(CDUnknownBlockType)arg3;
- (id)displayFlashMessage:(id)arg1;

@end

@interface MSLayerFlattener : NSObject
{
}

- (id)exportRequestFromLayers:(id)arg1 immutablePage:(id)arg2 immutableDoc:(id)arg3;
- (struct CGRect)trimRectFromLayers:(id)arg1 immutablePage:(id)arg2 immutableDoc:(id)arg3;
- (struct CGRect)rectFromLayers:(id)arg1;
- (id)bitmapFromRect:(struct CGRect)arg1 fromLayers:(id)arg2 withImage:(id)arg3;
- (struct CGRect)trimmedRectFromLayers:(id)arg1 immutablePage:(id)arg2 immutableDoc:(id)arg3;
- (id)imageFromLayers:(id)arg1 immutablePage:(id)arg2 immutableDoc:(id)arg3;
- (void)flattenLayers:(id)arg1;

@end

@interface MSPointInsertion : NSObject
{
}

+ (id)bezierPathOfSegmentAtIndex:(unsigned long long)arg1 layer:(id)arg2;
+ (id)splitPathSegment:(id)arg1 atProposedPoint:(struct CGPoint *)arg2 layer:(id)arg3;
+ (id)bezierPathBySplittingPathLayer:(id)arg1 atIndex:(unsigned long long)arg2 options:(unsigned long long)arg3 proposedLocation:(struct CGPoint *)arg4 surroundingCurvePoints:(id *)arg5;
+ (BOOL)canInsertAtProposedLocation:(struct CGPoint *)arg1 index:(unsigned long long)arg2 layer:(id)arg3 options:(unsigned long long)arg4;
+ (id)insertPointAtLocation:(struct CGPoint)arg1 index:(unsigned long long)arg2 layer:(id)arg3 options:(unsigned long long)arg4;

@end

@interface MSAction : NSResponder <NSMenuDelegate, MSPopToolbarItemActionObject>
{
    BOOL _isSelectable;
    MSActionController *_controller;
    NSToolbarItem *_toolbarItem;
}

@property(readonly, nonatomic) BOOL isSelectable; // @synthesize isSelectable=_isSelectable;
@property(retain, nonatomic) NSToolbarItem *toolbarItem; // @synthesize toolbarItem=_toolbarItem;
@property(nonatomic) __weak MSActionController *controller; // @synthesize controller=_controller;
- (void).cxx_destruct;
- (id)interfaceQueryObject;
- (void)keyDown:(id)arg1;
- (BOOL)handlesKeyEvent:(id)arg1;
@property(readonly, nonatomic) BOOL isActive;
- (BOOL)toolbarItemShouldDrawWithArrow:(id)arg1;
@property(readonly, nonatomic) BOOL hasSubMenu;
- (id)submenuActionIDs;
- (BOOL)containsActionWithID:(id)arg1;
@property(readonly, nonatomic) long long validationStatus;
@property(readonly, nonatomic) BOOL validate;
@property(readonly, nonatomic) unsigned short shortcutCharacter;
@property(readonly, nonatomic) NSString *label;
@property(readonly, nonatomic) NSImage *image;
@property(readonly, nonatomic) NSString *imageName;
- (void)doPerformAction:(id)arg1;
- (id)cleanName;
- (void)performAction:(id)arg1;
- (id)contextForActionObservers;
@property(readonly, nonatomic) BOOL hasDynamicTitle;
@property(readonly, nonatomic) NSAttributedString *badgeTitle;
@property(readonly, nonatomic) NSString *tooltip;
@property(readonly, nonatomic) BOOL showInToolbar;
- (id)imageForToolbarCustomisationSheet;
@property(readonly, nonatomic) NSString *labelForToolbarCustomisationSheet;
@property(readonly, nonatomic) NSString *labelForToolbar;
- (id)makeToolbarItemForToolbar:(BOOL)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)menuItems;
@property(readonly, nonatomic) NSString *labelForMenu;
- (id)menuItemsForMenu:(id)arg1;
@property(readonly, nonatomic) SEL preferredMenuAction;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSVectorRounding : NSObject
{
}

+ (struct CGPoint)roundPoint:(struct CGPoint)arg1;
+ (struct CGPoint)roundPoint:(struct CGPoint)arg1 layer:(id)arg2;
+ (unsigned long long)precision;

@end

@interface MSCustomShapeSection : MSLayerSection
{
}

- (void)refreshAction:(id)arg1;
- (void)refreshAndResetAction:(id)arg1;
- (id)nibName;

@end

@interface MSPDFState : NSObject <NSCopying>
{
    BOOL _clippingUpdated;
    BOOL _containsClippedItems;
    BOOL _pathClosed;
    BOOL _pathUsed;
    BOOL _pathWasRect;
    int _renderingIntent;
    double _borderAlphaConstant;
    NSColor *_borderColor;
    NSColorSpace *_borderColorSpace;
    PDFFunction *_borderColorSpaceMapping;
    NSArray *_borderDashes;
    unsigned long long _borderCapStyle;
    PDFPattern *_borderGradient;
    unsigned long long _borderJoinStyle;
    double _borderThickness;
    unsigned long long _clippingMode;
    NSBezierPath *_clippingPath;
    double _fillAlphaConstant;
    NSColor *_fillColor;
    NSColorSpace *_fillColorSpace;
    PDFFunction *_fillColorSpaceMapping;
    PDFPattern *_fillGradient;
    NSMutableArray *_layers;
    NSBezierPath *_path;
    MSPDFTextState *_text;
    NSBezierPath *_transformedPath;
    MSPDFScanner *_scanner;
    NSAffineTransform *_transform;
    NSAffineTransform *_flippedTransform;
    struct CGPoint _currentPoint;
}

@property(retain, nonatomic) NSAffineTransform *flippedTransform; // @synthesize flippedTransform=_flippedTransform;
@property(retain, nonatomic) NSAffineTransform *transform; // @synthesize transform=_transform;
@property(nonatomic) __weak MSPDFScanner *scanner; // @synthesize scanner=_scanner;
@property(retain, nonatomic) NSBezierPath *transformedPath; // @synthesize transformedPath=_transformedPath;
@property(retain, nonatomic) MSPDFTextState *text; // @synthesize text=_text;
@property(nonatomic) int renderingIntent; // @synthesize renderingIntent=_renderingIntent;
@property(nonatomic) BOOL pathWasRect; // @synthesize pathWasRect=_pathWasRect;
@property(nonatomic) BOOL pathUsed; // @synthesize pathUsed=_pathUsed;
@property(nonatomic) BOOL pathClosed; // @synthesize pathClosed=_pathClosed;
@property(retain, nonatomic) NSBezierPath *path; // @synthesize path=_path;
@property(retain, nonatomic) NSMutableArray *layers; // @synthesize layers=_layers;
@property(retain, nonatomic) PDFPattern *fillGradient; // @synthesize fillGradient=_fillGradient;
@property(retain, nonatomic) PDFFunction *fillColorSpaceMapping; // @synthesize fillColorSpaceMapping=_fillColorSpaceMapping;
@property(retain, nonatomic) NSColorSpace *fillColorSpace; // @synthesize fillColorSpace=_fillColorSpace;
@property(retain, nonatomic) NSColor *fillColor; // @synthesize fillColor=_fillColor;
@property(nonatomic) double fillAlphaConstant; // @synthesize fillAlphaConstant=_fillAlphaConstant;
@property(nonatomic) struct CGPoint currentPoint; // @synthesize currentPoint=_currentPoint;
@property(nonatomic) BOOL containsClippedItems; // @synthesize containsClippedItems=_containsClippedItems;
@property(nonatomic) BOOL clippingUpdated; // @synthesize clippingUpdated=_clippingUpdated;
@property(retain, nonatomic) NSBezierPath *clippingPath; // @synthesize clippingPath=_clippingPath;
@property(nonatomic) unsigned long long clippingMode; // @synthesize clippingMode=_clippingMode;
@property(nonatomic) double borderThickness; // @synthesize borderThickness=_borderThickness;
@property(nonatomic) unsigned long long borderJoinStyle; // @synthesize borderJoinStyle=_borderJoinStyle;
@property(retain, nonatomic) PDFPattern *borderGradient; // @synthesize borderGradient=_borderGradient;
@property(nonatomic) unsigned long long borderCapStyle; // @synthesize borderCapStyle=_borderCapStyle;
@property(retain, nonatomic) NSArray *borderDashes; // @synthesize borderDashes=_borderDashes;
@property(retain, nonatomic) PDFFunction *borderColorSpaceMapping; // @synthesize borderColorSpaceMapping=_borderColorSpaceMapping;
@property(retain, nonatomic) NSColorSpace *borderColorSpace; // @synthesize borderColorSpace=_borderColorSpace;
@property(retain, nonatomic) NSColor *borderColor; // @synthesize borderColor=_borderColor;
@property(nonatomic) double borderAlphaConstant; // @synthesize borderAlphaConstant=_borderAlphaConstant;
- (void).cxx_destruct;
- (id)description;
- (id)stringFromTransform:(id)arg1;
- (id)transformedClippingPath;
- (void)updateClippingWithTextPath:(id)arg1;
- (void)updateClipping;
- (CDStruct_8727d297)transformStruct;
- (id)transformBezierPath:(id)arg1;
- (struct CGSize)transformSize:(struct CGSize)arg1;
- (struct CGPoint)transformPoint:(struct CGPoint)arg1;
- (void)appendTransform:(id)arg1;
- (void)resetTransform:(id)arg1;
- (void)resetFlipped;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)lastLayer;
- (id)layerWithEnclosingGroup:(BOOL)arg1;
- (BOOL)optimiseClipLayerInGroup:(id)arg1;
- (void)addLayer:(id)arg1;
- (id)initWithScanner:(id)arg1;

@end

@interface MSPDFScanner : PDFScanner
{
    MSLayerGroup *_rootLayer;
    NSString *_substituteFontName;
    unsigned long long _nextID;
    NSMutableArray *_stack;
    MSPDFState *_state;
}

@property(retain, nonatomic) MSPDFState *state; // @synthesize state=_state;
@property(retain, nonatomic) NSMutableArray *stack; // @synthesize stack=_stack;
@property(nonatomic) unsigned long long nextID; // @synthesize nextID=_nextID;
@property(retain, nonatomic) NSString *substituteFontName; // @synthesize substituteFontName=_substituteFontName;
@property(retain, nonatomic) MSLayerGroup *rootLayer; // @synthesize rootLayer=_rootLayer;
- (void).cxx_destruct;
- (void)endText;
- (void)appendText:(id)arg1;
- (void)setTextMatrix:(id)arg1;
- (void)nextLineWithOffset:(struct CGPoint)arg1;
- (void)offset:(double)arg1;
- (void)setTextMode:(unsigned long long)arg1;
- (void)setTextScale:(double)arg1;
- (void)setTextRise:(double)arg1;
- (void)setTextLeading:(double)arg1;
- (void)setTextWordSpacing:(double)arg1;
- (void)setTextCharacterSpacing:(double)arg1;
- (void)setFontName:(id)arg1 size:(double)arg2 info:(id)arg3;
- (void)beginText;
- (void)setTextTransform:(id)arg1 resettingLineTransform:(BOOL)arg2;
- (void)processImage:(id)arg1 info:(id)arg2;
- (void)fillWithShadingPattern:(id)arg1;
- (id)gradientForLayer:(id)arg1 pattern:(id)arg2;
- (void)fillWithWinding:(unsigned long long)arg1;
- (void)clipWithWinding:(unsigned long long)arg1;
- (void)setColourRenderingIntent:(int)arg1;
- (void)setFillAlphaConstant:(double)arg1;
- (void)setStrokeAlphaConstant:(double)arg1;
- (void)setFillColour:(id)arg1;
- (void)setStrokeColour:(id)arg1;
- (void)setFillColourSpace:(id)arg1 mapping:(id)arg2;
- (void)setStrokeColourSpace:(id)arg1 mapping:(id)arg2;
- (void)strokeWithWinding:(unsigned long long)arg1;
- (id)transformedPath;
- (void)setLineDash:(id)arg1 phase:(long long)arg2;
- (void)setLineCap:(unsigned long long)arg1;
- (void)setLineJoin:(unsigned long long)arg1;
- (void)setLineWidth:(double)arg1;
- (void)restoreGraphicState;
- (void)saveGraphicState;
- (int)currentRenderingIntent;
- (id)currentFillColorSpaceMapping;
- (id)currentFillColorSpace;
- (id)currentStrokeColorSpaceMapping;
- (id)currentStrokeColorSpace;
- (double)currentLeading;
- (struct CGPoint)currentPoint;
- (id)currentFont;
- (void)concatMatrix:(id)arg1;
- (void)appendRectangle:(struct CGRect)arg1;
- (void)endPath;
- (void)closePath;
- (void)curveTo:(struct CGPoint)arg1 control1:(struct CGPoint)arg2 control2:(struct CGPoint)arg3;
- (void)lineTo:(struct CGPoint)arg1;
- (void)moveTo:(struct CGPoint)arg1;
- (void)doClipping;
- (void)doRestoreState;
- (void)doSaveState;
- (void)doNewPath;
- (void)doText;
- (void)doClose;
- (void)scanStream:(struct CGPDFContentStream *)arg1 dictionary:(id)arg2;
- (void)scanPage:(struct CGPDFPage *)arg1 parser:(id)arg2;
- (id)nameForType:(id)arg1;
- (id)init;

@end

@interface PDFOperatorInfo : NSObject
{
    SEL _selector;
    CDUnknownFunctionPointerType _callback;
    NSString *_operatorName;
    NSString *_methodName;
}

@property(retain, nonatomic) NSString *methodName; // @synthesize methodName=_methodName;
@property(retain, nonatomic) NSString *operatorName; // @synthesize operatorName=_operatorName;
@property(nonatomic) CDUnknownFunctionPointerType callback; // @synthesize callback=_callback;
@property(nonatomic) SEL selector; // @synthesize selector=_selector;
- (void).cxx_destruct;
- (id)description;

@end

@interface PDFFunction : NSObject
{
    NSData *_samples;
    NSDictionary *_parameters;
    unsigned long long _numberOfInputComponents;
    unsigned long long _numberOfOutputComponents;
    unsigned long long _bitsPerSample;
    unsigned long long _bytesPerSampleComponent;
    unsigned long long _bytesPerSample;
    unsigned long long _numberOfSamples;
    NSArray *_range;
    NSArray *_domain;
}

+ (id)functionWithInfo:(id)arg1;
@property(retain, nonatomic) NSArray *domain; // @synthesize domain=_domain;
@property(retain, nonatomic) NSArray *range; // @synthesize range=_range;
@property(nonatomic) unsigned long long numberOfSamples; // @synthesize numberOfSamples=_numberOfSamples;
@property(nonatomic) unsigned long long bytesPerSample; // @synthesize bytesPerSample=_bytesPerSample;
@property(nonatomic) unsigned long long bytesPerSampleComponent; // @synthesize bytesPerSampleComponent=_bytesPerSampleComponent;
@property(nonatomic) unsigned long long bitsPerSample; // @synthesize bitsPerSample=_bitsPerSample;
@property(nonatomic) unsigned long long numberOfOutputComponents; // @synthesize numberOfOutputComponents=_numberOfOutputComponents;
@property(nonatomic) unsigned long long numberOfInputComponents; // @synthesize numberOfInputComponents=_numberOfInputComponents;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(retain, nonatomic) NSData *samples; // @synthesize samples=_samples;
- (void).cxx_destruct;
- (void)mapInputs:(double [16])arg1 toOutputs:(double [16])arg2;
- (void)setupStitchedWithDictionary:(id)arg1;
- (double)valueForX:(double)arg1 c0:(double)arg2 c1:(double)arg3 n:(double)arg4;
- (void)setupExponentialWithDictionary:(id)arg1;
- (void)extractParameters:(id)arg1;
- (void)setupSampledWithDictionary:(id)arg1;
- (void)setupWithDictionary:(id)arg1;
- (void)setupWithStream:(id)arg1;
- (id)initWithInfo:(id)arg1;

@end

@interface CMapParser : NSObject
{
    BOOL _vertical;
    NSMutableDictionary *_map;
    NSString *_source;
    NSArray *_words;
    unsigned long long _position;
    unsigned long long _max;
    NSArray *_integersInProgress;
}

@property(retain, nonatomic) NSArray *integersInProgress; // @synthesize integersInProgress=_integersInProgress;
@property(nonatomic) BOOL vertical; // @synthesize vertical=_vertical;
@property(nonatomic) unsigned long long max; // @synthesize max=_max;
@property(nonatomic) unsigned long long position; // @synthesize position=_position;
@property(retain, nonatomic) NSArray *words; // @synthesize words=_words;
@property(retain, nonatomic) NSString *source; // @synthesize source=_source;
@property(retain, nonatomic) NSMutableDictionary *map; // @synthesize map=_map;
- (void).cxx_destruct;
- (void)parseData;
- (void)parseCmap;
- (void)codespacerangeParseWithCount:(unsigned long long)arg1;
- (void)cidrangeParseWithCount:(unsigned long long)arg1;
- (void)bfrangeParseWithCount:(unsigned long long)arg1;
- (void)cidcharParseWithCount:(unsigned long long)arg1;
- (void)bfcharParseWithCount:(unsigned long long)arg1;
- (void)parseOperator:(id)arg1 withCount:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (void)addRangeStart:(long long)arg1 end:(long long)arg2 to:(long long)arg3;
- (void)addMappingFrom:(long long)arg1 to:(long long)arg2;
- (id)nextWord;
- (long long)nextInteger;
- (id)integersFromHex:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithStream:(id)arg1;

@end

@interface PDFPattern : NSObject
{
    unsigned long long _shadingType;
    PDFFunction *_function;
    id _space;
    NSArray *_coords;
}

+ (id)patternWithResource:(id)arg1;
@property(retain, nonatomic) NSArray *coords; // @synthesize coords=_coords;
@property(retain, nonatomic) id space; // @synthesize space=_space;
@property(retain, nonatomic) PDFFunction *function; // @synthesize function=_function;
@property(nonatomic) unsigned long long shadingType; // @synthesize shadingType=_shadingType;
- (void).cxx_destruct;
- (void)setupFromDictionary:(id)arg1;
- (void)setupFromStream:(id)arg1;
- (id)initWithResource:(id)arg1;

@end

@interface PDFStream : NSObject
{
    int _format;
    struct CGPDFStream *_stream;
    NSDictionary *_dictionary;
    NSData *_data;
}

@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(nonatomic) int format; // @synthesize format=_format;
@property(retain, nonatomic) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property(nonatomic) struct CGPDFStream *stream; // @synthesize stream=_stream;
- (void).cxx_destruct;
- (id)description;
- (void)getDataAndFormat;
- (id)initWithStream:(struct CGPDFStream *)arg1;

@end

@interface PDFString : NSObject
{
    struct CGPDFString *_ref;
}

@property(nonatomic) struct CGPDFString *ref; // @synthesize ref=_ref;
- (id)stringWithMap:(id)arg1;
- (id)data;
- (id)string;
- (id)initWithStringRef:(struct CGPDFString *)arg1;

@end

@interface MSPDFTextState : NSObject <NSCopying>
{
    double _characterSpacing;
    NSFont *_font;
    NSString *_fontName;
    NSDictionary *_fontInfo;
    double _leading;
    NSAffineTransform *_lineTransform;
    unsigned long long _mode;
    double _offset;
    NSAffineTransform *_renderingTransform;
    double _rise;
    double _scale;
    double _size;
    MSPDFState *_state;
    NSMutableAttributedString *_text;
    NSAffineTransform *_transform;
    double _wordSpacing;
}

+ (id)textStateWithState:(id)arg1;
@property(nonatomic) double wordSpacing; // @synthesize wordSpacing=_wordSpacing;
@property(retain, nonatomic) NSAffineTransform *transform; // @synthesize transform=_transform;
@property(retain, nonatomic) NSMutableAttributedString *text; // @synthesize text=_text;
@property(nonatomic) __weak MSPDFState *state; // @synthesize state=_state;
@property(nonatomic) double size; // @synthesize size=_size;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) double rise; // @synthesize rise=_rise;
@property(retain, nonatomic) NSAffineTransform *renderingTransform; // @synthesize renderingTransform=_renderingTransform;
@property(nonatomic) double offset; // @synthesize offset=_offset;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
@property(retain, nonatomic) NSAffineTransform *lineTransform; // @synthesize lineTransform=_lineTransform;
@property(nonatomic) double leading; // @synthesize leading=_leading;
@property(retain, nonatomic) NSDictionary *fontInfo; // @synthesize fontInfo=_fontInfo;
@property(retain, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(retain, nonatomic) NSFont *font; // @synthesize font=_font;
@property(nonatomic) double characterSpacing; // @synthesize characterSpacing=_characterSpacing;
- (void).cxx_destruct;
- (void)appendText:(id)arg1;
- (id)attributes;
- (void)setTransform:(id)arg1 resettingLineTransform:(BOOL)arg2;
- (void)resetRenderingTransform;
- (BOOL)shouldClip;
- (BOOL)shouldStroke;
- (BOOL)shouldFill;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface PDFScanner : NSObject
{
    NSDictionary *_dictionary;
    struct CGPDFOperatorTable *_table;
    struct CGPDFScanner *_scanner;
    struct CGPDFContentStream *_stream;
    NSMutableDictionary *_fonts;
    NSSet *_fontTypesToMap;
    NSDictionary *_encodingMap;
}

+ (id)convertObject:(struct CGPDFObject *)arg1;
+ (id)convertDictionary:(struct CGPDFDictionary *)arg1;
+ (id)convertArray:(struct CGPDFArray *)arg1;
@property(retain, nonatomic) NSDictionary *encodingMap; // @synthesize encodingMap=_encodingMap;
@property(retain, nonatomic) NSSet *fontTypesToMap; // @synthesize fontTypesToMap=_fontTypesToMap;
@property(retain, nonatomic) NSMutableDictionary *fonts; // @synthesize fonts=_fonts;
@property(nonatomic) struct CGPDFContentStream *stream; // @synthesize stream=_stream;
@property(nonatomic) struct CGPDFScanner *scanner; // @synthesize scanner=_scanner;
@property(nonatomic) struct CGPDFOperatorTable *table; // @synthesize table=_table;
@property(retain, nonatomic) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void).cxx_destruct;
- (void)operatorglyphBoundsWithInfo:(id)arg1;
- (void)registerOperatorglyphBounds;
- (void)operatordeclareGlyphWithInfo:(id)arg1;
- (void)registerOperatordeclareGlyph;
- (void)operatorendTextWithInfo:(id)arg1;
- (void)registerOperatorendText;
- (void)operatortextArrayWithInfo:(id)arg1;
- (void)registerOperatortextArray;
- (void)operatortextWithInfo:(id)arg1;
- (void)registerOperatortext;
- (void)operatortextSetMatrixWithInfo:(id)arg1;
- (void)registerOperatortextSetMatrix;
- (void)operatornextLineAndTextWithSpacingWithInfo:(id)arg1;
- (void)registerOperatornextLineAndTextWithSpacing;
- (void)operatornextLineAndTextWithInfo:(id)arg1;
- (void)registerOperatornextLineAndText;
- (void)operatornextLineWithInfo:(id)arg1;
- (void)registerOperatornextLine;
- (void)operatortextNextLineSetLeadingWithInfo:(id)arg1;
- (void)registerOperatortextNextLineSetLeading;
- (void)operatortextNextLineWithInfo:(id)arg1;
- (void)registerOperatortextNextLine;
- (void)operatortextModeWithInfo:(id)arg1;
- (void)registerOperatortextMode;
- (void)operatortextScalingWithInfo:(id)arg1;
- (void)registerOperatortextScaling;
- (void)operatortextRiseWithInfo:(id)arg1;
- (void)registerOperatortextRise;
- (void)operatortextLeadingWithInfo:(id)arg1;
- (void)registerOperatortextLeading;
- (void)operatortextWordSpacingWithInfo:(id)arg1;
- (void)registerOperatortextWordSpacing;
- (void)operatortextCharacterSpacingWithInfo:(id)arg1;
- (void)registerOperatortextCharacterSpacing;
- (void)operatorsetFontWithInfo:(id)arg1;
- (void)registerOperatorsetFont;
- (void)operatorbeginTextWithInfo:(id)arg1;
- (void)registerOperatorbeginText;
- (void)operatorendImageWithInfo:(id)arg1;
- (void)registerOperatorendImage;
- (void)operatorbeginImageWithInfo:(id)arg1;
- (void)registerOperatorbeginImage;
- (void)operatordefineMarkedContentPointWithInfo:(id)arg1;
- (void)registerOperatordefineMarkedContentPoint;
- (void)operatorendMarkedContentWithInfo:(id)arg1;
- (void)registerOperatorendMarkedContent;
- (void)operatorbeginMarkedContentWithInfo:(id)arg1;
- (void)registerOperatorbeginMarkedContent;
- (void)operatorbeginMarkedContentWithPropertyWithInfo:(id)arg1;
- (void)registerOperatorbeginMarkedContentWithProperty;
- (void)operatorendCompatibilityWithInfo:(id)arg1;
- (void)registerOperatorendCompatibility;
- (void)operatorbeginCompatibilityWithInfo:(id)arg1;
- (void)registerOperatorbeginCompatibility;
- (void)operatorfillWithShadingPatternWithInfo:(id)arg1;
- (void)registerOperatorfillWithShadingPattern;
- (void)operatorfillEvenOddWithInfo:(id)arg1;
- (void)registerOperatorfillEvenOdd;
- (void)operatorfillObsoleteWithInfo:(id)arg1;
- (void)registerOperatorfillObsolete;
- (void)operatorfillWithInfo:(id)arg1;
- (void)registerOperatorfill;
- (void)operatorfillStrokeEvenOddWithInfo:(id)arg1;
- (void)registerOperatorfillStrokeEvenOdd;
- (void)operatorfillStrokeWithInfo:(id)arg1;
- (void)registerOperatorfillStroke;
- (void)operatorcloseFillStrokeEvenOddWithInfo:(id)arg1;
- (void)registerOperatorcloseFillStrokeEvenOdd;
- (void)operatorcloseFillStrokeWithInfo:(id)arg1;
- (void)registerOperatorcloseFillStroke;
- (void)operatorclipEvenOddWithInfo:(id)arg1;
- (void)registerOperatorclipEvenOdd;
- (void)operatorclipWithInfo:(id)arg1;
- (void)registerOperatorclip;
- (void)operatorsetFlatnessToleranceWithInfo:(id)arg1;
- (void)registerOperatorsetFlatnessTolerance;
- (void)operatorsetFillCMYKWithInfo:(id)arg1;
- (void)registerOperatorsetFillCMYK;
- (void)operatorsetStrokeCMYKWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeCMYK;
- (void)operatorsetFillRGBWithInfo:(id)arg1;
- (void)registerOperatorsetFillRGB;
- (void)operatorsetStrokeRGBWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeRGB;
- (void)operatorsetFillColourNameWithInfo:(id)arg1;
- (void)registerOperatorsetFillColourName;
- (void)operatorsetStrokeColourNameWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeColourName;
- (void)operatorsetFillColourWithInfo:(id)arg1;
- (void)registerOperatorsetFillColour;
- (void)operatorsetStrokeColourWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeColour;
- (void)operatorsetStrokeGreyWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeGrey;
- (void)operatorsetFillGreyWithInfo:(id)arg1;
- (void)registerOperatorsetFillGrey;
- (void)operatorsetColourRenderingIntentWithInfo:(id)arg1;
- (void)registerOperatorsetColourRenderingIntent;
- (void)operatorsetFillColourSpaceWithInfo:(id)arg1;
- (void)registerOperatorsetFillColourSpace;
- (void)operatorsetStrokeColourSpaceWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeColourSpace;
- (void)operatorstrokePathWithInfo:(id)arg1;
- (void)registerOperatorstrokePath;
- (void)operatorcloseAndStrokePathWithInfo:(id)arg1;
- (void)registerOperatorcloseAndStrokePath;
- (void)operatorsetMitreLimitWithInfo:(id)arg1;
- (void)registerOperatorsetMitreLimit;
- (void)operatorsetLineDashWithInfo:(id)arg1;
- (void)registerOperatorsetLineDash;
- (void)operatorsetLineCapWithInfo:(id)arg1;
- (void)registerOperatorsetLineCap;
- (void)operatorsetLineJoinWithInfo:(id)arg1;
- (void)registerOperatorsetLineJoin;
- (void)operatorsetLineWidthWithInfo:(id)arg1;
- (void)registerOperatorsetLineWidth;
- (void)operatorrestoreGraphicStateWithInfo:(id)arg1;
- (void)registerOperatorrestoreGraphicState;
- (void)operatorsaveGraphicStateWithInfo:(id)arg1;
- (void)registerOperatorsaveGraphicState;
- (void)operatorsetGraphicStateWithInfo:(id)arg1;
- (void)registerOperatorsetGraphicState;
- (void)operatorconcatMatrixWithInfo:(id)arg1;
- (void)registerOperatorconcatMatrix;
- (void)operatorprocessXObjectWithInfo:(id)arg1;
- (void)registerOperatorprocessXObject;
- (void)operatordefineMarkedPointWithInfo:(id)arg1;
- (void)registerOperatordefineMarkedPoint;
- (void)operatorappendRectangleWithInfo:(id)arg1;
- (void)registerOperatorappendRectangle;
- (void)operatorendPathWithInfo:(id)arg1;
- (void)registerOperatorendPath;
- (void)operatorclosePathWithInfo:(id)arg1;
- (void)registerOperatorclosePath;
- (void)operatorcurveToFinalPointReplicatedWithInfo:(id)arg1;
- (void)registerOperatorcurveToFinalPointReplicated;
- (void)operatorcurveToInitialPointReplicatedWithInfo:(id)arg1;
- (void)registerOperatorcurveToInitialPointReplicated;
- (void)operatorcurveToWithInfo:(id)arg1;
- (void)registerOperatorcurveTo;
- (void)operatorlineToWithInfo:(id)arg1;
- (void)registerOperatorlineTo;
- (void)operatormoveToWithInfo:(id)arg1;
- (void)registerOperatormoveTo;
- (void)appendString:(id)arg1;
- (void)processForm:(id)arg1;
- (void)setFontName:(id)arg1 size:(double)arg2;
- (void)glyphBounds;
- (void)declareGlyph;
- (void)endText;
- (void)offset:(double)arg1;
- (void)appendText:(id)arg1;
- (void)nextLineWithOffset:(struct CGPoint)arg1;
- (void)setTextMatrix:(id)arg1;
- (void)endImage;
- (void)imageData;
- (void)beginImage;
- (void)endMarkedContent;
- (void)beginMarkedContent;
- (void)beginMarkedContentWithProperty;
- (void)endCompatibility;
- (void)beginCompatibility;
- (void)fillWithShadingPattern:(id)arg1;
- (void)fillWithWinding:(unsigned long long)arg1;
- (void)strokeWithWinding:(unsigned long long)arg1;
- (void)clipWithWinding:(unsigned long long)arg1;
- (void)setMitreLimit:(double)arg1;
- (void)concatMatrix:(id)arg1;
- (void)restoreGraphicState;
- (void)saveGraphicState;
- (void)processImage:(id)arg1 info:(id)arg2;
- (void)processXObject:(id)arg1;
- (void)defineMarkedPoint;
- (void)endPath;
- (void)closePath;
- (void)setTextMode:(unsigned long long)arg1;
- (void)setTextScale:(double)arg1;
- (void)setTextRise:(double)arg1;
- (void)setTextLeading:(double)arg1;
- (void)setTextWordSpacing:(double)arg1;
- (void)setTextCharacterSpacing:(double)arg1;
- (void)setFontName:(id)arg1 size:(double)arg2 info:(id)arg3;
- (void)beginText;
- (void)setOverprintMode:(long long)arg1;
- (void)setStrokeAlphaConstant:(double)arg1;
- (void)setFillAlphaConstant:(double)arg1;
- (void)setStrokePattern:(id)arg1;
- (void)setFillPattern:(id)arg1;
- (void)setStrokeColour:(id)arg1;
- (void)setFillColour:(id)arg1;
- (void)setColourRenderingIntent:(int)arg1;
- (void)setFillColourSpace:(id)arg1 mapping:(id)arg2;
- (void)setStrokeColourSpace:(id)arg1 mapping:(id)arg2;
- (void)setLineDash:(id)arg1 phase:(long long)arg2;
- (void)setLineCap:(unsigned long long)arg1;
- (void)setLineJoin:(unsigned long long)arg1;
- (void)setLineWidth:(double)arg1;
- (void)appendRectangle:(struct CGRect)arg1;
- (void)curveTo:(struct CGPoint)arg1 control1:(struct CGPoint)arg2 control2:(struct CGPoint)arg3;
- (void)lineTo:(struct CGPoint)arg1;
- (void)moveTo:(struct CGPoint)arg1;
- (int)currentRenderingIntent;
- (id)currentStrokeColorSpaceMapping;
- (id)currentStrokeColorSpace;
- (id)currentFillColorSpaceMapping;
- (id)currentFillColorSpace;
- (double)currentLeading;
- (struct CGPoint)currentPoint;
- (id)currentFont;
- (id)gradientForPattern:(id)arg1;
- (id)tryToPopObject;
- (id)popObject;
- (id)popArray;
- (id)popName;
- (id)popString;
- (id)popNumber;
- (BOOL)popBool;
- (long long)popInteger;
- (double)popDouble;
- (id)popPattern;
- (id)popColorForColorSpace:(id)arg1 mapping:(id)arg2;
- (id)popCMYKColor;
- (id)popRGBColor;
- (id)popTransform;
- (struct CGPoint)popPoint;
- (struct CGRect)popRectangle;
- (id)fontResourceNamed:(id)arg1;
- (struct CGImage *)newImageFromStream:(id)arg1 details:(id *)arg2;
- (void)interpretObjectStream:(id)arg1;
- (void)interpretImageStream:(id)arg1;
- (id)data:(id)arg1 filteredWith:(id)arg2;
- (id)inflate:(id)arg1;
- (int)renderingIntentNamed:(id)arg1;
- (id)colorSpaceWithParameters:(id)arg1 mapping:(id *)arg2;
- (id)colorSpaceWithInfo:(id)arg1 mapping:(id *)arg2;
- (id)colorSpaceNamed:(id)arg1 mapping:(id *)arg2;
- (id)defaultColorSpaceNamed:(id)arg1;
- (id)resourceNamed:(id)arg1 ofKind:(id)arg2;
- (void)scanStream:(struct CGPDFContentStream *)arg1 dictionary:(id)arg2;
- (void)scanPage:(struct CGPDFPage *)arg1 parser:(id)arg2;
- (id)addOperator:(CDUnknownFunctionPointerType)arg1 name:(id)arg2 description:(id)arg3;
- (void)registerAllOperators;
- (void)logUnusedParametersWithInfo:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface EPSConverter : NSObject
{
    CDUnknownBlockType _progressBlock;
}

@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
- (void).cxx_destruct;
- (void)converterReleased;
- (void)converterMessage:(id)arg1;
- (void)converterProgress;
- (void)endPageNumber:(unsigned long long)arg1 info:(id)arg2;
- (void)beginPageNumber:(unsigned long long)arg1 info:(id)arg2;
- (void)endDocumentSucceeded:(_Bool)arg1;
- (void)beginDocument;
- (BOOL)convertEPSWithProvider:(struct CGDataProvider *)arg1 consumer:(struct CGDataConsumer *)arg2;
- (id)convertEPSAtURL:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (id)convertEPSData:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)convertEPSAtURL:(id)arg1 toURL:(id)arg2 progressBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface PDFParser : NSObject <PDFParser>
{
    NSString *_name;
    PDFScanner *_scanner;
    struct CGPDFDocument *_document;
}

@property(nonatomic) struct CGPDFDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) PDFScanner *scanner; // @synthesize scanner=_scanner;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)parseWithProgress:(CDUnknownBlockType)arg1;
- (unsigned long long)pageCount;
- (void)loadDocumentFromData:(id)arg1;
- (void)loadDocumentFromURL:(id)arg1;
- (id)initWithScanner:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EPSParser : NSObject <PDFParser>
{
    PDFParser *_parser;
}

@property(retain, nonatomic) PDFParser *parser; // @synthesize parser=_parser;
- (void).cxx_destruct;
- (void)debugConvertedFile:(id)arg1;
- (id)name;
- (void)parseWithProgress:(CDUnknownBlockType)arg1;
- (unsigned long long)pageCount;
- (void)loadDocumentFromData:(id)arg1;
- (void)loadDocumentFromURL:(id)arg1;
- (id)initWithScanner:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BCLicenseManager : NSObject
{
    BOOL _completedLoadingLicense;
    BCLicense *_license;
    NSString *_applicationID;
    NSString *_publicCertificate;
    NSURL *_licenseURL;
    NSURLSession *_urlSession;
    NSDate *_applicationBuildDate;
    NSString *_applicationVariant;
}

@property(retain, nonatomic) NSString *applicationVariant; // @synthesize applicationVariant=_applicationVariant;
@property(retain, nonatomic) NSDate *applicationBuildDate; // @synthesize applicationBuildDate=_applicationBuildDate;
@property(nonatomic) BOOL completedLoadingLicense; // @synthesize completedLoadingLicense=_completedLoadingLicense;
@property(retain, nonatomic) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property(retain, nonatomic) NSURL *licenseURL; // @synthesize licenseURL=_licenseURL;
@property(retain, nonatomic) NSString *publicCertificate; // @synthesize publicCertificate=_publicCertificate;
@property(retain, nonatomic) NSString *applicationID; // @synthesize applicationID=_applicationID;
@property(retain, nonatomic) BCLicense *license; // @synthesize license=_license;
- (void).cxx_destruct;
- (id)apiURLForMethod:(id)arg1 queryItems:(id)arg2;
- (id)apiURL;
- (void)fetchLicenseMetadata:(CDUnknownBlockType)arg1;
- (id)metadataAPIURL;
- (id)websiteAvailableVersionsURL;
- (id)websiteRenewalURLForLicenseKey:(id)arg1;
- (id)websiteRenewalURL;
- (id)currentVersion;
- (void)processURL:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)performUnregisterCall:(id)arg1;
- (void)unregister;
- (void)unregisterWithPrompt;
- (void)licenseStateChanged;
- (void)completeUpdateWithHandler:(CDUnknownBlockType)arg1 status:(long long)arg2 info:(id)arg3 error:(id)arg4;
- (void)checkForDeploymentKeyWithPath:(id)arg1 removeFile:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)requestTrialLicenseWithHandler:(CDUnknownBlockType)arg1;
- (void)fallbackToTrial:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)processLicenseRefreshResult:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)tryToRefreshLicense:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)processDataOfRegistration:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)registerWithLicenseKey:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (long long)numberOfDaysLeftInTrialMode;
- (BOOL)canRenewLicense;
- (BOOL)canInstallUpdates;
- (id)updateExpirationDate;
- (id)registeredEmailAddress;
- (long long)currentLicenseType;
- (BOOL)licenseVariantIsSupported:(id)arg1;
- (BOOL)licenseVersionIsSupported:(id)arg1;
- (void)validateLicenseWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)refreshLicenseIfNeededWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)refreshLicenseWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)updateLicenseWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithApplicationID:(id)arg1 publicCertificate:(id)arg2 licenseURL:(id)arg3 applicationBuildDate:(id)arg4 applicationVariant:(id)arg5;
@property(readonly, nonatomic) BOOL canUseCloud;

@end

@interface BCRSASHA1Verify : NSObject
{
    BOOL _verified;
    NSError *_error;
    NSData *_inputData;
    struct OpaqueSecKeyRef *_publicKey;
    NSData *_signatureData;
}

@property(retain, nonatomic) NSData *signatureData; // @synthesize signatureData=_signatureData;
@property(nonatomic) struct OpaqueSecKeyRef *publicKey; // @synthesize publicKey=_publicKey;
@property(retain, nonatomic) NSData *inputData; // @synthesize inputData=_inputData;
@property(nonatomic) BOOL verified; // @synthesize verified=_verified;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (void)verify;
- (void)dealloc;
- (id)initWithInputData:(id)arg1 publicKey:(struct OpaqueSecKeyRef *)arg2 signatureData:(id)arg3;

@end

@interface BCReceiptValidationException : NSException
{
}

+ (void)raiseWithStatus:(unsigned long long)arg1 error:(int)arg2;
+ (void)raiseWithStatus:(unsigned long long)arg1;
+ (id)exceptionWithStatus:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long status;

@end

@interface BCCodeSigningVerifier : NSObject
{
}

@end

@interface BCLicense : NSObject
{
    NSString *_applicationID;
    NSDictionary *_payload;
    NSDictionary *_metadata;
    NSString *_publicCertificate;
    long long _signatureStatus;
    double _referenceTime;
    NSDate *_referenceDate;
    NSDate *_networkDate;
}

@property(retain, nonatomic) NSDate *networkDate; // @synthesize networkDate=_networkDate;
@property(retain, nonatomic) NSDate *referenceDate; // @synthesize referenceDate=_referenceDate;
@property(nonatomic) double referenceTime; // @synthesize referenceTime=_referenceTime;
@property(nonatomic) long long signatureStatus; // @synthesize signatureStatus=_signatureStatus;
@property(retain, nonatomic) NSString *publicCertificate; // @synthesize publicCertificate=_publicCertificate;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) NSDictionary *payload; // @synthesize payload=_payload;
@property(retain, nonatomic) NSString *applicationID; // @synthesize applicationID=_applicationID;
- (void).cxx_destruct;
- (id)variants;
- (BOOL)updatesHaveExpired;
- (id)updateExpirationDate;
@property(readonly, nonatomic) NSDate *currentDate;
- (void)validateDate;
@property(readonly, nonatomic) double systemStartupTime;
- (void)log;
- (id)status;
- (id)licenseID;
- (BOOL)purchaseIsExpiring;
- (id)expiryDate;
- (long long)remainingDays;
- (long long)type;
- (id)deviceID;
- (id)email;
- (BOOL)isValid;
- (BOOL)isAppNameValid;
- (BOOL)isExpired;
- (BOOL)isDeviceValid;
- (BOOL)isSignatureValid;
- (void)validateSignature;
- (id)payloadHash;
- (BOOL)saveToURL:(id)arg1 error:(id *)arg2;
- (BOOL)isAboutToExpire;
- (BOOL)shouldTryToRequestNewTrialLicense;
- (id)initWithURL:(id)arg1 applicationID:(id)arg2 publicCertificate:(id)arg3;
- (id)initWithJSONData:(id)arg1 applicationID:(id)arg2 publicCertificate:(id)arg3;
- (id)init;

@end

@interface BCSparkleLicensedUpdateChecker : NSObject
{
    BOOL _hasAvailableUpdates;
    unsigned long long _numberOfUnavailableReleases;
    NSString *_latestUnavailableVersion;
    NSString *_latestUnavailableBuildNumber;
    unsigned long long _indexOfBestUpdate;
    NSDate *_expiryDate;
    NSString *_buildNumber;
}

+ (id)sparkleCheckerWithLicenseExpirationDate:(id)arg1 buildNumber:(id)arg2 appcastResults:(id)arg3;
@property(readonly, nonatomic) NSString *buildNumber; // @synthesize buildNumber=_buildNumber;
@property(readonly, nonatomic) NSDate *expiryDate; // @synthesize expiryDate=_expiryDate;
@property(readonly, nonatomic) unsigned long long indexOfBestUpdate; // @synthesize indexOfBestUpdate=_indexOfBestUpdate;
@property(readonly, nonatomic) NSString *latestUnavailableBuildNumber; // @synthesize latestUnavailableBuildNumber=_latestUnavailableBuildNumber;
@property(readonly, nonatomic) NSString *latestUnavailableVersion; // @synthesize latestUnavailableVersion=_latestUnavailableVersion;
@property(readonly, nonatomic) BOOL hasAvailableUpdates; // @synthesize hasAvailableUpdates=_hasAvailableUpdates;
@property(nonatomic) unsigned long long numberOfUnavailableReleases; // @synthesize numberOfUnavailableReleases=_numberOfUnavailableReleases;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL hasUnlicensedUpdatesOnly;
- (BOOL)isUpdateInstalled:(id)arg1;
- (long long)compareBuildNumber:(id)arg1 to:(id)arg2;
- (BOOL)isUpdateItemInstallable:(id)arg1;
- (id)sparkleShortVersionForItem:(id)arg1;
- (id)sparkleVersionForItem:(id)arg1;
- (id)supportDateForItem:(id)arg1;
- (id)supportDateStringForItem:(id)arg1;
- (void)parseAppcastResults:(id)arg1;
- (id)initWithLicenseExpirationDate:(id)arg1 buildNumber:(id)arg2;

@end

@interface BCReceiptValidationContextWithInfo : BCReceiptValidationContext
{
    NSString *_expectedBundleID;
    NSString *_minimumVersion;
}

@property(retain, nonatomic) NSString *minimumVersion; // @synthesize minimumVersion=_minimumVersion;
@property(retain, nonatomic) NSString *expectedBundleID; // @synthesize expectedBundleID=_expectedBundleID;
- (void).cxx_destruct;
- (id)initWithBundleID:(id)arg1 minimumVersion:(id)arg2;

@end

@interface BCReceiptValidationContext : NSObject
{
    BOOL _quickValidated;
    BOOL _valid;
}

+ (void)initialize;
@property(nonatomic) BOOL valid; // @synthesize valid=_valid;
@property(nonatomic) BOOL quickValidated; // @synthesize quickValidated=_quickValidated;

@end

@interface BCNetworkTime : NSObject
{
    int _socket;
    CDUnknownBlockType _completion;
    NSString *_host;
    struct addrinfo *_allAddressInfo;
    struct addrinfo *_addressInfo;
    unsigned long long _timeout;
}

+ (void)requestTimeFromHost:(id)arg1 timeout:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(nonatomic) unsigned long long timeout; // @synthesize timeout=_timeout;
@property(nonatomic) int socket; // @synthesize socket=_socket;
@property(nonatomic) struct addrinfo *addressInfo; // @synthesize addressInfo=_addressInfo;
@property(nonatomic) struct addrinfo *allAddressInfo; // @synthesize allAddressInfo=_allAddressInfo;
@property(copy, nonatomic) NSString *host; // @synthesize host=_host;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
- (void).cxx_destruct;
- (void)sendCompletion:(id)arg1;
- (void)requestNTPTime;
- (void)readResponse;
- (void)sendRequest;
- (void)closeSocket;
- (void)openSocket;
@property(readonly, nonatomic) BOOL isSocketOpen;
- (void)determineHostAddress;
- (void)dealloc;
- (id)initWithCompletionBlock:(CDUnknownBlockType)arg1;

@end

@interface MSBezierFillet : NSObject
{
    MSBezierSegment *_segment1;
    MSBezierSegment *_segment2;
    double _segment1Offset;
    double _segment2Offset;
    double _arcRadius;
    struct CGPoint _arcEndPoint1;
    struct CGPoint _arcEndPoint2;
    struct CGPoint _arcCenter;
}

+ (id)bezierFilletWithSegment1:(id)arg1 segment2:(id)arg2 filletRadius:(double)arg3;
+ (id)curveFilletWithSegment1:(id)arg1 segment2:(id)arg2 filletRadius:(double)arg3;
+ (id)lineFilletWithSegment1:(id)arg1 segment2:(id)arg2 filletRadius:(double)arg3;
+ (id)bezierFilletWithSegment1:(id)arg1 segment2:(id)arg2 segment1Offset:(double)arg3;
+ (id)curveFilletWithSegment1:(id)arg1 segment2:(id)arg2 segment1Offset:(double)arg3;
+ (id)lineFilletWithSegment1:(id)arg1 segment2:(id)arg2 segment1Offset:(double)arg3;
+ (id)zeroRadiusFilletWithSegment1:(id)arg1 segment2:(id)arg2;
@property(readonly, nonatomic) struct CGPoint arcCenter; // @synthesize arcCenter=_arcCenter;
@property(readonly, nonatomic) struct CGPoint arcEndPoint2; // @synthesize arcEndPoint2=_arcEndPoint2;
@property(readonly, nonatomic) struct CGPoint arcEndPoint1; // @synthesize arcEndPoint1=_arcEndPoint1;
@property(readonly, nonatomic) double arcRadius; // @synthesize arcRadius=_arcRadius;
@property(readonly, nonatomic) double segment2Offset; // @synthesize segment2Offset=_segment2Offset;
@property(readonly, nonatomic) double segment1Offset; // @synthesize segment1Offset=_segment1Offset;
@property(readonly, nonatomic) MSBezierSegment *segment2; // @synthesize segment2=_segment2;
@property(readonly, nonatomic) MSBezierSegment *segment1; // @synthesize segment1=_segment1;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (void)addArcToBezierPath:(id)arg1 orCGPath:(struct CGPath *)arg2;
- (id)arcSegments;
- (id)reversedFillet;
@property(readonly, nonatomic) BOOL clockwise;
@property(readonly, nonatomic) double endAngle;
@property(readonly, nonatomic) double startAngle;
- (double)angleToPoint:(struct CGPoint)arg1;
- (id)initWithSegment1:(id)arg1 segment2:(id)arg2 segment1Offset:(double)arg3 segment2Offset:(double)arg4 arcEndPoint1:(struct CGPoint)arg5 arcEndPoint2:(struct CGPoint)arg6 arcCenter:(struct CGPoint)arg7 arcRadius:(double)arg8;
- (id)initWithSegment1:(id)arg1 segment2:(id)arg2;

@end

@interface _MSGradientStop : MSModelObject
{
    double _position;
    MSColor *_color;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSColor *color; // @synthesize color=_color;
@property(nonatomic) double position; // @synthesize position=_position;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSRect : MSModelObject
{
    BOOL _constrainProportions;
    double _height;
    double _width;
    double _x;
    double _y;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) double y; // @synthesize y=_y;
@property(nonatomic) double x; // @synthesize x=_x;
@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) double height; // @synthesize height=_height;
@property(nonatomic) BOOL constrainProportions; // @synthesize constrainProportions=_constrainProportions;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSPersistentAssetCollection : MSAssetCollection
{
    MSVersionedArchive *_archive;
}

+ (id)defaultExportPresets;
+ (Class)immutableClass;
+ (id)assetCollectionWithName:(id)arg1;
+ (id)assetCollectionByMigratingPresetsFromSources:(id)arg1;
+ (id)defaultMigrationArchiveForPresetNamed:(id)arg1;
+ (id)defaultMigrationSources;
@property(retain, nonatomic) MSVersionedArchive *archive; // @synthesize archive=_archive;
- (void).cxx_destruct;
- (void)applyDefaultExportPresetsIfNeeded;
- (id)resourceNeedingMigration;
- (void)cleanupAfterTesting;
- (void)save;

@end

@interface MSAssetMigrationSources : NSObject
{
    MSVersionedArchive *_colorArchive;
    MSVersionedArchive *_gradientArchive;
    NSURL *_imageURL;
}

@property(copy, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain, nonatomic) MSVersionedArchive *gradientArchive; // @synthesize gradientArchive=_gradientArchive;
@property(retain, nonatomic) MSVersionedArchive *colorArchive; // @synthesize colorArchive=_colorArchive;
- (void).cxx_destruct;

@end

@interface MSBaseArchiver : NSObject
{
    BOOL _archiveObjectIDs;
    NSMutableDictionary *_references;
}

+ (id)archivedDataWithHeaderAndRootObject:(id)arg1;
+ (id)archivedDataWithRootObject:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSMutableDictionary *references; // @synthesize references=_references;
@property(nonatomic) BOOL archiveObjectIDs; // @synthesize archiveObjectIDs=_archiveObjectIDs;
- (void).cxx_destruct;
- (void)encodeSize:(struct CGSize)arg1 forKey:(id)arg2;
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;
- (void)encodePoint:(struct CGPoint)arg1 forKey:(id)arg2;
- (void)encodeRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (id)referenceObjectForObject:(id)arg1;
- (BOOL)shouldEncodeAsReference:(id)arg1;
- (void)archiveRootObject:(id)arg1;
- (id)archivedDataWithRootObject:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface _MSShapeGroup : MSLayerGroup
{
    long long _clippingMaskMode;
    BOOL _hasClippingMask;
    unsigned long long _windingRule;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) unsigned long long windingRule; // @synthesize windingRule=_windingRule;
@property(nonatomic) BOOL hasClippingMask; // @synthesize hasClippingMask=_hasClippingMask;
@property(nonatomic) long long clippingMaskMode; // @synthesize clippingMaskMode=_clippingMaskMode;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableBaseGrid : _MSImmutableBaseGrid
{
    BOOL _forceDraw;
}

+ (BOOL)displayableAtZoom:(double)arg1;
+ (void)initialize;
@property(nonatomic) BOOL forceDraw; // @synthesize forceDraw=_forceDraw;
- (BOOL)shouldDrawAtZoom:(double)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSImmutableSharedTextStyleContainer : MSImmutableSharedStyleContainer
{
}

+ (Class)mutableClass;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSJSONZippedArchiver : MSJSONArchiver
{
    BCJSONZippedEncoder *_zipEncoder;
}

@property(retain, nonatomic) BCJSONZippedEncoder *zipEncoder; // @synthesize zipEncoder=_zipEncoder;
- (void).cxx_destruct;
- (id)replacementObjectForObject:(id)arg1;
- (id)encoder;
- (id)encodableReferenceToOriginal:(id)arg1;
- (void)encodeReferenceObject:(id)arg1;
- (BOOL)finishEncodingError:(id *)arg1;
- (BOOL)encodeRawData:(id)arg1 toSubpath:(id)arg2 error:(id *)arg3;
- (BOOL)encodeObject:(id)arg1 toSubpath:(id)arg2 error:(id *)arg3;
- (id)initWithURL:(id)arg1;

@end

@interface _MSImmutableColor : MSImmutableModelObject
{
    double _alpha;
    double _blue;
    double _green;
    double _red;
}

+ (Class)mutableClass;
@property(nonatomic) double red; // @synthesize red=_red;
@property(nonatomic) double green; // @synthesize green=_green;
@property(nonatomic) double blue; // @synthesize blue=_blue;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSDocumentZippedJSONReader : MSDocumentReader
{
    NSDictionary *_UIMetadata;
    NSDictionary *_metadata;
    MSJSONZippedUnarchiver *_unarchiver;
}

+ (long long)maximumPixelSizeForImageSource:(struct CGImageSource *)arg1 maximumSize:(struct CGSize)arg2;
@property(retain, nonatomic) MSJSONZippedUnarchiver *unarchiver; // @synthesize unarchiver=_unarchiver;
- (id)metadata;
- (id)UIMetadata;
- (void).cxx_destruct;
- (id)previewImageWithMaximumSize:(struct CGSize)arg1;
- (id)previewBitmapImageRepWithSize:(struct CGSize)arg1;
- (id)libraryPreviewImage;
- (id)previewImage;
- (id)readImmutableDataWithCorruptionDetected:(char *)arg1 error:(id *)arg2;
- (unsigned long long)validate;
- (BOOL)open:(id *)arg1;
- (BOOL)containsPreviewImage;
- (id)initWithFileURL:(id)arg1;
- (id)init;

@end

@interface _MSImmutableRectangleShape : MSImmutableShapePathLayer
{
    double _fixedRadius;
    BOOL _hasConvertedToNewRoundCorners;
}

+ (Class)mutableClass;
@property(nonatomic) BOOL hasConvertedToNewRoundCorners; // @synthesize hasConvertedToNewRoundCorners=_hasConvertedToNewRoundCorners;
@property(nonatomic) double fixedRadius; // @synthesize fixedRadius=_fixedRadius;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSKeyedArchiver : MSBaseArchiver
{
    MSKeyedArchiverHelper *_archiveHelper;
    NSMutableData *_archivedData;
}

@property(retain, nonatomic) NSMutableData *archivedData; // @synthesize archivedData=_archivedData;
@property(retain, nonatomic) MSKeyedArchiverHelper *archiveHelper; // @synthesize archiveHelper=_archiveHelper;
- (void).cxx_destruct;
- (void)encodeSize:(struct CGSize)arg1 forKey:(id)arg2;
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;
- (void)encodePoint:(struct CGPoint)arg1 forKey:(id)arg2;
- (void)encodeRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)archiveRootObject:(id)arg1;
- (id)archivedDataWithRootObject:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface MSBezierInterpreter : NSObject
{
    NSBezierPath *_bezierPath;
    struct CGRect _rect;
}

+ (id)pointsFromBezierPath:(id)arg1 inRect:(struct CGRect)arg2;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(retain, nonatomic) NSBezierPath *bezierPath; // @synthesize bezierPath=_bezierPath;
- (void).cxx_destruct;
- (id)points;

@end

@interface _MSPolygonShape : MSShapePathLayer
{
    long long _numberOfPoints;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) long long numberOfPoints; // @synthesize numberOfPoints=_numberOfPoints;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSModelObjectInstanceInfo : NSObject
{
    unsigned long long _current;
    unsigned long long _total;
}

@property(nonatomic) unsigned long long total; // @synthesize total=_total;
@property(nonatomic) unsigned long long current; // @synthesize current=_current;
- (id)description;

@end

@interface MSLayerArray : NSObject <MSLayerContainment, NSFastEnumeration>
{
    NSArray *_layers;
}

+ (id)emptyArray;
+ (id)arrayWithLayers:(id)arg1;
+ (id)arrayWithLayer:(id)arg1;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (id)description;
- (id)sortedArrayByUsingComparator:(CDUnknownBlockType)arg1;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)enumerateLayers:(CDUnknownBlockType)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (id)lastLayer;
- (id)firstLayer;
- (BOOL)containsMultipleLayers;
- (BOOL)containsOneLayer;
- (BOOL)containsLayers;
- (BOOL)containsNoOrOneLayers;
- (BOOL)canBeContainedByGroup;
- (BOOL)canBeContainedByDocument;
- (BOOL)canContainLayer:(id)arg1;
- (unsigned long long)containedLayersCount;
- (id)containedLayers;
- (id)map:(CDUnknownBlockType)arg1;
- (id)commonArtboard;
- (id)layersSuitableForInsertingIntoGroup:(id)arg1;
- (id)layerToInsertAfter;
- (id)effectiveArtboard;
- (id)effectivePage;
- (id)uniqueParents;
- (id)parentOfFirstLayer;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLayers:(id)arg1;
- (void)removeUnusedStylePartsOfType:(unsigned long long)arg1;
- (id)addStylePartsOfType:(unsigned long long)arg1;
- (unsigned long long)indexOfLayerWithID:(id)arg1;
- (void)updateFlowDestinationsWithMapping:(id)arg1;
- (id)copyByGivingNewObjectIDs;

@end

@interface MSDefaultStyle : MSDefaultArchive
{
}

+ (void)saveStyleAndPatterns;
+ (void)loadStyleAndPatterns;
+ (void)setDefaultStyle:(id)arg1;
+ (id)defaultStyle;
+ (void)resetCachedStyleForTesting;
- (id)newObject;
- (Class)defaultClass;
- (id)oldDefaultsName;
- (id)filename;

@end

@interface BCSketchFileMigratorClient : NSObject
{
    NSXPCConnection *_connection;
    id <BCSketchFileMigrator> _proxy;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    CDUnknownBlockType _reply;
}

@property(copy, nonatomic) CDUnknownBlockType reply; // @synthesize reply=_reply;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore; // @synthesize semaphore=_semaphore;
@property(retain, nonatomic) id <BCSketchFileMigrator> proxy; // @synthesize proxy=_proxy;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)handleXPCError:(id)arg1;
- (void)waitUntilDoneIfSynchronous;
- (void)sendReplyWithError:(id)arg1 options:(unsigned long long)arg2;
- (void)invalidate;
- (void)migrateResourcesWithNames:(id)arg1 atURL:(id)arg2 options:(unsigned long long)arg3 withReply:(CDUnknownBlockType)arg4;
- (void)migrateDocumentAtURL:(id)arg1 intoFolderAtURL:(id)arg2 options:(unsigned long long)arg3 withReply:(CDUnknownBlockType)arg4;
- (void)validateDocumentAtURL:(id)arg1 options:(unsigned long long)arg2 withReply:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

@end

@interface MSPasteboardLayers : NSObject <MSLayerTraits>
{
    MSLayerArray *_layers;
    NSDictionary *_sharedObjects;
    NSDictionary *_localSymbols;
    NSDictionary *_foreignSymbols;
    unsigned long long _parentTraits;
    struct CGPoint _suggestedPosition;
}

+ (struct CGPoint)originForLayer:(id)arg1 rootIsPage:(BOOL)arg2;
+ (struct CGPoint)suggestedOriginForLayers:(id)arg1 rootIsPage:(BOOL)arg2;
+ (unsigned long long)parentTraitsForLayers:(id)arg1;
+ (id)pasteboardLayersWithLayers:(id)arg1;
+ (id)pasteboardLayersWithForeignLayers:(id)arg1;
+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (unsigned long long)traits;
@property(nonatomic) unsigned long long parentTraits; // @synthesize parentTraits=_parentTraits;
@property(nonatomic) struct CGPoint suggestedPosition; // @synthesize suggestedPosition=_suggestedPosition;
@property(retain, nonatomic) NSDictionary *foreignSymbols; // @synthesize foreignSymbols=_foreignSymbols;
@property(retain, nonatomic) NSDictionary *localSymbols; // @synthesize localSymbols=_localSymbols;
@property(retain, nonatomic) NSDictionary *sharedObjects; // @synthesize sharedObjects=_sharedObjects;
@property(retain, nonatomic) MSLayerArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (struct CGRect)suggestedRect;
- (id)insertInGroup:(id)arg1 atPosition:(struct CGPoint)arg2 afterLayer:(id)arg3;
- (id)insertOnPage:(id)arg1 viewport:(id)arg2 hint:(id)arg3;
- (id)layerPositionsRelativeToUnion;
- (struct CGSize)unionSize;
- (BOOL)canBeContainedInLayer:(id)arg1;
- (unsigned long long)traits;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSHotspotLayer : MSLayer
{
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSDocumentTree : NSObject
{
    MSImmutableDocumentData *_documentData;
    BCCache *_cache;
    NSMapTable *_parentByObject;
}

@property(retain, nonatomic) NSMapTable *parentByObject; // @synthesize parentByObject=_parentByObject;
@property(retain, nonatomic) BCCache *cache; // @synthesize cache=_cache;
@property(readonly, nonatomic) MSImmutableDocumentData *documentData; // @synthesize documentData=_documentData;
- (void).cxx_destruct;
- (id)ancestorLayersOfObject:(id)arg1;
- (id)ancestorsOfObject:(id)arg1;
- (id)parentForObject:(id)arg1;
- (void)storeParentsForLayersContainedInParent:(id)arg1;
- (id)init;
- (id)initWithDocumentData:(id)arg1;

@end

@interface MSAvailableOverride : NSObject
{
    MSAvailableOverride *_parent;
    MSImmutableSymbolMaster *_master;
    MSImmutableLayer *_affectedLayer;
    MSOverridePoint *_overridePoint;
    MSOverrideValue *_internalOverrideValue;
}

+ (void)enumerateOverrides:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (id)availableOverrideWithOverridePoint:(id)arg1 master:(id)arg2 overrideValue:(id)arg3 inParent:(id)arg4;
@property(readonly, nonatomic) MSOverrideValue *internalOverrideValue; // @synthesize internalOverrideValue=_internalOverrideValue;
@property(readonly, nonatomic) MSOverridePoint *overridePoint; // @synthesize overridePoint=_overridePoint;
@property(readonly, nonatomic) MSImmutableLayer *affectedLayer; // @synthesize affectedLayer=_affectedLayer;
@property(readonly, nonatomic) MSImmutableSymbolMaster *master; // @synthesize master=_master;
@property(readonly, nonatomic) __weak MSAvailableOverride *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL isAffectedLayerOrParentHidden;
@property(readonly, nonatomic) BOOL isAffectedLayerOrParentLocked;
@property(readonly, nonatomic) BOOL hasOverride;
@property(readonly, nonatomic) id overrideValue;
@property(readonly, nonatomic) id defaultValue;
@property(readonly, nonatomic) id currentValue;
@property(readonly, nonatomic) NSArray *children;
- (id)initWithOverridePoint:(id)arg1 master:(id)arg2 affectedLayer:(id)arg3 overrideValue:(id)arg4 inParent:(id)arg5;
- (id)createOverrideViewController;

@end

@interface MSSymbolOverride : MSAvailableOverride
{
    NSArray *_internalChildren;
}

@property(readonly, nonatomic) NSArray *internalChildren; // @synthesize internalChildren=_internalChildren;
- (void).cxx_destruct;
- (void)addChild:(id)arg1;
- (id)children;

@end

@interface MSLayer : _MSLayer <SnapItem, BCOutlineViewNode, MSLayerContainment, MSLayer, NSCopying, MSRectDelegate>
{
    long long skipDrawingSelectionCounter;
    BOOL _isHovering;
    MSAbsoluteRect *_absoluteRect;
}

+ (void)makeLayerNamesUnique:(id)arg1 withOptions:(long long)arg2;
+ (id)defaultName;
+ (unsigned long long)traits;
+ (id)keyPathsForValuesAffectingUserVisibleRotation;
+ (double)userVisibleRotationForRotation:(double)arg1;
+ (void)alignLayers:(id)arg1 toValue:(double)arg2 forKey:(id)arg3;
+ (struct CGRect)alignmentRectForLayers:(id)arg1;
+ (void)alignLayers:(id)arg1 withMode:(unsigned long long)arg2 toKey:(id)arg3 pixelFit:(BOOL)arg4;
+ (id)keyPathsForValuesAffectingBadgeMap;
+ (id)keyPathsForValuesAffectingPreviewImages;
+ (id)keyPathsForValuesAffectingNodeName;
+ (id)keyPathsForValuesAffectingHasHighlight;
@property(retain, nonatomic) MSAbsoluteRect *absoluteRect; // @synthesize absoluteRect=_absoluteRect;
@property(nonatomic) BOOL isHovering; // @synthesize isHovering=_isHovering;
- (void).cxx_destruct;
- (void)resetFlow;
- (void)rect:(id)arg1 didChangeFromRect:(struct CGRect)arg2;
- (id)allSymbolInstancesInChildren;
- (BOOL)canInsertIntoGroup:(id)arg1;
- (BOOL)canLockProportions;
- (BOOL)canScale;
- (BOOL)canRotate;
@property(readonly, nonatomic) BOOL isLayerExportable;
- (id)layerWithID:(id)arg1;
- (void)setHeightRespectingProportions:(double)arg1;
- (void)setWidthRespectingProportions:(double)arg1;
@property(nonatomic) struct CGPoint center;
@property(nonatomic) struct CGPoint origin;
@property(nonatomic) struct CGRect rect;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setNilValueForKey:(id)arg1;
- (BOOL)canBeTransformed;
- (void)multiplyBy:(double)arg1;
- (void)concatAncestorsAndSelfTransforms;
- (id)transform;
@property(readonly, nonatomic) struct CGAffineTransform CGTransformForFrame;
- (id)transformForRect:(struct CGRect)arg1;
@property(nonatomic) struct _CHTransformStruct transformStruct;
- (struct CGPoint)convertPointFromRuler:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToRuler:(struct CGPoint)arg1;
- (struct CGRect)convertRectToAbsoluteCoordinates:(struct CGRect)arg1;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromLayer:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toLayer:(id)arg2;
- (id)childrenIncludingSelf:(BOOL)arg1;
- (id)children;
- (id)ancestorsAndSelfTransforms;
- (id)ancestorsAndSelf;
- (id)ancestors;
- (id)parentSymbol;
- (id)parentArtboard;
@property(readonly, nonatomic) MSImmutableLayerAncestry *ancestry;
- (id)parentRoot;
- (id)parentPage;
- (BOOL)isOpen;
- (void)removeFromParent;
- (void)moveInLayerTreeInBlock:(CDUnknownBlockType)arg1;
- (void)calculateProportions;
- (BOOL)isRectIntegral;
- (void)makeRectIntegral;
- (void)makeOriginIntegral;
@property(nonatomic) struct CGPoint absolutePosition;
- (id)bezierPathWithTransforms;
- (id)bezierPath;
- (void)refreshOverlayInRect:(struct CGRect)arg1;
- (struct CGRect)transformRectToParentCoordinates:(struct CGRect)arg1;
@property(readonly, nonatomic) BOOL hasTransforms;
- (void)refreshOverlayWithAbsoluteMargins:(struct CGSize)arg1;
- (void)refreshOverlay;
@property(readonly, nonatomic) struct BCEdgePaddings influenceRectEdgePaddingsThatCascadeToContainedLayers;
- (struct CGRect)absoluteInfluenceRect;
- (struct CGRect)overlayInfluenceRectForBounds;
- (struct CGRect)influenceRectForBounds;
- (struct CGRect)overlayInfluenceRectForFrame;
- (struct CGRect)influenceRectForFrame;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (struct CGSize)calculateMinimumSize;
- (id)layerSuitableForInsertingIntoGroup:(id)arg1;
- (void)layerDidResizeFromRect:(struct CGRect)arg1 corner:(long long)arg2;
- (void)layerDidEndResize;
- (void)layerWillStartResize;
- (void)resizeWithOldGroupSize:(struct CGSize)arg1;
- (BOOL)hasSelectionHandleAtPoint:(struct CGPoint)arg1 zoomValue:(double)arg2;
- (long long)selectionHandleAtPoint:(struct CGPoint)arg1 zoom:(double)arg2;
- (BOOL)isTooSmallForPreciseHitTestingAtZoomValue:(double)arg1;
- (BOOL)hitTestRect:(struct CGRect)arg1 options:(unsigned long long)arg2;
- (BOOL)containsPoint:(struct CGPoint)arg1 options:(unsigned long long)arg2 zoomValue:(double)arg3;
- (BOOL)isLayerAtIndex:(unsigned long long)arg1 maskedAtPoint:(struct CGPoint)arg2 zoomValue:(double)arg3;
- (id)selectionHitTest:(struct CGPoint)arg1 options:(unsigned long long)arg2 zoomValue:(double)arg3 resultIndex:(unsigned long long *)arg4;
- (id)selectableLayersWithOptions:(unsigned long long)arg1;
- (BOOL)limitsSelectionToBounds;
- (BOOL)isOpenForSelectionWithOptions:(unsigned long long)arg1;
- (BOOL)isSelectableOnCanvasWithOptions:(unsigned long long)arg1;
@property(readonly, nonatomic) BOOL isExpanded;
@property(readonly, nonatomic) BOOL isSelected;
- (void)select:(BOOL)arg1 byExtendingSelection:(BOOL)arg2 showSelection:(BOOL)arg3;
- (void)select:(BOOL)arg1 byExtendingSelection:(BOOL)arg2;
- (BOOL)containsSelectedItemIncludingSelf:(BOOL)arg1;
- (void)moveBySuggestedOffset:(struct CGSize)arg1;
@property(readonly, nonatomic) struct CGRect bounds;
- (void)setName:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
@property(nonatomic) double proportions;
@property(nonatomic) BOOL constrainProportions;
- (unsigned long long)selectionCornerMaskWithZoomValue:(double)arg1;
- (struct CGRect)frameForTransforms;
- (BOOL)hasEnabledBackgroundBlur;
- (id)rootForNameUniquing;
- (id)namesOfAllLayersInContainer:(id)arg1;
- (void)makeNameUniqueInRoot:(id)arg1 withOptions:(long long)arg2;
- (void)makeNameUniqueWithOptions:(long long)arg1;
- (BOOL)isLine;
- (unsigned long long)traits;
@property(readonly, nonatomic) MSStyledLayer *styledLayer;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)objectDidInit;
- (void)performInitEmptyObject;
- (BOOL)canBeHidden;
- (struct CGRect)measurementRectWithOptions:(unsigned long long)arg1;
- (long long)cornerRectType;
- (BOOL)shouldRefreshOverlayForFlows;
- (BOOL)shouldDrawSelectionStroke;
- (BOOL)shouldDrawSelection;
- (BOOL)canSmartRotate;
- (void)select:(BOOL)arg1 byExpandingSelection:(BOOL)arg2 showSelection:(BOOL)arg3;
- (void)select:(BOOL)arg1 byExpandingSelection:(BOOL)arg2;
- (id)duplicate;
- (BOOL)shouldFlattenAfterRotate;
- (Class)handlerClass;
- (BOOL)handleDoubleClick;
- (void)layerDidResizeFromInspector:(unsigned long long)arg1;
@property(nonatomic) double userVisibleRotation;
- (id)inspectorViewControllers;
- (id)inspectorViewControllerNames;
- (BOOL)canBeHovered;
- (id)bezierPathForHover;
- (void)drawHoverWithZoom:(double)arg1 color:(id)arg2 cache:(id)arg3;
- (void)writeBitmapImageToFile:(id)arg1;
- (id)parentForInsertingLayers;
- (id)displayName;
- (void)changeColor:(id)arg1;
- (BOOL)supportsInnerOuterBorders;
- (BOOL)canSplitPaths;
- (id)contextualMenuPreviewImage;
- (id)cachedOrEmptyImageWithName:(id)arg1;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (BOOL)canConvertToOutlines;
- (id)layersByConvertingToOutlines;
- (Class)layerSnapperObjectClass;
- (struct CGRect)distanceRectangleToItem:(id)arg1 axis:(unsigned long long)arg2;
@property(readonly, nonatomic) struct CGRect rectForSnapping;
@property(readonly, nonatomic) id <SnapItem> snapItemForDrawing;
@property(readonly, nonatomic) NSArray *snapLines;
- (BOOL)canSnapSizeToLayer:(id)arg1;
- (BOOL)canSnapToLayer:(id)arg1;
- (id)hudDescription;
- (BOOL)booleanOperationCanBeReset;
- (id)replaceWithInstanceOfSymbol:(id)arg1;
@property(readonly, nonatomic) BOOL isExportableViaDragAndDrop;
- (id)cloneDictionaryReplacingImages:(id)arg1;
- (void)addMastersForInstancesToDocument:(id)arg1;
- (void)copyToLayer:(id)arg1 beforeLayer:(id)arg2;
- (void)moveToLayer:(id)arg1 beforeLayer:(id)arg2;
- (BOOL)isMasked;
- (void)handleBadgeClickWithAltState:(BOOL)arg1;
@property(readonly, nonatomic) unsigned long long badgeType;
- (BOOL)canCopyToLayer:(id)arg1 beforeLayer:(id)arg2;
- (BOOL)canMoveToLayer:(id)arg1 beforeLayer:(id)arg2;
@property(readonly, nonatomic) BOOL selectedInLayerList;
@property(readonly, nonatomic) BOOL expandableInLayerList;
- (BOOL)validateNodeName:(id *)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSString *nodeName;
@property(readonly, nonatomic) unsigned long long selectedBadgeMenuItem;
@property(readonly, nonatomic) NSMenu *badgeMenu;
@property(readonly, nonatomic) NSDictionary *previewImages;
@property(readonly, nonatomic) NSDictionary *badgeMap;
@property(readonly, nonatomic) BOOL hasHighlight;
@property(readonly, nonatomic) BOOL isActive;
@property(readonly, nonatomic) unsigned long long filterType;
@property(readonly, nonatomic) unsigned long long displayType;
- (id)lastLayer;
- (id)firstLayer;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 classFilter:(Class)arg2 block:(CDUnknownBlockType)arg3;
- (void)enumerateLayers:(CDUnknownBlockType)arg1;
- (BOOL)containsMultipleLayers;
- (BOOL)containsOneLayer;
- (BOOL)containsLayers;
- (BOOL)containsNoOrOneLayers;
- (BOOL)canBeContainedByDocument;
- (BOOL)canBeContainedByGroup;
- (BOOL)canContainLayer:(id)arg1;
- (unsigned long long)containedLayersCount;
- (id)containedLayers;
- (void)setIsVisible:(BOOL)arg1;
- (void)followMaskChainForLayerAtIndex:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)closestClippingLayer;
- (id)candidatesForMasking;
- (BOOL)isPartOfClippingMask;
- (BOOL)hasClippingMask;
- (void)resetConstraints;
- (void)changeValueForKeysInBlock:(CDUnknownBlockType)arg1;
@property(nonatomic) BOOL hasFixedEdges;
- (void)setFixed:(BOOL)arg1 forEdge:(unsigned long long)arg2;
@property(nonatomic) BOOL hasFixedHeight;
@property(nonatomic) BOOL hasFixedWidth;
@property(nonatomic) BOOL hasFixedBottom;
@property(nonatomic) BOOL hasFixedTop;
@property(nonatomic) BOOL hasFixedRight;
@property(nonatomic) BOOL hasFixedLeft;
- (BOOL)hasFixedEdge:(unsigned long long)arg1;
@property(readonly, nonatomic) BOOL canFixHeight;
@property(readonly, nonatomic) BOOL canFixWidth;
@property(readonly, nonatomic) BOOL canFixBottom;
@property(readonly, nonatomic) BOOL canFixTop;
@property(readonly, nonatomic) BOOL canFixRight;
@property(readonly, nonatomic) BOOL canFixLeft;
- (id)resizingConstraintKeys;
- (id)parentRootForAbsoluteRect;
- (void)replaceFonts:(id)arg1;
- (void)applyOverride:(id)arg1 toPoint:(id)arg2;
- (void)applyOverrides:(id)arg1;
- (id)overridePointsWithParent:(id)arg1;
- (id)overridePoints;
- (id)CSSAttributes;
- (id)CSSRotationString;
- (id)CSSAttributeString;
- (long long)layoutDirection;
- (id)setupWithLayerBuilderDictionary:(id)arg1;
- (void)configureBackgroundOfRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL isFlippedHorizontal;
@property(readonly, nonatomic) BOOL isFlippedVertical;
@property(readonly, nonatomic) NSString *objectID;
@property(readonly, nonatomic) double rotation;
@property(readonly) Class superclass;

@end

@interface _MSImmutableSharedObjectContainer : MSImmutableModelObject
{
    NSArray *_objects;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *objects; // @synthesize objects=_objects;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableCurvePoint : _MSImmutableCurvePoint <MSCurvePoint>
{
}

@property(readonly, nonatomic) BOOL isRounded;
@property(readonly, nonatomic) BOOL isStraight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDocumentWriter : NSObject <MSDocumentPreviewGeneration>
{
    NSDictionary *_UIMetadata;
    CDUnknownBlockType _previewGenerationBlock;
    MSJSONZippedArchiver *_archiver;
    NSData *_previewData;
    NSData *_libraryPreview;
}

+ (id)metadataForNewFile;
@property(retain, nonatomic) NSData *libraryPreview; // @synthesize libraryPreview=_libraryPreview;
@property(retain, nonatomic) NSData *previewData; // @synthesize previewData=_previewData;
@property(retain, nonatomic) MSJSONZippedArchiver *archiver; // @synthesize archiver=_archiver;
@property(copy, nonatomic) CDUnknownBlockType previewGenerationBlock; // @synthesize previewGenerationBlock=_previewGenerationBlock;
@property(retain, nonatomic) NSDictionary *UIMetadata; // @synthesize UIMetadata=_UIMetadata;
- (void).cxx_destruct;
- (BOOL)writeDocumentData:(id)arg1 isAutosave:(BOOL)arg2 error:(id *)arg3;
- (id)initWithFileURL:(id)arg1;
- (id)init;
- (id)findLibraryPreviewArtboardForDocument:(id)arg1 outPage:(id *)arg2;
- (id)previewImageForDocument:(id)arg1 page:(id)arg2 rect:(struct CGRect)arg3;
- (id)generatePreviewsForDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSImmutableSharedStyleContainer : MSImmutableSharedObjectContainer
{
}

+ (Class)mutableClass;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSImmutableSliceLayer : MSImmutableLayer
{
    BOOL _hasBackgroundColor;
    MSImmutableColor *_backgroundColor;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) BOOL hasBackgroundColor; // @synthesize hasBackgroundColor=_hasBackgroundColor;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableImageCollection : _MSImmutableImageCollection
{
}

- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (id)imageWithSHA1:(id)arg1;
- (id)treeAsDictionary;
- (void)migratePropertiesFromV75OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV74OrEarlierWithUnarchiver:(id)arg1;

@end

@interface MSCurvePointAsymmetricBehaviour : MSCurvePointBehaviour
{
}

+ (void)curveToChangedInPoint:(id)arg1;
+ (void)curveFromChangedInPoint:(id)arg1;
+ (void)didAssignBehaviorToHandle:(unsigned long long)arg1 ofPoint:(id)arg2 previousMode:(long long)arg3;

@end

@interface _MSExportOptions : MSModelObject
{
    NSArray *_includedLayerIds;
    unsigned long long _layerOptions;
    BOOL _shouldTrim;
    NSMutableArray *_exportFormats;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveExportFormatIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllExportFormats;
- (void)removeExportFormatsAtIndexes:(id)arg1;
- (void)removeExportFormatAtIndex:(unsigned long long)arg1;
- (void)removeExportFormat:(id)arg1;
- (void)insertExportFormats:(id)arg1 afterExportFormat:(id)arg2;
- (void)insertExportFormat:(id)arg1 afterExportFormat:(id)arg2;
- (void)insertExportFormats:(id)arg1 beforeExportFormat:(id)arg2;
- (void)insertExportFormat:(id)arg1 beforeExportFormat:(id)arg2;
- (void)insertExportFormat:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addExportFormats:(id)arg1;
- (void)addExportFormat:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *exportFormats; // @synthesize exportFormats=_exportFormats;
@property(nonatomic) BOOL shouldTrim; // @synthesize shouldTrim=_shouldTrim;
@property(nonatomic) unsigned long long layerOptions; // @synthesize layerOptions=_layerOptions;
@property(retain, nonatomic) NSArray *includedLayerIds; // @synthesize includedLayerIds=_includedLayerIds;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSLayerGroup : MSStyledLayer
{
    BOOL _hasClickThrough;
    NSString *_sharedObjectID;
    NSMutableArray *_layers;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveLayerIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllLayers;
- (void)removeLayersAtIndexes:(id)arg1;
- (void)removeLayerAtIndex:(unsigned long long)arg1;
- (void)removeLayer:(id)arg1;
- (void)insertLayers:(id)arg1 afterLayer:(id)arg2;
- (void)insertLayer:(id)arg1 afterLayer:(id)arg2;
- (void)insertLayers:(id)arg1 beforeLayer:(id)arg2;
- (void)insertLayer:(id)arg1 beforeLayer:(id)arg2;
- (void)insertLayer:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addLayers:(id)arg1;
- (void)addLayer:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(retain, nonatomic) NSString *sharedObjectID; // @synthesize sharedObjectID=_sharedObjectID;
@property(nonatomic) BOOL hasClickThrough; // @synthesize hasClickThrough=_hasClickThrough;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableSymbol : _MSImmutableSymbol
{
}

+ (id)defaultName;
- (id)masterInstance;

@end

@interface MSImmutableGraphicsContextSettings : _MSImmutableGraphicsContextSettings
{
}

- (int)CGBlendMode;
- (BOOL)shouldChangeGraphicsContext;

@end

@interface _MSImmutableLayerGroup : MSImmutableStyledLayer
{
    BOOL _hasClickThrough;
    NSString *_sharedObjectID;
    NSArray *_layers;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(retain, nonatomic) NSString *sharedObjectID; // @synthesize sharedObjectID=_sharedObjectID;
@property(nonatomic) BOOL hasClickThrough; // @synthesize hasClickThrough=_hasClickThrough;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSForeignObject : _MSForeignObject
{
}

- (id)unlinkFromRemote;
- (id)masterFromLibrary:(id)arg1;
@property(readonly, nonatomic) NSString *remoteShareID;
- (void)setLocalShareID:(id)arg1;
- (id)localShareID;
@property(retain, nonatomic) MSModelObject *originalObject;
@property(retain, nonatomic) MSModelObject *localObject;
- (void)syncWithRemote:(id)arg1;
- (BOOL)isOutOfDateWithLibrary:(id)arg1;
- (id)initWithOriginalObject:(id)arg1 inLibrary:(id)arg2;

@end

@interface MSCurvePointMirroredBehaviour : MSCurvePointBehaviour
{
}

+ (void)curveToChangedInPoint:(id)arg1;
+ (void)curveFromChangedInPoint:(id)arg1;
+ (void)didAssignBehaviorToHandle:(unsigned long long)arg1 ofPoint:(id)arg2 previousMode:(long long)arg3;

@end

@interface _MSGradient : MSModelObject
{
    double _elipseLength;
    struct CGPoint _from;
    long long _gradientType;
    struct CGPoint _to;
    NSMutableArray *_stops;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveGradientStopIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllGradientStops;
- (void)removeGradientStopsAtIndexes:(id)arg1;
- (void)removeGradientStopAtIndex:(unsigned long long)arg1;
- (void)removeGradientStop:(id)arg1;
- (void)insertGradientStops:(id)arg1 afterGradientStop:(id)arg2;
- (void)insertGradientStop:(id)arg1 afterGradientStop:(id)arg2;
- (void)insertGradientStops:(id)arg1 beforeGradientStop:(id)arg2;
- (void)insertGradientStop:(id)arg1 beforeGradientStop:(id)arg2;
- (void)insertGradientStop:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addGradientStops:(id)arg1;
- (void)addGradientStop:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *stops; // @synthesize stops=_stops;
@property(nonatomic) struct CGPoint to; // @synthesize to=_to;
@property(nonatomic) long long gradientType; // @synthesize gradientType=_gradientType;
@property(nonatomic) struct CGPoint from; // @synthesize from=_from;
@property(nonatomic) double elipseLength; // @synthesize elipseLength=_elipseLength;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSDocumentData : MSModelObject
{
    unsigned long long _colorSpace;
    unsigned long long _currentPageIndex;
    NSDictionary *_userInfo;
    MSAssetCollection *_assets;
    NSMutableArray *_foreignSymbols;
    MSSharedStyleContainer *_layerStyles;
    MSSymbolContainer *_layerSymbols;
    MSSharedTextStyleContainer *_layerTextStyles;
    NSMutableArray *_pages;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)movePageIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllPages;
- (void)removePagesAtIndexes:(id)arg1;
- (void)removePageAtIndex:(unsigned long long)arg1;
- (void)removePage:(id)arg1;
- (void)insertPages:(id)arg1 afterPage:(id)arg2;
- (void)insertPage:(id)arg1 afterPage:(id)arg2;
- (void)insertPages:(id)arg1 beforePage:(id)arg2;
- (void)insertPage:(id)arg1 beforePage:(id)arg2;
- (void)insertPage:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addPages:(id)arg1;
- (void)addPage:(id)arg1;
- (void)moveForeignSymbolIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllForeignSymbols;
- (void)removeForeignSymbolsAtIndexes:(id)arg1;
- (void)removeForeignSymbolAtIndex:(unsigned long long)arg1;
- (void)removeForeignSymbol:(id)arg1;
- (void)insertForeignSymbols:(id)arg1 afterForeignSymbol:(id)arg2;
- (void)insertForeignSymbol:(id)arg1 afterForeignSymbol:(id)arg2;
- (void)insertForeignSymbols:(id)arg1 beforeForeignSymbol:(id)arg2;
- (void)insertForeignSymbol:(id)arg1 beforeForeignSymbol:(id)arg2;
- (void)insertForeignSymbol:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addForeignSymbols:(id)arg1;
- (void)addForeignSymbol:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *pages; // @synthesize pages=_pages;
@property(retain, nonatomic) MSSharedTextStyleContainer *layerTextStyles; // @synthesize layerTextStyles=_layerTextStyles;
@property(retain, nonatomic) MSSymbolContainer *layerSymbols; // @synthesize layerSymbols=_layerSymbols;
@property(retain, nonatomic) MSSharedStyleContainer *layerStyles; // @synthesize layerStyles=_layerStyles;
@property(retain, nonatomic) NSArray *foreignSymbols; // @synthesize foreignSymbols=_foreignSymbols;
@property(retain, nonatomic) MSAssetCollection *assets; // @synthesize assets=_assets;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) unsigned long long currentPageIndex; // @synthesize currentPageIndex=_currentPageIndex;
@property(nonatomic) unsigned long long colorSpace; // @synthesize colorSpace=_colorSpace;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSTriangleShape : MSShapePathLayer
{
    BOOL _isEquilateral;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) BOOL isEquilateral; // @synthesize isEquilateral=_isEquilateral;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableDocumentData : MSImmutableModelObject
{
    unsigned long long _colorSpace;
    unsigned long long _currentPageIndex;
    NSDictionary *_userInfo;
    MSImmutableAssetCollection *_assets;
    NSArray *_foreignSymbols;
    MSImmutableSharedStyleContainer *_layerStyles;
    MSImmutableSymbolContainer *_layerSymbols;
    MSImmutableSharedTextStyleContainer *_layerTextStyles;
    NSArray *_pages;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *pages; // @synthesize pages=_pages;
@property(retain, nonatomic) MSImmutableSharedTextStyleContainer *layerTextStyles; // @synthesize layerTextStyles=_layerTextStyles;
@property(retain, nonatomic) MSImmutableSymbolContainer *layerSymbols; // @synthesize layerSymbols=_layerSymbols;
@property(retain, nonatomic) MSImmutableSharedStyleContainer *layerStyles; // @synthesize layerStyles=_layerStyles;
@property(retain, nonatomic) NSArray *foreignSymbols; // @synthesize foreignSymbols=_foreignSymbols;
@property(retain, nonatomic) MSImmutableAssetCollection *assets; // @synthesize assets=_assets;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) unsigned long long currentPageIndex; // @synthesize currentPageIndex=_currentPageIndex;
@property(nonatomic) unsigned long long colorSpace; // @synthesize colorSpace=_colorSpace;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSArchiveHeader : NSObject <MSCoding>
{
    long long _version;
    long long _compatibilityVersion;
    NSDictionary *_metadata;
    id _root;
}

+ (id)metadataForNewHeader;
@property(retain, nonatomic) id root; // @synthesize root=_root;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) long long compatibilityVersion; // @synthesize compatibilityVersion=_compatibilityVersion;
@property(nonatomic) long long version; // @synthesize version=_version;
- (void).cxx_destruct;
- (void)encodeAsJSON:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;
- (id)initWithUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;

@end

@interface MSJSONDataArchiver : MSJSONArchiver
{
    BCJSONEncoder *_dataEncoder;
    NSMutableData *_archivedData;
}

+ (id)archiveStringWithRootObject:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSMutableData *archivedData; // @synthesize archivedData=_archivedData;
@property(retain, nonatomic) BCJSONEncoder *dataEncoder; // @synthesize dataEncoder=_dataEncoder;
- (void).cxx_destruct;
- (void)archiveRootObject:(id)arg1;
- (id)replacementObjectForObject:(id)arg1;
- (id)archivedDataWithRootObject:(id)arg1 error:(id *)arg2;
- (id)encoder;
- (id)init;

@end

@interface _MSStyleBorderOptions : MSStylePart
{
    NSArray *_dashPattern;
    unsigned long long _lineCapStyle;
    unsigned long long _lineJoinStyle;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) unsigned long long lineJoinStyle; // @synthesize lineJoinStyle=_lineJoinStyle;
@property(nonatomic) unsigned long long lineCapStyle; // @synthesize lineCapStyle=_lineCapStyle;
@property(copy, nonatomic) NSArray *dashPattern; // @synthesize dashPattern=_dashPattern;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSSharedObject : _MSSharedObject <BCSortable>
{
}

- (id)parentGroup;
- (unsigned long long)type;
- (BOOL)isOutOfSyncWithInstance:(struct MSModelObject *)arg1;
- (struct MSModelObject *)newInstance;
- (BOOL)isSharedObjectForInstance:(struct MSModelObject *)arg1;
- (void)unregisterInstance:(struct MSModelObject *)arg1;
- (void)registerInstance:(struct MSModelObject *)arg1;
- (void)objectDidInit;
- (id)initWithName:(id)arg1 sharedObjectID:(id)arg2 value:(struct MSModelObject *)arg3;
- (id)initWithName:(id)arg1 firstInstance:(struct MSModelObject *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *name;
@property(readonly) Class superclass;

@end

@interface MSDefaultTextStyle : MSDefaultArchive
{
}

+ (void)setDefaultTextStyle:(id)arg1;
+ (id)defaultTextStyle;
+ (void)recordTextStyleForLayer:(id)arg1;
- (Class)defaultClass;
- (id)filename;

@end

@interface MSTreeDiff : NSObject
{
    MSImmutableDocumentData *_firstDoc;
    MSImmutableDocumentData *_secondDoc;
    NSMutableArray *_mutableDiffs;
    NSMutableArray *_firstObjectAncestorStack;
    NSMutableArray *_secondObjectAncestorStack;
}

@property(retain, nonatomic) NSMutableArray *secondObjectAncestorStack; // @synthesize secondObjectAncestorStack=_secondObjectAncestorStack;
@property(retain, nonatomic) NSMutableArray *firstObjectAncestorStack; // @synthesize firstObjectAncestorStack=_firstObjectAncestorStack;
@property(retain, nonatomic) NSMutableArray *mutableDiffs; // @synthesize mutableDiffs=_mutableDiffs;
@property(retain, nonatomic) MSImmutableDocumentData *secondDoc; // @synthesize secondDoc=_secondDoc;
@property(retain, nonatomic) MSImmutableDocumentData *firstDoc; // @synthesize firstDoc=_firstDoc;
- (void).cxx_destruct;
- (BOOL)containsLayerWithTraits:(unsigned long long)arg1;
- (BOOL)someChangedPropertiesExhibitTrait:(unsigned long long)arg1 allKeysWereCompared:(char *)arg2;
- (BOOL)changedPropertiesAllExhibitTrait:(unsigned long long)arg1 allKeysWereCompared:(char *)arg2;
- (id)description;
- (struct CGRect)overlayDirtyDiffRect;
- (struct CGRect)contentDirtyDiffRectWithCache:(id)arg1;
- (void)addDiffPairForFirstObject:(id)arg1 secondObject:(id)arg2;
- (void)diffObject:(id)arg1 withObject:(id)arg2;
- (void)diffObjects:(id)arg1 withObjects:(id)arg2;
- (id)diffs;
- (id)init;
- (id)initWithFirstDocument:(id)arg1 secondDocument:(id)arg2;
- (BOOL)subTreeRootContainsSymbolChange:(id)arg1;
- (BOOL)symbolsChanged;

@end

@interface _MSImmutableSymbolContainer : MSImmutableSharedObjectContainer
{
}

+ (Class)mutableClass;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSModelObjectCommon : NSObject <MSModelObjectCommon>
{
    MSModelObjectCacheGeneration *_modelObjectCacheGeneration;
    NSString *_objectID;
    MSModelObjectCache *_cache;
}

+ (id)generateObjectID;
+ (id)defaultName;
+ (void)clearInstanceCount;
+ (void)printInstanceCount:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL hasModelObjectCacheGeneration;
@property(readonly) MSModelObjectCacheGeneration *modelObjectCacheGeneration;
- (BOOL)propertiesAreEqual:(id)arg1;
- (id)primitiveObjectID;
@property(copy, nonatomic) NSString *objectID; // @synthesize objectID=_objectID;
- (BOOL)hasObjectID;
- (id)recursivelyGenerateObjectID;
- (id)generateObjectID;
- (void)enumerateDescendants:(CDUnknownBlockType)arg1 withAncestors:(id)arg2;
- (void)enumerateDescendants:(CDUnknownBlockType)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)setNilValueForKey:(id)arg1;
- (id)defaultName;
- (void)objectDidInit;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (void)performInitEmptyObject;
- (id)initWithNoSetup;
- (id)initWithBlock:(CDUnknownBlockType)arg1;
- (id)init;
@property(readonly, copy) NSString *description;
- (id)treeAsDictionary;
- (id)simpleTreeStructure;
- (id)treeStructure;
- (void)appendTreeStructureToString:(id)arg1 withIndent:(unsigned long long)arg2;
- (void)appendSimpleStructureToString:(id)arg1 withIndent:(unsigned long long)arg2;
- (void)recordDeallocation;
- (void)recordAllocation;
- (BOOL)isContainedByInstanceOfForeignSymbol:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSFeatureAvailability : NSObject
{
}

+ (BOOL)builtInRemoteLibrariesEnabled;
+ (void)setBuiltInRemoteLibrariesEnabled:(BOOL)arg1;
+ (BOOL)shouldArchiveMSAttributedStringAsJSON;
+ (void)setIsComponentsPanelEnabled:(BOOL)arg1;
+ (BOOL)isComponentsPanelEnabled;
+ (void)setFlowsEnabled:(BOOL)arg1;
+ (BOOL)flowsEnabled;
+ (void)setDataSuppliersEnabled:(BOOL)arg1;
+ (BOOL)dataSuppliersEnabled;
+ (void)setLibraryStylesEnabled:(BOOL)arg1;
+ (BOOL)libraryStylesEnabled;
+ (void)setFeature:(id)arg1 enabled:(BOOL)arg2;
+ (BOOL)isFeatureEnabled:(id)arg1;
+ (void)enableFeatureAvailability;

@end

@interface MSLegacyDocumentReader : MSDocumentReader
{
    BOOL _documentWasMigrated;
    NSDictionary *_UIMetadata;
    NSDictionary *_metadata;
    BCStructuredFile *_file;
    NSURL *_fileURL;
    unsigned long long _documentFileState;
}

@property(readonly, nonatomic) unsigned long long documentFileState; // @synthesize documentFileState=_documentFileState;
@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(retain, nonatomic) BCStructuredFile *file; // @synthesize file=_file;
- (id)metadata;
- (BOOL)documentWasMigrated;
- (void).cxx_destruct;
- (void)repair;
- (id)UIMetadata;
- (id)data;
- (id)readImmutableDataWithCorruptionDetected:(char *)arg1 error:(id *)arg2;
- (unsigned long long)validate;
- (BOOL)open:(id *)arg1;
- (BOOL)checkNeedsMigration:(id *)arg1;
- (BOOL)migrateUsingXPC:(id *)arg1;
- (BOOL)validateMigration;
- (BOOL)containsPreviewImage;
- (void)dealloc;
- (id)initWithFileURL:(id)arg1;
- (id)init;

@end

@interface _MSStylePart : MSModelObject
{
    BOOL _isEnabled;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleBorder : MSStyleBasicFill
{
    long long _position;
    double _thickness;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) double thickness; // @synthesize thickness=_thickness;
@property(nonatomic) long long position; // @synthesize position=_position;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSPasteboardManager : NSObject
{
    NSMutableArray *_readers;
    NSMutableArray *_writers;
}

+ (void)registerViewForSupportedDraggedTypes:(id)arg1;
+ (void)registerWriter:(id)arg1;
+ (void)registerReader:(id)arg1;
+ (void)writePasteboardLayers:(id)arg1 toPasteboard:(id)arg2;
+ (id)readPasteboardLayersFromDrag:(id)arg1 colorSpace:(id)arg2;
+ (id)readPasteboardLayersFromPasteboard:(id)arg1 colorSpace:(id)arg2 options:(unsigned long long)arg3;
+ (id)applicationPasteboardManager;
@property(retain, nonatomic) NSMutableArray *writers; // @synthesize writers=_writers;
@property(retain, nonatomic) NSMutableArray *readers; // @synthesize readers=_readers;
- (void).cxx_destruct;
- (void)registerViewForSupportedDraggedTypes:(id)arg1;
- (void)registerReader:(id)arg1;
- (void)registerWriter:(id)arg1;
- (void)writePasteboardLayers:(id)arg1 toPasteboard:(id)arg2;
- (id)readPasteboardLayersFromPasteboard:(id)arg1 colorSpace:(id)arg2 options:(unsigned long long)arg3 sender:(id)arg4;
- (id)readPasteboardLayersFromPasteboard:(id)arg1 colorSpace:(id)arg2 options:(unsigned long long)arg3;
- (id)readPasteboardLayersFromDrag:(id)arg1 colorSpace:(id)arg2;
- (id)init;
- (void)registerDefaultReadersAndWriters;

@end

@interface MSDocumentError : NSError
{
}

+ (id)errorWithCode:(unsigned long long)arg1;
- (id)localizedFailureReason;

@end

@interface MSKeyedUnarchiveHelper : NSKeyedUnarchiver
{
    MSKeyedUnarchiver *_unarchiver;
}

@property(nonatomic) __weak MSKeyedUnarchiver *unarchiver; // @synthesize unarchiver=_unarchiver;
- (void).cxx_destruct;

@end

@interface MSArchivedColor : NSObject <NSCoding>
{
    double r;
    double g;
    double b;
    double a;
}

- (void)encodeWithCoder:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MSKeyedUnarchiver : MSBaseUnarchiver
{
    NSDictionary *_legacyImages;
    MSKeyedUnarchiveHelper *_unarchiveHelper;
}

+ (id)unarchiveObjectFromURL:(id)arg1 error:(id *)arg2;
+ (void)defineReplacementClasses;
+ (void)initialize;
@property(retain, nonatomic) MSKeyedUnarchiveHelper *unarchiveHelper; // @synthesize unarchiveHelper=_unarchiveHelper;
@property(retain, nonatomic) NSDictionary *legacyImages; // @synthesize legacyImages=_legacyImages;
- (void).cxx_destruct;
- (struct CGSize)decodeSizeForKey:(id)arg1 withDefault:(struct CGSize)arg2;
- (long long)decodeIntegerForKey:(id)arg1 withDefault:(long long)arg2;
- (struct CGPoint)decodePointForKey:(id)arg1 withDefault:(struct CGPoint)arg2;
- (struct CGRect)decodeRectForKey:(id)arg1 withDefault:(struct CGRect)arg2;
- (BOOL)decodeBoolForKey:(id)arg1 withDefault:(BOOL)arg2;
- (double)decodeDoubleForKey:(id)arg1 withDefault:(double)arg2;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (BOOL)containsValueForKey:(id)arg1;
- (id)decodeRoot;
- (id)initForReadingWithData:(id)arg1;

@end

@interface MSImageCollection : _MSImageCollection
{
}

- (id)treeAsDictionary;

@end

@interface _MSImmutableSymbolInstance : MSImmutableStyledLayer
{
    double _horizontalSpacing;
    double _scale;
    NSString *_symbolID;
    double _verticalSpacing;
    NSArray *_overrideValues;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *overrideValues; // @synthesize overrideValues=_overrideValues;
@property(nonatomic) double verticalSpacing; // @synthesize verticalSpacing=_verticalSpacing;
@property(retain, nonatomic) NSString *symbolID; // @synthesize symbolID=_symbolID;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) double horizontalSpacing; // @synthesize horizontalSpacing=_horizontalSpacing;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSStarShape : MSShapePathLayer
{
    long long _numberOfPoints;
    double _radius;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) long long numberOfPoints; // @synthesize numberOfPoints=_numberOfPoints;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableExportPreset : _MSImmutableExportPreset
{
}

@end

@interface _MSImmutableCurvePoint : MSImmutableModelObject
{
    double _cornerRadius;
    struct CGPoint _curveFrom;
    long long _curveMode;
    struct CGPoint _curveTo;
    BOOL _hasCurveFrom;
    BOOL _hasCurveTo;
    struct CGPoint _point;
}

+ (Class)mutableClass;
@property(nonatomic) struct CGPoint point; // @synthesize point=_point;
@property(nonatomic) BOOL hasCurveTo; // @synthesize hasCurveTo=_hasCurveTo;
@property(nonatomic) BOOL hasCurveFrom; // @synthesize hasCurveFrom=_hasCurveFrom;
@property(nonatomic) struct CGPoint curveTo; // @synthesize curveTo=_curveTo;
@property(nonatomic) long long curveMode; // @synthesize curveMode=_curveMode;
@property(nonatomic) struct CGPoint curveFrom; // @synthesize curveFrom=_curveFrom;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSImmutableLayoutGrid : MSImmutableBaseGrid
{
    double _columnWidth;
    BOOL _drawHorizontal;
    BOOL _drawHorizontalLines;
    BOOL _drawVertical;
    double _gutterHeight;
    double _gutterWidth;
    BOOL _guttersOutside;
    double _horizontalOffset;
    double _numberOfColumns;
    double _rowHeightMultiplication;
    double _totalWidth;
}

+ (Class)mutableClass;
@property(nonatomic) double totalWidth; // @synthesize totalWidth=_totalWidth;
@property(nonatomic) double rowHeightMultiplication; // @synthesize rowHeightMultiplication=_rowHeightMultiplication;
@property(nonatomic) double numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(nonatomic) double horizontalOffset; // @synthesize horizontalOffset=_horizontalOffset;
@property(nonatomic) BOOL guttersOutside; // @synthesize guttersOutside=_guttersOutside;
@property(nonatomic) double gutterWidth; // @synthesize gutterWidth=_gutterWidth;
@property(nonatomic) double gutterHeight; // @synthesize gutterHeight=_gutterHeight;
@property(nonatomic) BOOL drawVertical; // @synthesize drawVertical=_drawVertical;
@property(nonatomic) BOOL drawHorizontalLines; // @synthesize drawHorizontalLines=_drawHorizontalLines;
@property(nonatomic) BOOL drawHorizontal; // @synthesize drawHorizontal=_drawHorizontal;
@property(nonatomic) double columnWidth; // @synthesize columnWidth=_columnWidth;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableSharedObjectContainer : _MSImmutableSharedObjectContainer
{
}

@end

@interface MSLayerMovement : NSObject
{
}

+ (void)moveToBack:(id)arg1;
+ (void)moveToFront:(id)arg1;
+ (void)moveBackward:(id)arg1;
+ (void)moveToTopOfHierarchy:(id)arg1;
+ (BOOL)canMoveLayerToTopOfHierarchy:(id)arg1;
+ (void)moveLayer:(id)arg1 withParent:(id)arg2 toNewParent:(id)arg3 forceTop:(BOOL)arg4;
+ (void)moveUpHierarchy:(id)arg1;
+ (BOOL)canMoveLayerUpHierarchy:(id)arg1;
+ (BOOL)canMoveLayersBackward:(id)arg1;
+ (BOOL)canMoveLayersForward:(id)arg1;
+ (void)moveForward:(id)arg1;

@end

@interface MSGraphicsContextSettings : _MSGraphicsContextSettings
{
}

- (id)description;

@end

@interface MSPath : NSObject
{
    struct CGPath *_CGPath;
    long long _signedElementCount;
    NSArray *_contours;
}

+ (id)pathWithEllipseInRect:(struct CGRect)arg1;
+ (id)pathWithRect:(struct CGRect)arg1;
+ (id)pathWithSubPaths:(id)arg1;
@property(copy, nonatomic) NSArray *contours; // @synthesize contours=_contours;
@property(nonatomic) long long signedElementCount; // @synthesize signedElementCount=_signedElementCount;
@property(readonly, nonatomic) struct CGPath *CGPath; // @synthesize CGPath=_CGPath;
- (void).cxx_destruct;
- (id)pathWithInset:(double)arg1;
- (id)reversedPath;
- (id)debugQuickLookObject;
- (id)transformedPathUsingAffineTransform:(struct CGAffineTransform)arg1;
@property(readonly, nonatomic) unsigned long long elementCount;
@property(readonly, nonatomic) BOOL isEmpty;
@property(readonly, nonatomic) BOOL isRectangular;
@property(readonly, nonatomic) struct CGRect controlPointBounds;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, nonatomic) struct CGRect safeBounds;
- (id)init;
- (id)initWithEllipseInRect:(struct CGRect)arg1;
- (id)initWithSquircleInRect:(struct CGRect)arg1 radius:(double)arg2;
- (id)initWithRoundedRect:(struct CGRect)arg1 radius:(double)arg2;
- (id)initWithRect:(struct CGRect)arg1;
- (id)initWithBezierPath:(id)arg1;
- (void)dealloc;
- (id)initWithCGPath:(struct CGPath *)arg1;
- (id)booleanExclusiveOrWith:(id)arg1;
- (id)booleanSubtractWith:(id)arg1;
- (id)booleanIntersectWith:(id)arg1;
- (id)booleanUnionWith:(id)arg1;
- (id)booleanOp:(long long)arg1 withPath:(id)arg2;
- (id)outlinePathWithLineWidth:(double)arg1 borderOptions:(id)arg2 context:(struct CGContext *)arg3;
- (id)pathByGrowingBy:(double)arg1;
- (id)insetPathBy:(double)arg1 borderOptions:(id)arg2 context:(struct CGContext *)arg3;
- (id)insetPathBy:(double)arg1;
- (id)pathWithOuterPathOfSize:(double)arg1;
- (id)outerPathWithRect:(struct CGRect)arg1;
- (void)addClipForWindingRule:(unsigned long long)arg1 context:(struct CGContext *)arg2;
- (void)clipContext:(struct CGContext *)arg1 windingRule:(unsigned long long)arg2 inBlock:(CDUnknownBlockType)arg3;
- (struct CGContext *)createHelperContext;

@end

@interface MSImmutableDocumentData : _MSImmutableDocumentData <MSLayerContainment, MSDocumentData>
{
    NSDictionary *_metadata;
    NSDictionary *_symbolsIndexedByID;
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (id)loadDocumentDataWithMetadata:(id)arg1 loadBlock:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) NSDictionary *symbolsIndexedByID; // @synthesize symbolsIndexedByID=_symbolsIndexedByID;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
- (void).cxx_destruct;
- (id)pagesAndArtboardsMetadata;
- (id)allSymbols;
- (id)localSymbols;
- (id)allArtboards;
- (BOOL)wasSavedByTestVersion;
- (BOOL)wasSavedByOldVersion;
- (id)usedFontNames;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
@property(readonly, nonatomic) MSImmutablePage *currentPage;
- (id)artboardWithID:(id)arg1 page:(id *)arg2;
- (id)artboardWithID:(id)arg1;
- (id)symbolWithID:(id)arg1;
- (id)pageWithID:(id)arg1;
- (void)objectDidInit;
- (id)defaultPagesArray;
- (void)performInitEmptyObject;
- (void)performInitWithMutableModelObject:(id)arg1;
- (id)newPageForMigratedSymbols:(id)arg1;
- (void)arrangeMigratedSymbolsInGrid:(id)arg1;
- (void)stripRedundantOverridesFromInstances:(id)arg1 ofSymbol:(id)arg2;
- (void)stripRedundantOverridesFromInstancesOfSymbols:(id)arg1;
- (id)migratedSymbolFromSymbol:(id)arg1 group:(id)arg2;
- (id)migratedSymbolsFromOldSymbols:(id)arg1;
- (void)migratePropertiesFromV91OrEarlierWithUnarchiver:(id)arg1;
- (void)regenerateObjectIDOnSymbolMaster:(id)arg1;
- (void)migratePropertiesFromV78OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV62OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV60OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV54OrEarlierWithUnarchiver:(id)arg1;
- (BOOL)symbolsChangedSincePreviousDocument:(id)arg1;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)enumerateLayers:(CDUnknownBlockType)arg1;
- (id)lastLayer;
- (id)firstLayer;
- (BOOL)canContainLayer:(id)arg1;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (BOOL)containsNoOrOneLayers;
- (BOOL)containsLayers;
- (BOOL)containsMultipleLayers;
- (BOOL)containsOneLayer;
- (unsigned long long)containedLayersCount;
- (id)containedLayers;
- (BOOL)canBeContainedByDocument;
- (BOOL)canBeContainedByGroup;
- (id)subObjectsForTreeDiff;
@property(readonly, nonatomic) BOOL containsUnavailableFontNames;
@property(readonly, nonatomic) NSSet *unavailableFontNames;
@property(readonly, nonatomic) NSSet *fontNames;
- (struct CGRect)overlayRectForAncestors:(id)arg1 document:(id)arg2;
- (struct CGRect)influenceRectForAncestors:(id)arg1 document:(id)arg2 cache:(id)arg3;
- (void)trackColors:(id)arg1 withinHierarchyOf:(id)arg2 excludeForeignSymbols:(BOOL)arg3;
- (void)trackColors:(id)arg1 excludeForeignSymbols:(BOOL)arg2;
- (id)colorFinderQueue;
- (void)findFrequentColorsForUse:(unsigned long long)arg1 maximumColorCount:(unsigned long long)arg2 ignoreAlpha:(BOOL)arg3 excludeForeignSymbols:(BOOL)arg4 completionHandler:(CDUnknownBlockType)arg5;

// Remaining properties
@property(readonly, nonatomic) NSArray *pages;

@end

@interface MSArtboardPreset : NSObject <NSCopying>
{
    BOOL _offersLandscapeVariant;
    BOOL _allowResizedMatching;
    BOOL _isSizeToFit;
    BOOL _isNew;
    NSString *_name;
    unsigned long long _width;
    unsigned long long _height;
    NSString *_imageName;
    NSString *_tooltip;
}

+ (id)sizeToFitPresetWithName:(id)arg1 size:(struct CGSize)arg2;
+ (double)resizeScaleFromArtboardSize:(struct CGSize)arg1 presetSize:(struct CGSize)arg2 offeringLandscapeVariant:(BOOL)arg3;
+ (long long)compareArtboardSize:(struct CGSize)arg1 withScaledPresetSize:(struct CGSize)arg2 offeringLandscapeVariant:(BOOL)arg3;
@property(nonatomic) BOOL isNew; // @synthesize isNew=_isNew;
@property(readonly, nonatomic) BOOL isSizeToFit; // @synthesize isSizeToFit=_isSizeToFit;
@property(readonly, copy, nonatomic) NSString *tooltip; // @synthesize tooltip=_tooltip;
@property(retain, nonatomic) NSString *imageName; // @synthesize imageName=_imageName;
@property(readonly, nonatomic) BOOL allowResizedMatching; // @synthesize allowResizedMatching=_allowResizedMatching;
@property(readonly, nonatomic) BOOL offersLandscapeVariant; // @synthesize offersLandscapeVariant=_offersLandscapeVariant;
@property(nonatomic) unsigned long long height; // @synthesize height=_height;
@property(nonatomic) unsigned long long width; // @synthesize width=_width;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(readonly, nonatomic) NSImage *image;
- (id)oppositeOrientationPreset;
@property(readonly, nonatomic) NSString *sizeDescription;
@property(nonatomic) struct CGSize size;
@property(readonly, nonatomic) NSString *layerName;
- (id)init;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1 size:(struct CGSize)arg2 imageName:(id)arg3;
- (double)resizeScaleFromArtboardSize:(struct CGSize)arg1;
- (unsigned long long)matchWithArtboardSize:(struct CGSize)arg1;

@end

@interface MSImmutableLayer : _MSImmutableLayer <MSLayerContainment, MSFlowContainmentCheck, MSLayer, MSLayerTraits>
{
    unsigned long long _traits;
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (unsigned long long)traits;
+ (id)defaultName;
@property(readonly, nonatomic) unsigned long long traits; // @synthesize traits=_traits;
- (BOOL)canSkipAdvancedClipForStrokes;
@property(readonly, nonatomic) struct BCEdgePaddings influenceRectEdgePaddingsThatDoNotCascade;
@property(readonly, nonatomic) struct BCEdgePaddings influenceRectEdgePaddingsThatCascadeToContainedLayers;
- (struct CGRect)overlayInfluenceRectForFrame;
@property(readonly, nonatomic) struct CGRect influenceRectForFrame;
- (struct CGRect)overlayInfluenceRectForBounds;
@property(readonly, nonatomic) struct CGRect influenceRectForBounds;
- (struct CGRect)calculateInfluenceRectForBoundsInDocument:(id)arg1 cache:(id)arg2 visitedSymbols:(id)arg3;
- (struct CGRect)influenceRectForBoundsInDocument:(id)arg1 cache:(id)arg2 visitedSymbols:(id)arg3;
- (struct CGRect)influenceRectForFrameInDocument:(id)arg1 cache:(id)arg2 visitedSymbols:(id)arg3;
- (struct CGRect)influenceRectForBoundsInDocument:(id)arg1 cache:(id)arg2;
- (struct CGRect)influenceRectForFrameInDocument:(id)arg1 cache:(id)arg2;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (struct CGRect)rectByTransformingRect:(struct CGRect)arg1 andPaddingWithAncestors:(id)arg2;
- (struct CGRect)transformRectToParentCoordinates:(struct CGRect)arg1;
- (struct CGRect)absoluteOverlayInfluenceRectForAncestorGroups:(id)arg1;
- (struct CGRect)absoluteInfluenceRectForAncestorGroups:(id)arg1 document:(id)arg2 cache:(id)arg3;
- (id)bezierBoundsInAbsoluteCoordinatesWithAncestors:(id)arg1;
- (struct CGRect)absoluteRectForAncestorGroups:(id)arg1;
@property(readonly, nonatomic) struct CGRect frameForTransforms;
@property(readonly, nonatomic) NSAffineTransform *transform;
@property(readonly, nonatomic) struct CGAffineTransform CGTransformForFrame;
- (id)transformForRect:(struct CGRect)arg1;
@property(readonly, nonatomic) MSImmutableStyle *usedStyle;
- (id)childrenIncludingSelf:(BOOL)arg1;
- (id)children;
@property(readonly, nonatomic) struct CGPoint center;
@property(readonly, nonatomic) struct CGPoint origin;
- (BOOL)canBreakMaskChain;
- (BOOL)hasClippingMask;
@property(readonly, nonatomic) struct CGRect rect;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, nonatomic) BOOL hasEnabledBackgroundBlur;
@property(readonly, nonatomic) BOOL hasTransforms;
@property(readonly, nonatomic) BOOL isLayerExportable;
- (id)layerWithID:(id)arg1;
- (id)keysDifferingFromObject:(id)arg1;
- (void)objectDidInit;
- (Class)overrideViewControllerClassForOverridePoint:(id)arg1;
- (void)addPreviewWithBezier:(id)arg1 documentData:(id)arg2 cache:(id)arg3;
- (id)previewImageWithBezier:(id)arg1 documentData:(id)arg2 selected:(BOOL)arg3;
- (id)previewFillColorForDocumentData:(id)arg1 selected:(BOOL)arg2;
- (id)previewBorderColorForDocumentData:(id)arg1 selected:(BOOL)arg2;
- (void)drawPreviewInRect:(struct CGRect)arg1 documentData:(id)arg2 selected:(BOOL)arg3 bezier:(id)arg4;
- (void)refreshPreviewImagesWithDocumentData:(id)arg1 cache:(id)arg2;
- (BOOL)previewImagesRequireRefreshWithDocumentData:(id)arg1 cache:(id)arg2;
- (BOOL)includeInManifest;
@property(readonly, nonatomic) NSArray *manifestLayers;
- (id)lastLayer;
- (id)firstLayer;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 classFilter:(Class)arg2 block:(CDUnknownBlockType)arg3;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)enumerateLayers:(CDUnknownBlockType)arg1;
- (BOOL)containsMultipleLayers;
- (BOOL)containsOneLayer;
- (BOOL)containsLayers;
- (BOOL)containsNoOrOneLayers;
- (BOOL)canBeContainedByDocument;
- (BOOL)canBeContainedByGroup;
- (BOOL)canContainLayer:(id)arg1;
- (unsigned long long)containedLayersCount;
- (id)containedLayers;
- (void)enumerateImmutableWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2 parentCreatorBlock:(CDUnknownBlockType)arg3 inBlock:(CDUnknownBlockType)arg4;
- (BOOL)containsFlowWithSymbolsFromDocument:(id)arg1 visited:(id)arg2;
- (BOOL)containsFlowWithSymbolsFromDocument:(id)arg1;
- (id)overridePointsWithParent:(id)arg1;
- (id)defaultValueForOverridePoint:(id)arg1;
- (BOOL)canOverridePoint:(id)arg1;
@property(readonly, nonatomic) NSSet *unavailableFontNames;
@property(readonly, nonatomic) NSSet *fontNames;
- (struct CGRect)overlayRectForAncestors:(id)arg1 document:(id)arg2;
- (struct CGRect)influenceRectForAncestors:(id)arg1 document:(id)arg2 cache:(id)arg3;
- (BOOL)shouldSkipDrawingInContext:(id)arg1;
- (unsigned long long)transparencyLayerUseRectCondition;
- (BOOL)shouldRenderInTransparencyLayer;
- (void)configureBackgroundOfRequest:(id)arg1;
- (id)renderBitmapEffects:(id)arg1;
- (void)addDefaultFillAttributes:(id)arg1 exporter:(id)arg2;
- (void)writeSVGToElement:(id)arg1 withExporter:(id)arg2;
- (void)addTransformAttributes:(id)arg1 exporter:(id)arg2;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (struct CGRect)relativeRectWithExporter:(id)arg1;
- (struct CGPoint)layerOffsetWithExporter:(id)arg1;
- (void)addSVGAttributes:(id)arg1 exporter:(id)arg2;
- (id)svgStyle:(id)arg1;
- (void)addPathDefinitionToDocument:(id)arg1;
- (void)simplifyPathElement:(id)arg1 exporter:(id)arg2 inset:(double)arg3;
- (void)addGradientsToDocument:(id)arg1;
- (void)addChildrenToElement:(id)arg1 exporter:(id)arg2;
- (id)addGroupContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (BOOL)shouldIncludeInSVGExport:(id)arg1;
- (BOOL)requiresPathDefinition:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL isFlippedHorizontal;
@property(readonly, nonatomic) BOOL isFlippedVertical;
@property(readonly, nonatomic) NSString *objectID;
@property(readonly, nonatomic) double rotation;
@property(readonly) Class superclass;

@end

@interface MSStylePart : _MSStylePart <NSCopying, MSStylePart>
{
}

+ (id)defaultStylePartForStyle:(id)arg1;
- (id)parentLayer;
- (id)parentStyle;
- (void)multiplyBy:(double)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)topViewForColorInspector:(id)arg1;
- (id)blendingViewForColorInspector:(id)arg1;
- (id)previewImageForSize:(struct CGSize)arg1 colorSpace:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) BOOL isEnabled;

@end

@interface MSGradientPointArray : MSPointArray
{
    id <MSGradientPointArrayDelegate> _delegate;
}

@property(nonatomic) __weak id <MSGradientPointArrayDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)replacePointAtIndex:(unsigned long long)arg1 withPoint:(struct CGPoint)arg2;

@end

@interface MSRect : _MSRect <MSRect>
{
    long long _proportionsTempDisabled;
    double _right;
    double _bottom;
    double _proportions;
}

+ (id)rectWithUnionOfRects:(id)arg1;
+ (id)rectWithRect:(struct CGRect)arg1;
+ (id)rectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
@property(nonatomic) double proportions; // @synthesize proportions=_proportions;
@property(nonatomic) double bottom; // @synthesize bottom=_bottom;
@property(nonatomic) double right; // @synthesize right=_right;
- (BOOL)isIntegral;
- (void)setRectByIgnoringProportions:(struct CGRect)arg1;
- (void)setConstrainProportions:(BOOL)arg1;
- (void)calculateProportions;
@property(nonatomic) struct CGPoint mid;
- (id)description;
- (void)log;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (BOOL)isEqual:(id)arg1;
@property(nonatomic) BOOL primitiveConstrainProportions;
- (id)scaleBy:(double)arg1;
@property(nonatomic) double midY;
@property(nonatomic) double midX;
@property(nonatomic) double maxY;
@property(nonatomic) double minY;
@property(nonatomic) double maxX;
@property(nonatomic) double minX;
@property(nonatomic) double top;
@property(nonatomic) double left;
@property(nonatomic) struct CGPoint origin;
@property(nonatomic) struct CGSize size;
- (void)makeRectIntegral;
- (void)makeOriginIntegral;
@property(nonatomic) struct CGRect rect;
- (void)setY:(double)arg1;
- (void)setX:(double)arg1;
- (void)setHeight:(double)arg1;
- (id)delegate;
- (void)setWidth:(double)arg1;
- (BOOL)shouldConstrainProportions;
- (void)performUpdatesWithUnconstrainedProportions:(CDUnknownBlockType)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)objectDidInit;
- (id)initWithRect:(struct CGRect)arg1;
- (id)initWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;

@end

@interface MSGradient : _MSGradient <MSAsset>
{
    BOOL _svgPositionIsAbsolute;
}

@property(nonatomic) BOOL svgPositionIsAbsolute; // @synthesize svgPositionIsAbsolute=_svgPositionIsAbsolute;
- (BOOL)hasOpacity;
- (void)setGradientType:(long long)arg1;
- (double)convertPointToPosition:(struct CGPoint)arg1;
- (void)_removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStopAtIndex:(unsigned long long)arg1;
- (unsigned long long)addStopAtLength:(double)arg1;
- (long long)addStopAtPosition:(struct CGPoint)arg1;
- (void)setColor:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)colorAtIndex:(unsigned long long)arg1;
- (id)stopAtIndex:(unsigned long long)arg1;
- (void)setPoint:(struct CGPoint)arg1 atIndex:(unsigned long long)arg2;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (double)conditionedEllipseLength;
- (void)rotatePointsBy:(double)arg1;
- (void)invert;
- (id)NSGradientWithColorSpace:(id)arg1;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (id)defaultStopsArray;
- (id)initWithNSGradient:(id)arg1;
- (id)initBlankGradient;
- (BOOL)hasAlphaStop;
- (BOOL)isAssetEqual:(id)arg1;
- (unsigned long long)assetType;
- (long long)indexInPoints:(struct CGPoint *)arg1 closestToPoint:(struct CGPoint)arg2;
- (id)CSSColorStopsStringWithMasterAlpha:(double)arg1;
- (id)radialCSSGradientStringWithMasterAlpha:(double)arg1;
- (id)linearCSSGradientStringWithMasterAlpha:(double)arg1;
- (id)gradientStringWithMasterAlpha:(double)arg1;
- (id)CSSAttributeStringWithMasterAlpha:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSDefaultGrid : MSDefaultArchive
{
}

+ (void)setDefaultGrid:(id)arg1;
+ (id)defaultGrid;
- (Class)defaultClass;
- (id)setting;
- (id)filename;

@end

@interface _MSImmutableStyle : MSImmutableModelObject
{
    unsigned long long _endDecorationType;
    long long _miterLimit;
    NSString *_sharedObjectID;
    unsigned long long _startDecorationType;
    MSImmutableStyleBlur *_blur;
    MSImmutableStyleBorderOptions *_borderOptions;
    NSArray *_borders;
    MSImmutableStyleColorControls *_colorControls;
    MSImmutableGraphicsContextSettings *_contextSettings;
    NSArray *_fills;
    NSArray *_innerShadows;
    NSArray *_shadows;
    MSImmutableTextStyle *_textStyle;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableTextStyle *textStyle; // @synthesize textStyle=_textStyle;
@property(retain, nonatomic) NSArray *shadows; // @synthesize shadows=_shadows;
@property(retain, nonatomic) NSArray *innerShadows; // @synthesize innerShadows=_innerShadows;
@property(retain, nonatomic) NSArray *fills; // @synthesize fills=_fills;
@property(retain, nonatomic) MSImmutableGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(retain, nonatomic) MSImmutableStyleColorControls *colorControls; // @synthesize colorControls=_colorControls;
@property(retain, nonatomic) NSArray *borders; // @synthesize borders=_borders;
@property(retain, nonatomic) MSImmutableStyleBorderOptions *borderOptions; // @synthesize borderOptions=_borderOptions;
@property(retain, nonatomic) MSImmutableStyleBlur *blur; // @synthesize blur=_blur;
@property(nonatomic) unsigned long long startDecorationType; // @synthesize startDecorationType=_startDecorationType;
@property(retain, nonatomic) NSString *sharedObjectID; // @synthesize sharedObjectID=_sharedObjectID;
@property(nonatomic) long long miterLimit; // @synthesize miterLimit=_miterLimit;
@property(nonatomic) unsigned long long endDecorationType; // @synthesize endDecorationType=_endDecorationType;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSGradientStop : _MSGradientStop <MSColorConvertible>
{
}

+ (id)stopWithPosition:(double)arg1 color:(id)arg2;
- (void)convertColorsUsing:(id)arg1;
- (double)cappedBounds:(double)arg1;
- (void)setPosition:(double)arg1;
- (id)initWithPosition:(double)arg1 color:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSImmutableRulerData : MSImmutableModelObject
{
    long long _base;
    NSArray *_guides;
}

+ (Class)mutableClass;
@property(copy, nonatomic) NSArray *guides; // @synthesize guides=_guides;
@property(nonatomic) long long base; // @synthesize base=_base;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSImmutableTextLayer : MSImmutableStyledLayer
{
    MSAttributedString *_attributedString;
    BOOL _automaticallyDrawOnUnderlyingPath;
    BOOL _dontSynchroniseWithSymbol;
    struct CGRect _glyphBounds;
    long long _lineSpacingBehaviour;
    MSImageData *_preview;
    long long _textBehaviour;
}

+ (Class)mutableClass;
@property(nonatomic) long long textBehaviour; // @synthesize textBehaviour=_textBehaviour;
@property(retain, nonatomic) MSImageData *preview; // @synthesize preview=_preview;
@property(nonatomic) long long lineSpacingBehaviour; // @synthesize lineSpacingBehaviour=_lineSpacingBehaviour;
@property(nonatomic) struct CGRect glyphBounds; // @synthesize glyphBounds=_glyphBounds;
@property(nonatomic) BOOL dontSynchroniseWithSymbol; // @synthesize dontSynchroniseWithSymbol=_dontSynchroniseWithSymbol;
@property(nonatomic) BOOL automaticallyDrawOnUnderlyingPath; // @synthesize automaticallyDrawOnUnderlyingPath=_automaticallyDrawOnUnderlyingPath;
@property(retain, nonatomic) MSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSImmutableStyleInnerShadow : MSImmutableStyleShadow
{
}

+ (Class)mutableClass;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableStyleShadow : _MSImmutableStyleShadow <MSColorUser>
{
}

- (double)shadowInsetForStrokeType:(long long)arg1 lineWidth:(double)arg2;
- (void)updateColorCounter:(id)arg1;
- (void)addSVGFilterWithParent:(id)arg1 exporter:(id)arg2 index:(unsigned long long)arg3;
- (id)addColorMatrix:(id)arg1 color:(id)arg2 output:(id)arg3 filter:(id)arg4;
- (id)addOffsetTo:(id)arg1 dx:(double)arg2 dy:(double)arg3 output:(id)arg4 filter:(id)arg5;
- (id)addCompositeMask:(id)arg1 mask:(id)arg2 output:(id)arg3 filter:(id)arg4;
- (id)addBlurWithRadius:(double)arg1 input:(id)arg2 output:(id)arg3 filter:(id)arg4;
- (id)addSpread:(double)arg1 withInput:(id)arg2 output:(id)arg3 filter:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSImmutableHotspotLayer : _MSImmutableHotspotLayer
{
}

+ (id)defaultName;
+ (unsigned long long)traits;
- (void)performInitEmptyObject;
- (BOOL)isLayerExportable;
- (Class)overrideViewControllerClassForOverridePoint:(id)arg1;
- (void)refreshPreviewImagesWithDocumentData:(id)arg1 cache:(id)arg2;
- (BOOL)previewImagesRequireRefreshWithDocumentData:(id)arg1 cache:(id)arg2;
- (void)drawPreviewInRect:(struct CGRect)arg1 documentData:(id)arg2 selected:(BOOL)arg3 bezier:(id)arg4;
- (id)flowDestination;
- (id)overridePointsWithParent:(id)arg1;

@end

@interface MSExportPreset : _MSExportPreset <MSExportFormatContainer>
{
}

+ (void)ensureDefaultExportPresetIsSet;
+ (id)allExportPresets;
- (id)containingLayer;
- (BOOL)isAssetEqual:(id)arg1;
- (unsigned long long)assetType;
- (id)initWithName:(id)arg1 formats:(id)arg2;
@property BOOL shouldAutoApply;

@end

@interface MSTextLayout : NSObject
{
    NSArray *_baselineOffsets;
    double _firstLineCapOffset;
    struct CGRect _lineFragmentBounds;
}

+ (id)textLayoutForLayoutManager:(id)arg1;
@property(readonly, nonatomic) double firstLineCapOffset; // @synthesize firstLineCapOffset=_firstLineCapOffset;
@property(readonly, nonatomic) struct CGRect lineFragmentBounds; // @synthesize lineFragmentBounds=_lineFragmentBounds;
@property(readonly, copy, nonatomic) NSArray *baselineOffsets; // @synthesize baselineOffsets=_baselineOffsets;
- (void).cxx_destruct;
@property(readonly, nonatomic) double firstBaselineOffset;
- (id)initWithBaselineOffsets:(id)arg1 firstLineCapOffset:(double)arg2 lineFragmentBounds:(struct CGRect)arg3;

@end

@interface MSImmutableStarShape : _MSImmutableStarShape
{
}

+ (id)defaultName;

@end

@interface MSAbsoluteRect : BCRect
{
    void *rectObservationInfo;
    MSLayer *_layer;
}

@property(nonatomic) __weak MSLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
@property(nonatomic) struct CGPoint rulerOrigin;
- (void)setNilValueForKey:(id)arg1;
@property(nonatomic) double rulerY;
@property(nonatomic) double rulerX;
- (void)setRect:(struct CGRect)arg1;
- (struct CGRect)rect;
- (void)setHeight:(double)arg1;
- (double)height;
- (void)setWidth:(double)arg1;
- (double)width;
- (double)y;
- (void)moveInAbsoluteCoordinatesBy:(struct CGPoint)arg1;
- (void)setY:(double)arg1;
- (void)setX:(double)arg1;
- (double)x;
- (BOOL)boundsContainsPoint:(struct CGPoint)arg1;
- (id)bezierBoundsInAbsoluteCoordinates;
- (struct CGRect)absoluteRect;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void *)observationInfo;
- (void)setObservationInfo:(void *)arg1;
- (id)initWithLayer:(id)arg1;

@end

@interface _MSLayoutGrid : MSBaseGrid
{
    double _columnWidth;
    BOOL _drawHorizontal;
    BOOL _drawHorizontalLines;
    BOOL _drawVertical;
    double _gutterHeight;
    double _gutterWidth;
    BOOL _guttersOutside;
    double _horizontalOffset;
    double _numberOfColumns;
    double _rowHeightMultiplication;
    double _totalWidth;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) double totalWidth; // @synthesize totalWidth=_totalWidth;
@property(nonatomic) double rowHeightMultiplication; // @synthesize rowHeightMultiplication=_rowHeightMultiplication;
@property(nonatomic) double numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(nonatomic) double horizontalOffset; // @synthesize horizontalOffset=_horizontalOffset;
@property(nonatomic) BOOL guttersOutside; // @synthesize guttersOutside=_guttersOutside;
@property(nonatomic) double gutterWidth; // @synthesize gutterWidth=_gutterWidth;
@property(nonatomic) double gutterHeight; // @synthesize gutterHeight=_gutterHeight;
@property(nonatomic) BOOL drawVertical; // @synthesize drawVertical=_drawVertical;
@property(nonatomic) BOOL drawHorizontalLines; // @synthesize drawHorizontalLines=_drawHorizontalLines;
@property(nonatomic) BOOL drawHorizontal; // @synthesize drawHorizontal=_drawHorizontal;
@property(nonatomic) double columnWidth; // @synthesize columnWidth=_columnWidth;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSPage : _MSPage <MSRootLayer>
{
    MSArtboardGroup *_currentArtboard;
    NSArray *_cachedExportableLayers;
    NSArray *_cachedArtboards;
    MSLayerArray *_cachedSelectedLayers;
    NSMutableSet *_selectedLayerIDs;
}

+ (id)page;
@property(readonly, nonatomic) NSMutableSet *selectedLayerIDs; // @synthesize selectedLayerIDs=_selectedLayerIDs;
@property(retain, nonatomic) MSLayerArray *cachedSelectedLayers; // @synthesize cachedSelectedLayers=_cachedSelectedLayers;
@property(retain, nonatomic) NSArray *cachedArtboards; // @synthesize cachedArtboards=_cachedArtboards;
@property(retain, nonatomic) NSArray *cachedExportableLayers; // @synthesize cachedExportableLayers=_cachedExportableLayers;
@property(nonatomic) __weak MSArtboardGroup *currentArtboard; // @synthesize currentArtboard=_currentArtboard;
- (void).cxx_destruct;
- (void)setIsLocked:(BOOL)arg1;
- (BOOL)isLocked;
- (void)setIsVisible:(BOOL)arg1;
- (BOOL)isVisible;
@property(nonatomic) double zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin;
@property(readonly, nonatomic) NSArray *symbols;
- (struct CGPoint)originForNewArtboardWithSize:(struct CGSize)arg1;
- (id)artboardsMatchingWidth:(double)arg1;
- (BOOL)contentIntersectsWithRect:(struct CGRect)arg1;
- (BOOL)hasClickThrough;
- (BOOL)limitsSelectionToBounds;
- (BOOL)containsPoint:(struct CGPoint)arg1 zoomValue:(double)arg2;
@property(readonly, nonatomic) MSRulerData *currentVerticalRulerData;
@property(readonly, nonatomic) MSRulerData *currentHorizontalRulerData;
- (void)moveLayersToArtboards;
- (BOOL)canContainLayer:(id)arg1;
- (void)rectSizeDidChange:(id)arg1;
- (void)changeLayerExpandedTypeToAutomaticIfCollapsed;
- (id)artboardWithID:(id)arg1;
@property(readonly, nonatomic) __weak NSArray *artboards;
- (id)parentRoot;
@property(readonly, nonatomic) MSLayerGroup<MSRootLayer> *currentRoot;
- (id)ancestorsAndSelfTransforms;
- (id)parentPage;
@property(readonly, nonatomic) struct CGRect contentBounds;
- (BOOL)resizeToFitChildrenWithOption:(long long)arg1;
- (BOOL)layers:(id)arg1 fitOnArtboard:(id)arg2;
- (id)destinationArtboardForLayers:(id)arg1 artboards:(id)arg2;
- (BOOL)tryToMoveLayerToArtboard:(id)arg1;
- (BOOL)addOrRemoveLayerFromArtboardIfNecessary:(id)arg1;
- (BOOL)tryToMoveLayer:(id)arg1 toArtboards:(id)arg2;
@property(readonly, nonatomic) NSArray *exportableLayers;
- (id)symbolLayersInGroup:(id)arg1;
- (id)artboardForSlice:(id)arg1 inArtboards:(id)arg2;
@property(nonatomic) struct CGPoint rulerBase;
- (void)refreshOverlayInRect:(struct CGRect)arg1;
- (id)transform;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (BOOL)canBeContainedByDocument;
- (void)dealloc;
- (void)clearSelectionCache;
- (void)changeSelectionBySelectingLayers:(id)arg1;
- (void)changeSelectionUsingBlock:(CDUnknownBlockType)arg1;
- (BOOL)isLayerSelected:(id)arg1;
- (id)layersWithIDs:(id)arg1;
- (id)layersByObjectID;
- (id)selectedLayers;
- (id)parentGroup;
- (void)objectDidInit;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (struct CGPoint)scrollOriginToCenterContentInViewBounds:(struct CGRect)arg1;
- (void)adjustRulerDataToTopLeftInViewBounds;
- (BOOL)shouldDrawSelection;
- (BOOL)canBeHovered;
- (id)displayName;
- (BOOL)isExportableViaDragAndDrop;
- (BOOL)canCopyToLayer:(id)arg1 beforeLayer:(id)arg2;
- (id)previewImages;
- (unsigned long long)displayType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy, nonatomic) MSSimpleGrid *grid;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) MSRulerData *horizontalRulerData;
@property(copy, nonatomic) MSLayoutGrid *layout;
@property(readonly, nonatomic) struct CGRect rect;
@property(readonly) Class superclass;
@property(copy, nonatomic) MSRulerData *verticalRulerData;

@end

@interface _MSArtboardGroup : MSLayerGroup
{
    BOOL _hasBackgroundColor;
    BOOL _includeBackgroundColorInExport;
    BOOL _includeInCloudUpload;
    BOOL _isFlowHome;
    NSDictionary *_presetDictionary;
    BOOL _resizesContent;
    MSColor *_backgroundColor;
    MSSimpleGrid *_grid;
    MSRulerData *_horizontalRulerData;
    MSLayoutGrid *_layout;
    MSRulerData *_verticalRulerData;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSRulerData *verticalRulerData; // @synthesize verticalRulerData=_verticalRulerData;
@property(retain, nonatomic) MSLayoutGrid *layout; // @synthesize layout=_layout;
@property(retain, nonatomic) MSRulerData *horizontalRulerData; // @synthesize horizontalRulerData=_horizontalRulerData;
@property(retain, nonatomic) MSSimpleGrid *grid; // @synthesize grid=_grid;
@property(retain, nonatomic) MSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) BOOL resizesContent; // @synthesize resizesContent=_resizesContent;
@property(retain, nonatomic) NSDictionary *presetDictionary; // @synthesize presetDictionary=_presetDictionary;
@property(nonatomic) BOOL isFlowHome; // @synthesize isFlowHome=_isFlowHome;
@property(nonatomic) BOOL includeInCloudUpload; // @synthesize includeInCloudUpload=_includeInCloudUpload;
@property(nonatomic) BOOL includeBackgroundColorInExport; // @synthesize includeBackgroundColorInExport=_includeBackgroundColorInExport;
@property(nonatomic) BOOL hasBackgroundColor; // @synthesize hasBackgroundColor=_hasBackgroundColor;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSOverridePoint : NSObject
{
    NSString *_layerID;
    NSString *_property;
    MSOverridePoint *_parent;
    NSString *_layerName;
    NSString *_name;
}

@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *layerName; // @synthesize layerName=_layerName;
@property(readonly, nonatomic) __weak MSOverridePoint *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) NSString *property; // @synthesize property=_property;
@property(readonly, nonatomic) NSString *layerID; // @synthesize layerID=_layerID;
- (void).cxx_destruct;
- (long long)comparisonScoreAgainst:(id)arg1;
@property(readonly, nonatomic) BOOL isSymbolOverride;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)layerIDPath;
- (id)initWithLayer:(id)arg1 property:(id)arg2 parent:(id)arg3;

@end

@interface MSSymbolMaster : _MSSymbolMaster <MSPreviewGeneration, MSSharedObjectStyling, BCSortable>
{
    long long _changeIdentifier;
}

+ (void)copyPropertiesFrom:(id)arg1 to:(id)arg2;
+ (id)convertSymbolToArtboard:(id)arg1;
+ (id)convertArtboardToSymbol:(id)arg1;
@property(nonatomic) long long changeIdentifier; // @synthesize changeIdentifier=_changeIdentifier;
- (BOOL)limitsSelectionToBounds;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (id)parentSymbol;
- (id)rootForNameUniquing;
- (id)ancestorIDsForLayerNamed:(id)arg1 skip:(id)arg2;
- (id)ancestorIDsForLayerNamed:(id)arg1;
- (BOOL)isSafeToDelete;
- (void)multiplyBy:(double)arg1;
- (id)ungroup;
- (void)removeFromParentAndDetachAllInstances;
- (void)detachAllInstances;
- (BOOL)ensureSymbolIDUniqueInDocument:(id)arg1;
- (BOOL)hasInstances;
@property(readonly, nonatomic) NSArray *allInfluencedInstances;
- (id)nestedSymbolsSkipping:(id)arg1;
@property(readonly, nonatomic) NSSet *nestedSymbols;
@property(readonly, nonatomic) NSArray *allInstances;
- (id)newSymbolInstance;
- (id)copyWithIDMapping:(id)arg1;
- (void)moveChildrenToIdenticalPositionAfterResizeFromRect:(struct CGRect)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)syncPropertiesFromObject:(id)arg1;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)generatePreviewWithImageSize:(struct CGSize)arg1 previewSize:(struct CGSize)arg2 colorSpace:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (struct CGRect)optimalBoundingBox;
- (BOOL)canSnapSizeToLayer:(id)arg1;
- (BOOL)canSnapToLayer:(id)arg1;
- (Class)shareableObjectReferenceClass_bc;
- (void)applyStyleToMenuItem:(id)arg1 withColorSpace:(id)arg2;
- (id)generatePreviewForManageSheetWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)generatePreviewForPopup:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)generatePreviewForMenuItem:(id)arg1 withColorSpace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)generateShadowedPreviewWithImageSize:(struct CGSize)arg1 previewSize:(struct CGSize)arg2 withColorSpace:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)applyOverrides:(id)arg1;
- (id)availableOverrides;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *name;
@property(readonly) Class superclass;

@end

@interface MSImmutableStyleBorder : _MSImmutableStyleBorder
{
}

+ (id)defaultName;
- (void)updateColorCounter:(id)arg1;
- (void)drawGradientBorder:(id)arg1 advancedOptions:(id)arg2 originalPath:(id)arg3 isArtistic:(BOOL)arg4 frame:(struct CGRect)arg5 context:(id)arg6;
- (void)drawBorder:(id)arg1 advancedOptions:(id)arg2 context:(id)arg3;
- (BOOL)needsOutlinePath:(id)arg1;
- (BOOL)requiresMask:(id)arg1;
- (id)bezierPathWithExporter:(id)arg1;
- (void)addSVGAttributes:(id)arg1 exporter:(id)arg2;
- (void)addOuterMaskToAttributes:(id)arg1 withExporter:(id)arg2;
- (void)addInnerMaskToAttributes:(id)arg1 withExporter:(id)arg2;
- (id)addMaskElementToAttributes:(id)arg1 withExporter:(id)arg2;

@end

@interface MSPastingViewport : NSObject
{
    double _zoomValue;
    struct CGRect _visibleRect;
}

+ (id)viewportWithVisibleRect:(struct CGRect)arg1 zoom:(double)arg2;
@property(nonatomic) struct CGRect visibleRect; // @synthesize visibleRect=_visibleRect;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
- (id)viewportContainingLayers:(id)arg1;
- (BOOL)isEqual:(id)arg1;

@end

@interface MSImmutableLayoutGrid : _MSImmutableLayoutGrid
{
}

- (BOOL)shouldDrawAtZoom:(double)arg1;

@end

@interface MSImmutableForeignObject : _MSImmutableForeignObject
{
}

@end

@interface _MSImmutableGradient : MSImmutableModelObject
{
    double _elipseLength;
    struct CGPoint _from;
    long long _gradientType;
    struct CGPoint _to;
    NSArray *_stops;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *stops; // @synthesize stops=_stops;
@property(nonatomic) struct CGPoint to; // @synthesize to=_to;
@property(nonatomic) long long gradientType; // @synthesize gradientType=_gradientType;
@property(nonatomic) struct CGPoint from; // @synthesize from=_from;
@property(nonatomic) double elipseLength; // @synthesize elipseLength=_elipseLength;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSStyleInnerShadow : _MSStyleInnerShadow
{
}

- (BOOL)colorEqualApproximately;
- (void)performInitEmptyObject;
- (id)CSSAttributeString;

@end

@interface MSImmutableSharedStyleContainer : _MSImmutableSharedStyleContainer
{
}

@end

@interface _MSImmutableTextStyle : MSImmutableModelObject
{
    NSDictionary *_encodedAttributes;
    long long _verticalAlignment;
}

+ (Class)mutableClass;
@property(nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(copy, nonatomic) NSDictionary *encodedAttributes; // @synthesize encodedAttributes=_encodedAttributes;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSImmutableLayer : MSImmutableModelObject
{
    BOOL _isFlippedHorizontal;
    BOOL _isFlippedVertical;
    BOOL _isLocked;
    BOOL _isVisible;
    long long _layerListExpandedType;
    NSString *_name;
    BOOL _nameIsFixed;
    NSString *_originalObjectID;
    unsigned long long _resizingConstraint;
    unsigned long long _resizingType;
    double _rotation;
    BOOL _shouldBreakMaskChain;
    NSDictionary *_userInfo;
    MSImmutableExportOptions *_exportOptions;
    MSImmutableFlowConnection *_flow;
    MSImmutableRect *_frame;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableRect *frame; // @synthesize frame=_frame;
@property(retain, nonatomic) MSImmutableFlowConnection *flow; // @synthesize flow=_flow;
@property(retain, nonatomic) MSImmutableExportOptions *exportOptions; // @synthesize exportOptions=_exportOptions;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) BOOL shouldBreakMaskChain; // @synthesize shouldBreakMaskChain=_shouldBreakMaskChain;
@property(nonatomic) double rotation; // @synthesize rotation=_rotation;
@property(nonatomic) unsigned long long resizingType; // @synthesize resizingType=_resizingType;
@property(nonatomic) unsigned long long resizingConstraint; // @synthesize resizingConstraint=_resizingConstraint;
@property(retain, nonatomic) NSString *originalObjectID; // @synthesize originalObjectID=_originalObjectID;
@property(nonatomic) BOOL nameIsFixed; // @synthesize nameIsFixed=_nameIsFixed;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) long long layerListExpandedType; // @synthesize layerListExpandedType=_layerListExpandedType;
@property(nonatomic) BOOL isVisible; // @synthesize isVisible=_isVisible;
@property(nonatomic) BOOL isLocked; // @synthesize isLocked=_isLocked;
@property(nonatomic) BOOL isFlippedVertical; // @synthesize isFlippedVertical=_isFlippedVertical;
@property(nonatomic) BOOL isFlippedHorizontal; // @synthesize isFlippedHorizontal=_isFlippedHorizontal;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSSliceLayer : _MSSliceLayer <MSLayerWithBackgroundColor, MSColorConvertible>
{
    id <MSSliceLayerWatcher> _sliceWatcher;
}

+ (id)keyPathsForValuesAffectingPreviewImages;
+ (id)sliceLayerFromLayer:(id)arg1;
@property(nonatomic) __weak id <MSSliceLayerWatcher> sliceWatcher; // @synthesize sliceWatcher=_sliceWatcher;
- (void).cxx_destruct;
- (void)convertColorsUsing:(id)arg1;
- (id)immutableBackgroundColor;
- (id)rootForNameUniquing;
- (BOOL)canRotate;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (BOOL)canBeTransformed;
- (void)setName:(id)arg1;
- (BOOL)shouldDrawSelectionStroke;
- (BOOL)isActive;
- (unsigned long long)filterType;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) BOOL hasBackgroundColor;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSStyleBasicFill : _MSStyleBasicFill <MSColorConvertible>
{
}

+ (id)defaultFillColor;
+ (void)drawNoiseFill:(id)arg1 inRect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
+ (void)drawPatternFill:(id)arg1 inRect:(struct CGRect)arg2;
+ (void)drawGradientFill:(id)arg1 colorSpace:(id)arg2 inRect:(struct CGRect)arg3;
+ (void)drawColorFill:(id)arg1 colorSpace:(id)arg2 inRect:(struct CGRect)arg3;
+ (void)drawColor:(id)arg1 enabled:(BOOL)arg2 inRect:(struct CGRect)arg3;
+ (void)drawBasicFill:(id)arg1 colorSpace:(id)arg2 enabled:(BOOL)arg3 inRect:(struct CGRect)arg4;
+ (void)drawCheckerboardBackgroundInRect:(struct CGRect)arg1;
- (void)convertColorsUsing:(id)arg1;
- (void)performInitEmptyObject;
- (id)previewImageOfSize:(struct CGSize)arg1 colorSpace:(id)arg2 clippingAsBorder:(BOOL)arg3 borderWidth:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSFlowConnection : _MSFlowConnection
{
}

+ (long long)defaultAnimationType;
+ (id)flowConnectionBack;
+ (id)flowConnectionTo:(id)arg1 ofType:(long long)arg2;
@property(readonly, nonatomic) BOOL isValidFlowConnection;
- (id)bezierPathForRenderingFlowAtZoomLevel:(double)arg1;
@property(readonly, nonatomic) __weak MSArtboardGroup *destinationArtboard;
@property(readonly, nonatomic) __weak MSLayer *sendingLayer;
@property(nonatomic) BOOL isBackAction;

@end

@interface _MSImmutableGraphicsContextSettings : MSImmutableModelObject
{
    long long _blendMode;
    double _opacity;
}

+ (Class)mutableClass;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) long long blendMode; // @synthesize blendMode=_blendMode;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSShapeGroup : _MSShapeGroup <MSShapeGroup>
{
}

+ (struct CGRect)groupBoundsForContainer:(id)arg1;
+ (BOOL)groupBoundsShouldBeIntegral;
+ (id)shapeWithPath:(id)arg1;
+ (id)shapeWithRect:(struct CGRect)arg1;
+ (id)shapeWithBezierPath:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingPreviewImages;
- (BOOL)shouldStripShadowsAndInnerShadow;
- (void)layerDidResizeFromRect:(struct CGRect)arg1 corner:(long long)arg2;
- (BOOL)canRotate;
- (void)adjustStyleToFitSubPaths;
- (void)debugWritePaths:(long long)arg1;
- (BOOL)isVerticalLine;
- (BOOL)isHorizontalLine;
- (void)makeLinePixelAligned;
- (BOOL)isLine;
- (BOOL)hasLines;
@property(readonly, nonatomic) BOOL isPartOfClippingMask;
- (void)moveTransformsToChildren;
- (void)reversePath;
- (void)flatten;
- (void)simplify;
@property(nonatomic) BOOL isClosed;
- (void)setEdited:(BOOL)arg1;
- (BOOL)canContainLayer:(id)arg1;
- (struct CGRect)safeFrameForBezierPath:(id)arg1;
@property(retain, nonatomic) NSBezierPath *bezierPath;
@property(readonly, nonatomic) BOOL hasDecorations;
@property(readonly, nonatomic) NSBezierPath *decoratedBezierPathInBounds;
- (id)bezierPathOfSubPath:(id)arg1 inRect:(struct CGRect)arg2;
- (id)bezierPathInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) NSBezierPath *bezierPathInBounds;
@property(readonly, nonatomic) MSPath *pathInBounds;
- (id)_bezierPathInSize:(struct CGSize)arg1;
- (void)applyPropertiesToBezier:(id)arg1;
- (id)pathWithTransformsUsingCache:(id)arg1;
@property(readonly, nonatomic) NSBezierPath *bezierPathWithTransforms;
- (BOOL)hitTestPoint:(struct CGPoint)arg1 inBezier:(id)arg2 zoomValue:(double)arg3;
- (id)hitTestablePathInBoundsForZoomValue:(double)arg1;
- (BOOL)hitTestAsLine:(struct CGPoint)arg1 zoomValue:(double)arg2;
- (BOOL)containsPoint:(struct CGPoint)arg1 options:(unsigned long long)arg2 zoomValue:(double)arg3;
- (id)defaultName;
- (BOOL)resizeToFitChildrenWithOption:(long long)arg1;
- (long long)selectionHandleAtPoint:(struct CGPoint)arg1 zoom:(double)arg2;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (void)performInitEmptyObject;
- (BOOL)shouldDrawSelectionStroke;
- (BOOL)canSmartRotate;
- (BOOL)isStraightTriangle;
- (BOOL)shouldFlattenAfterRotate;
- (Class)handlerClass;
- (BOOL)handleDoubleClick;
- (id)lastPoint;
- (id)firstPoint;
- (struct CGPoint)rulerBase;
@property(nonatomic) double length; // @dynamic length;
@property(nonatomic) double y2; // @dynamic y2;
@property(nonatomic) double x2; // @dynamic x2;
@property(nonatomic) double y1; // @dynamic y1;
@property(nonatomic) double x1; // @dynamic x1;
- (void)setP2:(struct CGPoint)arg1;
- (void)setP1:(struct CGPoint)arg1;
- (struct CGPoint)p2;
- (struct CGPoint)p1;
- (id)inspectorViewControllers;
- (void)drawHoverWithZoom:(double)arg1 color:(id)arg2 cache:(id)arg3;
- (void)copyToLayer:(id)arg1 beforeLayer:(id)arg2;
- (void)moveToLayer:(id)arg1 beforeLayer:(id)arg2;
- (BOOL)canCopyToLayer:(id)arg1 beforeLayer:(id)arg2;
- (BOOL)expandableInLayerList;
- (BOOL)selectedInLayerList;
- (void)prepareAsMask;
- (BOOL)supportsInnerOuterBorders;
- (void)changeInnerOuterBordersIfHasOpenPaths;
- (BOOL)canSplitPaths;
- (id)splitPathIntoShape:(id)arg1;
- (id)splitPathsIntoShapes;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (id)fillFromBorder:(id)arg1;
- (double)lineWidthForOutliningWithBorder:(id)arg1;
- (id)outlinePathForPath:(id)arg1 withBorder:(id)arg2;
- (id)outlineShapeWithBorder:(id)arg1;
- (BOOL)canConvertToOutlines;
- (id)layersByConvertingToOutlines;
- (BOOL)booleanOperationCanBeReset;
- (BOOL)canFlatten;
- (BOOL)canProbablyFlatten;
- (BOOL)hasFlattenablePath;
- (void)cutBezierSegmentAtIndex:(unsigned long long)arg1;
- (void)possiblyFixRectangleBorderBeforeCut;
- (BOOL)canCutSegments;
- (void)applyOverride:(id)arg1 toPoint:(id)arg2;
- (id)bezierOperationChain;
- (id)CSSAttributes;
- (id)CSSAttributeString;

@end

@interface MSModelObject : MSModelObjectCommon <NSCopying, MSModelObject>
{
    id _cachedImmutableModelObject;
    BOOL _isFault;
    MSModelObject *_parentObject;
    MSDocumentData *_documentData;
}

+ (Class)immutableClass;
+ (BOOL)allowsFaulting;
@property(nonatomic) __weak MSDocumentData *documentData; // @synthesize documentData=_documentData;
@property(nonatomic) BOOL isFault; // @synthesize isFault=_isFault;
- (void).cxx_destruct;
- (void)breakConnectionWith:(id)arg1;
@property(nonatomic) __weak MSModelObject *parentObject; // @synthesize parentObject=_parentObject;
- (id)parentGroupRecursive;
- (id)parentGroup;
- (void)setAsParentOnChildren;
- (id)rootModelObject;
- (void)invaliateImmutableObject;
- (void)invalidateModelCacheGeneration;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
@property(readonly, nonatomic) id immutableModelObject;
- (void)fireFaultIfNecessary;
- (void)fireFault;
- (id)initWithImmutableModelObject:(id)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1;
- (void)clearCachedValueForKey:(id)arg1;
- (void)clearCache;
- (void)updateCachedValue:(id)arg1 forKey:(id)arg2;
- (id)cachedValueForKey:(id)arg1 setUsingBlock:(CDUnknownBlockType)arg2;
- (id)cachedValueForKey:(id)arg1;
@property(readonly, nonatomic) BOOL isForeign;
@property(readonly, nonatomic) MSModelObject *foreignObject;
@property(retain, nonatomic) id cachedImmutableModelObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)syncPropertiesFromObject:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (id)copyWithOptions:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)metadataForKey:(id)arg1;
- (void)storeMetadata:(id)arg1 forKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *objectID;
@property(readonly) Class superclass;

@end

@interface MSImmutableSharedStyle : _MSImmutableSharedStyle
{
}

+ (id)defaultName;

@end

@interface _MSPage : MSLayerGroup
{
    BOOL _includeInCloudUpload;
    MSSimpleGrid *_grid;
    MSRulerData *_horizontalRulerData;
    MSLayoutGrid *_layout;
    MSRulerData *_verticalRulerData;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSRulerData *verticalRulerData; // @synthesize verticalRulerData=_verticalRulerData;
@property(retain, nonatomic) MSLayoutGrid *layout; // @synthesize layout=_layout;
@property(retain, nonatomic) MSRulerData *horizontalRulerData; // @synthesize horizontalRulerData=_horizontalRulerData;
@property(retain, nonatomic) MSSimpleGrid *grid; // @synthesize grid=_grid;
@property(nonatomic) BOOL includeInCloudUpload; // @synthesize includeInCloudUpload=_includeInCloudUpload;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSForeignSymbol : MSForeignObject
{
    MSSymbolMaster *_originalMaster;
    MSSymbolMaster *_symbolMaster;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSSymbolMaster *symbolMaster; // @synthesize symbolMaster=_symbolMaster;
@property(retain, nonatomic) MSSymbolMaster *originalMaster; // @synthesize originalMaster=_originalMaster;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableStyleBasicFill : MSImmutableStylePart
{
    unsigned long long _fillType;
    MSImmutableColor *_color;
    MSImmutableGraphicsContextSettings *_contextSettings;
    MSImmutableGradient *_gradient;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableGradient *gradient; // @synthesize gradient=_gradient;
@property(retain, nonatomic) MSImmutableGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(retain, nonatomic) MSImmutableColor *color; // @synthesize color=_color;
@property(nonatomic) unsigned long long fillType; // @synthesize fillType=_fillType;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSSimpleGrid : MSBaseGrid
{
    long long _gridSize;
    long long _thickGridTimes;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) long long thickGridTimes; // @synthesize thickGridTimes=_thickGridTimes;
@property(nonatomic) long long gridSize; // @synthesize gridSize=_gridSize;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSStyleBorderOptions : _MSStyleBorderOptions
{
}

@property(readonly, nonatomic) BOOL hasDashPattern;
- (void)multiplyBy:(double)arg1;
- (BOOL)supportsAdvancedBorderSettings;

@end

@interface _MSStyle : MSModelObject
{
    unsigned long long _endDecorationType;
    long long _miterLimit;
    NSString *_sharedObjectID;
    unsigned long long _startDecorationType;
    MSStyleBlur *_blur;
    MSStyleBorderOptions *_borderOptions;
    NSMutableArray *_borders;
    MSStyleColorControls *_colorControls;
    MSGraphicsContextSettings *_contextSettings;
    NSMutableArray *_fills;
    NSMutableArray *_innerShadows;
    NSMutableArray *_shadows;
    MSTextStyle *_textStyle;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveStyleShadowIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllStyleShadows;
- (void)removeStyleShadowsAtIndexes:(id)arg1;
- (void)removeStyleShadowAtIndex:(unsigned long long)arg1;
- (void)removeStyleShadow:(id)arg1;
- (void)insertStyleShadows:(id)arg1 afterStyleShadow:(id)arg2;
- (void)insertStyleShadow:(id)arg1 afterStyleShadow:(id)arg2;
- (void)insertStyleShadows:(id)arg1 beforeStyleShadow:(id)arg2;
- (void)insertStyleShadow:(id)arg1 beforeStyleShadow:(id)arg2;
- (void)insertStyleShadow:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addStyleShadows:(id)arg1;
- (void)addStyleShadow:(id)arg1;
- (void)moveStyleInnerShadowIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllStyleInnerShadows;
- (void)removeStyleInnerShadowsAtIndexes:(id)arg1;
- (void)removeStyleInnerShadowAtIndex:(unsigned long long)arg1;
- (void)removeStyleInnerShadow:(id)arg1;
- (void)insertStyleInnerShadows:(id)arg1 afterStyleInnerShadow:(id)arg2;
- (void)insertStyleInnerShadow:(id)arg1 afterStyleInnerShadow:(id)arg2;
- (void)insertStyleInnerShadows:(id)arg1 beforeStyleInnerShadow:(id)arg2;
- (void)insertStyleInnerShadow:(id)arg1 beforeStyleInnerShadow:(id)arg2;
- (void)insertStyleInnerShadow:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addStyleInnerShadows:(id)arg1;
- (void)addStyleInnerShadow:(id)arg1;
- (void)moveStyleFillIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllStyleFills;
- (void)removeStyleFillsAtIndexes:(id)arg1;
- (void)removeStyleFillAtIndex:(unsigned long long)arg1;
- (void)removeStyleFill:(id)arg1;
- (void)insertStyleFills:(id)arg1 afterStyleFill:(id)arg2;
- (void)insertStyleFill:(id)arg1 afterStyleFill:(id)arg2;
- (void)insertStyleFills:(id)arg1 beforeStyleFill:(id)arg2;
- (void)insertStyleFill:(id)arg1 beforeStyleFill:(id)arg2;
- (void)insertStyleFill:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addStyleFills:(id)arg1;
- (void)addStyleFill:(id)arg1;
- (void)moveStyleBorderIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllStyleBorders;
- (void)removeStyleBordersAtIndexes:(id)arg1;
- (void)removeStyleBorderAtIndex:(unsigned long long)arg1;
- (void)removeStyleBorder:(id)arg1;
- (void)insertStyleBorders:(id)arg1 afterStyleBorder:(id)arg2;
- (void)insertStyleBorder:(id)arg1 afterStyleBorder:(id)arg2;
- (void)insertStyleBorders:(id)arg1 beforeStyleBorder:(id)arg2;
- (void)insertStyleBorder:(id)arg1 beforeStyleBorder:(id)arg2;
- (void)insertStyleBorder:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addStyleBorders:(id)arg1;
- (void)addStyleBorder:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSTextStyle *textStyle; // @synthesize textStyle=_textStyle;
@property(retain, nonatomic) NSArray *shadows; // @synthesize shadows=_shadows;
@property(retain, nonatomic) NSArray *innerShadows; // @synthesize innerShadows=_innerShadows;
@property(retain, nonatomic) NSArray *fills; // @synthesize fills=_fills;
@property(retain, nonatomic) MSGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(retain, nonatomic) MSStyleColorControls *colorControls; // @synthesize colorControls=_colorControls;
@property(retain, nonatomic) NSArray *borders; // @synthesize borders=_borders;
@property(retain, nonatomic) MSStyleBorderOptions *borderOptions; // @synthesize borderOptions=_borderOptions;
@property(retain, nonatomic) MSStyleBlur *blur; // @synthesize blur=_blur;
@property(nonatomic) unsigned long long startDecorationType; // @synthesize startDecorationType=_startDecorationType;
@property(retain, nonatomic) NSString *sharedObjectID; // @synthesize sharedObjectID=_sharedObjectID;
@property(nonatomic) long long miterLimit; // @synthesize miterLimit=_miterLimit;
@property(nonatomic) unsigned long long endDecorationType; // @synthesize endDecorationType=_endDecorationType;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSJSONUnarchiver : MSBaseUnarchiver <BCJSONDecoderDelegate>
{
    NSMutableDictionary *_references;
    NSSet *_allowedClasses;
}

+ (id)unarchiverFromCoder:(id)arg1;
+ (void)defineReplacementClasses;
+ (void)load;
@property(retain, nonatomic) NSSet *allowedClasses; // @synthesize allowedClasses=_allowedClasses;
@property(retain, nonatomic) NSMutableDictionary *references; // @synthesize references=_references;
- (void).cxx_destruct;
- (void)setArchiveVersion:(long long)arg1;
- (id)referenceObjectWithIdentifier:(id)arg1;
- (id)decodeReferenceObjectOfClass:(id)arg1 withIdentifier:(id)arg2;
- (void)addReference:(id)arg1 withIdentifier:(id)arg2;
- (struct CGSize)decodeSizeForKey:(id)arg1 withDefault:(struct CGSize)arg2;
- (long long)decodeIntegerForKey:(id)arg1 withDefault:(long long)arg2;
- (struct CGPoint)decodePointForKey:(id)arg1 withDefault:(struct CGPoint)arg2;
- (struct CGRect)decodeRectForKey:(id)arg1 withDefault:(struct CGRect)arg2;
- (BOOL)decodeBoolForKey:(id)arg1 withDefault:(BOOL)arg2;
- (double)decodeDoubleForKey:(id)arg1 withDefault:(double)arg2;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (BOOL)containsValueForKey:(id)arg1;
@property(readonly, nonatomic) BCJSONDecoder *decoder;
- (BOOL)decoder:(id)arg1 shouldInstantiateObjectOfClass:(Class)arg2;
- (BOOL)isClass:(Class)arg1 inAllowedSet:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSImageCollection : MSModelObject
{
    NSDictionary *_images;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSDictionary *images; // @synthesize images=_images;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableSharedStyle : MSImmutableSharedObject
{
}

+ (Class)mutableClass;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSBaseGrid : _MSBaseGrid
{
    BOOL _forceDraw;
}

@property(nonatomic) BOOL forceDraw; // @synthesize forceDraw=_forceDraw;
- (void)setIsEnabled:(BOOL)arg1;
- (id)horizontalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (id)verticalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;

@end

@interface _MSImmutableRect : MSImmutableModelObject
{
    BOOL _constrainProportions;
    double _height;
    double _width;
    double _x;
    double _y;
}

+ (Class)mutableClass;
@property(nonatomic) double y; // @synthesize y=_y;
@property(nonatomic) double x; // @synthesize x=_x;
@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) double height; // @synthesize height=_height;
@property(nonatomic) BOOL constrainProportions; // @synthesize constrainProportions=_constrainProportions;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSSimpleGrid : _MSSimpleGrid
{
}

- (id)verticalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (id)horizontalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;

@end

@interface _MSImmutableStyleBorder : MSImmutableStyleBasicFill
{
    long long _position;
    double _thickness;
}

+ (Class)mutableClass;
@property(nonatomic) double thickness; // @synthesize thickness=_thickness;
@property(nonatomic) long long position; // @synthesize position=_position;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSJSONArchiveReference : NSObject <BCJSONEncoding>
{
    NSObject<MSCoding> *_referencedObject;
}

@property(readonly, nonatomic) NSObject<MSCoding> *referencedObject; // @synthesize referencedObject=_referencedObject;
- (void).cxx_destruct;
- (id)initWithJSONDecoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;
- (id)initWithReferenceObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSJSONOriginalFileReference : MSJSONArchiveReference
{
}

- (void)encodeAsJSON:(id)arg1;
- (id)replacementObjectForJSONEncoder:(id)arg1;

@end

@interface MSJSONFileReference : MSJSONArchiveReference
{
}

- (id)initWithJSONDecoder:(id)arg1;

@end

@interface MSJSONDataReference : MSJSONArchiveReference
{
}

- (id)initWithJSONDecoder:(id)arg1;

@end

@interface MSJSONOriginalDataReference : MSJSONDataReference
{
}

- (id)initWithJSONDecoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;

@end

@interface MSBooleanOperationChainStep : NSObject
{
    MSPath *_path;
    long long _operation;
}

+ (id)booleanOperationChainStepWithPath:(id)arg1 operation:(long long)arg2;
@property(nonatomic) long long operation; // @synthesize operation=_operation;
@property(retain, nonatomic) MSPath *path; // @synthesize path=_path;
- (void).cxx_destruct;

@end

@interface MSBooleanOperationChain : NSObject
{
    MSPath *_subjectPath;
    MSPath *_resultPath;
    NSMutableArray *_steps;
}

+ (id)booleanOperationChainWithSubjectPath:(id)arg1;
@property(retain, nonatomic) NSMutableArray *steps; // @synthesize steps=_steps;
@property(retain, nonatomic) MSPath *resultPath; // @synthesize resultPath=_resultPath;
@property(retain, nonatomic) MSPath *subjectPath; // @synthesize subjectPath=_subjectPath;
- (void).cxx_destruct;
- (id)calculateResultPath;
- (void)addClippingPath:(id)arg1 forBooleanOperation:(long long)arg2;
- (id)initWithSubjectPath:(id)arg1;

@end

@interface _MSImmutableStyleFill : MSImmutableStyleBasicFill
{
    MSImageData *_image;
    long long _noiseIndex;
    double _noiseIntensity;
    long long _patternFillType;
    double _patternTileScale;
}

+ (Class)mutableClass;
@property(nonatomic) double patternTileScale; // @synthesize patternTileScale=_patternTileScale;
@property(nonatomic) long long patternFillType; // @synthesize patternFillType=_patternFillType;
@property(nonatomic) double noiseIntensity; // @synthesize noiseIntensity=_noiseIntensity;
@property(nonatomic) long long noiseIndex; // @synthesize noiseIndex=_noiseIndex;
@property(retain, nonatomic) MSImageData *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableArray : MSImmutableModelObject
{
    NSArray *_array;
}

- (void).cxx_destruct;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (id)initWithUnarchiver:(id)arg1 migratingFrom:(long long)arg2 toVersion:(long long)arg3;
- (id)initWithUnarchiver:(id)arg1;

@end

@interface MSBezierJoin : NSObject
{
    MSBezierSegment *_segment1;
    MSBezierSegment *_segment2;
    NSArray *_joinedSegments;
}

+ (id)segmentsByJoiningSegment1:(id)arg1 segment2:(id)arg2;
+ (id)joinWithSegment1:(id)arg1 segment2:(id)arg2;
@property(readonly, copy, nonatomic) NSArray *joinedSegments; // @synthesize joinedSegments=_joinedSegments;
@property(readonly, nonatomic) MSBezierSegment *segment2; // @synthesize segment2=_segment2;
@property(readonly, nonatomic) MSBezierSegment *segment1; // @synthesize segment1=_segment1;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)initWithSegment1:(id)arg1 segment2:(id)arg2 joinedSegments:(id)arg3;

@end

@interface MSBezierIntersection : NSObject
{
    MSBezierSegment *_segment1;
    MSBezierSegment *_segment2;
    double _segment1Offset;
    double _segment2Offset;
}

+ (id)intersectionWithSegment1:(id)arg1 segment2:(id)arg2 segment1Offset:(double)arg3 segment2Offset:(double)arg4;
@property(readonly, nonatomic) double segment2Offset; // @synthesize segment2Offset=_segment2Offset;
@property(readonly, nonatomic) double segment1Offset; // @synthesize segment1Offset=_segment1Offset;
@property(readonly, nonatomic) MSBezierSegment *segment2; // @synthesize segment2=_segment2;
@property(readonly, nonatomic) MSBezierSegment *segment1; // @synthesize segment1=_segment1;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)initWithSegment1:(id)arg1 segment2:(id)arg2 segment1Offset:(double)arg3 segment2Offset:(double)arg4;

@end

@interface MSImmutableSymbolMaster : _MSImmutableSymbolMaster
{
    long long _changeIdentifier;
}

+ (unsigned long long)traits;
@property(readonly, nonatomic) long long changeIdentifier; // @synthesize changeIdentifier=_changeIdentifier;
- (struct BCEdgePaddings)influenceRectPaddingForInstancesInDocument:(id)arg1 cache:(id)arg2 visitedSymbols:(id)arg3;
- (BOOL)influenceRectClipsToBounds;
- (void)preserveFlexibleWidthTextLayersInMutableMaster:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (id)modifiedMasterByApplyingInstance:(id)arg1 inDocument:(id)arg2;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (struct CGRect)calculateInfluenceRectForBoundsInDocument:(id)arg1 cache:(id)arg2 visitedSymbols:(id)arg3;
- (void)performInitWithMutableModelObject:(id)arg1;
- (id)availableOverridesWithParent:(id)arg1 overrideValues:(id)arg2 inDocument:(id)arg3;
- (id)mergeNestedOverrides:(id)arg1 withParent:(id)arg2;
- (id)nestedOverridesWithParent:(id)arg1;
- (BOOL)canAddOverridesForMaster:(id)arg1 toParent:(id)arg2;
- (id)overridePointsWithParent:(id)arg1;
- (BOOL)shouldDrawBackgroundInContext:(id)arg1 isDrawingAsSymbolInstance:(BOOL)arg2;
- (id)svgStyle:(id)arg1;
- (void)addTransformAttributes:(id)arg1 exporter:(id)arg2;

@end

@interface MSImmutableGradientStop : _MSImmutableGradientStop
{
}

- (id)initWithPosition:(double)arg1 color:(id)arg2;

@end

@interface MSBezierLineLineJoin : MSBezierJoin
{
}

+ (id)segmentsByJoiningSegment1:(id)arg1 segment2:(id)arg2;
+ (id)joinWithSegment1:(id)arg1 segment2:(id)arg2;

@end

@interface MSDefaultArchive : BCSingleton
{
    MSVersionedArchive *_archive;
}

@property(retain, nonatomic) MSVersionedArchive *archive; // @synthesize archive=_archive;
- (void).cxx_destruct;
- (void)setDefaultObject:(id)arg1;
- (id)newObject;
- (id)defaultObject;
- (id)archivesNeedingMigration;
- (Class)defaultClass;
- (id)oldDefaultsName;
- (id)filename;

@end

@interface MSSharedStyleContainer : _MSSharedStyleContainer
{
}

- (id)sharedStyles;
- (void)registerInstance:(id)arg1 withSharedStyle:(id)arg2;
- (unsigned long long)numberOfSharedStyles;
- (long long)indexOfSharedStyle:(id)arg1;
- (id)sharedStyleAtIndex:(unsigned long long)arg1;
- (id)sharedStyleWithID:(id)arg1;
- (id)sharedStyleForInstance:(id)arg1;
- (BOOL)isSharedStyleForInstance:(id)arg1;
- (void)removeSharedStyle:(id)arg1;
- (id)mergeSharedStyleWithName:(id)arg1 sharedStyleID:(id)arg2 instance:(id)arg3;
- (id)addSharedStyleWithName:(id)arg1 firstInstance:(id)arg2;
- (void)enumeratePotentialInstancesInContainer:(id)arg1 block:(CDUnknownBlockType)arg2;
- (unsigned long long)validStyleType;
- (Class)sharedObjectClass;

@end

@interface MSImmutableStyleColorControls : _MSImmutableStyleColorControls
{
}

- (id)renderBitmapEffects:(id)arg1;

@end

@interface MSTextLayer : _MSTextLayer <MSFirstLineTypesetterDelegate, MSColorConvertible>
{
    int ignoreDelegateNotificationsCounter;
    BOOL _isEditingText;
    id <MSTextLayerEditingDelegate> _editingDelegate;
    NSNumber *_defaultLineHeightValue;
    NSArray *_baselineOffsetsValue;
    struct CGRect _previousRectCache;
}

+ (long long)menuItemStateForTest:(CDUnknownBlockType)arg1 forLayers:(id)arg2;
+ (long long)menuItemStateForAlignment:(unsigned long long)arg1 forLayers:(id)arg2;
+ (void)setTextAlignment:(unsigned long long)arg1 forLayers:(id)arg2;
+ (BOOL)canSetTextAlignmentForLayers:(id)arg1;
+ (long long)menuItemStateForTextVerticalAlignment:(long long)arg1 forLayers:(id)arg2;
+ (void)setTextVerticalAlignment:(long long)arg1 forLayers:(id)arg2;
+ (BOOL)canSetTextVerticalAlignmentForLayers:(id)arg1;
+ (void)maintainTextLayerBaselinesForLayers:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
+ (id)keyPathsForValuesAffectingTextBehaviourSegmentIndex;
+ (id)keyPathsForValuesAffectingSupportsVerticalAlignment;
+ (id)keyPathsForValuesAffectingHasFixedHeight;
+ (id)keyPathsForValuesAffectingCanFixHeight;
@property(copy, nonatomic) NSArray *baselineOffsetsValue; // @synthesize baselineOffsetsValue=_baselineOffsetsValue;
@property(retain, nonatomic) NSNumber *defaultLineHeightValue; // @synthesize defaultLineHeightValue=_defaultLineHeightValue;
@property(nonatomic) __weak id <MSTextLayerEditingDelegate> editingDelegate; // @synthesize editingDelegate=_editingDelegate;
@property(nonatomic) BOOL isEditingText; // @synthesize isEditingText=_isEditingText;
@property(nonatomic) struct CGRect previousRectCache; // @synthesize previousRectCache=_previousRectCache;
- (void).cxx_destruct;
- (void)convertColorsUsing:(id)arg1;
- (BOOL)canLockProportions;
- (BOOL)canScale;
- (BOOL)canBeTransformed;
- (BOOL)constrainProportions;
- (void)checkTextBehaviourAndClippingAfterResizeFromCorner:(long long)arg1 mayClip:(BOOL)arg2;
- (void)resizeWithOldGroupSize:(struct CGSize)arg1;
- (void)layerDidResizeFromRect:(struct CGRect)arg1 corner:(long long)arg2;
- (void)replaceTextPreservingAttributeRanges:(id)arg1;
- (void)setTextTransform:(unsigned long long)arg1 range:(struct _NSRange)arg2;
- (void)makeLowercase:(id)arg1;
- (void)makeUppercase:(id)arg1;
- (void)multiplyBy:(double)arg1;
- (id)attributeForKey:(id)arg1;
- (void)addAttribute:(id)arg1 value:(id)arg2;
- (void)addAttributes:(id)arg1 forRange:(struct _NSRange)arg2;
- (void)setAttributes:(id)arg1 forRange:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 forRange:(struct _NSRange)arg3;
- (void)ignoreDelegateNotificationsInBlock:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) NSString *stringValue;
- (void)updateAttributedStringInBlock:(CDUnknownBlockType)arg1;
- (void)setAttributedString:(id)arg1;
@property(copy, nonatomic) NSAttributedString *attributedStringValue;
- (void)layerStyleDidChange;
- (BOOL)isEmpty;
@property(copy, nonatomic) NSDictionary *styleAttributes;
@property(copy, nonatomic) MSColor *textColor;
@property(nonatomic) double lineHeight;
- (double)baseLineHeight;
@property(retain, nonatomic) NSNumber *characterSpacing;
@property(retain, nonatomic) NSString *fontPostscriptName;
- (void)setFont:(id)arg1;
@property(nonatomic) double fontSize;
@property(nonatomic) long long verticalAlignment;
@property(nonatomic) unsigned long long textAlignment;
- (void)setLeading:(double)arg1;
- (double)leading;
- (id)paragraphStyle;
- (void)setKerning:(float)arg1;
- (float)kerning;
- (void)refreshOverlay;
- (id)bezierPathFromGlyphsInBounds;
- (id)bezierPathFromGlyphsInFrame;
@property(readonly, nonatomic) NSBezierPath *bezierPath;
- (struct CGPoint)drawingPointForText;
- (id)bezierPathWithTransforms;
- (double)startingPositionOnPath:(id)arg1;
- (double)defaultLineHeight:(id)arg1;
- (id)font;
- (void)changeFont:(id)arg1;
- (unsigned long long)selectionCornerMaskWithZoomValue:(double)arg1;
- (id)shapeToUseForTextOnPath;
- (void)updateNameFromStorage;
- (void)changeListType:(id)arg1;
- (void)setRectAccountingForClipped:(struct CGRect)arg1;
- (void)adjustFrameToFit;
- (void)finishEditing;
- (double)baselineAdjustmentForLayoutManager:(id)arg1;
- (void)replaceMissingFontsIfNecessary;
- (BOOL)compareAttributes:(id)arg1 withAttributes:(id)arg2;
- (void)syncTextStyleAttributes;
- (id)sharedObject;
- (void)setupBehaviour:(BOOL)arg1;
- (void)setTextBehaviour:(long long)arg1;
- (void)setTextBehaviour:(long long)arg1 mayAdjustFrame:(BOOL)arg2;
- (void)setStyle:(id)arg1;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)performInitEmptyObject;
- (void)objectDidInit;
- (id)initWithFrame:(struct CGRect)arg1 attributes:(id)arg2 documentColorSpace:(id)arg3 type:(long long)arg4;
- (id)initWithAttributedString:(id)arg1 documentColorSpace:(id)arg2 maxWidth:(double)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)PDFPreview;
- (BOOL)shouldStorePDFPreviews;
- (struct CGRect)measurementRectWithOptions:(unsigned long long)arg1;
- (long long)cornerRectType;
- (BOOL)shouldDrawSelection;
- (Class)handlerClass;
- (void)layerDidResizeFromInspector:(unsigned long long)arg1;
- (id)inspectorViewControllerNames;
- (void)drawHoverWithZoom:(double)arg1 color:(id)arg2 cache:(id)arg3;
- (void)copyStylePropertiesToShape:(id)arg1;
- (id)rawCopyOfStyle:(id)arg1;
- (void)copyTextPropertiesToShape:(id)arg1;
- (BOOL)canConvertToOutlines;
- (id)layersByConvertingToOutlines;
- (Class)layerSnapperObjectClass;
- (void)embedInRotatedGroup;
- (long long)cornerForBaselineMaintaining;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (void)changeTextColorTo:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)setTextBehaviourSegmentIndex:(long long)arg1;
- (long long)textBehaviourSegmentIndex;
- (BOOL)supportsVerticalAlignment;
- (BOOL)supportsInnerOuterBorders;
- (void)reapplyPreviousAttributesFromString:(id)arg1;
- (void)applyOverride:(id)arg1 toPoint:(id)arg2;
- (unsigned long long)resizingConstraint;
- (BOOL)canFixHeight;
- (void)replaceFonts:(id)arg1;
- (void)writeStyleToPasteboard:(id)arg1;
- (id)CSSAttributes;
- (long long)layoutDirection;
- (id)setupWithLayerBuilderDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSStyle : _MSStyle <MSSharedObjectInstance, NSCopying>
{
}

- (id)addStylePartOfType:(unsigned long long)arg1;
- (id)stylePartsOfType:(unsigned long long)arg1;
@property(readonly, nonatomic) double thickestInnerStroke;
@property(readonly, nonatomic) BOOL hasDecorations;
@property(readonly, nonatomic) double thickestStroke;
- (BOOL)hasTextStyle;
- (unsigned long long)type;
- (id)parentStyle;
- (id)parentLayer;
@property(readonly, nonatomic) BOOL hasEnabledBackgroundBlur;
- (BOOL)supportsAdvancedBorderSettings;
- (void)multiplyBy:(double)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (void)setTextStyle:(id)arg1;
@property(retain, nonatomic) MSTextStyle *primitiveTextStyle;
@property(retain, nonatomic) NSString *primitiveSharedObjectID;
- (void)setNilValueForKey:(id)arg1;
@property(readonly, nonatomic) BOOL hasBlending;
- (id)firstEnabledShadow;
- (id)firstEnabledFill;
- (id)firstEnabledBorder;
- (id)enabledInnerShadows;
- (id)enabledShadows;
- (id)enabledBorders;
- (id)enabledFills;
- (void)disableAllFills;
- (void)disableAllBorders;
@property(readonly, nonatomic) BOOL hasEnabledBorder;
@property(readonly, nonatomic) BOOL hasMoreThanOneEnabledFill;
@property(readonly, nonatomic) BOOL hasEnabledFill;
@property(readonly, nonatomic) BOOL hasEnabledShadow;
- (long long)determineMaskingMode;
- (void)prepareAsMask;
- (void)generatePreviewWithImageSize:(struct CGSize)arg1 previewSize:(struct CGSize)arg2 colorSpace:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)prepareForPreviewingWithImageSize:(struct CGSize)arg1 previewSize:(struct CGSize)arg2;
- (id)pathForPreviewWithSize:(struct CGSize)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *sharedObjectID;
@property(readonly) Class superclass;

@end

@interface MSImmutableRectangleShape : _MSImmutableRectangleShape
{
}

+ (id)defaultName;
- (BOOL)canSkipAdvancedClipForStrokes;
- (BOOL)isSVGRectangle;
- (void)simplifyPathElement:(id)arg1 exporter:(id)arg2 inset:(double)arg3;

@end

@interface _MSImmutableExportOptions : MSImmutableModelObject
{
    NSArray *_includedLayerIds;
    unsigned long long _layerOptions;
    BOOL _shouldTrim;
    NSArray *_exportFormats;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *exportFormats; // @synthesize exportFormats=_exportFormats;
@property(nonatomic) BOOL shouldTrim; // @synthesize shouldTrim=_shouldTrim;
@property(nonatomic) unsigned long long layerOptions; // @synthesize layerOptions=_layerOptions;
@property(retain, nonatomic) NSArray *includedLayerIds; // @synthesize includedLayerIds=_includedLayerIds;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSPasteboardLayersReaderWriter : NSObject <MSPasteboardReader, MSPasteboardWriter>
{
}

- (void)writeData:(id)arg1 toPasteboard:(id)arg2;
- (void)writeData:(id)arg1 toPasteboard:(id)arg2 withType:(id)arg3;
- (BOOL)canWriteDataToPasteboard:(id)arg1;
- (id)pasteboardDataFromPasteboard:(id)arg1 colorSpace:(id)arg2 options:(unsigned long long)arg3 sender:(id)arg4;
- (id)readDataFromPasteboard:(id)arg1;
- (id)readDataFromPasteboard:(id)arg1 withType:(id)arg2;
- (id)tempFileTypeForType:(id)arg1;
- (id)supportedPasteboardTypes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPasteboardLayerProvider : NSObject
{
    NSOperationQueue *_queue;
    NSData *_data;
}

+ (id)providerForDictionary:(id)arg1;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (id)initWithDictionary:(id)arg1;

@end

@interface MSPasteboardLayerListReaderWriter : MSPasteboardLayersReaderWriter
{
}

- (id)readDataFromPasteboard:(id)arg1;
- (void)writeData:(id)arg1 toPasteboard:(id)arg2;

@end

@interface MSPasteboardPageListReaderWriter : MSPasteboardLayersReaderWriter
{
}

- (id)readDataFromPasteboard:(id)arg1;
- (void)writeData:(id)arg1 toPasteboard:(id)arg2;

@end

@interface _MSBitmapLayer : MSStyledLayer
{
    struct CGRect _clippingMask;
    BOOL _fillReplacesImage;
    MSImageData *_image;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSImageData *image; // @synthesize image=_image;
@property(nonatomic) BOOL fillReplacesImage; // @synthesize fillReplacesImage=_fillReplacesImage;
@property(nonatomic) struct CGRect clippingMask; // @synthesize clippingMask=_clippingMask;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSStyleBorder : _MSStyleBorder <MSColorConvertible>
{
}

+ (id)defaultFillColor;
- (BOOL)supportsAdvancedBorderSettings;
- (void)multiplyBy:(double)arg1;
- (long long)patternFillType;
- (double)noiseIntensity;
- (void)performInitEmptyObject;
- (id)topViewForColorInspector:(id)arg1;
- (id)blendingViewForColorInspector:(id)arg1;
- (id)CSSAttributeString;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSSymbolInstance : MSStyledLayer
{
    double _horizontalSpacing;
    double _scale;
    NSString *_symbolID;
    double _verticalSpacing;
    NSMutableArray *_overrideValues;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveOverrideValueIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllOverrideValues;
- (void)removeOverrideValuesAtIndexes:(id)arg1;
- (void)removeOverrideValueAtIndex:(unsigned long long)arg1;
- (void)removeOverrideValue:(id)arg1;
- (void)insertOverrideValues:(id)arg1 afterOverrideValue:(id)arg2;
- (void)insertOverrideValue:(id)arg1 afterOverrideValue:(id)arg2;
- (void)insertOverrideValues:(id)arg1 beforeOverrideValue:(id)arg2;
- (void)insertOverrideValue:(id)arg1 beforeOverrideValue:(id)arg2;
- (void)insertOverrideValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addOverrideValues:(id)arg1;
- (void)addOverrideValue:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *overrideValues; // @synthesize overrideValues=_overrideValues;
@property(nonatomic) double verticalSpacing; // @synthesize verticalSpacing=_verticalSpacing;
@property(retain, nonatomic) NSString *symbolID; // @synthesize symbolID=_symbolID;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) double horizontalSpacing; // @synthesize horizontalSpacing=_horizontalSpacing;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableTriangleShape : _MSImmutableTriangleShape
{
}

+ (id)defaultName;

@end

@interface MSImmutableModelObject : MSModelObjectCommon <MSModelObject, MSCoding>
{
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (Class)mutableClass;
- (id)migrationsInList:(SEL *)arg1;
- (SEL *)migrationListForClass:(Class)arg1;
- (SEL *)allocateMigrationListForClass:(Class)arg1;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)performMigrationsWithUnarchiver:(id)arg1 migratingFrom:(long long)arg2 toVersion:(long long)arg3;
- (void)enumerateMigrations:(SEL *)arg1 fromVersion:(long long)arg2 toVersion:(long long)arg3 block:(CDUnknownBlockType)arg4;
- (void)performInitWithUnarchiver:(id)arg1;
- (id)initWithUnarchiver:(id)arg1 migratingFrom:(long long)arg2 toVersion:(long long)arg3;
- (id)initWithUnarchiver:(id)arg1;
- (id)initWithUnarchiver:(id)arg1 decodeBlock:(CDUnknownBlockType)arg2;
- (id)replacementObjectForJSONEncoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;
- (void)encodeObjectIDWithCoder:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;
- (id)initWithMutableModelObject:(id)arg1;
- (id)newMutableCounterpart;
- (BOOL)shouldDiffSubObjectsForDifferingObject:(id)arg1;
- (BOOL)differsFromObject:(id)arg1;
@property(readonly, nonatomic) NSArray *subObjectsForTreeDiff;
- (struct CGRect)overlayRectForAncestors:(id)arg1 document:(id)arg2;
- (struct CGRect)influenceRectForAncestors:(id)arg1 document:(id)arg2 cache:(id)arg3;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *objectID;
@property(readonly) Class superclass;

@end

@interface _MSStyleShadow : MSStylePart
{
    double _blurRadius;
    double _offsetX;
    double _offsetY;
    double _spread;
    MSColor *_color;
    MSGraphicsContextSettings *_contextSettings;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(retain, nonatomic) MSColor *color; // @synthesize color=_color;
@property(nonatomic) double spread; // @synthesize spread=_spread;
@property(nonatomic) double offsetY; // @synthesize offsetY=_offsetY;
@property(nonatomic) double offsetX; // @synthesize offsetX=_offsetX;
@property(nonatomic) double blurRadius; // @synthesize blurRadius=_blurRadius;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSPointArray : NSObject <NSCopying>
{
    NSMutableArray *_points;
}

@property(retain, nonatomic) NSMutableArray *points; // @synthesize points=_points;
- (void).cxx_destruct;
- (id)treeAsDictionary;
- (id)description;
- (void)replacePointAtIndex:(unsigned long long)arg1 withPoint:(struct CGPoint)arg2;
- (unsigned long long)countOfPoints;
- (void)removePoint:(struct CGPoint)arg1;
- (void)removePointAtIndex:(unsigned long long)arg1;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (void)insertPoint:(struct CGPoint)arg1 atIndex:(unsigned long long)arg2;
- (void)addPoint:(struct CGPoint)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface _MSCurvePoint : MSModelObject
{
    double _cornerRadius;
    struct CGPoint _curveFrom;
    long long _curveMode;
    struct CGPoint _curveTo;
    BOOL _hasCurveFrom;
    BOOL _hasCurveTo;
    struct CGPoint _point;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) struct CGPoint point; // @synthesize point=_point;
@property(nonatomic) BOOL hasCurveTo; // @synthesize hasCurveTo=_hasCurveTo;
@property(nonatomic) BOOL hasCurveFrom; // @synthesize hasCurveFrom=_hasCurveFrom;
@property(nonatomic) struct CGPoint curveTo; // @synthesize curveTo=_curveTo;
@property(nonatomic) long long curveMode; // @synthesize curveMode=_curveMode;
@property(nonatomic) struct CGPoint curveFrom; // @synthesize curveFrom=_curveFrom;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableShapeGroup : MSImmutableLayerGroup
{
    long long _clippingMaskMode;
    BOOL _hasClippingMask;
    unsigned long long _windingRule;
}

+ (Class)mutableClass;
@property(nonatomic) unsigned long long windingRule; // @synthesize windingRule=_windingRule;
@property(nonatomic) BOOL hasClippingMask; // @synthesize hasClippingMask=_hasClippingMask;
@property(nonatomic) long long clippingMaskMode; // @synthesize clippingMaskMode=_clippingMaskMode;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSShapePath : _MSShapePath
{
}

@end

@interface MSFontList : NSObject
{
    unsigned long long _cachingIndex;
    NSArray *_documentFontFamilyNames;
    MSDocumentData *_documentData;
    NSArray *_systemFonts;
    NSArray *_allFonts;
    NSArray *_filterFonts;
}

+ (void)initialize;
@property(retain, nonatomic) NSArray *filterFonts; // @synthesize filterFonts=_filterFonts;
@property(retain, nonatomic) NSArray *allFonts; // @synthesize allFonts=_allFonts;
@property(retain, nonatomic) NSArray *systemFonts; // @synthesize systemFonts=_systemFonts;
@property(readonly, nonatomic) __weak MSDocumentData *documentData; // @synthesize documentData=_documentData;
@property(copy, nonatomic) NSArray *documentFontFamilyNames; // @synthesize documentFontFamilyNames=_documentFontFamilyNames;
- (void).cxx_destruct;
- (void)prepareForDealloc;
- (void)stopCachingFonts;
- (void)dispatchStartCachingFonts;
- (void)startCachingFonts;
- (void)clearFilter;
- (void)filter:(id)arg1;
- (id)fontForFontFamilyAtIndex:(unsigned long long)arg1;
- (id)nameOfFontFamilyAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfFontFamilies;
- (void)findCommonFontsInDocument:(id)arg1;
- (void)findSystemFonts;
- (void)reloadFonts;
- (id)initWithDocumentData:(id)arg1;

@end

@interface _MSStyleBasicFill : MSStylePart
{
    unsigned long long _fillType;
    MSColor *_color;
    MSGraphicsContextSettings *_contextSettings;
    MSGradient *_gradient;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSGradient *gradient; // @synthesize gradient=_gradient;
@property(retain, nonatomic) MSGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(retain, nonatomic) MSColor *color; // @synthesize color=_color;
@property(nonatomic) unsigned long long fillType; // @synthesize fillType=_fillType;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSAdaptableColor : NSColor
{
}

- (id)initWithCoder:(id)arg1;

@end

@interface MSTrailingLayersMover : NSObject
{
}

+ (id)sortIncomingLayersByDirection:(id)arg1;
+ (double)spaceBetweenRect:(struct CGRect)arg1 andPreviousRect:(struct CGRect)arg2 inDirection:(long long)arg3;
+ (id)unboundedLayersTrailingLayer:(id)arg1 inDirection:(long long)arg2;
+ (id)sortLayers:(id)arg1 inDirection:(long long)arg2;
+ (id)layersTrailingLayer:(id)arg1 inDirection:(long long)arg2;
+ (void)applyTrailingLayerInfo:(id)arg1 toLayer:(id)arg2;
+ (id)trailingLayerInfoForLayer:(id)arg1;
+ (void)changeFrameForLayers:(id)arg1 inBlock:(CDUnknownBlockType)arg2;

@end

@interface MSTrailingLayerInfo : NSObject
{
    NSMapTable *_trailingLayers;
    long long _direction;
    struct CGRect _oldRect;
}

@property(nonatomic) long long direction; // @synthesize direction=_direction;
@property(retain, nonatomic) NSMapTable *trailingLayers; // @synthesize trailingLayers=_trailingLayers;
@property(nonatomic) struct CGRect oldRect; // @synthesize oldRect=_oldRect;
- (void).cxx_destruct;

@end

@interface _MSTextLayer : MSStyledLayer
{
    MSAttributedString *_attributedString;
    BOOL _automaticallyDrawOnUnderlyingPath;
    BOOL _dontSynchroniseWithSymbol;
    struct CGRect _glyphBounds;
    long long _lineSpacingBehaviour;
    MSImageData *_preview;
    long long _textBehaviour;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) long long textBehaviour; // @synthesize textBehaviour=_textBehaviour;
@property(retain, nonatomic) MSImageData *preview; // @synthesize preview=_preview;
@property(nonatomic) long long lineSpacingBehaviour; // @synthesize lineSpacingBehaviour=_lineSpacingBehaviour;
@property(nonatomic) struct CGRect glyphBounds; // @synthesize glyphBounds=_glyphBounds;
@property(nonatomic) BOOL dontSynchroniseWithSymbol; // @synthesize dontSynchroniseWithSymbol=_dontSynchroniseWithSymbol;
@property(nonatomic) BOOL automaticallyDrawOnUnderlyingPath; // @synthesize automaticallyDrawOnUnderlyingPath=_automaticallyDrawOnUnderlyingPath;
@property(retain, nonatomic) MSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleBlur : MSStylePart
{
    struct CGPoint _center;
    double _motionAngle;
    double _radius;
    unsigned long long _type;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double motionAngle; // @synthesize motionAngle=_motionAngle;
@property(nonatomic) struct CGPoint center; // @synthesize center=_center;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSDocumentReader : NSObject
{
    NSError *_error;
}

+ (id)readerForDocumentAtURL:(id)arg1;
+ (unsigned int)first4bytesOfFileAtURL:(id)arg1;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (id)previewImageWithMaximumSize:(struct CGSize)arg1;
@property(readonly, nonatomic) NSImage *libraryPreviewImage;
@property(readonly, nonatomic) NSImage *previewImage;
@property(readonly, nonatomic) NSDictionary *metadata;
- (id)readImmutableDataWithCorruptionDetected:(char *)arg1 error:(id *)arg2;
- (unsigned long long)validate;
@property(readonly, nonatomic) NSDictionary *UIMetadata;
- (BOOL)open:(id *)arg1;
@property(readonly, nonatomic) long long compatibilityVersion;
@property(readonly, nonatomic) long long version;
@property(readonly, nonatomic) NSArray *missingFonts;
- (void)repair;
- (BOOL)containsLibraryPreviewImage;
@property(readonly, nonatomic) BOOL containsPreviewImage;
@property(readonly, nonatomic) BOOL documentWasMigrated;
- (id)readDataWithCorruptionDetected:(char *)arg1 error:(id *)arg2;

@end

@interface MSSymbolContainer : _MSSymbolContainer
{
}

- (void)enumeratePotentialInstancesInContainer:(id)arg1 block:(CDUnknownBlockType)arg2;

@end

@interface _MSSharedObject : MSModelObject
{
    NSString *_name;
    MSModelObjectCommon *_value;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSModelObjectCommon *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableImageCollection : MSImmutableModelObject
{
    NSDictionary *_images;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSDictionary *images; // @synthesize images=_images;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableSimpleGrid : _MSImmutableSimpleGrid
{
}

@end

@interface MSImmutableShapePathLayer : _MSImmutableShapePathLayer
{
    BOOL _isEditing;
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (id)defaultName;
+ (unsigned long long)traits;
@property(readonly, nonatomic) BOOL isEditing; // @synthesize isEditing=_isEditing;
- (void)encodePropertiesWithCoder:(id)arg1;
@property(readonly, nonatomic) BOOL isRectangle;
@property(readonly, nonatomic) BOOL isPolyline;
@property(readonly, nonatomic) BOOL isPolygon;
@property(readonly, nonatomic) unsigned long long numberOfCurvePoints;
@property(readonly, nonatomic) MSImmutableStyle *usedStyle;
- (BOOL)isLayerExportable;
- (id)bezierPathWithoutTransformsInRect:(struct CGRect)arg1;
- (id)bezierPathInRect:(struct CGRect)arg1;
- (id)pathInRect:(struct CGRect)arg1;
- (void)refreshPreviewImagesWithDocumentData:(id)arg1 cache:(id)arg2;
- (BOOL)previewImagesRequireRefreshWithDocumentData:(id)arg1 cache:(id)arg2;
- (void)migratePropertiesFromV99OrEarlierWithUnarchiver:(id)arg1;
- (struct CGRect)relativeRectWithExporter:(id)arg1;
- (void)simplifyPathElement:(id)arg1 exporter:(id)arg2 inset:(double)arg3;

@end

@interface MSImmutableColor : _MSImmutableColor <MSColor>
{
}

+ (id)hexValueForRed:(double)arg1 green:(double)arg2 blue:(double)arg3;
+ (void)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 fromHexValue:(id)arg4;
+ (id)availableRGBColorSpaces;
+ (id)colorWithNSColor:(id)arg1;
+ (id)blackColor;
+ (id)whiteColor;
+ (id)colorWithIntegerRed:(long long)arg1 green:(long long)arg2 blue:(long long)arg3;
+ (id)colorWithIntegerRed:(long long)arg1 green:(long long)arg2 blue:(long long)arg3 alpha:(long long)arg4;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithSVGString:(id)arg1;
+ (id)namedColor:(id)arg1;
+ (id)staticColorDictionary;
- (BOOL)propertiesAreEqual:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)stringValueWithAlpha:(BOOL)arg1 alphaMultiplication:(double)arg2;
- (id)stringValueWithAlpha:(BOOL)arg1;
- (BOOL)fuzzyIsEqualExcludingAlpha:(id)arg1 precision:(double)arg2;
- (BOOL)fuzzyIsEqualExcludingAlpha:(id)arg1;
- (BOOL)fuzzyIsEqual:(id)arg1 precision:(double)arg2;
- (BOOL)fuzzyIsEqual:(id)arg1;
- (id)hexValue;
- (BOOL)isBlack;
- (BOOL)isWhite;
- (struct CGColor *)newCGColorWithColorSpace:(struct CGColorSpace *)arg1;
- (id)NSColorWithColorSpace:(id)arg1;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
@property(readonly, nonatomic) NSArray *manifestComponents;
- (id)treeAsDictionary;
- (id)svgRepresentation;
- (id)NSColorForContext:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) double alpha;
@property(readonly, nonatomic) double blue;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) double green;
@property(readonly, nonatomic) double red;
@property(readonly) Class superclass;

@end

@interface MSFirstLineHeightTypesetter : NSATSTypesetter
{
    double _forcedBaselineOffset;
    id <MSFirstLineTypesetterDelegate> _delegate;
}

@property(nonatomic) __weak id <MSFirstLineTypesetterDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double forcedBaselineOffset; // @synthesize forcedBaselineOffset=_forcedBaselineOffset;
- (void).cxx_destruct;
- (void)willSetLineFragmentRect:(struct CGRect *)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect *)arg3 baselineOffset:(double *)arg4;

@end

@interface MSCurvePointBehaviour : NSObject
{
}

+ (void)curveToChangedInPoint:(id)arg1;
+ (void)curveFromChangedInPoint:(id)arg1;
+ (void)didAssignBehaviorToHandle:(unsigned long long)arg1 ofPoint:(id)arg2 previousMode:(long long)arg3;

@end

@interface _MSBaseGrid : MSModelObject
{
    BOOL _isEnabled;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableStyleBorderOptions : _MSImmutableStyleBorderOptions
{
}

@property(readonly, nonatomic) int CGLineCap;
@property(readonly, nonatomic) int CGLineJoin;
@property(readonly, nonatomic) BOOL hasDashPattern;
- (void)addSVGAttributes:(id)arg1 exporter:(id)arg2;

@end

@interface MSImmutablePersistentAssetCollection : MSImmutableAssetCollection
{
}

+ (Class)mutableClass;

@end

@interface MSAttributedStringAttribute : NSObject <BCJSONEncoding>
{
    NSDictionary *_attributeDictionary;
    struct _NSRange _range;
}

@property(retain, nonatomic) NSDictionary *attributeDictionary; // @synthesize attributeDictionary=_attributeDictionary;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (void).cxx_destruct;
- (id)initWithJSONDecoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSImmutableAssetCollection : MSImmutableModelObject
{
    NSArray *_images;
    NSArray *_colors;
    NSArray *_exportPresets;
    NSArray *_gradients;
    MSImmutableImageCollection *_imageCollection;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableImageCollection *imageCollection; // @synthesize imageCollection=_imageCollection;
@property(retain, nonatomic) NSArray *gradients; // @synthesize gradients=_gradients;
@property(retain, nonatomic) NSArray *exportPresets; // @synthesize exportPresets=_exportPresets;
@property(retain, nonatomic) NSArray *colors; // @synthesize colors=_colors;
@property(retain, nonatomic) NSArray *images; // @synthesize images=_images;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSForeignSymbol : _MSForeignSymbol
{
}

+ (id)foreignSymbolWithMaster:(id)arg1 inLibrary:(id)arg2;
- (id)masterFromLibrary:(id)arg1;
@property(readonly, nonatomic) NSString *remoteSymbolID;
- (id)unlinkFromRemote;
- (void)syncWithRemote:(id)arg1;
- (BOOL)isOutOfDateWithLibrary:(id)arg1;
- (id)remoteShareID;
- (void)setLocalShareID:(id)arg1;
- (id)localShareID;
- (void)setOriginalObject:(id)arg1;
- (id)originalObject;
- (void)setLocalObject:(id)arg1;
- (id)localObject;

@end

@interface MSImmutableStyleBlur : _MSImmutableStyleBlur
{
}

- (double)cropRadius;
- (id)renderBitmapEffects:(id)arg1;
- (BOOL)shouldUseCoreImageForEffect;
- (void)addFilterWithExporter:(id)arg1;

@end

@interface MSImmutableShapePath : _MSImmutableShapePath
{
}

- (id)initWithPoints:(id)arg1 pointRadiusBehaviour:(long long)arg2 isClosed:(BOOL)arg3;

@end

@interface _MSImmutableOvalShape : MSImmutableShapePathLayer
{
}

+ (Class)mutableClass;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSAssetCollection : _MSAssetCollection
{
}

- (BOOL)moveAssetAtIndex:(unsigned long long)arg1 beforeObjectAtIndex:(unsigned long long)arg2 ofType:(unsigned long long)arg3;
- (id)moveAssetInArray:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (id)indexesOfAsset:(id)arg1;
- (id)arrayForType:(unsigned long long)arg1;
- (void)removeAssetAtIndex:(unsigned long long)arg1 ofType:(unsigned long long)arg2;
- (id)assetAtIndex:(unsigned long long)arg1 ofType:(unsigned long long)arg2;
- (void)addAsset:(id)arg1;
- (unsigned long long)numberOfAssetsOfType:(unsigned long long)arg1;

@end

@interface _MSImmutablePolygonShape : MSImmutableShapePathLayer
{
    long long _numberOfPoints;
}

+ (Class)mutableClass;
@property(nonatomic) long long numberOfPoints; // @synthesize numberOfPoints=_numberOfPoints;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSStyleShadow : _MSStyleShadow <MSColorConvertible>
{
}

- (void)convertColorsUsing:(id)arg1;
- (void)multiplyBy:(double)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (void)performInitEmptyObject;
- (id)blendingViewForColorInspector:(id)arg1;
- (id)CSSAttributeString;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSImmutableForeignSymbol : MSImmutableForeignObject
{
    MSImmutableSymbolMaster *_originalMaster;
    MSImmutableSymbolMaster *_symbolMaster;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableSymbolMaster *symbolMaster; // @synthesize symbolMaster=_symbolMaster;
@property(retain, nonatomic) MSImmutableSymbolMaster *originalMaster; // @synthesize originalMaster=_originalMaster;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSRulerData : MSModelObject
{
    long long _base;
    NSArray *_guides;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(copy, nonatomic) NSArray *guides; // @synthesize guides=_guides;
@property(nonatomic) long long base; // @synthesize base=_base;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableSliceLayer : _MSImmutableSliceLayer <MSLayerWithBackgroundColor>
{
}

+ (id)defaultName;
+ (unsigned long long)traits;
- (struct CGRect)absoluteInfluenceRectForAncestorGroups:(id)arg1 document:(id)arg2;
- (id)immutableBackgroundColor;
- (BOOL)isLayerExportable;
- (void)refreshPreviewImagesWithDocumentData:(id)arg1 cache:(id)arg2;
- (BOOL)previewImagesRequireRefreshWithDocumentData:(id)arg1 cache:(id)arg2;
- (void)drawPreviewInRect:(struct CGRect)arg1 documentData:(id)arg2 selected:(BOOL)arg3 bezier:(id)arg4;
- (void)configureBackgroundOfRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) BOOL hasBackgroundColor;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSImmutableStylePart : MSImmutableModelObject
{
    BOOL _isEnabled;
}

+ (Class)mutableClass;
@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableOverrideValue : _MSImmutableOverrideValue
{
}

+ (id)overrideValuesFromDictionary:(id)arg1;
+ (id)dictionaryFromOverrideValues:(id)arg1;
+ (id)overrideValuesFromDictionary:(id)arg1 withPrefix:(id)arg2;
- (id)description;
- (id)initWithName:(id)arg1 value:(id)arg2;

@end

@interface MSImmutableSharedObject : _MSImmutableSharedObject
{
}

- (id)defaultName;

@end

@interface MSImmutableStyleInnerShadow : _MSImmutableStyleInnerShadow <MSColorUser>
{
}

- (void)updateColorCounter:(id)arg1;
- (void)addSVGFilterWithParent:(id)arg1 exporter:(id)arg2 index:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSImmutableStyledLayer : MSImmutableLayer
{
    MSImmutableStyle *_style;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableStyle *style; // @synthesize style=_style;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSSmoothBezierFillet : MSBezierFillet
{
    NSArray *_arcSegments;
}

+ (id)smoothBezierFilletWithLineSegment1:(id)arg1 lineSegment2:(id)arg2 filletRadius:(double)arg3;
@property(retain, nonatomic) NSArray *arcSegments; // @synthesize arcSegments=_arcSegments;
- (void).cxx_destruct;
- (void)addArcToBezierPath:(id)arg1 orCGPath:(struct CGPath *)arg2;
- (id)reversedFillet;

@end

@interface _MSShapePath : MSModelObject
{
    BOOL _isClosed;
    long long _pointRadiusBehaviour;
    NSMutableArray *_points;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveCurvePointIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllCurvePoints;
- (void)removeCurvePointsAtIndexes:(id)arg1;
- (void)removeCurvePointAtIndex:(unsigned long long)arg1;
- (void)removeCurvePoint:(id)arg1;
- (void)insertCurvePoints:(id)arg1 afterCurvePoint:(id)arg2;
- (void)insertCurvePoint:(id)arg1 afterCurvePoint:(id)arg2;
- (void)insertCurvePoints:(id)arg1 beforeCurvePoint:(id)arg2;
- (void)insertCurvePoint:(id)arg1 beforeCurvePoint:(id)arg2;
- (void)insertCurvePoint:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addCurvePoints:(id)arg1;
- (void)addCurvePoint:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *points; // @synthesize points=_points;
@property(nonatomic) long long pointRadiusBehaviour; // @synthesize pointRadiusBehaviour=_pointRadiusBehaviour;
@property(nonatomic) BOOL isClosed; // @synthesize isClosed=_isClosed;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableArtboardGroup : MSImmutableLayerGroup
{
    BOOL _hasBackgroundColor;
    BOOL _includeBackgroundColorInExport;
    BOOL _includeInCloudUpload;
    BOOL _isFlowHome;
    NSDictionary *_presetDictionary;
    BOOL _resizesContent;
    MSImmutableColor *_backgroundColor;
    MSImmutableSimpleGrid *_grid;
    MSImmutableRulerData *_horizontalRulerData;
    MSImmutableLayoutGrid *_layout;
    MSImmutableRulerData *_verticalRulerData;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableRulerData *verticalRulerData; // @synthesize verticalRulerData=_verticalRulerData;
@property(retain, nonatomic) MSImmutableLayoutGrid *layout; // @synthesize layout=_layout;
@property(retain, nonatomic) MSImmutableRulerData *horizontalRulerData; // @synthesize horizontalRulerData=_horizontalRulerData;
@property(retain, nonatomic) MSImmutableSimpleGrid *grid; // @synthesize grid=_grid;
@property(retain, nonatomic) MSImmutableColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) BOOL resizesContent; // @synthesize resizesContent=_resizesContent;
@property(retain, nonatomic) NSDictionary *presetDictionary; // @synthesize presetDictionary=_presetDictionary;
@property(nonatomic) BOOL isFlowHome; // @synthesize isFlowHome=_isFlowHome;
@property(nonatomic) BOOL includeInCloudUpload; // @synthesize includeInCloudUpload=_includeInCloudUpload;
@property(nonatomic) BOOL includeBackgroundColorInExport; // @synthesize includeBackgroundColorInExport=_includeBackgroundColorInExport;
@property(nonatomic) BOOL hasBackgroundColor; // @synthesize hasBackgroundColor=_hasBackgroundColor;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSSharedStyle : MSSharedObject
{
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSLayerPaster : NSObject
{
    NSMutableDictionary *_objectIDMap;
    NSMutableArray *_insertedSymbolMasters;
    MSPasteboardLayers *_pasteboardLayers;
}

+ (id)duplicateLayers:(id)arg1;
+ (id)parentForData:(id)arg1 hint:(id)arg2 page:(id)arg3;
+ (id)parentForData:(id)arg1 hint:(id)arg2 page:(id)arg3 viewPort:(id)arg4;
+ (id)insertPasteboardData:(id)arg1 intoParent:(id)arg2 atPosition:(struct CGPoint)arg3 afterLayer:(id)arg4;
+ (id)insertPagePasteboardData:(id)arg1 intoDocument:(id)arg2 afterPage:(id)arg3;
+ (id)insertPasteboardData:(id)arg1 intoParent:(id)arg2 beforeLayer:(id)arg3;
+ (id)insertPasteboardData:(id)arg1 onPage:(id)arg2 withHint:(id)arg3 viewPort:(id)arg4;
@property(readonly, nonatomic) MSPasteboardLayers *pasteboardLayers; // @synthesize pasteboardLayers=_pasteboardLayers;
@property(readonly, nonatomic) NSMutableArray *insertedSymbolMasters; // @synthesize insertedSymbolMasters=_insertedSymbolMasters;
@property(readonly, nonatomic) NSMutableDictionary *objectIDMap; // @synthesize objectIDMap=_objectIDMap;
- (void).cxx_destruct;
- (void)removeDisconnectedFlowsFromLayers:(id)arg1;
- (BOOL)propertiesAreEqualBetweenSymbol:(id)arg1 andSymbol:(id)arg2;
- (void)addForeignSymbolsInOocument:(id)arg1;
- (id)matchingForeignSymbol:(id)arg1 inDocument:(id)arg2;
- (id)pasteSymbol:(id)arg1 fromInstanceReferenceToDocument:(id)arg2;
- (void)addSymbolMastersInDocument:(id)arg1;
- (void)updateOverrides;
- (void)ensureSymbolMastersIn:(id)arg1 haveUniqueIDInDocument:(id)arg2;
- (void)addSharedObjectsInDocument:(id)arg1;
- (id)rightmostArtboardOnPage:(id)arg1 intersectingRect:(struct CGRect)arg2;
- (struct CGPoint)findFirstAvailablePositionForSize:(struct CGSize)arg1 nextToArtboardsOnPage:(id)arg2 inAllowedRect:(struct CGRect)arg3;
- (BOOL)wouldArtboardWithRect:(struct CGRect)arg1 intersectOtherArtboardsOnPage:(id)arg2;
- (id)layersFromLayersWithPathsWrapped:(id)arg1 forParent:(id)arg2;
- (id)pathsExtractedFromLayers:(id)arg1;
- (id)layersFromPasteboardSuitedForParent:(id)arg1;
- (void)setCombinedOrigin:(struct CGPoint)arg1 forLayers:(id)arg2;
- (id)insertPagePasteboardDataIntoDocument:(id)arg1 afterPage:(id)arg2;
- (id)insertPasteboardDataIntoParent:(id)arg1 beforeLayer:(id)arg2;
- (id)insertPasteboardDataIntoParent:(id)arg1 atPosition:(struct CGPoint)arg2 afterLayer:(id)arg3;
- (id)fixupAfterPastingLayers:(id)arg1 intoParent:(id)arg2;
- (id)prepareToInsertLayers:(id)arg1 intoDocument:(id)arg2;
- (struct CGRect)centerSize:(struct CGSize)arg1 inAllowedRect:(struct CGRect)arg2;
- (struct CGRect)allowedRectForViewport:(id)arg1 root:(id)arg2;
- (struct CGRect)rectByMaintainingOriginalPositionInRoot:(id)arg1;
- (struct CGRect)targetRectForPasteboardDataInViewPort:(id)arg1 root:(id)arg2 canMoveViewport:(char *)arg3;
- (id)parentForDataWithHint:(id)arg1 page:(id)arg2;
- (id)parentForDataWithHint:(id)arg1 page:(id)arg2 viewPort:(id)arg3;
- (id)insertPasteboardDataOnPage:(id)arg1 withHint:(id)arg2 viewPort:(id)arg3;
- (id)initWithPasteboardLayers:(id)arg1;

@end

@interface MSBezierSegment : NSObject
{
    double _lineLength;
    double _arcLength;
    struct CGRect _bounds;
    BOOL _looksLikeALine;
    BOOL _lineLengthCached;
    BOOL _arcLengthCached;
    BOOL _boundsCached;
    BOOL _looksLikeALineCached;
    unsigned long long _segmentType;
    NSSet *_xAxisRoots;
    NSSet *_yAxisRoots;
    NSSet *_inflectionOffsets;
    MSBezierSegment *_derivative;
    struct CGPoint _endPoint1;
    struct CGPoint _endPoint2;
    struct CGPoint _controlPoint1;
    struct CGPoint _controlPoint2;
}

+ (id)cubicSegmentWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
+ (id)quadraticSegmentWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 controlPoint:(struct CGPoint)arg3;
+ (id)lineSegmentWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2;
@property(retain, nonatomic) MSBezierSegment *derivative; // @synthesize derivative=_derivative;
@property(retain, nonatomic) NSSet *inflectionOffsets; // @synthesize inflectionOffsets=_inflectionOffsets;
@property(retain, nonatomic) NSSet *yAxisRoots; // @synthesize yAxisRoots=_yAxisRoots;
@property(retain, nonatomic) NSSet *xAxisRoots; // @synthesize xAxisRoots=_xAxisRoots;
@property(readonly, nonatomic) struct CGPoint controlPoint2; // @synthesize controlPoint2=_controlPoint2;
@property(readonly, nonatomic) struct CGPoint controlPoint1; // @synthesize controlPoint1=_controlPoint1;
@property(readonly, nonatomic) struct CGPoint endPoint2; // @synthesize endPoint2=_endPoint2;
@property(readonly, nonatomic) struct CGPoint endPoint1; // @synthesize endPoint1=_endPoint1;
@property(readonly, nonatomic) unsigned long long segmentType; // @synthesize segmentType=_segmentType;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)description;
- (id)repr;
- (id)bezierPath;
- (BOOL)isEqualToBezierSegment:(id)arg1;
- (struct CGRect)bounds;
@property(readonly, nonatomic) double curviness;
- (id)reversedSegment;
- (id)representationUsingType:(unsigned long long)arg1;
- (id)cubicRepresentation;
- (id)quadraticRepresentation;
- (id)lineRepresentation;
- (id)segmentWithInset:(double)arg1;
- (id)segmentWithTransform:(struct CGAffineTransform)arg1;
- (id)segmentByMovingPointAtOffset:(double)arg1 toLocation:(struct CGPoint)arg2;
@property(readonly, nonatomic) struct CGAffineTransform transformForXAxisAlignment;
- (id)segmentFromOffset:(double)arg1;
- (id)segmentToOffset:(double)arg1;
- (id)intersectionsWithSegment:(id)arg1;
- (id)offsetsOfIntersectionsWithTangent:(struct MSTangent)arg1;
- (double)offsetForNormalToPoint:(struct CGPoint)arg1;
- (double)curvatureAtOffset:(double)arg1;
- (double)curvatureAtEndPoint2;
- (double)curvatureAtEndPoint1;
- (double)curvatureFromPoint1:(struct CGPoint)arg1 point2:(struct CGPoint)arg2 point3:(struct CGPoint)arg3;
- (struct CGPoint)pointAtOffset:(double)arg1;
- (struct MSTangent)tangentAtOffset:(double)arg1;
- (void)tanget:(struct MSTangent *)arg1 andPoint:(struct CGPoint *)arg2 atOffset:(double)arg3;
- (void)quadraticDeCasteljauAt:(double)arg1 points:(struct CGPoint *)arg2;
- (void)cubicDeCasteljauAt:(double)arg1 points:(struct CGPoint *)arg2;
@property(readonly, nonatomic) BOOL isAPoint;
@property(readonly, nonatomic) BOOL looksLikeALine;
@property(readonly, nonatomic) double arcLength;
- (double)arcLengthWithSegments:(unsigned long long)arg1;
@property(readonly, nonatomic) double lineLength;
- (id)segmentMirroredAtOffset:(double)arg1;
- (id)segmentWithEndPoint2:(struct CGPoint)arg1;
- (id)segmentWithEndPoint1:(struct CGPoint)arg1;
- (id)initWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
- (id)initWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 controlPoint:(struct CGPoint)arg3;
- (id)initWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2;
- (id)segmentBySmoothingEndPoints:(double)arg1 decay:(double)arg2;

@end

@interface MSBezierBuilder : NSObject
{
    BOOL _pathShouldClose;
    long long _pointRadiusBehaviour;
    NSArray *_points;
    NSMutableDictionary *_filletCache;
    struct CGRect _rect;
}

+ (id)bezierPathForSegmentAtIndex:(unsigned long long)arg1 inPath:(id)arg2 inRect:(struct CGRect)arg3;
+ (id)pathWithPoints:(id)arg1 inRect:(struct CGRect)arg2 shouldClose:(BOOL)arg3 pointRadiusBehaviour:(long long)arg4;
+ (id)bezierPathWithPoints:(id)arg1 inRect:(struct CGRect)arg2 shouldClose:(BOOL)arg3 pointRadiusBehaviour:(long long)arg4;
@property(retain, nonatomic) NSMutableDictionary *filletCache; // @synthesize filletCache=_filletCache;
@property(nonatomic) BOOL pathShouldClose; // @synthesize pathShouldClose=_pathShouldClose;
@property(retain, nonatomic) NSArray *points; // @synthesize points=_points;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(readonly, nonatomic) long long pointRadiusBehaviour; // @synthesize pointRadiusBehaviour=_pointRadiusBehaviour;
- (void).cxx_destruct;
- (void)addCurveFromPointAtIndex:(unsigned long long)arg1 toPointAtIndex:(unsigned long long)arg2 inArray:(id)arg3 inRect:(struct CGRect)arg4 includingTrailingArc:(BOOL)arg5 toBezierPath:(id)arg6 orCGPath:(struct CGPath *)arg7;
- (void)addLineToPointIfNecessary:(struct CGPoint)arg1 toBezierPath:(id)arg2 orCGPath:(struct CGPath *)arg3;
- (id)filletAtIndex:(unsigned long long)arg1 inPointArray:(id)arg2 rect:(struct CGRect)arg3;
- (void)buildV1BezierPath:(id)arg1 orCGPath:(struct CGPath *)arg2;
- (void)extendPath:(id)arg1 orCGPath:(struct CGPath *)arg2 toPoint:(struct CGPoint)arg3 controlPoint1:(struct CGPoint)arg4 controlPoint2:(struct CGPoint)arg5;
- (void)appendCurveFromPoint:(id)arg1 toPoint:(id)arg2 toBezierPath:(id)arg3 orCGPath:(struct CGPath *)arg4;
- (id)bezierPathFromCurvePoint:(id)arg1 toPoint:(id)arg2;
- (void)buildV0BezierPath:(id)arg1 orCGPath:(struct CGPath *)arg2;
- (void)buildBezierPath:(id)arg1 orCGPath:(struct CGPath *)arg2;
- (id)_bezierPath;
- (id)_path;
- (id)path;
- (id)bezierPath;
- (BOOL)treatCurvePointAsRounded:(id)arg1;
- (BOOL)isStraightLine;
- (id)init;
- (id)initWithPointRadiusBehavior:(long long)arg1;

@end

@interface MSJSONDataUnarchiver : MSJSONUnarchiver
{
    BCJSONDecoder *_dataDecoder;
    NSData *_data;
}

+ (id)unarchiveObjectWithString:(id)arg1 asVersion:(long long)arg2 corruptionDetected:(char *)arg3 error:(id *)arg4;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) BCJSONDecoder *dataDecoder; // @synthesize dataDecoder=_dataDecoder;
- (void).cxx_destruct;
- (id)decodeReferenceObjectOfClass:(id)arg1 withIdentifier:(id)arg2;
- (id)decodeRoot;
- (id)decoder;
- (id)initForReadingWithData:(id)arg1;

@end

@interface _MSSharedTextStyleContainer : MSSharedStyleContainer
{
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableStyleBlur : MSImmutableStylePart
{
    struct CGPoint _center;
    double _motionAngle;
    double _radius;
    unsigned long long _type;
}

+ (Class)mutableClass;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double motionAngle; // @synthesize motionAngle=_motionAngle;
@property(nonatomic) struct CGPoint center; // @synthesize center=_center;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSPolygonShape : _MSPolygonShape
{
}

- (BOOL)canFlatten;
- (void)resetPoints;
- (id)inspectorViewControllerNames;

@end

@interface MSImmutableArtboardGroup : _MSImmutableArtboardGroup <MSWebExportableRootLayer, MSColorUser, MSLayerWithBackgroundColor, MSArtboardGroup, MSImmutableRootLayer>
{
    struct CGSize _unscaledNameSize;
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (unsigned long long)traits;
+ (id)defaultName;
@property(readonly, nonatomic) struct CGSize unscaledNameSize; // @synthesize unscaledNameSize=_unscaledNameSize;
@property(readonly, nonatomic) MSArtboardPreset *preset;
- (id)immutableBackgroundColor;
@property(readonly, nonatomic) struct CGRect contentBounds;
- (struct CGPoint)rulerBase;
- (struct CGRect)absoluteInfluenceRectForAncestorGroups:(id)arg1 document:(id)arg2 cache:(id)arg3;
- (BOOL)influenceRectClipsToBounds;
- (void)objectDidInit;
- (void)performInitWithUnarchiver:(id)arg1;
@property(readonly, nonatomic) BOOL webExporterShouldIncludeBackgroundColor;
@property(readonly, nonatomic) MSImmutableColor *webExporterBackgoundColor;
- (id)exporterForWebOnPage:(id)arg1 document:(id)arg2 scale:(double)arg3;
- (void)updateColorCounter:(id)arg1;
- (BOOL)canBreakMaskChain;
- (void)migratePropertiesFromV100OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV79OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV57OrEarlierWithUnarchiver:(id)arg1;
- (void)trackColors:(id)arg1;
- (void)configureBackgroundOfRequest:(id)arg1;
- (void)prepareDrawingInContext:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (BOOL)shouldDrawBackgroundInContext:(id)arg1 isDrawingAsSymbolInstance:(BOOL)arg2;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (id)svgStyle:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) struct CGAffineTransform CGTransformForFrame;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) MSImmutableSimpleGrid *grid;
@property(nonatomic) BOOL hasBackgroundColor;
@property(readonly, nonatomic) BOOL hasTransforms;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) MSImmutableRulerData *horizontalRulerData;
@property(readonly, nonatomic) struct BCEdgePaddings influenceRectEdgePaddingsThatCascadeToContainedLayers;
@property(readonly, nonatomic) BOOL isFlippedHorizontal;
@property(readonly, nonatomic) BOOL isFlippedVertical;
@property(readonly, nonatomic) BOOL isFlowHome;
@property(readonly, nonatomic) BOOL isLayerExportable;
@property(readonly, copy, nonatomic) MSImmutableLayoutGrid *layout;
@property(readonly, nonatomic) NSString *objectID;
@property(readonly, nonatomic) struct CGPoint origin;
@property(readonly, nonatomic) struct CGRect rect;
@property(readonly, nonatomic) double rotation;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) MSImmutableRulerData *verticalRulerData;

@end

@interface MSOvalShape : _MSOvalShape
{
}

- (BOOL)canFlatten;
- (void)resetPoints;

@end

@interface MSArtboardPresetsSection : NSObject
{
    NSString *_name;
    NSArray *_presets;
}

+ (BOOL)writeSections:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (id)sectionsWithContentsOfURL:(id)arg1;
@property(copy, nonatomic) NSArray *presets; // @synthesize presets=_presets;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)init;
- (id)initWithName:(id)arg1 presets:(id)arg2;

@end

@interface MSExportFormat : _MSExportFormat
{
}

+ (id)exportableFilenameForLayerName:(id)arg1 exportFormat:(id)arg2;
+ (id)exportableFilenameBodyForLayerName:(id)arg1 exportFormat:(id)arg2;
+ (id)validFormats;
+ (id)formatWithScale:(double)arg1 name:(id)arg2 fileFormat:(id)arg3 absoluteSize:(double)arg4 namingScheme:(long long)arg5;
+ (id)formatWithScale:(double)arg1 name:(id)arg2 fileFormat:(id)arg3;
- (double)exportScaleInRect:(struct CGRect)arg1;
- (id)description;
@property(readonly) NSString *baseFileName;
- (id)defaultName;
- (void)remove;
- (id)container;
- (id)parentLayer;
- (id)initWithScale:(double)arg1 name:(id)arg2 fileFormat:(id)arg3 absoluteSize:(double)arg4 namingScheme:(long long)arg5;
- (id)initWithScale:(double)arg1 name:(id)arg2 fileFormat:(id)arg3;
- (BOOL)isScalableExport;

@end

@interface MSImmutableTextStyle : _MSImmutableTextStyle
{
    NSDictionary *_decodedAttributes;
}

@property(copy, nonatomic) NSDictionary *decodedAttributes; // @synthesize decodedAttributes=_decodedAttributes;
- (void).cxx_destruct;
- (void)migratePropertiesFromV97OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV92OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV81OrEarlierWithUnarchiver:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *attributes;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (id)treeAsDictionary;

@end

@interface _MSSymbolMaster : MSArtboardGroup
{
    BOOL _includeBackgroundColorInInstance;
    NSString *_symbolID;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSString *symbolID; // @synthesize symbolID=_symbolID;
@property(nonatomic) BOOL includeBackgroundColorInInstance; // @synthesize includeBackgroundColorInInstance=_includeBackgroundColorInInstance;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSRectangleShape : MSShapePathLayer
{
    double _fixedRadius;
    BOOL _hasConvertedToNewRoundCorners;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) BOOL hasConvertedToNewRoundCorners; // @synthesize hasConvertedToNewRoundCorners=_hasConvertedToNewRoundCorners;
@property(nonatomic) double fixedRadius; // @synthesize fixedRadius=_fixedRadius;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSBezierCurveCurveJoin : MSBezierLineCurveJoin
{
}

+ (id)segmentsWithIntersectionOfExtendTangentFromCurve:(id)arg1 withExtendedTangentFromCurve:(id)arg2;
+ (id)segmentsWithIntersectionOfMirrorOfCurve1:(id)arg1 withMirrorOfCurve2:(id)arg2;
+ (id)segmentsWithIntersectionOfCurve1:(id)arg1 withCurve2:(id)arg2;
+ (id)firstIntersectionOnSegment1InSet:(id)arg1;
+ (BOOL)checkLineLengthIsSaneForEndPoint:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 line1:(id)arg3 line2:(id)arg4;
+ (id)joinWithSegment1:(id)arg1 segment2:(id)arg2 strategy:(unsigned long long)arg3;

@end

@interface MSFrequentColorTracker : NSObject
{
    BOOL _shouldIgnoreAlpha;
    unsigned long long _colorUse;
    unsigned long long _maximumColorCount;
    NSMutableDictionary *_colorDict;
}

@property(retain, nonatomic) NSMutableDictionary *colorDict; // @synthesize colorDict=_colorDict;
@property(readonly, nonatomic) BOOL shouldIgnoreAlpha; // @synthesize shouldIgnoreAlpha=_shouldIgnoreAlpha;
@property(readonly, nonatomic) unsigned long long maximumColorCount; // @synthesize maximumColorCount=_maximumColorCount;
@property(readonly, nonatomic) unsigned long long colorUse; // @synthesize colorUse=_colorUse;
- (void).cxx_destruct;
- (id)frequentColors;
- (void)registerColors:(id)arg1 fromSource:(id)arg2;
- (void)registerColor:(id)arg1 fromSource:(id)arg2;
- (id)initWithColorUse:(unsigned long long)arg1 maximumColorCount:(unsigned long long)arg2 ignoreAlpha:(BOOL)arg3;

@end

@interface _MSImmutableBaseGrid : MSImmutableModelObject
{
    BOOL _isEnabled;
}

+ (Class)mutableClass;
@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSJSONZippedUnarchiver : MSJSONUnarchiver
{
    BCJSONZippedDecoder *_zipDecoder;
}

@property(retain, nonatomic) BCJSONZippedDecoder *zipDecoder; // @synthesize zipDecoder=_zipDecoder;
- (void).cxx_destruct;
- (id)decodeReferenceObjectOfClass:(id)arg1 withIdentifier:(id)arg2;
- (id)unarchiveRawDataAtSubpath:(id)arg1 error:(id *)arg2;
- (id)unarchiveObjectAtSubpath:(id)arg1 error:(id *)arg2;
- (BOOL)containsFileAtSubpath:(id)arg1;
- (id)decoder;
- (id)initWithURL:(id)arg1;

@end

@interface BCStructuredFile : NSObject
{
    NSURL *_url;
    NSMutableDictionary *_cachedMetadata;
    FMDatabaseQueue *_db;
}

+ (id)errorWithCode:(unsigned long long)arg1;
@property(retain, nonatomic) FMDatabaseQueue *db; // @synthesize db=_db;
@property(retain, nonatomic) NSMutableDictionary *cachedMetadata; // @synthesize cachedMetadata=_cachedMetadata;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (BOOL)checkDatabaseIsOpen:(id *)arg1;
- (BOOL)readMetaData:(id *)arg1;
- (BOOL)databaseIsValid;
- (BOOL)setupTables:(id *)arg1;
- (BOOL)close:(id *)arg1;
- (BOOL)removeDataWithKey:(id)arg1 error:(id *)arg2;
- (BOOL)writeData:(id)arg1 withKey:(id)arg2 error:(id *)arg3;
- (id)dataWithKey:(id)arg1 error:(id *)arg2;
- (BOOL)setMetaData:(id)arg1 withKey:(id)arg2 error:(id *)arg3;
- (id)metaDataWithKey:(id)arg1;
- (id)metadata;
- (BOOL)openWithMode:(unsigned long long)arg1 error:(id *)arg2;
- (BOOL)create:(id *)arg1;
- (id)initWithURL:(id)arg1 mode:(unsigned long long)arg2 error:(id *)arg3;
- (id)init;

@end

@interface MSStyleColorControls : _MSStyleColorControls
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
- (void)resetToDefaultValues;
- (BOOL)hasDefaultColorControlsValues;

@end

@interface MSStyleBlur : _MSStyleBlur
{
}

- (void)multiplyBy:(double)arg1;
- (double)cropRadius;

@end

@interface _MSOvalShape : MSShapePathLayer
{
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSDefaultLayoutGrid : MSDefaultArchive
{
}

+ (void)setDefaultLayout:(id)arg1;
+ (id)defaultLayout;
- (Class)defaultClass;
- (id)setting;
- (id)filename;

@end

@interface MSAttributedString : NSObject <MSCoding, NSCopying>
{
    NSSet *_fontNames;
    NSAttributedString *_attributedString;
    NSAttributedString *_encodedAttributedString;
    NSAttributedString *_transformedAttributedString;
    NSSet *_fontDescriptors;
}

+ (BOOL)isRequiredFontAvailableInDictionary:(id)arg1;
+ (id)fontDescriptorInDictionary:(id)arg1;
+ (id)decodeAttributedString:(id)arg1;
+ (id)encodeAttributedString:(id)arg1;
+ (id)decodeAttributesInDictionary:(id)arg1;
+ (id)encodeAttributesInDictionary:(id)arg1;
@property(copy, nonatomic) NSSet *fontDescriptors; // @synthesize fontDescriptors=_fontDescriptors;
@property(retain, nonatomic) NSAttributedString *transformedAttributedString; // @synthesize transformedAttributedString=_transformedAttributedString;
@property(retain, nonatomic) NSAttributedString *encodedAttributedString; // @synthesize encodedAttributedString=_encodedAttributedString;
@property(retain, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property(copy, nonatomic) NSSet *fontNames; // @synthesize fontNames=_fontNames;
- (void).cxx_destruct;
- (BOOL)propertiesAreEqual:(id)arg1;
- (id)debugDescription;
- (id)immutableModelObject;
- (id)attributedStringByReplacingFontNames:(id)arg1;
@property(readonly, nonatomic) BOOL areRequiredFontsAvailable;
@property(readonly, nonatomic) NSSet *unavailableFontNames;
@property(readonly, nonatomic) NSString *string;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeAsJSON:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithUnarchiver:(id)arg1;
- (id)initWithEncodedAttributedString:(id)arg1;
- (id)initWithAttributedString:(id)arg1 documentColorSpace:(id)arg2;
- (id)initWithAttributedString:(id)arg1 colorSpace:(id)arg2 convert:(BOOL)arg3;
- (id)treeAsDictionary;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;

@end

@interface MSArtboardGroup : _MSArtboardGroup <MSArtboardGroup, MSRootLayer, MSLayerWithBackgroundColor, MSColorConvertible>
{
    id <MSSliceLayerWatcher> _sliceWatcher;
}

+ (unsigned long long)traits;
+ (struct CGRect)artboardRectFromLayersInArray:(id)arg1;
@property(nonatomic) __weak id <MSSliceLayerWatcher> sliceWatcher; // @synthesize sliceWatcher=_sliceWatcher;
- (void).cxx_destruct;
- (void)setShouldBreakMaskChain:(BOOL)arg1;
- (void)convertColorsUsing:(id)arg1;
- (void)makeChildRectsIntegral;
- (id)immutableBackgroundColor;
- (id)closestClippingLayer;
@property(readonly, nonatomic) struct CGRect contentBounds;
- (id)rootForNameUniquing;
- (void)moveChildrenToIdenticalPositionAfterResizeFromRect:(struct CGRect)arg1;
- (struct CGSize)calculateMinimumSize;
- (void)layerDidEndResize;
- (void)layerDidResizeFromRect:(struct CGRect)arg1 corner:(long long)arg2;
- (BOOL)isExpanded;
- (BOOL)canRotate;
- (id)otherArtboardUnderArtboard;
- (void)moveBySuggestedOffset:(struct CGSize)arg1;
@property(retain, nonatomic) MSArtboardPreset *preset;
- (void)setRect:(struct CGRect)arg1;
- (BOOL)resizeToFitChildrenWithOption:(long long)arg1;
- (id)parentRoot;
- (id)parentArtboard;
- (void)refreshOverlayWithAbsoluteMargins:(struct CGSize)arg1;
@property(nonatomic) struct CGPoint rulerBase;
- (BOOL)isLocked;
- (void)setIsLocked:(BOOL)arg1;
@property(readonly, nonatomic) double rotation;
- (BOOL)isOpen;
- (BOOL)canBeTransformed;
- (BOOL)canBeContainedByGroup;
- (BOOL)isAutomaticScalingEnabled;
- (BOOL)hasClickThrough;
- (BOOL)hitTestInNameLabel:(struct CGPoint)arg1 zoomValue:(double)arg2;
- (void)setIsVisible:(BOOL)arg1;
- (id)selectionHitTest:(struct CGPoint)arg1 options:(unsigned long long)arg2 zoomValue:(double)arg3 resultIndex:(unsigned long long *)arg4;
- (BOOL)isSelectableOnCanvasWithOptions:(unsigned long long)arg1;
- (id)defaultArtboardStyle;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (void)objectDidInit;
- (void)performInitEmptyObject;
- (BOOL)canBeHidden;
- (BOOL)shouldRefreshOverlayForFlows;
- (BOOL)canCopyToLayer:(id)arg1 beforeLayer:(id)arg2;
- (id)contextualMenuPreviewImage;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (unsigned long long)displayType;
- (struct CGRect)optimalBoundingBox;
- (id)parentForInsertingLayers;
- (id)displayName;
- (BOOL)shouldResizeToFitRect:(struct CGRect)arg1;
- (void)resizeToFitChildren;
- (id)parentRootForAbsoluteRect;

// Remaining properties
@property(readonly, nonatomic) struct CGAffineTransform CGTransformForFrame;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy, nonatomic) MSSimpleGrid *grid;
@property(nonatomic) BOOL hasBackgroundColor;
@property(readonly, nonatomic) BOOL hasTransforms;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) MSRulerData *horizontalRulerData;
@property(readonly, nonatomic) struct BCEdgePaddings influenceRectEdgePaddingsThatCascadeToContainedLayers;
@property(readonly, nonatomic) BOOL isFlippedHorizontal;
@property(readonly, nonatomic) BOOL isFlippedVertical;
@property(readonly, nonatomic) BOOL isLayerExportable;
@property(copy, nonatomic) MSLayoutGrid *layout;
@property(readonly, nonatomic) NSString *objectID;
@property(readonly, nonatomic) struct CGPoint origin;
@property(readonly, nonatomic) struct CGRect rect;
@property(readonly) Class superclass;
@property(copy, nonatomic) MSRulerData *verticalRulerData;

@end

@interface MSImmutableRulerData : _MSImmutableRulerData
{
}

@end

@interface MSImmutableStyledLayer : _MSImmutableStyledLayer
{
}

+ (unsigned long long)traits;
- (unsigned long long)windingRule;
@property(readonly, nonatomic) MSImmutableStyle *usedStyle;
- (id)previewFillColorForDocumentData:(id)arg1 selected:(BOOL)arg2;
- (id)previewBorderColorForDocumentData:(id)arg1 selected:(BOOL)arg2;
- (BOOL)hasSharedStyleInDocumentData:(id)arg1;
- (void)trackColorsForBasicFill:(id)arg1 tracker:(id)arg2;
- (void)trackColors:(id)arg1;
- (id)renderBitmapEffects:(id)arg1;
- (BOOL)shouldSkipDrawingInContext:(id)arg1;
- (BOOL)shouldRenderInTransparencyLayer;
@property(readonly, nonatomic) BOOL shouldRasterize;
- (void)prepareDrawingInContext:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (id)addGroupContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (void)addGradientsToDocument:(id)arg1;

@end

@interface MSDiff : NSObject
{
    MSSubtreeRoot *_firstObjectRoot;
    MSSubtreeRoot *_secondObjectRoot;
}

@property(retain, nonatomic) MSSubtreeRoot *secondObjectRoot; // @synthesize secondObjectRoot=_secondObjectRoot;
@property(retain, nonatomic) MSSubtreeRoot *firstObjectRoot; // @synthesize firstObjectRoot=_firstObjectRoot;
- (void).cxx_destruct;
- (id)description;
- (struct CGRect)overlayDirtyDiffRect;
- (struct CGRect)contentDirtyDiffRectWithCache:(id)arg1;
- (id)init;
- (id)initWithFirstObjectRoot:(id)arg1 secondObjectRoot:(id)arg2;

@end

@interface _MSSharedObjectContainer : MSModelObject
{
    NSMutableArray *_objects;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveSharedObjectIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllSharedObjects;
- (void)removeSharedObjectsAtIndexes:(id)arg1;
- (void)removeSharedObjectAtIndex:(unsigned long long)arg1;
- (void)removeSharedObject:(id)arg1;
- (void)insertSharedObjects:(id)arg1 afterSharedObject:(id)arg2;
- (void)insertSharedObject:(id)arg1 afterSharedObject:(id)arg2;
- (void)insertSharedObjects:(id)arg1 beforeSharedObject:(id)arg2;
- (void)insertSharedObject:(id)arg1 beforeSharedObject:(id)arg2;
- (void)insertSharedObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addSharedObjects:(id)arg1;
- (void)addSharedObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *objects; // @synthesize objects=_objects;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableShapePathLayer : MSImmutableLayer
{
    long long _booleanOperation;
    BOOL _edited;
    BOOL _isClosed;
    long long _pointRadiusBehaviour;
    NSArray *_points;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *points; // @synthesize points=_points;
@property(nonatomic) long long pointRadiusBehaviour; // @synthesize pointRadiusBehaviour=_pointRadiusBehaviour;
@property(nonatomic) BOOL isClosed; // @synthesize isClosed=_isClosed;
@property(nonatomic) BOOL edited; // @synthesize edited=_edited;
@property(nonatomic) long long booleanOperation; // @synthesize booleanOperation=_booleanOperation;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface BCSketchFileMigratorError : NSError
{
}

+ (id)errorWithCode:(unsigned long long)arg1 underlyingCode:(unsigned long long)arg2 missingFonts:(id)arg3;
+ (id)errorWithCode:(unsigned long long)arg1;

@end

@interface _MSGraphicsContextSettings : MSModelObject
{
    long long _blendMode;
    double _opacity;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) long long blendMode; // @synthesize blendMode=_blendMode;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleInnerShadow : MSStyleShadow
{
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSForeignObject : MSModelObject
{
    NSString *_libraryID;
    NSString *_sourceLibraryName;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSString *sourceLibraryName; // @synthesize sourceLibraryName=_sourceLibraryName;
@property(retain, nonatomic) NSString *libraryID; // @synthesize libraryID=_libraryID;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableShapeGroup : _MSImmutableShapeGroup <MSShapeGroup>
{
    struct CGRect _calculatedInfluenceRectForBounds;
    NSObject *_calculateInfluenceRectForBoundsAtomicity;
}

+ (id)bezierPathForEndDecorationOnPath:(id)arg1 decorationType:(unsigned long long)arg2;
+ (id)bezierPathForStartDecorationOnPath:(id)arg1 decorationType:(unsigned long long)arg2;
+ (unsigned long long)traits;
+ (void)initialize;
+ (id)lineDecoration;
+ (id)openArrowDecoration;
+ (id)closedArrowDecoration;
+ (id)pathForDecorationType:(unsigned long long)arg1;
+ (void)cacheDecorations;
- (void).cxx_destruct;
- (id)bezierPathForEndDecorationOnPath:(id)arg1;
- (id)bezierPathForStartDecorationOnPath:(id)arg1;
@property(readonly, nonatomic) NSBezierPath *decoratedBezierPathInBounds;
- (id)bezierPathOfSubPath:(id)arg1 inRect:(struct CGRect)arg2;
- (id)bezierPathInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) NSBezierPath *bezierPathInBounds;
- (id)_bezierPathInSize:(struct CGSize)arg1;
- (id)_pathInSize:(struct CGSize)arg1;
- (id)pathInBoundsWithCache:(id)arg1;
@property(readonly, nonatomic) MSPath *pathInBounds;
- (void)applyPropertiesToBezier:(id)arg1;
@property(readonly, nonatomic) NSBezierPath *bezierPath;
- (id)pathWithTransformsUsingCache:(id)arg1;
- (BOOL)includeChildrenInCalculatingStyleSize;
- (struct CGRect)calculateInfluenceRectForBounds;
- (struct CGRect)influenceRectForBounds;
- (BOOL)canSkipAdvancedClipForStrokes;
- (id)defaultName;
@property(readonly, nonatomic) BOOL isPartOfClippingMask;
@property(readonly, nonatomic) BOOL hasDecorations;
- (void)objectDidInit;
- (void)performInitWithUnarchiver:(id)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;
- (Class)overrideViewControllerClassForOverridePoint:(id)arg1;
- (void)refreshPreviewImagesWithDocumentData:(id)arg1 cache:(id)arg2;
- (BOOL)previewImagesRequireRefreshWithDocumentData:(id)arg1 cache:(id)arg2;
- (id)defaultValueForOverridePoint:(id)arg1;
- (BOOL)canOverridePoint:(id)arg1;
- (id)overridePointsWithParent:(id)arg1;
- (id)imageFillForOverrides;
- (void)migratePropertiesFromV51OrEarlierWithUnarchiver:(id)arg1;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (id)addGroupContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (void)addSVGAttributes:(id)arg1 exporter:(id)arg2;
- (void)addDecorationToParent:(id)arg1 exporter:(id)arg2;
- (id)addMaskToElement:(id)arg1 exporter:(id)arg2;
- (void)simplifyPathElement:(id)arg1 exporter:(id)arg2 inset:(double)arg3;
- (void)addPathDefinitionToDocument:(id)arg1;
- (id)svgPathAttribute:(id)arg1;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (BOOL)requiresPathDefinition:(id)arg1;
- (id)svgStyle:(id)arg1;

@end

@interface _MSSymbolContainer : MSSharedObjectContainer
{
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSArtboardPresetStore : NSObject
{
    NSArray *_categories;
    MSArtboardPresetsCategory *_customPresetsCategory;
}

+ (void)setIndexOfLastSelectedCategory:(unsigned long long)arg1;
+ (unsigned long long)indexOfLastSelectedCategory;
+ (id)systemPresetsURL;
@property(readonly, nonatomic) MSArtboardPresetsCategory *customPresetsCategory; // @synthesize customPresetsCategory=_customPresetsCategory;
@property(readonly, nonatomic) NSArray *categories; // @synthesize categories=_categories;
- (void).cxx_destruct;
- (id)suggestedNameForUserPreset;
- (void)artboardPresetStoreDidChange:(id)arg1;
- (BOOL)saveUserPresets:(id *)arg1;
- (id)userPresetsURL;
- (BOOL)removePreset:(id)arg1 error:(id *)arg2;
- (BOOL)savePreset:(id)arg1 error:(id *)arg2;
- (void)loadUserPresets;
- (id)systemCategories;
- (id)resizablePresetMatchingSize:(struct CGSize)arg1 preferredCategory:(id)arg2;
- (id)presetWithSize:(struct CGSize)arg1 preferredCategory:(id)arg2;
- (BOOL)enumeratePresetsInCategory:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface _MSImmutableStyleShadow : MSImmutableStylePart
{
    double _blurRadius;
    double _offsetX;
    double _offsetY;
    double _spread;
    MSImmutableColor *_color;
    MSImmutableGraphicsContextSettings *_contextSettings;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(retain, nonatomic) MSImmutableColor *color; // @synthesize color=_color;
@property(nonatomic) double spread; // @synthesize spread=_spread;
@property(nonatomic) double offsetY; // @synthesize offsetY=_offsetY;
@property(nonatomic) double offsetX; // @synthesize offsetX=_offsetX;
@property(nonatomic) double blurRadius; // @synthesize blurRadius=_blurRadius;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableRect : _MSImmutableRect <MSRect>
{
}

- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) struct CGPoint origin;
@property(readonly, nonatomic) struct CGSize size;
@property(readonly, nonatomic) struct CGRect rect;
- (id)initWithRect:(struct CGRect)arg1;

@end

@interface MSImmutableStyle : _MSImmutableStyle
{
}

@property(readonly, nonatomic) NSArray *enabledInnerShadows;
@property(readonly, nonatomic) NSArray *enabledShadows;
@property(readonly, nonatomic) NSArray *enabledBorders;
@property(readonly, nonatomic) NSArray *enabledFills;
@property(readonly, nonatomic) double outerPaddingForBiggestStroke;
@property(readonly, nonatomic) double thickestInnerStroke;
@property(readonly, nonatomic) double thickestStroke;
@property(readonly, nonatomic) BOOL hasBlending;
@property(readonly, nonatomic) BOOL hasEnabledFill;
@property(readonly, nonatomic) BOOL hasEnabledBorder;
@property(readonly, nonatomic) BOOL hasEnabledInnerShadow;
@property(readonly, nonatomic) BOOL hasEnabledShadow;
@property(readonly, nonatomic) MSImmutableStyleBorder *firstEnabledBorder;
@property(readonly, nonatomic) MSImmutableStyleFill *firstEnabledFill;
@property(readonly, nonatomic) MSImmutableStyleInnerShadow *firstEnabledInnerShadow;
@property(readonly, nonatomic) MSImmutableStyleShadow *firstEnabledShadow;
@property(readonly, nonatomic) BOOL hasMoreThanOneEnabledFill;
@property(readonly, nonatomic) BOOL hasDecorations;
@property(readonly, nonatomic) BOOL hasEnabledBackgroundBlur;
- (void)clearTextStyle;
- (id)renderBitmapEffects:(id)arg1;
- (void)addSVGFilterAttributes:(id)arg1 exporter:(id)arg2 position:(unsigned long long)arg3;
- (void)addBlurFilter:(id)arg1 exporter:(id)arg2;
- (void)addShadowFilters:(id)arg1 includeSource:(BOOL)arg2 attributes:(id)arg3 exporter:(id)arg4;
- (void)applyLayerInfluenceRectBounds:(id)arg1 toFilter:(id)arg2 withRadius:(double)arg3;
- (id)borderAtElementPosition:(long long)arg1 exporter:(id)arg2;
- (id)fillAtElementPosition:(long long)arg1 exporter:(id)arg2;
- (unsigned long long)internalNumberOfElements:(id)arg1;
- (BOOL)canCombineLastFillWithFirstBorder;
- (BOOL)requiresPathDefinition:(id)arg1;
- (BOOL)hasBorderRequiringMask;
- (void)addSVGAttributes:(id)arg1 exporter:(id)arg2 elementPosition:(unsigned long long)arg3;
- (unsigned long long)numberOfElementsWithExporter:(id)arg1;

@end

@interface _MSStyledLayer : MSLayer
{
    MSStyle *_style;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSStyle *style; // @synthesize style=_style;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSBitmapLayer : _MSBitmapLayer <MSImageOwner>
{
}

+ (unsigned long long)traits;
+ (unsigned long long)scalingFactorForFilename:(id)arg1;
+ (struct CGSize)bestSizeAccountingForPixelDensityOfImage:(id)arg1;
+ (id)bitmapLayerFromImage:(id)arg1 withSizeScaledDownByFactor:(double)arg2;
+ (id)bitmapLayerWithImageFromPath:(id)arg1;
+ (id)bitmapLayerWithImageFromPasteboard:(id)arg1;
- (void)correctInvalidGamma;
- (void)resizeToOriginalSize;
- (BOOL)isAtOriginalSize;
- (id)NSImage;
@property(readonly, nonatomic) BOOL canReduceImageSize;
- (void)setReducedImage:(id)arg1;
@property(readonly, nonatomic) struct CGSize targetSizeForReduction;
- (BOOL)canInsertIntoGroup:(id)arg1;
- (void)reduceImageSize;
- (void)replaceImageWithImage:(id)arg1;
- (id)handlerName;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)performInitEmptyObject;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (id)initWithFrame:(struct CGRect)arg1 image:(id)arg2;
- (Class)handlerClass;
- (id)inspectorViewControllerNames;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (void)applyOverride:(id)arg1 toPoint:(id)arg2;
- (id)setupWithLayerBuilderDictionary:(id)arg1;

// Remaining properties
@property(retain, nonatomic) MSImageData *image;

@end

@interface MSImageData : NSObject <NSCopying, MSCoding, MSJSONArchiverAlternativeFileReference>
{
    NSData *_data;
    NSData *_sha1;
    NSImage *_image;
}

+ (id)decodeReferenceFromJSONZipArchive:(id)arg1 withReference:(id)arg2;
+ (id)errorImage;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(retain, nonatomic) NSData *sha1; // @synthesize sha1=_sha1;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (void)correctInvalidGamma;
- (void)encodeReferenceInJSONZipArchive:(id)arg1;
- (id)replacementObjectForJSONEncoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;
- (BOOL)isAssetEqual:(id)arg1;
- (unsigned long long)assetType;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
- (id)initWithUnarchiver:(id)arg1;
- (id)initWithUnarchiver:(id)arg1 migratingFrom:(long long)arg2 toVersion:(long long)arg3;
- (void)decodeWithUnarchiver:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;
- (id)NSImage;
- (BOOL)isLegacy;
- (id)initWithLegacyHash:(id)arg1;
- (id)initWithData:(id)arg1 sha:(id)arg2;
- (id)initWithImage:(id)arg1;
- (id)treeAsDictionary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface MSSharedObjectContainer : _MSSharedObjectContainer
{
}

- (id)objectsSortedByName;
- (void)enumeratePotentialInstancesInContainer:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)sharedObjectsInLayers:(id)arg1;
- (id)sharedObjectsInLayer:(id)arg1;
- (BOOL)resetSharedObjectInstance:(struct MSModelObject *)arg1;
- (void)syncInstance:(struct MSModelObject *)arg1 withTemplateInstance:(struct MSModelObject *)arg2;
- (void)synchroniseInstancesOfSharedObject:(id)arg1 withInstance:(struct MSModelObject *)arg2;
- (void)updateValueOfSharedObject:(id)arg1 byCopyingInstance:(struct MSModelObject *)arg2;
- (BOOL)updateInstancesOfSharedObject:(id)arg1 withValue:(struct MSModelObject *)arg2;
- (BOOL)syncSharedObjectWithInstance:(struct MSModelObject *)arg1;
- (void)unregisterInstance:(struct MSModelObject *)arg1;
- (void)registerInstance:(struct MSModelObject *)arg1 withSharedObject:(id)arg2;
- (unsigned long long)numberOfSharedObjects;
- (long long)indexOfSharedObject:(id)arg1;
- (id)sharedObjectAtIndex:(unsigned long long)arg1;
- (id)sharedObjectWithID:(id)arg1;
- (id)sharedObjectForInstance:(struct MSModelObject *)arg1;
- (BOOL)isSharedObjectForInstance:(struct MSModelObject *)arg1;
- (id)instancesOf:(id)arg1 inContainer:(id)arg2;
- (id)mergeSharedObjectWithName:(id)arg1 sharedObjectID:(id)arg2 instance:(struct MSModelObject *)arg3;
- (void)removeSharedObject:(id)arg1;
- (id)addSharedObjectWithName:(id)arg1 firstInstance:(struct MSModelObject *)arg2;
- (Class)sharedObjectClass;

@end

@interface MSImmutableSharedTextStyleContainer : _MSImmutableSharedTextStyleContainer
{
}

@end

@interface _MSImmutableGradientStop : MSImmutableModelObject
{
    double _position;
    MSImmutableColor *_color;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableColor *color; // @synthesize color=_color;
@property(nonatomic) double position; // @synthesize position=_position;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSLayer : MSModelObject
{
    BOOL _isFlippedHorizontal;
    BOOL _isFlippedVertical;
    BOOL _isLocked;
    BOOL _isVisible;
    long long _layerListExpandedType;
    NSString *_name;
    BOOL _nameIsFixed;
    NSString *_originalObjectID;
    unsigned long long _resizingConstraint;
    unsigned long long _resizingType;
    double _rotation;
    BOOL _shouldBreakMaskChain;
    NSDictionary *_userInfo;
    MSExportOptions *_exportOptions;
    MSFlowConnection *_flow;
    MSRect *_frame;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSRect *frame; // @synthesize frame=_frame;
@property(retain, nonatomic) MSFlowConnection *flow; // @synthesize flow=_flow;
@property(retain, nonatomic) MSExportOptions *exportOptions; // @synthesize exportOptions=_exportOptions;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) BOOL shouldBreakMaskChain; // @synthesize shouldBreakMaskChain=_shouldBreakMaskChain;
@property(nonatomic) double rotation; // @synthesize rotation=_rotation;
@property(nonatomic) unsigned long long resizingType; // @synthesize resizingType=_resizingType;
@property(nonatomic) unsigned long long resizingConstraint; // @synthesize resizingConstraint=_resizingConstraint;
@property(retain, nonatomic) NSString *originalObjectID; // @synthesize originalObjectID=_originalObjectID;
@property(nonatomic) BOOL nameIsFixed; // @synthesize nameIsFixed=_nameIsFixed;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) long long layerListExpandedType; // @synthesize layerListExpandedType=_layerListExpandedType;
@property(nonatomic) BOOL isVisible; // @synthesize isVisible=_isVisible;
@property(nonatomic) BOOL isLocked; // @synthesize isLocked=_isLocked;
@property(nonatomic) BOOL isFlippedVertical; // @synthesize isFlippedVertical=_isFlippedVertical;
@property(nonatomic) BOOL isFlippedHorizontal; // @synthesize isFlippedHorizontal=_isFlippedHorizontal;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSliceLayer : MSLayer
{
    BOOL _hasBackgroundColor;
    MSColor *_backgroundColor;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) BOOL hasBackgroundColor; // @synthesize hasBackgroundColor=_hasBackgroundColor;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableOvalShape : _MSImmutableOvalShape
{
}

+ (id)defaultName;
- (void)simplifyPathElement:(id)arg1 exporter:(id)arg2 inset:(double)arg3;

@end

@interface MSShapePathLayer : _MSShapePathLayer
{
    BOOL _isEditing;
}

+ (void)performBatchEdits:(CDUnknownBlockType)arg1;
+ (id)shapeWithBezierPath:(id)arg1;
+ (id)keyPathsForValuesAffectingBadgeMap;
+ (id)keyPathsForValuesAffectingPreviewImages;
@property(nonatomic) BOOL isEditing; // @synthesize isEditing=_isEditing;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChangeValueForKey:(id)arg1;
- (BOOL)isPolygon;
- (BOOL)isRectangle;
- (BOOL)attemptToSimplifyBetweenPoint:(id)arg1 andPoint:(id)arg2;
- (BOOL)simplifyPathOnce;
- (void)simplify;
- (id)pointsAroundIndex:(unsigned long long)arg1;
- (BOOL)isLine;
- (BOOL)shouldHitTestOnFill:(id)arg1;
- (id)flattenedLayer;
- (void)flatten;
@property(readonly, nonatomic) BOOL canFlatten;
@property(readonly, nonatomic) MSCurvePoint *lastPoint;
@property(readonly, nonatomic) MSCurvePoint *firstPoint;
@property(readonly, nonatomic) unsigned long long numberOfCurvePoints;
@property(readonly, nonatomic) BOOL hasRoundedCorners;
- (id)layerSuitableForInsertingIntoGroup:(id)arg1;
- (BOOL)canBeContainedByGroup;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setEndDecorationType:(unsigned long long)arg1;
- (void)setStartDecorationType:(unsigned long long)arg1;
- (double)distanceSquaredToSegmentAtIndex:(unsigned long long)arg1 fromPoint:(struct CGPoint)arg2 tolerance:(double)arg3;
- (unsigned long long)indexOfSegmentAtPoint:(struct CGPoint)arg1 tolerance:(struct CGSize)arg2;
- (void)multiplyBy:(double)arg1;
- (BOOL)isPartOfClippingMask;
- (void)setBooleanOperation:(long long)arg1;
- (BOOL)isNearlyEmpty;
- (struct CGPoint)convertPointToPathCoordinates:(struct CGPoint)arg1;
- (struct CGPoint)convertPointFromPathCoordinates:(struct CGPoint)arg1;
- (void)didEdit;
- (struct CGPoint)pointCenteredAfterPointIndex:(unsigned long long)arg1;
@property(retain, nonatomic) NSBezierPath *bezierPath;
- (id)bezierPathWithTransforms;
- (id)bezierPathWithoutTransformsInRect:(struct CGRect)arg1;
- (id)bezierPathInRect:(struct CGRect)arg1;
- (id)pathInRect:(struct CGRect)arg1;
- (void)adjustGeometryToBoundsRect:(struct CGRect)arg1;
- (struct CGRect)boundsOfPathIntegral:(BOOL)arg1;
- (void)adjustFrameAfterEditIntegral:(BOOL)arg1;
- (void)applyAffineTransformToPath:(struct CGAffineTransform)arg1;
- (void)reversePath;
- (BOOL)editable;
- (void)resetPoints;
- (void)setNilValueForKey:(id)arg1;
- (void)resetPointsBasedOnUserInteraction;
- (void)applyPropertiesToBezier:(id)arg1;
- (void)performInitEmptyObject;
- (id)styledLayer;
- (BOOL)shouldDrawSelectionStroke;
- (BOOL)shouldDrawSelection;
- (BOOL)canSmartRotate;
- (Class)handlerClass;
- (BOOL)handleDoubleClick;
- (struct CGRect)boundsForCursorPreview;
- (id)bezierPathForCursorPreview;
- (id)insertionCursor;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (BOOL)isMasked;
- (void)handleBadgeClickWithAltState:(BOOL)arg1;
- (void)copyToLayer:(id)arg1 beforeLayer:(id)arg2;
- (void)moveToLayer:(id)arg1 beforeLayer:(id)arg2;
- (BOOL)isExportableViaDragAndDrop;
- (id)badgeMenu;
- (void)onBooleanOperation:(id)arg1;
- (unsigned long long)selectedBadgeMenuItem;
- (BOOL)canCopyToLayer:(id)arg1 beforeLayer:(id)arg2;
- (BOOL)booleanOperationCanBeReset;
- (BOOL)supportsInnerOuterBorders;
- (id)setupWithLayerBuilderDictionary:(id)arg1;

@end

@interface MSModelObjectCacheGeneration : NSObject
{
}

@end

@interface MSImmutableForeignStyle : _MSImmutableForeignStyle
{
}

@end

@interface _MSExportFormat : MSModelObject
{
    double _absoluteSize;
    NSString *_fileFormat;
    NSString *_name;
    long long _namingScheme;
    double _scale;
    long long _visibleScaleType;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) long long visibleScaleType; // @synthesize visibleScaleType=_visibleScaleType;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) long long namingScheme; // @synthesize namingScheme=_namingScheme;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *fileFormat; // @synthesize fileFormat=_fileFormat;
@property(nonatomic) double absoluteSize; // @synthesize absoluteSize=_absoluteSize;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSExportOptions : _MSExportOptions <MSExportFormatContainer>
{
}

+ (id)nextMostAppropriateExportFormatToAdd:(id)arg1;
- (id)containingLayer;
- (id)firstFormat;
- (id)addExportFormat;

@end

@interface MSApplicationMetadata : NSObject
{
}

+ (id)applicationKeys;
+ (id)metadata;

@end

@interface MSCurvePointStraightBehaviour : MSCurvePointBehaviour
{
}

+ (void)curveToChangedInPoint:(id)arg1;
+ (void)curveFromChangedInPoint:(id)arg1;
+ (void)didAssignBehaviorToHandle:(unsigned long long)arg1 ofPoint:(id)arg2 previousMode:(long long)arg3;

@end

@interface _MSImmutableExportFormat : MSImmutableModelObject
{
    double _absoluteSize;
    NSString *_fileFormat;
    NSString *_name;
    long long _namingScheme;
    double _scale;
    long long _visibleScaleType;
}

+ (Class)mutableClass;
@property(nonatomic) long long visibleScaleType; // @synthesize visibleScaleType=_visibleScaleType;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) long long namingScheme; // @synthesize namingScheme=_namingScheme;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *fileFormat; // @synthesize fileFormat=_fileFormat;
@property(nonatomic) double absoluteSize; // @synthesize absoluteSize=_absoluteSize;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSSharedStyleContainer : MSSharedObjectContainer
{
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSModelResources : BCSingleton
{
    NSBundle *_bundle;
    NSArray *_noiseImages;
    NSBitmapImageRep *_errorPattern;
}

@property(copy, nonatomic) NSBitmapImageRep *errorPattern; // @synthesize errorPattern=_errorPattern;
@property(copy, nonatomic) NSArray *noiseImages; // @synthesize noiseImages=_noiseImages;
@property(retain, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
- (void).cxx_destruct;
- (id)resourcesNeedingMigration;
- (id)loadNoiseImageWithIndex:(long long)arg1;
- (id)loadImageWithName:(id)arg1;
- (void)preloadResources;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2;
- (id)URLForImageResource:(id)arg1;

@end

@interface _MSImmutableSharedObject : MSImmutableModelObject
{
    NSString *_name;
    MSImmutableModelObject *_value;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableModelObject *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSStyleFill : _MSStyleFill <MSImageOwner>
{
}

+ (id)defaultStylePartForStyle:(id)arg1;
+ (id)defaultFillColor;
+ (id)keyPathsForValuesAffectingInterfaceOpacity;
@property(readonly, nonatomic) BOOL canReduceImageSize;
- (void)setReducedImage:(id)arg1;
@property(readonly, nonatomic) struct CGSize targetSizeForReduction;
- (id)NSImage;
- (void)setOpacity:(double)arg1;
- (BOOL)hasOpacity;
- (void)setPatternTileScale:(double)arg1;
- (void)performInitEmptyObject;
- (id)topViewForColorInspector:(id)arg1;
- (id)parentStyle;
@property(nonatomic) double interfaceOpacity;
- (id)CSSAttributeString;

// Remaining properties
@property(retain, nonatomic) MSImageData *image;

@end

@interface MSImmutableForeignSymbol : _MSImmutableForeignSymbol
{
}

@end

@interface MSBezierLineCurveJoin : MSBezierJoin
{
}

+ (id)segmentsWithIntersectionOfLine:(id)arg1 withExtendedTangentFromCurve:(id)arg2;
+ (id)segmentsWithIntersectionOfLine:(id)arg1 withMirroredCurve:(id)arg2;
+ (id)segmentsWithIntersectionOfLine:(id)arg1 withExtendedCurve:(id)arg2 intersectionOffsets:(inout id)arg3;
+ (id)segmentsWithIntersectionOfLine:(id)arg1 withCurve:(id)arg2 intersectionOffsets:(inout id)arg3;
+ (BOOL)checkCurviness:(id)arg1 curve2:(id)arg2;
+ (BOOL)checkLineLengthIsSane:(id)arg1 oldCurve:(id)arg2;
+ (id)closestOffsetGreaterThan:(double)arg1 inSet:(id)arg2;
+ (id)closestOffsetLessThan:(double)arg1 inSet:(id)arg2;
+ (id)joinWithSegment1:(id)arg1 segment2:(id)arg2 strategy:(unsigned long long)arg3;
+ (id)joinWithSegment1:(id)arg1 segment2:(id)arg2;

@end

@interface _MSImmutableSymbolMaster : MSImmutableArtboardGroup
{
    BOOL _includeBackgroundColorInInstance;
    NSString *_symbolID;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSString *symbolID; // @synthesize symbolID=_symbolID;
@property(nonatomic) BOOL includeBackgroundColorInInstance; // @synthesize includeBackgroundColorInInstance=_includeBackgroundColorInInstance;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableExportFormat : _MSImmutableExportFormat
{
}

+ (id)defaultNameForScale:(double)arg1;
- (BOOL)isVectorExport;
- (double)exportScaleInRect:(struct CGRect)arg1;
- (id)defaultName;
- (void)migratePropertiesFromV72OrEarlierWithUnarchiver:(id)arg1;

@end

@interface MSLayoutGrid : _MSLayoutGrid
{
}

- (void)setColumnWidth:(double)arg1;
- (void)setGutterWidth:(double)arg1;
- (long long)totalNumberOfGutters;
- (void)setGuttersOutside:(BOOL)arg1;
- (void)setTotalWidth:(double)arg1;
- (void)setNumberOfColumns:(double)arg1;
- (void)determineAppropriateColumnWidth;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)verticalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (id)horizontalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;

@end

@interface _MSImmutableForeignStyle : MSImmutableModelObject
{
    MSImmutableSharedStyle *_originalStyle;
    MSImmutableSharedStyle *_style;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableSharedStyle *style; // @synthesize style=_style;
@property(retain, nonatomic) MSImmutableSharedStyle *originalStyle; // @synthesize originalStyle=_originalStyle;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSStyledLayer : _MSStyledLayer
{
    BOOL ignoreStyleDidChangeNotifications;
}

+ (void)pasteExportOptions:(id)arg1 onLayers:(id)arg2;
+ (void)pasteTextStyle:(id)arg1 onLayers:(id)arg2;
+ (void)pasteStyleDict:(id)arg1 onLayers:(id)arg2 document:(id)arg3;
+ (void)pasteStyleFromPasteboard:(id)arg1 onLayers:(id)arg2 document:(id)arg3;
+ (void)pasteStyleFromPasteboardOnLayers:(id)arg1 document:(id)arg2;
+ (id)supportedPasteboardTypesForStyleCopying;
- (id)styledLayer;
- (BOOL)hasEnabledBackgroundBlur;
- (void)multiplyBy:(double)arg1;
- (void)layerStyleDidChange;
- (void)setStyleByPreservingSharedObjectReference:(id)arg1;
- (id)sharedObject;
- (BOOL)hasSharedStyle;
- (void)changeColor:(id)arg1;
- (id)copiedStyleAttributesForLayer:(id)arg1;
- (void)writeStyleToPasteboard:(id)arg1;
- (void)copyStyleToPasteboard:(id)arg1;
- (id)copyStyleToPasteboard;
- (id)CSSAttributes;
- (id)setupWithLayerBuilderDictionary:(id)arg1;

@end

@interface MSJSONDictionaryUnarchiver : MSJSONUnarchiver
{
    BCJSONDecoder *_dataDecoder;
    NSDictionary *_dictionary;
}

+ (id)unarchiveObjectFromDictionary:(id)arg1 asVersion:(long long)arg2 corruptionDetected:(char *)arg3 error:(id *)arg4;
@property(retain, nonatomic) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property(retain, nonatomic) BCJSONDecoder *dataDecoder; // @synthesize dataDecoder=_dataDecoder;
- (void).cxx_destruct;
- (id)decodeReferenceObjectOfClass:(id)arg1 withIdentifier:(id)arg2;
- (id)decodeRoot;
- (id)decoder;
- (id)initForReadingFromDictionary:(id)arg1;

@end

@interface _MSImmutableSimpleGrid : MSImmutableBaseGrid
{
    long long _gridSize;
    long long _thickGridTimes;
}

+ (Class)mutableClass;
@property(nonatomic) long long thickGridTimes; // @synthesize thickGridTimes=_thickGridTimes;
@property(nonatomic) long long gridSize; // @synthesize gridSize=_gridSize;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSVersionedArchive : NSObject
{
    NSURL *_url;
    NSURL *_baseURL;
    NSData *_data;
    unsigned long long _version;
    NSString *_alternateFolder;
}

+ (id)versionedURLWithBase:(id)arg1 extension:(id)arg2 version:(unsigned long long)arg3;
+ (id)globalDirectory;
+ (id)URLForArchiveWithName:(id)arg1 extension:(id)arg2 version:(long long)arg3;
+ (id)globalArchiveWithName:(id)arg1 extension:(id)arg2 version:(long long)arg3;
@property(retain, nonatomic) NSString *alternateFolder; // @synthesize alternateFolder=_alternateFolder;
@property(nonatomic) unsigned long long version; // @synthesize version=_version;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (void)cleanupAfterTesting;
- (BOOL)archiveRootObject:(id)arg1 error:(id *)arg2;
- (id)unarchiveRootObjectVersion:(long long *)arg1 error:(id *)arg2;
- (BOOL)exists;
- (id)URLNeedingMigration;
- (id)existingURLFoundAtBaseURL:(id *)arg1;
- (id)existingURL;
- (id)existingURLBasedOnFullURL:(id)arg1;
- (id)initWithURL:(id)arg1 version:(long long)arg2;

@end

@interface MSConstantBaselineLayoutManager : NSLayoutManager
{
    MSConstantBaselineTypesetter *_constantBaselineTypesetter;
}

@property(retain, nonatomic) MSConstantBaselineTypesetter *constantBaselineTypesetter; // @synthesize constantBaselineTypesetter=_constantBaselineTypesetter;
- (void).cxx_destruct;
- (void)processEditingForTextStorage:(id)arg1 edited:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4 invalidatedRange:(struct _NSRange)arg5;
- (void)setTypesetter:(id)arg1;

@end

@interface _MSImmutableBitmapLayer : MSImmutableStyledLayer
{
    struct CGRect _clippingMask;
    BOOL _fillReplacesImage;
    MSImageData *_image;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImageData *image; // @synthesize image=_image;
@property(nonatomic) BOOL fillReplacesImage; // @synthesize fillReplacesImage=_fillReplacesImage;
@property(nonatomic) struct CGRect clippingMask; // @synthesize clippingMask=_clippingMask;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableTextLayer : _MSImmutableTextLayer <MSColorUser, NSLayoutManagerDelegate, MSFirstLineTypesetterDelegate>
{
    NSObject *_calculateTextLayoutAtomicity;
    NSObject *_calculateInfluenceRectForBoundsAtomicity;
    struct CGRect _calculatedInfluenceRectForBounds;
    BOOL _didAlreadyCalculateInfluenceRect;
    BOOL _isEditingText;
    MSTextLayout *_textLayout;
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (unsigned long long)traits;
+ (id)defaultName;
@property(readonly, nonatomic) BOOL isEditingText; // @synthesize isEditingText=_isEditingText;
- (void).cxx_destruct;
- (double)baselineAdjustmentForLayoutManager:(id)arg1;
- (id)createTextStorage;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (BOOL)hasDefaultValues;
@property(readonly, nonatomic) MSTextLayout *textLayout; // @synthesize textLayout=_textLayout;
- (double)lineHeight;
@property(readonly, copy, nonatomic) NSString *stringValue;
@property(readonly, copy, nonatomic) NSAttributedString *attributedStringValue;
- (double)defaultLineHeight:(id)arg1;
- (id)font;
@property(readonly, nonatomic) double fontSize;
@property(readonly, nonatomic) unsigned long long textAlignment;
- (id)usedFontNames;
- (double)startingPositionOnPath:(id)arg1;
- (id)bezierPathFromGlyphsInBoundsWithParentGroup:(id)arg1 layoutManager:(id)arg2;
- (id)firstUnderlyingShapePathWithParentGroup:(id)arg1 usingCache:(id)arg2;
- (id)shapeToUseForTextOnPathWithParentGroup:(id)arg1;
@property(readonly, nonatomic) BOOL shouldUseBezierRepresentationForRendering;
@property(readonly, nonatomic) struct CGRect capHeightBounds;
@property(readonly, nonatomic) struct CGPoint drawingPointForText;
- (struct CGSize)textContainerSize;
- (double)totalHeightOfFont:(id)arg1;
- (struct CGRect)calculateInfluenceRectForBounds;
- (struct CGRect)influenceRectForBounds;
- (void)performInitWithUnarchiver:(id)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;
- (Class)overrideViewControllerClassForOverridePoint:(id)arg1;
- (id)overridePointsWithParent:(id)arg1;
- (void)updateColorCounter:(id)arg1;
- (void)migratePropertiesFromV97OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV80OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV77OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV76OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV44OrEarlierWithUnarchiver:(id)arg1;
- (void)trackColors:(id)arg1;
- (id)textStoragePoolInCache:(id)arg1;
- (BOOL)shouldSkipDrawingInContext:(id)arg1;
- (BOOL)shouldRenderInTransparencyLayer;
- (void)addDefaultFillAttributes:(id)arg1 exporter:(id)arg2;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (void)addPathDefinitionToDocument:(id)arg1;
- (void)addContentToTextElement:(id)arg1 exporter:(id)arg2 textStorage:(id)arg3;
- (struct CGPoint)originForCharacterAttributes:(id)arg1 exporter:(id)arg2 layoutManager:(id)arg3;
- (id)elementForSpan:(id)arg1 origin:(struct CGPoint)arg2 exporter:(id)arg3 text:(id)arg4;
- (id)spanInfoForRun:(struct _NSRange)arg1 charAttributes:(id)arg2 text:(id)arg3 layoutManager:(id)arg4;
- (void)addSVGAttributes:(id)arg1 forCharacterAttributes:(id)arg2 exporter:(id)arg3;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (id)svgStyle:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSLayerGroup : _MSLayerGroup <MSLayerGroup>
{
    long long _preCalculatedHasSelectedLayer;
    unsigned long long _disableAutomaticScalingCounter;
}

+ (BOOL)groupBoundsShouldBeIntegral;
+ (struct CGRect)groupBoundsForContainer:(id)arg1;
+ (void)moveLayers:(id)arg1 intoGroup:(id)arg2;
+ (id)groupFromLayers:(id)arg1;
@property(nonatomic) unsigned long long disableAutomaticScalingCounter; // @synthesize disableAutomaticScalingCounter=_disableAutomaticScalingCounter;
@property(nonatomic) long long preCalculatedHasSelectedLayer; // @synthesize preCalculatedHasSelectedLayer=_preCalculatedHasSelectedLayer;
- (id)candidatesForMasking;
- (void)layerDidEndResize;
- (void)layerWillStartResize;
- (void)rect:(id)arg1 didChangeFromRect:(struct CGRect)arg2;
- (void)resizeChildrenWithOldSize:(struct CGSize)arg1;
- (struct CGSize)calculateMinimumSize;
@property(readonly, nonatomic) BOOL isAutomaticScalingEnabled;
- (void)disableAutomaticScalingInBlock:(CDUnknownBlockType)arg1;
- (void)multiplyBy:(double)arg1;
- (void)insertLayer:(id)arg1 afterLayerOrAtEnd:(id)arg2;
- (BOOL)resizeToFitChildrenWithOption:(long long)arg1;
- (struct CGRect)requiredRect;
- (void)setIsHovering:(BOOL)arg1;
- (BOOL)isOpenForSelectionWithOptions:(unsigned long long)arg1;
- (BOOL)isSelectableOnCanvasWithOptions:(unsigned long long)arg1;
- (BOOL)containsSelectedItemIncludingSelf:(BOOL)arg1;
- (BOOL)isExpanded;
- (void)deselectLayerAndParent;
- (void)refreshOverlay;
- (void)moveInLayerTreeInBlock:(CDUnknownBlockType)arg1;
- (BOOL)shouldStripShadowsAndInnerShadow;
- (void)setStyle:(id)arg1;
- (id)bezierPath;
- (id)defaultStyle;
- (id)parentGroupRecursive;
- (void)objectDidInit;
- (void)performInitEmptyObject;
- (BOOL)shouldRefreshOverlayForFlows;
- (BOOL)handleDoubleClick;
- (id)inspectorViewControllerNames;
- (void)drawHoverWithZoom:(double)arg1 color:(id)arg2 cache:(id)arg3;
- (void)prepareAsMaskContainer;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (BOOL)expandableInLayerList;
- (void)enumerateLayersAvoidingFaultingWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)moveTransformsToChildren:(id)arg1;
- (id)ungroupReturningNextUngroupGroup;
- (BOOL)hasStyleOrTransform;
- (void)translateChildrenFrameToLayers:(id)arg1;
- (id)moveLayersToParent;
- (void)ungroupSingleChildDescendentGroups;
- (id)ungroup;
- (void)setUpNewGroup;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)enumerateLayers:(CDUnknownBlockType)arg1;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (id)lastLayer;
- (id)firstLayer;
- (BOOL)containsMultipleLayers;
- (BOOL)containsOneLayer;
- (BOOL)containsLayers;
- (BOOL)containsNoOrOneLayers;
- (BOOL)canContainLayer:(id)arg1;
- (unsigned long long)containedLayersCount;
- (id)containedLayers;
- (id)CSSAttributeString;

// Remaining properties
@property(readonly, nonatomic) NSArray *layers;

@end

@interface MSHotspotLayer : _MSHotspotLayer
{
}

+ (id)hotspotLayerFromLayer:(id)arg1;
+ (id)keyPathsForValuesAffectingPreviewImages;
- (void)resetFlow;
- (BOOL)canRotate;
- (BOOL)canBeTransformed;
- (void)setFlow:(id)arg1;
- (void)performInitEmptyObject;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)shouldDrawSelectionStroke;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (BOOL)isExportableViaDragAndDrop;
- (BOOL)isActive;
- (unsigned long long)filterType;
- (void)applyOverride:(id)arg1 toPoint:(id)arg2;

@end

@interface MSRectangleShape : _MSRectangleShape
{
}

+ (BOOL)useSmoothCorners;
+ (double)lastUsedCornerRadius;
- (BOOL)canFlatten;
- (void)multiplyBy:(double)arg1;
- (BOOL)shouldDrawLayerSelection;
- (void)resetPointsIfNecessary;
- (void)resetPathsToRoundedRect;
- (void)resetPathsToRect;
- (void)resetPoints;
- (BOOL)shouldDrawSelectionStroke;
- (id)bezierPathForCursorPreview;
- (id)inspectorViewControllerNames;
@property(readonly, nonatomic) BOOL smoothCornersAllowed;
@property(nonatomic) BOOL hasSmoothCorners;
- (void)didChangeValues;
- (void)willChangeValues;
- (double)floatFromNumbers:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setCornerRadiusFromSimpleString:(id)arg1;
- (void)setCornerRadiusFromComponents:(id)arg1;
@property(copy, nonatomic) NSString *cornerRadiusString;
- (id)rectangleNumberFormatter;
@property(nonatomic) double cornerRadiusFloat;
@property(nonatomic) double normalizedExponentialCornerRadius;

@end

@interface MSImmutableSymbolInstance : _MSImmutableSymbolInstance <MSFlowContainmentCheck>
{
}

+ (id)defaultName;
+ (unsigned long long)traits;
@property(readonly, nonatomic) id <NSCopying> modifiedMasterCacheKey;
- (double)scale;
- (BOOL)isScaled;
- (struct CGRect)influenceRectForBounds;
- (struct CGRect)paddedInfluenceRect:(struct CGRect)arg1 withPaddingsFromMasterInDocument:(id)arg2 cache:(id)arg3 visitedSymbols:(id)arg4;
- (struct CGRect)influenceRectForBoundsInDocument:(id)arg1 cache:(id)arg2 visitedSymbols:(id)arg3;
- (id)overridesFromGroupForMigration:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (id)initWithGroupForMigration:(id)arg1;
- (Class)overrideViewControllerClassForOverridePoint:(id)arg1;
- (BOOL)includeInManifest;
- (BOOL)containsFlowWithSymbolsFromDocument:(id)arg1 visited:(id)arg2;
@property(readonly, nonatomic) NSDictionary *overrides;
- (id)availableOverridesWithDocument:(id)arg1;
- (id)overridePointsInDocument:(id)arg1;
- (id)overridePointsWithParent:(id)arg1;
- (id)updateOverridesDictionary:(id)arg1 withObjectIDMapping:(id)arg2 afterChangingSymbolMasterWithID:(id)arg3 currentID:(id)arg4;
- (void)updateOverridesWithObjectIDMapping:(id)arg1 afterChangingSymbolMasterWithID:(id)arg2;
- (id)overridesWithGridIndexRemoved:(id)arg1;
- (void)migratePropertiesFromV96OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV89OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV84OrEarlierWithUnarchiver:(id)arg1;
- (BOOL)differsFromLayer:(id)arg1;
- (id)uncachedModifiedSymbolForMaster:(id)arg1 document:(id)arg2;
- (id)cachedModifiedSymbolForMaster:(id)arg1 document:(id)arg2 cache:(id)arg3;
- (id)cachedModifiedSymbolForMaster:(id)arg1 inContext:(id)arg2;
- (void)writeSVGToElement:(id)arg1 withExporter:(id)arg2;

@end

@interface _MSExportPreset : MSModelObject
{
    NSString *_name;
    BOOL _shouldApplyAutomatically;
    NSMutableArray *_exportFormats;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveExportFormatIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllExportFormats;
- (void)removeExportFormatsAtIndexes:(id)arg1;
- (void)removeExportFormatAtIndex:(unsigned long long)arg1;
- (void)removeExportFormat:(id)arg1;
- (void)insertExportFormats:(id)arg1 afterExportFormat:(id)arg2;
- (void)insertExportFormat:(id)arg1 afterExportFormat:(id)arg2;
- (void)insertExportFormats:(id)arg1 beforeExportFormat:(id)arg2;
- (void)insertExportFormat:(id)arg1 beforeExportFormat:(id)arg2;
- (void)insertExportFormat:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addExportFormats:(id)arg1;
- (void)addExportFormat:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *exportFormats; // @synthesize exportFormats=_exportFormats;
@property(nonatomic) BOOL shouldApplyAutomatically; // @synthesize shouldApplyAutomatically=_shouldApplyAutomatically;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSSymbol : _MSSymbol
{
}

@end

@interface _MSStyleColorControls : MSStylePart
{
    double _brightness;
    double _contrast;
    double _hue;
    double _saturation;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) double saturation; // @synthesize saturation=_saturation;
@property(nonatomic) double hue; // @synthesize hue=_hue;
@property(nonatomic) double contrast; // @synthesize contrast=_contrast;
@property(nonatomic) double brightness; // @synthesize brightness=_brightness;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSJSONArchiver : MSBaseArchiver
{
}

+ (void)archiveObject:(id)arg1 coder:(id)arg2;
+ (id)archiverFromCoder:(id)arg1;
+ (void)defineClassAliases;
+ (void)load;
- (id)replacementObjectForObject:(id)arg1;
- (void)encodeSize:(struct CGSize)arg1 forKey:(id)arg2;
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;
- (void)encodePoint:(struct CGPoint)arg1 forKey:(id)arg2;
- (void)encodeRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) BCJSONEncoder *encoder;

@end

@interface MSArtboardPresetsCategory : NSObject
{
    NSString *_name;
    NSArray *_sections;
}

+ (id)categoriesWithContentsOfURL:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithName:(id)arg1 sections:(id)arg2;

@end

@interface MSBaseUnarchiver : NSObject
{
    BOOL _corruptionDetected;
    long long _currentVersion;
    long long _archiveVersion;
    NSArray *_actualSymbolIDs;
}

+ (id)unarchiveObjectWithData:(id)arg1 asVersion:(long long)arg2 corruptionDetected:(char *)arg3 error:(id *)arg4;
+ (id)unarchiveObjectWithData:(id)arg1 actualVersion:(long long *)arg2 error:(id *)arg3;
+ (id)unarchiveObjectWithData:(id)arg1;
@property(retain, nonatomic) NSArray *actualSymbolIDs; // @synthesize actualSymbolIDs=_actualSymbolIDs;
@property(nonatomic) BOOL corruptionDetected; // @synthesize corruptionDetected=_corruptionDetected;
@property(nonatomic) long long archiveVersion; // @synthesize archiveVersion=_archiveVersion;
@property(nonatomic) long long currentVersion; // @synthesize currentVersion=_currentVersion;
- (void).cxx_destruct;
- (id)instanciateObject:(id)arg1;
- (struct CGSize)decodeSizeForKey:(id)arg1 withDefault:(struct CGSize)arg2;
- (long long)decodeIntegerForKey:(id)arg1 withDefault:(long long)arg2;
- (struct CGPoint)decodePointForKey:(id)arg1 withDefault:(struct CGPoint)arg2;
- (struct CGRect)decodeRectForKey:(id)arg1 withDefault:(struct CGRect)arg2;
- (BOOL)decodeBoolForKey:(id)arg1 withDefault:(BOOL)arg2;
- (double)decodeDoubleForKey:(id)arg1 withDefault:(double)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (BOOL)containsValueForKey:(id)arg1;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (id)init;
- (id)unarchiveObjectAsVersion:(long long)arg1 corruptionDetected:(char *)arg2 error:(id *)arg3;
- (id)decodeRoot;
- (id)initForReadingWithData:(id)arg1;

@end

@interface MSDocumentData : _MSDocumentData <MSLayerContainment, MSDocumentData>
{
    BOOL _autoExpandGroupsInLayerList;
    NSDictionary *_symbolMap;
    NSDictionary *_symbolInstancesBySymbolID;
    BCCache *_cache;
    id <MSDocumentDataDelegate> _delegate;
    NSDictionary *_metadata;
    MSFontList *_fontList;
}

+ (void)initialize;
@property(retain, nonatomic) MSFontList *fontList; // @synthesize fontList=_fontList;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) BOOL autoExpandGroupsInLayerList; // @synthesize autoExpandGroupsInLayerList=_autoExpandGroupsInLayerList;
@property(nonatomic) __weak id <MSDocumentDataDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) BCCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (void)determineCurrentArtboard;
- (void)refreshOverlay;
- (void)refreshOverlayInRect:(struct CGRect)arg1;
- (void)immediatelyShowSelectionForAllLayers;
- (void)temporarilyHideSelectionForLayers:(id)arg1;
- (void)replaceExistingCreationMetadata;
- (id)images;
- (id)sharedObjectContainerOfType:(unsigned long long)arg1;
- (void)purgeForeignSymbols;
- (void)enumerateForeignSymbolsWithLibraries:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)libraryForForeignObject:(id)arg1 inLibraries:(id)arg2;
- (id)addCopyOfInstanceMasterToDocumentIfNecessary:(id)arg1;
- (void)addSymbolMaster:(id)arg1;
- (id)addCopyOfMasterToDocumentIfNecessary:(id)arg1;
- (id)symbolWithID:(id)arg1;
@property(readonly, nonatomic) NSDictionary *symbolMap; // @synthesize symbolMap=_symbolMap;
- (id)allSymbols;
- (id)localSymbols;
- (id)allArtboards;
@property(readonly, nonatomic) NSDictionary *symbolInstancesBySymbolID; // @synthesize symbolInstancesBySymbolID=_symbolInstancesBySymbolID;
- (void)populateDictionary:(id)arg1 withChildrenOf:(id)arg2;
- (id)layersByObjectID;
- (id)artboardWithID:(id)arg1;
- (id)layerWithID:(id)arg1;
- (void)layerTreeLayoutDidChange;
- (void)layerSelectionMightHaveChanged;
- (id)selectedLayers;
- (BOOL)documentIsEmpty;
- (void)sharedObjectDidChange:(struct MSModelObject *)arg1;
- (id)nameForNewPage;
- (id)symbolsPageOrCreateIfNecessary;
- (id)symbolsPage;
- (id)addBlankPage;
- (void)removePages:(id)arg1 detachInstances:(BOOL)arg2;
@property(retain, nonatomic) MSPage *currentPage;
- (void)setCurrentPageIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)documentData;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)objectDidInit;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (id)defaultPagesArray;
- (void)object:(id)arg1 didChangeProperty:(id)arg2;
- (void)convertToColorSpace:(unsigned long long)arg1;
- (void)assignColorSpace:(unsigned long long)arg1;
- (void)replaceInstancesOfColor:(id)arg1 withColor:(id)arg2 ignoreAlphaWhenMatching:(BOOL)arg3 replaceAlphaOfOriginalColor:(BOOL)arg4;
- (void)enumerateColorConvertiblesIgnoringForeignSymbols:(CDUnknownBlockType)arg1;
- (void)replaceFonts:(id)arg1;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)enumerateLayers:(CDUnknownBlockType)arg1;
- (id)lastLayer;
- (id)firstLayer;
- (BOOL)canContainLayer:(id)arg1;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (BOOL)containsNoOrOneLayers;
- (BOOL)containsLayers;
- (BOOL)containsMultipleLayers;
- (BOOL)containsOneLayer;
- (unsigned long long)containedLayersCount;
- (id)containedLayers;
- (BOOL)canBeContainedByDocument;
- (BOOL)canBeContainedByGroup;
- (id)metadataForKey:(id)arg1 object:(id)arg2;
- (void)storeMetadata:(id)arg1 forKey:(id)arg2 object:(id)arg3;

// Remaining properties
@property(readonly, nonatomic) NSArray *pages;

@end

@interface MSCurvePointDisconnectedBehaviour : MSCurvePointBehaviour
{
}

+ (void)curveToChangedInPoint:(id)arg1;
+ (void)curveFromChangedInPoint:(id)arg1;
+ (void)didAssignBehaviorToHandle:(unsigned long long)arg1 ofPoint:(id)arg2 previousMode:(long long)arg3;

@end

@interface MSConstantBaselineInfo : NSObject
{
    double _constantBaselineOffset;
    double _constantBaselineLineHeight;
}

@property(nonatomic) double constantBaselineLineHeight; // @synthesize constantBaselineLineHeight=_constantBaselineLineHeight;
@property(nonatomic) double constantBaselineOffset; // @synthesize constantBaselineOffset=_constantBaselineOffset;
@property(readonly, nonatomic) double paragraphOffset;

@end

@interface MSConstantBaselineTypesetter : NSATSTypesetter
{
    BCRangeMap *_rangeMap;
}

@property(retain, nonatomic) BCRangeMap *rangeMap; // @synthesize rangeMap=_rangeMap;
- (void).cxx_destruct;
- (void)setLineFragmentRect:(struct CGRect)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect)arg3 baselineOffset:(double)arg4;
- (void)willSetLineFragmentRect:(struct CGRect *)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect *)arg3 baselineOffset:(double *)arg4;
- (double)paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (void)invalidateLayoutFromGlyphLocation:(unsigned long long)arg1;
- (id)maxLineHeightFontFromCurrentParagraph:(double *)arg1 maxLineHeight:(double *)arg2 charcterRange:(struct _NSRange *)arg3;
- (struct _NSRange)constantBaselineGlyphRangeForGlyphLocation:(unsigned long long)arg1;
- (BOOL)usesFontLeading;
- (id)init;

@end

@interface _MSAssetCollection : MSModelObject
{
    NSArray *_images;
    NSMutableArray *_colors;
    NSMutableArray *_exportPresets;
    NSMutableArray *_gradients;
    MSImageCollection *_imageCollection;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveGradientIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllGradients;
- (void)removeGradientsAtIndexes:(id)arg1;
- (void)removeGradientAtIndex:(unsigned long long)arg1;
- (void)removeGradient:(id)arg1;
- (void)insertGradients:(id)arg1 afterGradient:(id)arg2;
- (void)insertGradient:(id)arg1 afterGradient:(id)arg2;
- (void)insertGradients:(id)arg1 beforeGradient:(id)arg2;
- (void)insertGradient:(id)arg1 beforeGradient:(id)arg2;
- (void)insertGradient:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addGradients:(id)arg1;
- (void)addGradient:(id)arg1;
- (void)moveExportPresetIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllExportPresets;
- (void)removeExportPresetsAtIndexes:(id)arg1;
- (void)removeExportPresetAtIndex:(unsigned long long)arg1;
- (void)removeExportPreset:(id)arg1;
- (void)insertExportPresets:(id)arg1 afterExportPreset:(id)arg2;
- (void)insertExportPreset:(id)arg1 afterExportPreset:(id)arg2;
- (void)insertExportPresets:(id)arg1 beforeExportPreset:(id)arg2;
- (void)insertExportPreset:(id)arg1 beforeExportPreset:(id)arg2;
- (void)insertExportPreset:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addExportPresets:(id)arg1;
- (void)addExportPreset:(id)arg1;
- (void)moveColorIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllColors;
- (void)removeColorsAtIndexes:(id)arg1;
- (void)removeColorAtIndex:(unsigned long long)arg1;
- (void)removeColor:(id)arg1;
- (void)insertColors:(id)arg1 afterColor:(id)arg2;
- (void)insertColor:(id)arg1 afterColor:(id)arg2;
- (void)insertColors:(id)arg1 beforeColor:(id)arg2;
- (void)insertColor:(id)arg1 beforeColor:(id)arg2;
- (void)insertColor:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addColors:(id)arg1;
- (void)addColor:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSImageCollection *imageCollection; // @synthesize imageCollection=_imageCollection;
@property(retain, nonatomic) NSArray *gradients; // @synthesize gradients=_gradients;
@property(retain, nonatomic) NSArray *exportPresets; // @synthesize exportPresets=_exportPresets;
@property(retain, nonatomic) NSArray *colors; // @synthesize colors=_colors;
@property(retain, nonatomic) NSArray *images; // @synthesize images=_images;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface NSBezierPathEnumerator : NSObject <NSFastEnumeration>
{
    BOOL _reverse;
    NSBezierPath *_bezierPath;
    NSArray *_pathItems;
}

@property(copy, nonatomic) NSArray *pathItems; // @synthesize pathItems=_pathItems;
@property(nonatomic) BOOL reverse; // @synthesize reverse=_reverse;
@property(retain, nonatomic) NSBezierPath *bezierPath; // @synthesize bezierPath=_bezierPath;
- (void).cxx_destruct;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;

@end

@interface NSBezierPathItem : NSObject
{
    struct CGPoint points[3];
    unsigned long long _type;
}

@property(nonatomic) unsigned long long type; // @synthesize type=_type;
- (id)debugDescription;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqual:(id)arg1 withAccuracy:(double)arg2;
- (id)description;
- (id)bezierPathStartingAtPoint:(struct CGPoint)arg1;
- (struct CGPoint *)points;
- (void)setPoints:(struct CGPoint *)arg1;

@end

@interface _MSImmutableStarShape : MSImmutableShapePathLayer
{
    long long _numberOfPoints;
    double _radius;
}

+ (Class)mutableClass;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) long long numberOfPoints; // @synthesize numberOfPoints=_numberOfPoints;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSColorArchivingFactory : NSObject
{
}

+ (id)colorForEncodingColor:(id)arg1;
+ (void)initialize;

@end

@interface MSSharedTextStyleContainer : _MSSharedTextStyleContainer
{
}

- (unsigned long long)validStyleType;

@end

@interface MSImmutableBitmapLayer : _MSImmutableBitmapLayer
{
}

+ (unsigned long long)traits;
+ (id)defaultName;
- (BOOL)canSkipAdvancedClipForStrokes;
- (id)NSImage;
- (void)performInitWithUnarchiver:(id)arg1;
- (Class)overrideViewControllerClassForOverridePoint:(id)arg1;
- (id)overridePointsWithParent:(id)arg1;
- (void)migratePropertiesFromV75OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV56OrEarlierWithUnarchiver:(id)arg1;
- (BOOL)shouldRenderInTransparencyLayer;
- (id)addGroupContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (void)addPathDefinitionToDocument:(id)arg1;
- (id)imageElementWithAttributes:(id)arg1 exporter:(id)arg2;
- (void)addImageElementAttributes:(id)arg1 exporter:(id)arg2;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (BOOL)requiresPathDefinition:(id)arg1;
- (id)svgStyle:(id)arg1;

// Remaining properties
@property(nonatomic) BOOL fillReplacesImage; // @dynamic fillReplacesImage;
@property(retain, nonatomic) MSImageData *image; // @dynamic image;

@end

@interface MSPasteboardLayersBase : NSObject
{
}

+ (id)usedSharedObjectsInDocument:(id)arg1 layers:(id)arg2;
+ (id)usedSymbolsInContainer:(id)arg1 document:(id)arg2;
+ (void)usedSymbolsInInstance:(id)arg1 document:(id)arg2 foundSet:(id)arg3;
+ (void)usedSymbolsInSymbolWithID:(id)arg1 document:(id)arg2 foundSet:(id)arg3;
+ (id)dictionaryFromPasteboardLayers:(id)arg1;
+ (id)dataFromPasteboardDictionary:(id)arg1;
+ (id)immutableSharedObjectsFromPasteboardDict:(id)arg1;
+ (id)pasteboardDataFromData:(id)arg1;

@end

@interface _MSImmutableOverrideValue : MSImmutableModelObject
{
    NSString *_overrideName;
    NSObject<NSCopying> *_value;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSObject<NSCopying> *value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *overrideName; // @synthesize overrideName=_overrideName;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSCurvePoint : _MSCurvePoint <MSCurvePoint, NSCopying>
{
}

+ (id)pointWithPoint:(struct CGPoint)arg1 curveTo:(struct CGPoint)arg2 curveFrom:(struct CGPoint)arg3;
+ (id)pointWithPoint:(struct CGPoint)arg1;
+ (id)point;
@property(readonly, copy) NSString *description;
- (void)multiplyBy:(double)arg1;
- (void)moveCurveFromTo:(struct CGPoint)arg1;
- (void)moveCurveToTo:(struct CGPoint)arg1;
- (void)movePointTo:(struct CGPoint)arg1;
- (struct CGPoint)locationOfPoint:(unsigned long long)arg1;
- (void)inferCurveMode;
- (BOOL)isEffectivelyStraight;
@property(readonly, nonatomic) BOOL isStraight;
- (BOOL)isRounded;
- (void)changeCurveModeTo:(long long)arg1 usingPoint:(unsigned long long)arg2;
- (Class)currentBehaviour;
- (id)initWithPoint:(struct CGPoint)arg1 curveTo:(struct CGPoint)arg2 curveFrom:(struct CGPoint)arg3;
- (id)initWithPoint:(struct CGPoint)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MSStyleFill : MSStyleBasicFill
{
    MSImageData *_image;
    long long _noiseIndex;
    double _noiseIntensity;
    long long _patternFillType;
    double _patternTileScale;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) double patternTileScale; // @synthesize patternTileScale=_patternTileScale;
@property(nonatomic) long long patternFillType; // @synthesize patternFillType=_patternFillType;
@property(nonatomic) double noiseIntensity; // @synthesize noiseIntensity=_noiseIntensity;
@property(nonatomic) long long noiseIndex; // @synthesize noiseIndex=_noiseIndex;
@property(retain, nonatomic) MSImageData *image; // @synthesize image=_image;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutableFlowConnection : _MSImmutableFlowConnection
{
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
- (id)bezierPathForRenderingFlowFromParentLayer:(id)arg1 toArtboard:(id)arg2 zoomLevel:(double)arg3;
- (unsigned long long)flowTypeForTransitionFromParentLayer:(id)arg1 toArtboard:(id)arg2;
@property(readonly, nonatomic) BOOL isBackAction;

@end

@interface MSTextStyle : _MSTextStyle
{
    NSDictionary *_decodedAttributes;
}

+ (id)styleWithAttributes:(id)arg1;
@property(copy, nonatomic) NSDictionary *decodedAttributes; // @synthesize decodedAttributes=_decodedAttributes;
- (void).cxx_destruct;
- (void)syncOwningTextLayerWithThisStyle;
@property(copy, nonatomic) NSDictionary *attributes;
- (void)updateAttributesWithoutSyncingOwningTextLayer:(id)arg1;
@property(readonly, nonatomic) NSString *fontPostscriptName;
@property(readonly, nonatomic) BOOL isRequiredFontAvailable;
- (void)generatePreviewWithText:(id)arg1 imageSize:(struct CGSize)arg2 previewSize:(struct CGSize)arg3 colorSpace:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)treeAsDictionary;

@end

@interface MSBezierContour : NSObject
{
    BOOL _clockwise;
    struct CGRect _bounds;
    BOOL _isRectangular;
    BOOL _closed;
    BOOL _cachedClockwise;
    BOOL _cachedBounds;
    BOOL _cachedIsRectangular;
    NSArray *_segments;
    MSPath *_path;
}

+ (id)contourWithRect:(struct CGRect)arg1;
@property(nonatomic) BOOL cachedIsRectangular; // @synthesize cachedIsRectangular=_cachedIsRectangular;
@property(nonatomic) BOOL cachedBounds; // @synthesize cachedBounds=_cachedBounds;
@property(nonatomic) BOOL cachedClockwise; // @synthesize cachedClockwise=_cachedClockwise;
@property(retain, nonatomic) MSPath *path; // @synthesize path=_path;
@property(readonly, copy, nonatomic) NSArray *segments; // @synthesize segments=_segments;
@property(readonly, nonatomic, getter=isClosed) BOOL closed; // @synthesize closed=_closed;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)contourWithInset:(double)arg1;
- (id)rejoinSegments:(id)arg1 closed:(BOOL)arg2;
- (id)segmentsByDiscardingTinySegments:(id)arg1 closed:(BOOL)arg2;
- (id)segmentsByCheckingForPointsInJoin:(id)arg1;
- (id)simplifiedSegments;
- (id)simplifySegment:(id)arg1;
- (id)simplifiedSegmentsBySplittingSegment:(id)arg1 atOffset:(double)arg2;
- (id)segmentBeforeSegment:(id)arg1 inArray:(id)arg2 closed:(BOOL)arg3;
- (id)segmentAfterSegment:(id)arg1 inArray:(id)arg2 closed:(BOOL)arg3;
- (id)segmentAfter:(id)arg1;
- (id)segmentBefore:(id)arg1;
- (id)reversedContour;
@property(nonatomic, getter=isClockwise) BOOL clockwise;
@property(nonatomic) BOOL isRectangular;
- (BOOL)doSegmentsFormARectangle:(id)arg1 closed:(BOOL)arg2;
@property(readonly, nonatomic) struct CGRect bounds;
- (void)setBounds:(struct CGRect)arg1;
- (id)initWithSegments:(id)arg1 closed:(BOOL)arg2;

@end

@interface MSImmutableLayerAncestry : NSObject
{
    MSImmutableLayer *_layer;
    MSImmutableDocumentData *_document;
    MSImmutablePage *_page;
    NSArray *_ancestors;
}

+ (id)ancestryWithMSLayer:(id)arg1;
@property(retain, nonatomic) NSArray *ancestors; // @synthesize ancestors=_ancestors;
@property(readonly, nonatomic) MSImmutablePage *page; // @synthesize page=_page;
@property(readonly, nonatomic) MSImmutableDocumentData *document; // @synthesize document=_document;
@property(readonly, nonatomic) MSImmutableLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
- (struct CGRect)absoluteRect;
@property(readonly, nonatomic) MSImmutableArtboardGroup *artboard;
@property(readonly, nonatomic) MSImmutableLayerGroup *parentGroup;
@property(readonly, nonatomic) NSArray *ancestorsAndSelf;
- (BOOL)ancestorsForLayerInGroup:(id)arg1 array:(id)arg2;
- (id)findAncestors;
- (id)initWithMSLayer:(id)arg1;
- (id)initWithLayer:(id)arg1 ancestors:(id)arg2 document:(id)arg3;
- (id)initWithLayer:(id)arg1 document:(id)arg2;

@end

@interface _MSImmutableHotspotLayer : MSImmutableLayer
{
}

+ (Class)mutableClass;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSColor : MSModelObject
{
    double _alpha;
    double _blue;
    double _green;
    double _red;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)setRed:(double)arg1;
@property(readonly, nonatomic) double red; // @synthesize red=_red;
- (void)setGreen:(double)arg1;
@property(readonly, nonatomic) double green; // @synthesize green=_green;
- (void)setBlue:(double)arg1;
@property(readonly, nonatomic) double blue; // @synthesize blue=_blue;
- (void)setAlpha:(double)arg1;
@property(readonly, nonatomic) double alpha; // @synthesize alpha=_alpha;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableSymbol : MSImmutableSharedObject
{
}

+ (Class)mutableClass;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSStarShape : _MSStarShape
{
}

- (BOOL)shouldHitTestOnFill:(id)arg1;
- (BOOL)canFlatten;
- (void)resetPoints;
- (struct CGRect)boundsForCursorPreview;
- (id)inspectorViewControllerNames;

@end

@interface _MSShapePathLayer : MSLayer
{
    long long _booleanOperation;
    BOOL _edited;
    BOOL _isClosed;
    long long _pointRadiusBehaviour;
    NSMutableArray *_points;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)moveCurvePointIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeAllCurvePoints;
- (void)removeCurvePointsAtIndexes:(id)arg1;
- (void)removeCurvePointAtIndex:(unsigned long long)arg1;
- (void)removeCurvePoint:(id)arg1;
- (void)insertCurvePoints:(id)arg1 afterCurvePoint:(id)arg2;
- (void)insertCurvePoint:(id)arg1 afterCurvePoint:(id)arg2;
- (void)insertCurvePoints:(id)arg1 beforeCurvePoint:(id)arg2;
- (void)insertCurvePoint:(id)arg1 beforeCurvePoint:(id)arg2;
- (void)insertCurvePoint:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addCurvePoints:(id)arg1;
- (void)addCurvePoint:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSArray *points; // @synthesize points=_points;
@property(nonatomic) long long pointRadiusBehaviour; // @synthesize pointRadiusBehaviour=_pointRadiusBehaviour;
@property(nonatomic) BOOL isClosed; // @synthesize isClosed=_isClosed;
@property(nonatomic) BOOL edited; // @synthesize edited=_edited;
@property(nonatomic) long long booleanOperation; // @synthesize booleanOperation=_booleanOperation;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutablePage : MSImmutableLayerGroup
{
    BOOL _includeInCloudUpload;
    MSImmutableSimpleGrid *_grid;
    MSImmutableRulerData *_horizontalRulerData;
    MSImmutableLayoutGrid *_layout;
    MSImmutableRulerData *_verticalRulerData;
}

+ (Class)mutableClass;
@property(retain, nonatomic) MSImmutableRulerData *verticalRulerData; // @synthesize verticalRulerData=_verticalRulerData;
@property(retain, nonatomic) MSImmutableLayoutGrid *layout; // @synthesize layout=_layout;
@property(retain, nonatomic) MSImmutableRulerData *horizontalRulerData; // @synthesize horizontalRulerData=_horizontalRulerData;
@property(retain, nonatomic) MSImmutableSimpleGrid *grid; // @synthesize grid=_grid;
@property(nonatomic) BOOL includeInCloudUpload; // @synthesize includeInCloudUpload=_includeInCloudUpload;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSSharedStyle : _MSSharedStyle <MSSharedObjectStyling>
{
}

- (id)newInstance;
@property(readonly, nonatomic) MSStyle *style;
- (Class)shareableObjectReferenceClass_bc;
- (void)applyStyleToMenuItem:(id)arg1 withColorSpace:(id)arg2;
- (id)generatePreviewForManageSheetWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)generatePreviewForPopup:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)generatePreviewForMenuItem:(id)arg1 withColorSpace:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSColorCounter : NSObject
{
    MSImmutableColor *_immutableColor;
    MSColor *_color;
    unsigned long long _fillCount;
    unsigned long long _borderCount;
    unsigned long long _shadowCount;
    unsigned long long _innerShadowCount;
    unsigned long long _textCount;
    unsigned long long _artboardCount;
}

+ (void)initialize;
@property(nonatomic) unsigned long long artboardCount; // @synthesize artboardCount=_artboardCount;
@property(nonatomic) unsigned long long textCount; // @synthesize textCount=_textCount;
@property(nonatomic) unsigned long long innerShadowCount; // @synthesize innerShadowCount=_innerShadowCount;
@property(nonatomic) unsigned long long shadowCount; // @synthesize shadowCount=_shadowCount;
@property(nonatomic) unsigned long long borderCount; // @synthesize borderCount=_borderCount;
@property(nonatomic) unsigned long long fillCount; // @synthesize fillCount=_fillCount;
@property(retain, nonatomic) MSColor *color; // @synthesize color=_color;
@property(retain, nonatomic) MSImmutableColor *immutableColor; // @synthesize immutableColor=_immutableColor;
- (void).cxx_destruct;
- (long long)compareArtboardCounts:(id)arg1;
- (long long)compareTextCounts:(id)arg1;
- (long long)compareInnerShadowCounts:(id)arg1;
- (long long)compareShadowCounts:(id)arg1;
- (long long)compareBorderCounts:(id)arg1;
- (long long)compareFillCounts:(id)arg1;
- (long long)compareTotalCounts:(id)arg1;
- (long long)compare:(id)arg1 byColorUse:(unsigned long long)arg2;
- (long long)compare:(id)arg1;
@property(readonly, nonatomic) NSString *title;
@property(readonly, nonatomic) unsigned long long totalCount;
- (void)countSource:(id)arg1;

@end

@interface MSImmutableStyleFill : _MSImmutableStyleFill
{
}

+ (id)defaultName;
@property(readonly, nonatomic) BOOL hasOpacity;
- (id)NSImage;
- (void)performInitWithUnarchiver:(id)arg1;
- (void)updateColorCounter:(id)arg1;
- (void)migratePropertiesFromV74OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV56OrEarlierWithUnarchiver:(id)arg1;
- (void)addSVGAttributes:(id)arg1 exporter:(id)arg2;
- (id)addNoisePatternLink:(id)arg1;
- (id)addPatternLink:(id)arg1;
- (id)addStretchedPattern:(id)arg1 exporter:(id)arg2;
- (id)addFilledOrFitPattern:(id)arg1 exporter:(id)arg2 type:(long long)arg3;
- (id)addTiledPattern:(id)arg1 scale:(double)arg2 exporter:(id)arg3;
- (void)addUseWrapperToPattern:(id)arg1 withImageWrapper:(id)arg2 scaleX:(double)arg3 scaleY:(double)arg4;
- (id)addImageDefinition:(id)arg1 exporter:(id)arg2;

@end

@interface _MSSymbol : MSSharedObject
{
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSImmutablePage : _MSImmutablePage <MSWebExportableRootLayer, MSImmutableRootLayer>
{
    NSSet *_selectedLayerIDs;
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (unsigned long long)traits;
+ (id)defaultName;
@property(readonly, nonatomic) NSSet *selectedLayerIDs; // @synthesize selectedLayerIDs=_selectedLayerIDs;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *symbols;
@property(readonly, nonatomic) BOOL hasArtboards;
@property(readonly, nonatomic) NSArray *artboards;
@property(readonly, nonatomic) struct CGRect contentBounds;
- (struct CGPoint)rulerBase;
- (id)archiveReferenceIdentifier_bc;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;
@property(readonly, nonatomic) BOOL isFlowHome;
@property(readonly, nonatomic) BOOL webExporterShouldIncludeBackgroundColor;
@property(readonly, nonatomic) MSImmutableColor *webExporterBackgoundColor;
- (id)exporterForWebOnPage:(id)arg1 document:(id)arg2 scale:(double)arg3;
- (BOOL)shouldDiffSublayersForDifferingLayer:(id)arg1;
- (void)migratePropertiesFromV79OrEarlierWithUnarchiver:(id)arg1;
- (void)prepareDrawingInContext:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)transparencyLayerUseRectCondition;
- (BOOL)shouldSkipDrawingInContext:(id)arg1;
- (BOOL)shouldRenderInTransparencyLayer;
- (id)svgStyle:(id)arg1;
- (BOOL)shouldIncludeInSVGExport:(id)arg1;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (struct CGPoint)layerOffsetWithExporter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) MSImmutableSimpleGrid *grid;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) MSImmutableRulerData *horizontalRulerData;
@property(readonly, copy, nonatomic) MSImmutableLayoutGrid *layout;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) MSImmutableRulerData *verticalRulerData;

@end

@interface MSImmutableLayerGroup : _MSImmutableLayerGroup <MSFlowContainmentCheck, MSLayerGroup>
{
}

+ (unsigned long long)traitsForPropertyName:(id)arg1;
+ (unsigned long long)traits;
+ (id)defaultName;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (BOOL)layersAreEqualForDiffToLayersOfLayerGroup:(id)arg1;
- (struct CGRect)rectByApplyingEdgePaddingsToRect:(struct CGRect)arg1;
- (struct CGRect)overlayInfluenceRectForBounds;
- (struct CGRect)influenceRectForBounds;
- (struct CGRect)influenceRectForFrameInDocument:(id)arg1 cache:(id)arg2 visitedSymbols:(id)arg3;
- (struct CGRect)calculateInfluenceRectForBoundsInDocument:(id)arg1 cache:(id)arg2 visitedSymbols:(id)arg3;
- (BOOL)influenceRectClipsToBounds;
- (BOOL)includeChildrenInCalculatingStyleSize;
@property(readonly, nonatomic) struct CGSize mirrorViewPortSize;
@property(readonly, nonatomic) double mirrorExportScale;
- (BOOL)containsFlowWithSymbolsFromDocument:(id)arg1 visited:(id)arg2;
- (BOOL)enumerateLayersWithOptions:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)enumerateLayers:(CDUnknownBlockType)arg1;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (id)lastLayer;
- (id)firstLayer;
- (BOOL)containsMultipleLayers;
- (BOOL)containsOneLayer;
- (BOOL)containsLayers;
- (BOOL)containsNoOrOneLayers;
- (BOOL)canContainLayer:(id)arg1;
- (unsigned long long)containedLayersCount;
- (id)containedLayers;
- (id)subObjectsForTreeDiff;
- (BOOL)childRectShouldResizeOnlyVertically:(struct CGRect)arg1 inParentOfSize:(struct CGSize)arg2;
- (BOOL)childRectShouldResizeOnlyHorizontally:(struct CGRect)arg1 inParentOfSize:(struct CGSize)arg2;
- (unsigned long long)constraintForLayer:(id)arg1;
- (void)migratePropertiesFromV90OrEarlierWithUnarchiver:(id)arg1;
- (void)migratePropertiesFromV78OrEarlierWithUnarchiver:(id)arg1;
- (id)svgStyle:(id)arg1;
- (void)addChildrenToElement:(id)arg1 exporter:(id)arg2;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3;
- (BOOL)requiresPathDefinition:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSArray *layers;

@end

@interface MSSymbolInstance : _MSSymbolInstance
{
}

+ (id)keyPathsForValuesAffectingPreviewImages;
- (void)applyOverride:(id)arg1 toPoint:(id)arg2;
- (void)applyOverrides:(id)arg1;
- (void)setValue:(id)arg1 forOverridePoint:(id)arg2;
- (void)mapOverridesUnderOverridePoint:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (void)mapOverrides:(id)arg1 forOverridePoint:(id)arg2;
- (void)internalSetValue:(id)arg1 forOverridePointNamed:(id)arg2;
- (id)availableOverridesUnderPoint:(id)arg1;
- (void)updateOverridesWithObjectIDMap:(id)arg1;
@property(readonly, nonatomic) NSSet *influencingSymbolIDs;
- (BOOL)canScale;
- (BOOL)canBeTransformed;
- (struct CGSize)naturalSize;
- (void)multiplyBy:(double)arg1;
- (double)scale;
- (void)resetSizeToMaster;
- (void)updateOverrides:(id)arg1 withMapping:(id)arg2;
- (void)resizeInstanceToFitSymbol:(id)arg1;
- (BOOL)shouldWrapDetachedSymbolMasterInGroup:(id)arg1;
- (id)detachByReplacingWithGroup;
- (BOOL)canInsertIntoGroupWithoutInfiniteRecursion:(id)arg1 visitedSymbols:(id)arg2 symbolInstancesBySymbolID:(id)arg3;
- (BOOL)canInsertIntoGroupWithoutInfiniteRecursion:(id)arg1 symbolInstancesBySymbolID:(id)arg2;
- (unsigned long long)numberOfVisibleCells;
- (void)changeInstanceToSymbol:(id)arg1;
- (BOOL)isInstanceForMaster:(id)arg1;
- (id)symbolMaster;
- (BOOL)shouldRefreshOverlayForFlows;
- (id)inspectorViewControllerNames;
- (id)unselectedPreviewImage;
- (id)selectedPreviewImage;
- (id)replaceWithInstanceOfSymbol:(id)arg1;
- (BOOL)canMoveToLayer:(id)arg1 beforeLayer:(id)arg2;
@property(copy, nonatomic) NSDictionary *overrides;
- (id)availableOverrides;
- (id)overridePoints;
- (id)setupWithLayerBuilderDictionary:(id)arg1;

@end

@interface _MSImmutableShapePath : MSImmutableModelObject
{
    BOOL _isClosed;
    long long _pointRadiusBehaviour;
    NSArray *_points;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *points; // @synthesize points=_points;
@property(nonatomic) long long pointRadiusBehaviour; // @synthesize pointRadiusBehaviour=_pointRadiusBehaviour;
@property(nonatomic) BOOL isClosed; // @synthesize isClosed=_isClosed;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSColor : _MSColor <MSAsset, MSColor>
{
}

+ (id)rgbColorRed:(long long)arg1 green:(long long)arg2 blue:(long long)arg3;
+ (id)colorWithNSColor:(id)arg1;
+ (id)colorWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
+ (id)blackColor;
+ (id)whiteColor;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithRGBADictionary:(id)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (BOOL)fuzzyIsEqualExcludingAlpha:(id)arg1 precision:(double)arg2;
- (BOOL)fuzzyIsEqualExcludingAlpha:(id)arg1;
- (BOOL)fuzzyIsEqual:(id)arg1 precision:(double)arg2;
- (BOOL)fuzzyIsEqual:(id)arg1;
@property(readonly, nonatomic) double brightness;
@property(readonly, nonatomic) double saturation;
@property(readonly, nonatomic) double hue;
- (id)HSBColor;
@property(readonly, copy) NSString *description;
- (id)NSColorWithColorSpace:(id)arg1;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithImmutableObject:(id)arg1;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)treeAsDictionary;
- (id)scaledColor:(double)arg1;
- (id)RGBADictionary;
- (BOOL)isAssetEqual:(id)arg1;
- (unsigned long long)assetType;

// Remaining properties
@property(readonly, nonatomic) double alpha;
@property(readonly, nonatomic) double blue;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) double green;
@property(readonly, nonatomic) double red;
@property(readonly) Class superclass;

@end

@interface MSImmutablePolygonShape : _MSImmutablePolygonShape
{
}

+ (id)defaultName;

@end

@interface MSTriangleShape : _MSTriangleShape
{
}

- (BOOL)canFlatten;
- (void)resetPoints;
- (struct CGRect)boundsForCursorPreview;

@end

@interface _MSImmutableForeignObject : MSImmutableModelObject
{
    NSString *_libraryID;
    NSString *_sourceLibraryName;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSString *sourceLibraryName; // @synthesize sourceLibraryName=_sourceLibraryName;
@property(retain, nonatomic) NSString *libraryID; // @synthesize libraryID=_libraryID;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface _MSImmutableStyleBorderOptions : MSImmutableStylePart
{
    NSArray *_dashPattern;
    unsigned long long _lineCapStyle;
    unsigned long long _lineJoinStyle;
}

+ (Class)mutableClass;
@property(nonatomic) unsigned long long lineJoinStyle; // @synthesize lineJoinStyle=_lineJoinStyle;
@property(nonatomic) unsigned long long lineCapStyle; // @synthesize lineCapStyle=_lineCapStyle;
@property(copy, nonatomic) NSArray *dashPattern; // @synthesize dashPattern=_dashPattern;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableStyleBasicFill : _MSImmutableStyleBasicFill
{
}

@end

@interface _MSOverrideValue : MSModelObject
{
    NSString *_overrideName;
    NSObject<NSCopying> *_value;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSObject<NSCopying> *value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *overrideName; // @synthesize overrideName=_overrideName;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableStyleColorControls : MSImmutableStylePart
{
    double _brightness;
    double _contrast;
    double _hue;
    double _saturation;
}

+ (Class)mutableClass;
@property(nonatomic) double saturation; // @synthesize saturation=_saturation;
@property(nonatomic) double hue; // @synthesize hue=_hue;
@property(nonatomic) double contrast; // @synthesize contrast=_contrast;
@property(nonatomic) double brightness; // @synthesize brightness=_brightness;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSSubtreeRoot : NSObject
{
    MSImmutableModelObject *_object;
    NSArray *_ancestorsOfObject;
    MSImmutableDocumentData *_document;
}

@property(retain, nonatomic) MSImmutableDocumentData *document; // @synthesize document=_document;
@property(retain, nonatomic) NSArray *ancestorsOfObject; // @synthesize ancestorsOfObject=_ancestorsOfObject;
@property(retain, nonatomic) MSImmutableModelObject *object; // @synthesize object=_object;
- (void).cxx_destruct;
- (struct CGRect)overlayInfluenceRect;
- (struct CGRect)contentDirtyDiffRectWithCache:(id)arg1;

@end

@interface MSImmutableExportOptions : _MSImmutableExportOptions
{
}

- (id)firstFormat;
- (void)migratePropertiesFromV72OrEarlierWithUnarchiver:(id)arg1;

@end

@interface _MSTextStyle : MSModelObject
{
    NSDictionary *_encodedAttributes;
    long long _verticalAlignment;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(copy, nonatomic) NSDictionary *encodedAttributes; // @synthesize encodedAttributes=_encodedAttributes;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSKeyedArchiverHelper : NSKeyedArchiver
{
    MSBaseArchiver *_archiver;
}

@property(nonatomic) __weak MSBaseArchiver *archiver; // @synthesize archiver=_archiver;
- (void).cxx_destruct;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;

@end

@interface MSImmutableSymbolContainer : _MSImmutableSymbolContainer
{
}

@end

@interface MSImmutableAssetCollection : _MSImmutableAssetCollection
{
}

- (void)migratePropertiesFromV74OrEarlierWithUnarchiver:(id)arg1;

@end

@interface MSImmutableStylePart : _MSImmutableStylePart <MSStylePart>
{
}


// Remaining properties
@property(readonly, nonatomic) BOOL isEnabled;
@end

@interface MSRulerData : _MSRulerData
{
}

- (void)setValue:(double)arg1 forGuideAtIndex:(unsigned long long)arg2;
- (void)replaceGuideAtIndex:(unsigned long long)arg1 withGuide:(id)arg2;
- (double)guideAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfGuides;
- (void)removeAllGuides;
- (void)removeGuide:(id)arg1;
- (void)removeGuideAtIndex:(unsigned long long)arg1;
- (void)addGuide:(id)arg1;
- (void)addGuideWithValue:(double)arg1;
- (void)addGuide;

@end

@interface _MSImmutableFlowConnection : MSImmutableModelObject
{
    long long _animationType;
    NSString *_destinationArtboardID;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSString *destinationArtboardID; // @synthesize destinationArtboardID=_destinationArtboardID;
@property(nonatomic) long long animationType; // @synthesize animationType=_animationType;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSOverrideValue : _MSOverrideValue
{
    BOOL _isInherited;
    MSOverrideValue *_predecessor;
}

@property(retain, nonatomic) MSOverrideValue *predecessor; // @synthesize predecessor=_predecessor;
@property(nonatomic) BOOL isInherited; // @synthesize isInherited=_isInherited;
- (void).cxx_destruct;
- (void)addPredecessor:(id)arg1;
- (id)description;
- (id)initWithName:(id)arg1 value:(id)arg2;

@end

@interface _MSImmutableTriangleShape : MSImmutableShapePathLayer
{
    BOOL _isEquilateral;
}

+ (Class)mutableClass;
@property(nonatomic) BOOL isEquilateral; // @synthesize isEquilateral=_isEquilateral;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSForeignStyle : _MSForeignStyle
{
}

- (id)unlinkFromRemote;
- (id)masterFromLibrary:(id)arg1;
- (id)remoteShareID;
- (void)setLocalShareID:(id)arg1;
- (id)localShareID;
- (void)setOriginalObject:(id)arg1;
- (id)originalObject;
- (void)setLocalObject:(id)arg1;
- (id)localObject;

@end

@interface _MSFlowConnection : MSModelObject
{
    long long _animationType;
    NSString *_destinationArtboardID;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) NSString *destinationArtboardID; // @synthesize destinationArtboardID=_destinationArtboardID;
@property(nonatomic) long long animationType; // @synthesize animationType=_animationType;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface MSLayerBuilder : NSObject
{
}

+ (id)layerTreeWithContentsOfURL:(id)arg1 error:(id *)arg2;
+ (id)layerTreeWithDictionary:(id)arg1;
+ (id)styleFromDictionary:(id)arg1;
+ (id)layerTreeWithJSON:(id)arg1 relativeToURL:(id)arg2 error:(id *)arg3;

@end

@interface _MSForeignStyle : MSModelObject
{
    MSSharedStyle *_originalStyle;
    MSSharedStyle *_style;
}

+ (BOOL)allowsFaulting;
+ (Class)immutableClass;
- (void).cxx_destruct;
- (void)syncPropertiesFromObject:(id)arg1;
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)copyPropertiesToObject:(id)arg1 options:(unsigned long long)arg2;
- (void)setAsParentOnChildren;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
@property(retain, nonatomic) MSSharedStyle *style; // @synthesize style=_style;
@property(retain, nonatomic) MSSharedStyle *originalStyle; // @synthesize originalStyle=_originalStyle;
- (void)performInitWithImmutableModelObject:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImmutableExportPreset : MSImmutableModelObject
{
    NSString *_name;
    BOOL _shouldApplyAutomatically;
    NSArray *_exportFormats;
}

+ (Class)mutableClass;
@property(retain, nonatomic) NSArray *exportFormats; // @synthesize exportFormats=_exportFormats;
@property(nonatomic) BOOL shouldApplyAutomatically; // @synthesize shouldApplyAutomatically=_shouldApplyAutomatically;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)keysDifferingFromObject:(id)arg1;
- (BOOL)isEqualForDiffToObject:(id)arg1;
- (void)initializeUnsetObjectPropertiesWithDefaults;
- (BOOL)hasDefaultValues;
- (void)performInitEmptyObject;
- (void)decodePropertiesWithUnarchiver:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)performInitWithMutableModelObject:(id)arg1;

@end

@interface MSImmutableGradient : _MSImmutableGradient
{
}

+ (id)gradientFromStops:(id)arg1 colorSpace:(id)arg2;
+ (id)defaultGradientStops;
- (struct CGAffineTransform)ellipseTransformInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) BOOL hasOpacity;
- (id)NSGradientWithColorSpace:(id)arg1;
- (struct CGGradient *)newCGGradientForColorSpace:(struct CGColorSpace *)arg1;
- (double)conditionedEllipseLength;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (id)stopAtIndex:(unsigned long long)arg1;
- (BOOL)hasDefaultValues;
- (id)defaultStopsArray;
- (id)NSGradientForContext:(id)arg1;
- (void)drawAngularGradientInRect:(struct CGRect)arg1 context:(id)arg2 cacheKey:(id)arg3;
- (void)drawRadialFillInRect:(struct CGRect)arg1 gradient:(struct CGGradient *)arg2 context:(id)arg3;
- (void)drawLinearFillInRect:(struct CGRect)arg1 gradient:(struct CGGradient *)arg2 context:(id)arg3;
- (void)drawFillInRect:(struct CGRect)arg1 forBorderThickness:(double)arg2 context:(id)arg3 cacheKey:(id)arg4;
- (id)angularGradientImageInRect:(struct CGRect)arg1 colorSpace:(id)arg2 cache:(id)arg3 cacheKey:(id)arg4;
- (id)interpolatedStartAndStopColorForStops:(id)arg1 colorSpace:(id)arg2;
- (struct CGImage *)newAngularGradientImageInRect:(struct CGRect)arg1 stops:(id)arg2 colorSpace:(id)arg3;
- (id)sortedStops;
- (id)angularGradientImageInRect:(struct CGRect)arg1 colorSpace:(id)arg2;

@end

@interface MSFlowRenderer : MSOverlayRenderer
{
    BOOL _shouldDrawSourceLayerBounds;
    NSArray *_flowParentLayerIDs;
    unsigned long long _flowType;
    NSBezierPath *_flowPath;
    NSBezierPath *_flowClipPath;
    struct CGRect _sourceLayerBounds;
}

@property(retain, nonatomic) NSBezierPath *flowClipPath; // @synthesize flowClipPath=_flowClipPath;
@property(retain, nonatomic) NSBezierPath *flowPath; // @synthesize flowPath=_flowPath;
@property(nonatomic) unsigned long long flowType; // @synthesize flowType=_flowType;
@property(nonatomic) struct CGRect sourceLayerBounds; // @synthesize sourceLayerBounds=_sourceLayerBounds;
@property(nonatomic) BOOL shouldDrawSourceLayerBounds; // @synthesize shouldDrawSourceLayerBounds=_shouldDrawSourceLayerBounds;
@property(copy, nonatomic) NSArray *flowParentLayerIDs; // @synthesize flowParentLayerIDs=_flowParentLayerIDs;
- (void).cxx_destruct;
- (void)drawDotInContext:(id)arg1;
- (void)drawTipInContext:(id)arg1;
- (void)drawLineAndTipInContext:(id)arg1;
- (void)drawRect:(struct CGRect)arg1 context:(id)arg2 selectedLayerIDs:(id)arg3;

@end

@interface MSLayerCachedImage : NSObject
{
    struct CGImage *_image;
    struct CGRect _rect;
}

@property(nonatomic) struct CGImage *image; // @synthesize image=_image;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (void)dealloc;

@end

@interface MSSimpleGridRendererCG : MSGridRendererCG
{
}

- (void)drawLinesInRect:(struct CGRect)arg1 origin:(struct CGPoint)arg2 increment:(double)arg3 interval:(long long)arg4 context:(struct CGContext *)arg5;
- (void)renderGrid:(id)arg1 in:(struct CGRect)arg2 origin:(struct CGPoint)arg3 context:(id)arg4;

@end

@interface MSNullRenderer : NSObject <MSAllRenderers>
{
}

- (void)renderGrid:(id)arg1 in:(struct CGRect)arg2 origin:(struct CGPoint)arg3 context:(id)arg4;
- (void)renderOverlayForPage:(id)arg1 selectedLayers:(id)arg2 selectedArtboard:(id)arg3 options:(unsigned long long)arg4 rect:(struct CGRect)arg5 context:(id)arg6;
- (void)renderBackgroundForPage:(id)arg1 rect:(struct CGRect)arg2 origin:(struct CGPoint)arg3 zoom:(double)arg4 context:(struct CGContext *)arg5;
- (void)renderInnerShadow:(id)arg1 path:(id)arg2 windingRule:(unsigned long long)arg3 context:(id)arg4;
- (void)renderShadow:(id)arg1 rect:(struct CGRect)arg2 context:(id)arg3 block:(CDUnknownBlockType)arg4;
- (void)renderShadow:(id)arg1 path:(id)arg2 cacheObject:(id)arg3 windingRule:(unsigned long long)arg4 options:(id)arg5 type:(unsigned long long)arg6 strokeType:(long long)arg7 fillShouldClip:(BOOL)arg8 lineWidth:(double)arg9 context:(id)arg10;
- (void)renderBackgroundBlurBehindShape:(id)arg1 context:(id)arg2 clippedToPath:(id)arg3;
- (void)renderFill:(id)arg1 path:(id)arg2 layer:(id)arg3 index:(long long)arg4 rect:(struct CGRect)arg5 hasInnerStroke:(BOOL)arg6 context:(id)arg7;
- (void)renderBordersForPath:(id)arg1 style:(id)arg2 rect:(struct CGRect)arg3 context:(id)arg4;
- (void)renderFillsForPath:(id)arg1 style:(id)arg2 layer:(id)arg3 rect:(struct CGRect)arg4 context:(id)arg5;
- (void)renderPath:(id)arg1 layer:(id)arg2 inRect:(struct CGRect)arg3 fallbackColor:(id)arg4 context:(id)arg5;
- (void)renderLayerUncached:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;
- (void)renderLayer:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPNGExporter : MSExporter
{
}

- (id)data;

@end

@interface MSBitmapBackedRendering : NSObject
{
}

+ (id)basicImageForLayer:(id)arg1 context:(id)arg2;
+ (id)imageToCacheForLayer:(id)arg1 context:(id)arg2;

@end

@interface MSRenderingDriverCGDebug : MSRenderingDriverCG
{
}

- (id)setupRendererMap;

@end

@interface MSPerspectiveInstructions : NSObject
{
    struct CGPoint _topLeft;
    struct CGPoint _topRight;
    struct CGPoint _bottomLeft;
    struct CGPoint _bottomRight;
    struct CGRect _rect;
}

@property(nonatomic) struct CGPoint bottomRight; // @synthesize bottomRight=_bottomRight;
@property(nonatomic) struct CGPoint bottomLeft; // @synthesize bottomLeft=_bottomLeft;
@property(nonatomic) struct CGPoint topRight; // @synthesize topRight=_topRight;
@property(nonatomic) struct CGPoint topLeft; // @synthesize topLeft=_topLeft;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (id)applyToImage:(id)arg1;

@end

@interface MSPDFExporter : MSExporter
{
}

- (id)data;

@end

@interface MSNoise : NSObject
{
}

+ (void)drawWithIntensity:(double)arg1 ofType:(long long)arg2 inRect:(struct CGRect)arg3 zoomValue:(double)arg4 context:(struct CGContext *)arg5;
+ (void)drawWithIntensity:(double)arg1 ofType:(long long)arg2 inPath:(id)arg3 windingRule:(unsigned long long)arg4 zoomValue:(double)arg5 context:(struct CGContext *)arg6;

@end

@interface MSCoreImageQueue : NSObject
{
}

+ (double)averageLuminanceOfImage:(struct CGImage *)arg1;
+ (id)imageWithWhiteBackground:(id)arg1;
+ (id)applyEffect:(unsigned long long)arg1 fromSource:(id)arg2 toImage:(struct CGImage *)arg3;
+ (id)cachedImage:(struct CGImage *)arg1 withEffect:(unsigned long long)arg2 fromObject:(id)arg3 colorSpace:(id)arg4;
+ (void)drawImage:(struct CGImage *)arg1 withEffect:(unsigned long long)arg2 inRect:(struct CGRect)arg3 fromObject:(id)arg4 context:(struct CGContext *)arg5 colorSpace:(id)arg6 options:(unsigned long long)arg7;
+ (void)initialize;

@end

@interface MSPageOverlayRendererCGDebug : MSPageOverlayRendererCG
{
    struct CGColor *_coordinateColor;
}

@property(nonatomic) struct CGColor *coordinateColor; // @synthesize coordinateColor=_coordinateColor;
- (void)drawDebugCoordinatesWithZoom:(double)arg1 context:(struct CGContext *)arg2;
- (void)renderOverlayForPage:(id)arg1 selectedLayers:(id)arg2 selectedArtboard:(id)arg3 options:(unsigned long long)arg4 rect:(struct CGRect)arg5 context:(id)arg6;
- (void)renderBackgroundForPage:(id)arg1 rect:(struct CGRect)arg2 origin:(struct CGPoint)arg3 zoom:(double)arg4 context:(struct CGContext *)arg5;
- (void)dealloc;
- (id)initWithTitleFont:(id)arg1;

@end

@interface MSLayerAnnotationsRenderer : MSOptionalRenderer
{
}

- (void)renderLayer:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

@end

@interface MSSliceTrimming : NSObject
{
}

+ (struct CGRect)simpleSafeRectFromLayerAncestry:(id)arg1;
+ (struct CGRect)safeRectForLayerAncestry:(id)arg1;
+ (id)exportRequestFromLayerAncestry:(id)arg1;
+ (struct CGRect)_trimmedRectFromLayerAncestry:(id)arg1;
+ (struct CGRect)trimmedRectForLayerAncestry:(id)arg1;
+ (void)trimSlice:(id)arg1;

@end

@interface MSExporterView : NSView
{
    MSExporter *_renderer;
}

+ (id)exportViewWithRenderer:(id)arg1;
@property(nonatomic) __weak MSExporter *renderer; // @synthesize renderer=_renderer;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSWebPExporter : MSExporter
{
}

+ (void)initialize;
- (id)previewImage;
- (id)data;

@end

@interface MSFillRendererCG : NSObject <MSFillRenderer>
{
}

- (void)drawPatternImageFill:(id)arg1 rect:(struct CGRect)arg2 parentLayerOpacity:(double)arg3 context:(id)arg4;
- (void)drawPatternTiledImageFill:(id)arg1 path:(id)arg2 winding:(unsigned long long)arg3 rect:(struct CGRect)arg4 context:(id)arg5;
- (void)drawPatternFill:(id)arg1 path:(id)arg2 layer:(id)arg3 rect:(struct CGRect)arg4 context:(id)arg5;
- (void)drawNoiseFill:(id)arg1 path:(id)arg2 layer:(id)arg3 rect:(struct CGRect)arg4 context:(id)arg5;
- (void)drawGradientFill:(id)arg1 path:(id)arg2 layer:(id)arg3 hasInnerStroke:(BOOL)arg4 rect:(struct CGRect)arg5 context:(id)arg6;
- (void)drawColorFill:(id)arg1 path:(id)arg2 index:(long long)arg3 hasInnerStroke:(BOOL)arg4 context:(id)arg5;
- (void)renderFill:(id)arg1 path:(id)arg2 layer:(id)arg3 index:(long long)arg4 rect:(struct CGRect)arg5 hasInnerStroke:(BOOL)arg6 context:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSGridRendererCG : NSObject <MSGridRenderer>
{
    struct CGColor *_lightColor;
    struct CGColor *_darkColor;
}

@property(readonly, nonatomic) struct CGColor *darkColor; // @synthesize darkColor=_darkColor;
@property(readonly, nonatomic) struct CGColor *lightColor; // @synthesize lightColor=_lightColor;
- (void)renderGrid:(id)arg1 in:(struct CGRect)arg2 origin:(struct CGPoint)arg3 context:(id)arg4;
- (void)dealloc;
- (id)initWithLightColor:(struct CGColor *)arg1 darkColor:(struct CGColor *)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSRenderingDriverSettings : NSObject
{
    struct CGColor *_gridLightColor;
    struct CGColor *_gridDarkColor;
    struct CGColor *_flowColor;
    struct CGImage *_flowTipImage;
    struct CGImage *_flowBackImage;
    struct CGImage *_flowOtherPageImage;
    unsigned long long _layoutGridStyle;
}

@property(readonly, nonatomic) struct CGColor *gridDarkColor; // @synthesize gridDarkColor=_gridDarkColor;
@property(readonly, nonatomic) struct CGColor *gridLightColor; // @synthesize gridLightColor=_gridLightColor;
@property(readonly, nonatomic) unsigned long long layoutGridStyle; // @synthesize layoutGridStyle=_layoutGridStyle;
- (void)dealloc;
- (struct CGColor *)flowColor;
- (struct CGImage *)flowOtherPageImage;
- (struct CGImage *)flowBackImage;
- (struct CGImage *)flowTipImage;
- (struct CGImage *)createTintedImageFromImage:(struct CGImage *)arg1;
- (id)initWithGridLightColor:(struct CGColor *)arg1 gridDarkColor:(struct CGColor *)arg2 layoutGridStyle:(unsigned long long)arg3 flowColor:(struct CGColor *)arg4 flowTipImage:(struct CGImage *)arg5 flowBackImage:(struct CGImage *)arg6 flowOtherPageImage:(struct CGImage *)arg7;
- (id)init;

@end

@interface MSBackgroundBlurRendererCG : NSObject <MSBackgroundBlurRenderer>
{
}

- (void)renderBackgroundBlurBehindShape:(id)arg1 context:(id)arg2 clippedToPath:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSBitmapRendererCG : MSLayerRendererCG
{
}

- (void)drawImageWithStyle:(id)arg1 layer:(id)arg2 rect:(struct CGRect)arg3 context:(id)arg4;
- (id)imageForLayerWithStyle:(id)arg1 layer:(id)arg2 context:(id)arg3;
- (void)drawImageAndFillsForPath:(id)arg1 style:(id)arg2 layer:(id)arg3 rect:(struct CGRect)arg4 context:(id)arg5;
- (void)drawBitmapLayer:(id)arg1 context:(id)arg2 inRect:(struct CGRect)arg3;
- (void)renderLayerUncached:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

@end

@interface MSRenderingDriverCGProfiling : MSRenderingDriverCG
{
    NSMutableString *_traversalLog;
    NSString *_traversalIndent;
    id <MSProfilingRendererDelegate> _delegate;
}

@property(readonly, nonatomic) id <MSProfilingRendererDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *traversalIndent; // @synthesize traversalIndent=_traversalIndent;
@property(readonly, nonatomic) NSMutableString *traversalLog; // @synthesize traversalLog=_traversalLog;
- (void).cxx_destruct;
- (id)setupRendererMap;
- (id)initWithDelegate:(id)arg1;

@end

@interface MSExportRenderingContext : MSRenderingContext
{
    MSExportRequest *_exportRequest;
}

@property(retain, nonatomic) MSExportRequest *exportRequest; // @synthesize exportRequest=_exportRequest;
- (void).cxx_destruct;
- (BOOL)rendererShouldSkipDrawingLayer:(id)arg1;
- (BOOL)shouldDrawLayer:(id)arg1 withMaskingShapeGroup:(id)arg2 ignoreDrawingArea:(BOOL)arg3;
- (id)initWithName:(id)arg1 driver:(id)arg2 context:(struct CGContext *)arg3 renderingRequest:(id)arg4;

@end

@interface MSRenderingRequest : NSObject
{
    id <MSRenderingContextCacheProvider> _cacheProvider;
    NSColorSpace *_colorSpace;
    MSImmutableDocumentData *_document;
    double _pointScale;
    double _zoomLevel;
    MSImmutableLayer *_backgroundBlurLayer;
    unsigned long long _options;
}

@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property(readonly, nonatomic) MSImmutableLayer *backgroundBlurLayer; // @synthesize backgroundBlurLayer=_backgroundBlurLayer;
@property(readonly, nonatomic) double zoomLevel; // @synthesize zoomLevel=_zoomLevel;
@property(readonly, nonatomic) double pointScale; // @synthesize pointScale=_pointScale;
@property(readonly, nonatomic) MSImmutableDocumentData *document; // @synthesize document=_document;
@property(readonly, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(retain, nonatomic) id <MSRenderingContextCacheProvider> cacheProvider; // @synthesize cacheProvider=_cacheProvider;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long renderingQuality;
@property(readonly, nonatomic) BOOL skipLayerInclusionTests;
@property(readonly, nonatomic) BOOL shouldFlipShadows;
@property(readonly, nonatomic, getter=isPrinting) BOOL printing;
@property(readonly, nonatomic) BOOL includeArtboardBackground;
@property(readonly, nonatomic) BOOL willDrawPixelated;
@property(readonly, nonatomic, getter=isDrawingPixelated) BOOL drawingPixelated;
@property(readonly, nonatomic, getter=isDrawingMask) BOOL drawingMask;
@property(readonly, nonatomic, getter=isExporting) BOOL exporting;
- (id)requestWithBackgroundBlurLayer:(id)arg1;
- (id)requestWithPointScale:(double)arg1;
- (id)requestWithZoomLevel:(double)arg1;
- (id)requestWithOptions:(unsigned long long)arg1;
- (id)initWithDocument:(id)arg1 colorSpace:(id)arg2 pointScale:(double)arg3 zoomLevel:(double)arg4 cacheProvider:(id)arg5 options:(unsigned long long)arg6;
- (id)initWithDocument:(id)arg1 colorSpace:(id)arg2 pointScale:(double)arg3 zoomLevel:(double)arg4 cacheProvider:(id)arg5 backgroundBlurLayer:(id)arg6 options:(unsigned long long)arg7;
- (id)init;

@end

@interface MSRenderingDriver : NSObject
{
    MSRenderingDriverSettings *_settings;
    NSMapTable *_renderers;
}

+ (id)defaultDriver;
@property(retain, nonatomic) NSMapTable *renderers; // @synthesize renderers=_renderers;
@property(readonly, nonatomic) MSRenderingDriverSettings *settings; // @synthesize settings=_settings;
- (void).cxx_destruct;
- (id)contextWithName:(id)arg1 forCGContext:(struct CGContext *)arg2 renderingRequest:(id)arg3;
- (id)contextWithName:(id)arg1 forCGContext:(struct CGContext *)arg2 zoomLevel:(double)arg3 document:(id)arg4;
- (id)rendererForObject:(id)arg1 protocol:(id)arg2;
- (void)addRenderersForSubclasses:(id)arg1;
- (id)setupRendererMap;
- (id)initWithSettings:(id)arg1;
- (struct CGColor *)colorFromDefaultNamed:(id)arg1;
- (id)init;

@end

@interface MSShadowRendererCG : NSObject <MSShadowRenderer>
{
}

- (void)fillAndStrokeShadow:(id)arg1 path:(id)arg2 cacheObject:(id)arg3 windingRule:(unsigned long long)arg4 options:(id)arg5 strokeType:(long long)arg6 lineWidth:(double)arg7 context:(id)arg8;
- (void)strokeShadow:(id)arg1 path:(id)arg2 cacheObject:(id)arg3 strokeType:(long long)arg4 options:(id)arg5 lineWidth:(double)arg6 context:(id)arg7;
- (void)fillShadow:(id)arg1 path:(id)arg2 cacheObject:(id)arg3 windingRule:(unsigned long long)arg4 spread:(double)arg5 context:(id)arg6;
- (void)clipAndTransformForShadow:(id)arg1 forBounds:(struct CGRect)arg2 context:(id)arg3 inBlock:(CDUnknownBlockType)arg4;
- (void)renderInnerShadow:(id)arg1 path:(id)arg2 windingRule:(unsigned long long)arg3 context:(id)arg4;
- (id)pathForFillingAndStrokingShadow:(id)arg1 path:(id)arg2 cacheObject:(id)arg3 spread:(double)arg4 options:(id)arg5 strokeType:(long long)arg6 lineWidth:(double)arg7 context:(id)arg8;
- (id)pathForFilling:(id)arg1 shadow:(id)arg2 cacheObject:(id)arg3 spread:(double)arg4 context:(id)arg5;
- (id)pathForStroking:(id)arg1 cacheObject:(id)arg2 strokeType:(long long)arg3 lineWidth:(double)arg4 context:(id)arg5;
- (void)renderShadow:(id)arg1 rect:(struct CGRect)arg2 context:(id)arg3 block:(CDUnknownBlockType)arg4;
- (void)renderShadow:(id)arg1 path:(id)arg2 cacheObject:(id)arg3 windingRule:(unsigned long long)arg4 options:(id)arg5 type:(unsigned long long)arg6 strokeType:(long long)arg7 fillShouldClip:(BOOL)arg8 lineWidth:(double)arg9 context:(id)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSTransparencyLayerSavedState : NSObject
{
    BOOL _shouldFlip;
    NSGraphicsContext *_graphicsContext;
    struct CGContext *_contextRef;
    NSString *_name;
    struct CGRect _deviceRect;
}

@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) BOOL shouldFlip; // @synthesize shouldFlip=_shouldFlip;
@property(nonatomic) struct CGRect deviceRect; // @synthesize deviceRect=_deviceRect;
@property(nonatomic) struct CGContext *contextRef; // @synthesize contextRef=_contextRef;
@property(retain, nonatomic) NSGraphicsContext *graphicsContext; // @synthesize graphicsContext=_graphicsContext;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface MSRenderingContext : NSObject
{
    BOOL _cancelled;
    BOOL _contextIsVectorBacked;
    int _internalBlendMode;
    MSRenderingRequest *_renderingRequest;
    MSRenderingDriver *_driver;
    NSString *_name;
    struct CGContext *_contextRef;
    MSCGContextPool *_contextPool;
    double _alphaValue;
    NSMutableArray *_bitmapTransparencyLayerSavedStates;
    unsigned long long _disableDrawingFillsCounter;
    unsigned long long _disableClippingFillsCounter;
    NSMutableArray *_parentGroupStack;
    NSMutableArray *_symbolMasterStack;
    NSGraphicsContext *_graphicsContext;
    struct CGContext *_savedContextRef;
    struct CGRect _drawingArea;
    struct CGAffineTransform _rotateFlipTransform;
    struct CGAffineTransform _totalTransform;
}

@property(nonatomic) int internalBlendMode; // @synthesize internalBlendMode=_internalBlendMode;
@property(nonatomic) struct CGContext *savedContextRef; // @synthesize savedContextRef=_savedContextRef;
@property(retain, nonatomic) NSGraphicsContext *graphicsContext; // @synthesize graphicsContext=_graphicsContext;
@property(nonatomic) struct CGAffineTransform totalTransform; // @synthesize totalTransform=_totalTransform;
@property(retain, nonatomic) NSMutableArray *symbolMasterStack; // @synthesize symbolMasterStack=_symbolMasterStack;
@property(nonatomic) struct CGAffineTransform rotateFlipTransform; // @synthesize rotateFlipTransform=_rotateFlipTransform;
@property(retain, nonatomic) NSMutableArray *parentGroupStack; // @synthesize parentGroupStack=_parentGroupStack;
@property(nonatomic) unsigned long long disableClippingFillsCounter; // @synthesize disableClippingFillsCounter=_disableClippingFillsCounter;
@property(nonatomic) unsigned long long disableDrawingFillsCounter; // @synthesize disableDrawingFillsCounter=_disableDrawingFillsCounter;
@property(retain, nonatomic) NSMutableArray *bitmapTransparencyLayerSavedStates; // @synthesize bitmapTransparencyLayerSavedStates=_bitmapTransparencyLayerSavedStates;
@property(nonatomic) double alphaValue; // @synthesize alphaValue=_alphaValue;
@property(retain, nonatomic) MSCGContextPool *contextPool; // @synthesize contextPool=_contextPool;
@property(nonatomic) struct CGContext *contextRef; // @synthesize contextRef=_contextRef;
@property(readonly, nonatomic) BOOL contextIsVectorBacked; // @synthesize contextIsVectorBacked=_contextIsVectorBacked;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) MSRenderingDriver *driver; // @synthesize driver=_driver;
@property(nonatomic) struct CGRect drawingArea; // @synthesize drawingArea=_drawingArea;
@property(nonatomic, getter=isCancelled) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(readonly, nonatomic) MSRenderingRequest *renderingRequest; // @synthesize renderingRequest=_renderingRequest;
- (void).cxx_destruct;
- (BOOL)shouldLog;
- (void)applyShadow:(id)arg1 withXOffset:(double)arg2 respectFlipped:(BOOL)arg3;
- (void)applyShadow:(id)arg1 withXOffset:(double)arg2;
- (void)applyShadow:(id)arg1 respectFlipped:(BOOL)arg2;
- (void)applyShadow:(id)arg1;
- (void)applyStrokeColor:(id)arg1;
- (void)applyFillColor:(id)arg1;
- (BOOL)shouldSkipDrawingShadow:(id)arg1;
- (BOOL)isDrawingSymbol;
- (void)drawSymbolMaster:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (BOOL)canDrawSymbolMasterWithoutRiskingRecursion:(id)arg1;
- (BOOL)shouldDisableSubpixelQuantization;
- (BOOL)allowsSubpixelQuantization;
- (BOOL)allowsSubpixelQuantization:(id)arg1;
- (BOOL)drawingAreaIntersectsLayer:(id)arg1;
- (BOOL)shouldDrawLayer:(id)arg1 withMaskingShapeGroup:(id)arg2 ignoreDrawingArea:(BOOL)arg3;
- (void)clipToRect:(struct CGRect)arg1;
- (BOOL)shouldClipFills;
- (void)doNotClipFillsInBlock:(CDUnknownBlockType)arg1;
- (BOOL)shouldDrawFills;
- (void)ifCondition:(BOOL)arg1 skipDrawingFillsInBlock:(CDUnknownBlockType)arg2;
- (void)applyLayerTransform:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (void)applySettings:(id)arg1 withOptions:(long long)arg2 inBlock:(CDUnknownBlockType)arg3;
- (void)prepareLayerDrawing:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (int)setBlendMode:(int)arg1;
- (double)setAlpha:(double)arg1;
- (double)multiplyAlphaBy:(double)arg1;
- (void)endBitmapTransparencyLayer:(double)arg1;
- (void)endQuartzTransparencyLayer:(double)arg1;
- (void)endTransparencyLayer:(double)arg1;
- (double)beginQuartzTransparencyLayerInRect:(struct CGRect)arg1;
- (double)beginTransparencyLayerInRect:(struct CGRect)arg1 inheritClip:(BOOL)arg2;
- (double)beginTransparencyLayerInRect:(struct CGRect)arg1;
- (double)beginBitmapTransparencyLayerInRect:(struct CGRect)arg1 inheritClip:(BOOL)arg2;
- (double)beginTransparencyLayer;
- (struct CGContext *)newTransparencyLayerContextForContext:(struct CGContext *)arg1 size:(struct CGSize)arg2;
@property(readonly, nonatomic) double zoomLevelForShadows;
- (void)transparencyLayerInRect:(struct CGRect)arg1 inBlock:(CDUnknownBlockType)arg2;
- (void)transparencyLayerInBlock:(CDUnknownBlockType)arg1;
- (void)cancel;
- (long long)depthOfLayer:(id)arg1;
- (BOOL)layer:(id)arg1 isSiblingOfLayer:(id)arg2;
- (id)popParentGroup;
- (void)pushParentGroup:(id)arg1;
- (id)parentGroupForLayer:(id)arg1;
@property(readonly, nonatomic) MSImmutableLayerGroup *rootLayer;
- (void)popGraphicsState;
- (void)pushGraphicsState;
- (struct CGAffineTransform)accumulatedRotateFlipTransform;
- (struct CGAffineTransform)accumulatedTransform;
- (void)concatTransform:(struct CGAffineTransform)arg1;
- (void)setCachedValue:(id)arg1 forModelObject:(id)arg2 key:(id)arg3 zoomIndependent:(BOOL)arg4;
- (id)cachedValueForModelObject:(id)arg1 key:(id)arg2 zoomIndependent:(BOOL)arg3 orCreateWithBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (void)tearDown;
- (void)setupCGContext:(struct CGContext *)arg1 withRenderingRequest:(id)arg2;
- (BOOL)hasGraphicsContext;
- (void)setUp;
- (void)renderRect:(struct CGRect)arg1 withStyle:(id)arg2;
- (void)renderLayer:(id)arg1 ignoreCacheAndDrawingArea:(BOOL)arg2;
- (void)renderInBlock:(CDUnknownBlockType)arg1;
- (id)blurSubContextWithCGContext:(struct CGContext *)arg1 backgroundBlurLayer:(id)arg2 pointScale:(double)arg3 rect:(struct CGRect)arg4;
- (id)subContextWithCGContext:(struct CGContext *)arg1 contextIsVectorBacked:(BOOL)arg2 pointScale:(double)arg3 zoomLevel:(double)arg4 options:(unsigned long long)arg5;
- (id)subContextWithCGContext:(struct CGContext *)arg1 contextIsVectorBacked:(BOOL)arg2 renderingRequest:(id)arg3;
- (id)subContextWithDefaultSettingsForCGContext:(struct CGContext *)arg1 contextIsVectorBacked:(BOOL)arg2 renderingRequest:(id)arg3;
- (id)initWithName:(id)arg1 driver:(id)arg2 cgContext:(struct CGContext *)arg3 contextIsVectorBacked:(BOOL)arg4 renderingRequest:(id)arg5;
- (id)initWithName:(id)arg1 driver:(id)arg2 context:(struct CGContext *)arg3 renderingRequest:(id)arg4;
- (id)init;

@end

@interface MSHighLevelExporter : NSObject
{
    id <MSHighLevelExportDelegate> _delegate;
    MSRenderingDriver *_driver;
}

+ (id)exporterWithDelgate:(id)arg1;
@property(readonly, nonatomic) MSRenderingDriver *driver; // @synthesize driver=_driver;
@property(nonatomic) __weak id <MSHighLevelExportDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)export:(id)arg1 layer:(id)arg2;
- (id)exportRequestsForLayer:(id)arg1 inRect:(struct CGRect)arg2 exportFormats:(id)arg3;
- (BOOL)exportLayers:(id)arg1;
- (BOOL)exportPage:(id)arg1;
- (id)formatsToExport;
- (id)suffixForScale:(double)arg1;
- (struct CGRect)rectToExportForPage:(id)arg1;
- (BOOL)outputFileWithName:(id)arg1 URL:(id *)arg2 existing:(id *)arg3;
- (id)initWithDelegate:(id)arg1 driver:(id)arg2;
- (id)initWithDelegate:(id)arg1;
- (id)init;

@end

@interface MSEPSExporter : MSExporter
{
}

- (id)previewImage;
- (id)data;

@end

@interface MSSymbolRendererCG : MSArtboardRendererCG
{
}

- (void)drawErrorPatternInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)renderArtboard:(id)arg1 forInstance:(id)arg2 influenceBounds:(struct CGRect)arg3 inContext:(id)arg4;
- (void)renderSymbolOrErrorPatternForInstance:(id)arg1 influenceBounds:(struct CGRect)arg2 context:(id)arg3;
- (BOOL)setupTransparencyIfRequiredForInstance:(id)arg1 influenceBounds:(struct CGRect)arg2 context:(id)arg3 previousAlpha:(double *)arg4;
- (void)renderLayerUncached:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

@end

@interface MSPathRendererCG : NSObject <MSPathRenderer>
{
}

- (long long)shadowStrokeTypeForStyle:(id)arg1;
- (unsigned long long)shadowDrawingTypeForStyle:(id)arg1;
- (void)drawInnerShadowsForPath:(id)arg1 style:(id)arg2 layer:(id)arg3 context:(id)arg4;
- (BOOL)shadowFillShouldClipForStyle:(id)arg1;
- (void)drawShadowsForPath:(id)arg1 style:(id)arg2 layer:(id)arg3 context:(id)arg4;
- (void)clipFillsWithPath:(id)arg1 style:(id)arg2 layer:(id)arg3 context:(id)arg4 block:(CDUnknownBlockType)arg5;
- (void)drawFillForPath:(id)arg1 style:(id)arg2 layer:(id)arg3 fallbackColor:(id)arg4 rect:(struct CGRect)arg5 context:(id)arg6;
- (void)renderPath:(id)arg1 layer:(id)arg2 inRect:(struct CGRect)arg3 fallbackColor:(id)arg4 context:(id)arg5;
- (void)renderBordersForPath:(id)arg1 style:(id)arg2 rect:(struct CGRect)arg3 context:(id)arg4;
- (void)renderFillsForPath:(id)arg1 style:(id)arg2 layer:(id)arg3 rect:(struct CGRect)arg4 context:(id)arg5;
- (BOOL)shouldAdvancedClipToAvoidOuterStrokeStrokeBleedForStyle:(id)arg1;
- (BOOL)shouldAdvancedClipToAvoidInnerStrokeBleedForStyle:(id)arg1 layer:(id)arg2;
- (id)clipPathForOuterStrokeForStyle:(id)arg1 path:(id)arg2 context:(id)arg3;
- (void)addClipForPath:(id)arg1 style:(id)arg2 layer:(id)arg3 context:(id)arg4 block:(CDUnknownBlockType)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSCacheManager : NSObject <MSRenderingContextCacheProvider>
{
    BCCache *_renderingCache;
    BCCache *_zoomIndependentCache;
    double _zoomLevelForSharedCache;
}

@property(nonatomic) double zoomLevelForSharedCache; // @synthesize zoomLevelForSharedCache=_zoomLevelForSharedCache;
@property(retain, nonatomic) BCCache *zoomIndependentCache; // @synthesize zoomIndependentCache=_zoomIndependentCache;
@property(retain, nonatomic) BCCache *renderingCache; // @synthesize renderingCache=_renderingCache;
- (void).cxx_destruct;
@property(readonly, nonatomic) BCCache *modelCache;
- (void)clearAllCaches;
- (void)clearCachesExceptForOwners:(id)arg1;
- (id)cacheForZoomLevel:(double)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSFlowRendererCollector : NSObject
{
    MSImmutablePage *_page;
    MSImmutableDocumentData *_document;
    NSMutableArray *_renderers;
    NSSet *_selectedLayerIDs;
    NSDictionary *_artboardsByID;
    BCCache *_cache;
    NSMutableArray *_symbolMasterStack;
    double _zoomLevel;
}

@property(nonatomic) double zoomLevel; // @synthesize zoomLevel=_zoomLevel;
@property(retain, nonatomic) NSMutableArray *symbolMasterStack; // @synthesize symbolMasterStack=_symbolMasterStack;
@property(retain, nonatomic) BCCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) NSDictionary *artboardsByID; // @synthesize artboardsByID=_artboardsByID;
@property(retain, nonatomic) NSSet *selectedLayerIDs; // @synthesize selectedLayerIDs=_selectedLayerIDs;
@property(retain, nonatomic) NSMutableArray *renderers; // @synthesize renderers=_renderers;
@property(retain, nonatomic) MSImmutableDocumentData *document; // @synthesize document=_document;
@property(retain, nonatomic) MSImmutablePage *page; // @synthesize page=_page;
- (void).cxx_destruct;
- (void)pushSymbolMaster:(id)arg1 onStackInBlock:(CDUnknownBlockType)arg2;
- (id)clipPathForFlowFromLayer:(id)arg1 toArtboard:(id)arg2 path:(id)arg3;
- (void)collectFlowForLayer:(id)arg1 mayDrawHotspotBounds:(BOOL)arg2;
- (void)collectFlowForLayer:(id)arg1 ancestors:(id)arg2 options:(unsigned long long)arg3 mayDrawHotspotBounds:(BOOL)arg4;
- (void)recursivelyCollectFlowsForLayer:(id)arg1 ancestors:(id)arg2 options:(unsigned long long)arg3 mayDrawHotspotBounds:(BOOL)arg4;
- (id)collect;
- (id)initWithLayers:(id)arg1 onPage:(id)arg2 document:(id)arg3 zoomLevel:(double)arg4 cache:(id)arg5;

@end

@interface MSTextRendererCG : MSLayerRendererCG
{
}

- (void)drawTextLayer:(id)arg1 onUnderlyingPath:(id)arg2 context:(id)arg3;
- (void)drawBorder:(id)arg1 forLayoutManager:(id)arg2 atPoint:(struct CGPoint)arg3 context:(id)arg4;
- (void)drawLayoutManager:(id)arg1 style:(id)arg2 aPoint:(struct CGPoint)arg3 context:(id)arg4;
- (void)drawTextLayerAsPath:(id)arg1 withTextStorage:(id)arg2 inBounds:(struct CGRect)arg3 context:(id)arg4;
- (void)drawTextLayerInsideBoundsTransform:(id)arg1 context:(id)arg2;
- (void)renderLayerUncached:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

@end

@interface MSTiffExporter : MSExporter
{
}

- (id)data;

@end

@interface MSLayoutGridRendererCG : MSGridRendererCG
{
    unsigned long long _style;
    struct CGColor *_rowColumnColor;
}

@property(nonatomic) struct CGColor *rowColumnColor; // @synthesize rowColumnColor=_rowColumnColor;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
- (void)renderHorizontal:(id)arg1 height:(double)arg2 operation:(CDUnknownBlockType)arg3 context:(struct CGContext *)arg4;
- (void)renderVertical:(id)arg1 height:(double)arg2 operation:(CDUnknownBlockType)arg3 context:(struct CGContext *)arg4;
- (void)renderGrid:(id)arg1 in:(struct CGRect)arg2 origin:(struct CGPoint)arg3 context:(id)arg4;
- (void)dealloc;
- (id)initWithLightColor:(struct CGColor *)arg1 darkColor:(struct CGColor *)arg2 style:(unsigned long long)arg3;
- (id)initWithLightColor:(struct CGColor *)arg1 darkColor:(struct CGColor *)arg2;

@end

@interface MSShapeRendererCG : MSGroupRendererCG
{
}

- (void)renderLayerUncached:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

@end

@interface MSGroupRendererCG : MSLayerRendererCG
{
}

- (void)endMaskWithContext:(id)arg1 oldAlpha:(double)arg2;
- (id)maskImageForShape:(id)arg1 context:(id)arg2 scale:(double)arg3;
- (void)beginAlphaMask:(id)arg1 context:(id)arg2;
- (double)beginMask:(id)arg1 context:(id)arg2;
- (void)renderSubLayer:(id)arg1 skipFills:(BOOL)arg2 ignoreDrawingArea:(BOOL)arg3 maskShapeGroup:(id)arg4 context:(id)arg5;
- (void)renderSubLayersOfGroup:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;
- (void)renderLayerUncached:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

@end

@interface MSTextStoragePool : BCObjectPool <MSFirstLineTypesetterDelegate>
{
    double _baselineAdjustmentForLayoutManager;
}

@property(nonatomic) double baselineAdjustmentForLayoutManager; // @synthesize baselineAdjustmentForLayoutManager=_baselineAdjustmentForLayoutManager;
- (double)baselineAdjustmentForLayoutManager:(id)arg1;
- (void)recycleTextStorage:(id)arg1;
- (id)vendTextStorage;
- (id)initWithTextLayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSOverlayRenderer : NSObject
{
    BOOL _enabled;
    id <MSOverlayRendererDelegate> _delegate;
}

@property(nonatomic) __weak id <MSOverlayRendererDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1 context:(id)arg2;

@end

@interface MSRenderingDriverCG : MSRenderingDriver
{
}

- (id)contextWithName:(id)arg1 forCGContext:(struct CGContext *)arg2 renderingRequest:(id)arg3;
- (id)contextWithName:(id)arg1 forCGContext:(struct CGContext *)arg2 zoomLevel:(double)arg3 document:(id)arg4;
- (void)addGridRenderersToMap:(id)arg1;
- (void)addSimpleRenderersToMap:(id)arg1;
- (id)setupRendererMap;

@end

@interface MSCGContextWrapper : NSObject
{
    struct CGContext *_contextRef;
}

+ (id)wrapperWithContext:(struct CGContext *)arg1;
@property(readonly, nonatomic) struct CGContext *contextRef; // @synthesize contextRef=_contextRef;
- (void)dealloc;
- (id)initWithContextRef:(struct CGContext *)arg1;

@end

@interface MSCGContextPool : BCObjectPool
{
    struct CGColorSpace *_colorSpace;
    struct CGSize _contextSize;
}

@property(nonatomic) struct CGSize contextSize; // @synthesize contextSize=_contextSize;
@property(nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
- (void)recycleContext:(struct CGContext *)arg1;
- (struct CGContext *)vendOrCreateContextOfSize:(struct CGSize)arg1;
- (BOOL)vendsSize:(struct CGSize)arg1 colorSpace:(struct CGColorSpace *)arg2;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 colorSpace:(struct CGColorSpace *)arg2;

@end

@interface MSArtboardRendererCG : MSGroupRendererCG
{
}

- (void)renderSubLayersOfGroup:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3 isDrawingAsSymbolInstance:(BOOL)arg4;
- (void)renderSubLayersOfGroup:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

@end

@interface MSProfilingRenderer : NSObject <MSAllRenderers>
{
    BOOL _isGroup;
    id <MSRenderer> _baseRenderer;
    id <MSProfilingRendererDelegate> _profilingDelegate;
    NSString *_label;
}

@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
@property(readonly, nonatomic) BOOL isGroup; // @synthesize isGroup=_isGroup;
@property(readonly, nonatomic) id <MSProfilingRendererDelegate> profilingDelegate; // @synthesize profilingDelegate=_profilingDelegate;
@property(readonly, nonatomic) id <MSRenderer> baseRenderer; // @synthesize baseRenderer=_baseRenderer;
- (void).cxx_destruct;
- (void)forwardInvocation:(id)arg1;
- (id)initWithBaseRenderer:(id)arg1 profilingDelegate:(id)arg2 isGroup:(BOOL)arg3 label:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSPageOverlayRendererCG : NSObject <MSPageOverlayRenderer>
{
    NSFont *_titleFont;
    MSArtboardShadow *_normalShadow;
    MSArtboardShadow *_selectedShadow;
    struct CGColor *_activeTitleColor;
    struct CGColor *_symbolTitleColor;
    struct CGColor *_pixelLineColor;
    struct CGColor *_sliceColor;
}

@property(nonatomic) struct CGColor *sliceColor; // @synthesize sliceColor=_sliceColor;
@property(nonatomic) struct CGColor *pixelLineColor; // @synthesize pixelLineColor=_pixelLineColor;
@property(nonatomic) struct CGColor *symbolTitleColor; // @synthesize symbolTitleColor=_symbolTitleColor;
@property(nonatomic) struct CGColor *activeTitleColor; // @synthesize activeTitleColor=_activeTitleColor;
@property(retain, nonatomic) MSArtboardShadow *selectedShadow; // @synthesize selectedShadow=_selectedShadow;
@property(retain, nonatomic) MSArtboardShadow *normalShadow; // @synthesize normalShadow=_normalShadow;
@property(readonly, nonatomic) NSFont *titleFont; // @synthesize titleFont=_titleFont;
- (void).cxx_destruct;
- (void)renderOverlayForPage:(id)arg1 selectedLayers:(id)arg2 selectedArtboard:(id)arg3 options:(unsigned long long)arg4 rect:(struct CGRect)arg5 context:(id)arg6;
- (void)renderBackgroundForPage:(id)arg1 rect:(struct CGRect)arg2 origin:(struct CGPoint)arg3 zoom:(double)arg4 context:(struct CGContext *)arg5;
- (void)drawTitlesForArtboards:(id)arg1 rect:(struct CGRect)arg2 context:(id)arg3;
- (void)drawGridForGroup:(id)arg1 rect:(struct CGRect)arg2 context:(id)arg3;
- (void)drawPixelLinesInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)drawSliceOutline:(id)arg1 zoom:(double)arg2 ancestors:(id)arg3 context:(struct CGContext *)arg4;
- (void)drawSlicesOutlineForGroup:(id)arg1 selectedLayers:(id)arg2 inRect:(struct CGRect)arg3 zoom:(double)arg4 ancestors:(id)arg5 options:(unsigned long long)arg6 context:(struct CGContext *)arg7;
- (void)drawSlicesOutlineForGroup:(id)arg1 selectedLayers:(id)arg2 inRect:(struct CGRect)arg3 options:(unsigned long long)arg4 context:(id)arg5;
- (void)dealloc;
- (id)initWithTitleFont:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSExporter : NSObject <MSRenderingContextCacheProvider>
{
    BOOL _isPrinting;
    BOOL _allowSubpixelAntialiasing;
    MSExportRequest *_request;
    MSRenderingDriver *_driver;
    NSColorSpace *_colorSpace;
    BCCache *_cache;
    struct CGRect _bounds;
}

+ (id)exporterForRequest:(id)arg1 colorSpace:(id)arg2 driver:(id)arg3;
+ (id)exporterForRequest:(id)arg1 colorSpace:(id)arg2;
+ (void)registerExporterClass:(Class)arg1 forFormat:(id)arg2;
+ (void)initialize;
@property(nonatomic) BOOL allowSubpixelAntialiasing; // @synthesize allowSubpixelAntialiasing=_allowSubpixelAntialiasing;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(retain, nonatomic) BCCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(retain, nonatomic) MSRenderingDriver *driver; // @synthesize driver=_driver;
@property(nonatomic) BOOL isPrinting; // @synthesize isPrinting=_isPrinting;
@property(retain, nonatomic) MSExportRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (BOOL)exportToFileURL:(id)arg1;
- (id)cacheForZoomLevel:(double)arg1;
@property(readonly, nonatomic) BCCache *zoomIndependentCache;
- (void)drawRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;
- (void)drawSliceBackgroundIfNecessary:(struct CGContext *)arg1;
- (id)previewImage;
- (id)bitmapImageRep;
- (id)basicBitmapImageRep;
- (void)draw:(struct CGContext *)arg1;
- (id)image;
- (id)data;
- (struct CGRect)boundsForVectorRender;
- (id)initWithRequest:(id)arg1 colorSpace:(id)arg2 driver:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSExportRequest : NSObject <NSCopying>
{
    BOOL _shouldTrim;
    BOOL _saveForWeb;
    BOOL _progressive;
    BOOL _interlaced;
    BOOL _includeArtboardBackground;
    NSString *_name;
    unsigned long long _options;
    NSSet *_includedLayerIDs;
    double _scale;
    MSImmutableColor *_backgroundColor;
    MSImmutableLayer *_rootLayer;
    MSImmutableDocumentData *_immutableDocument;
    NSString *_format;
    double _compression;
    struct CGRect _rect;
}

+ (id)exportRequestFromLayerAncestry:(id)arg1 exportFormat:(id)arg2 inRect:(struct CGRect)arg3;
+ (id)exportRequestsFromLayerAncestry:(id)arg1 exportFormats:(id)arg2 inRect:(struct CGRect)arg3;
+ (id)exportRequestsFromLayerAncestry:(id)arg1 exportFormats:(id)arg2;
+ (id)exportRequestsFromLayerAncestry:(id)arg1 inRect:(struct CGRect)arg2;
+ (id)exportRequestsFromLayerAncestry:(id)arg1;
+ (id)exportRequestFromExportFormat:(id)arg1 layer:(id)arg2 inRect:(struct CGRect)arg3 useIDForName:(BOOL)arg4;
+ (id)exportRequestsFromExportableLayer:(id)arg1 exportFormats:(id)arg2 inRect:(struct CGRect)arg3 useIDForName:(BOOL)arg4;
+ (id)exportRequestsFromExportableLayer:(id)arg1 inRect:(struct CGRect)arg2 useIDForName:(BOOL)arg3;
+ (id)exportRequestsFromExportableLayer:(id)arg1 exportFormats:(id)arg2 useIDForName:(BOOL)arg3;
+ (id)exportRequestsFromExportableLayer:(id)arg1 useIDForName:(BOOL)arg2;
+ (id)exportRequestsFromExportableLayer:(id)arg1;
@property(nonatomic) BOOL includeArtboardBackground; // @synthesize includeArtboardBackground=_includeArtboardBackground;
@property(nonatomic) BOOL interlaced; // @synthesize interlaced=_interlaced;
@property(nonatomic) BOOL progressive; // @synthesize progressive=_progressive;
@property(nonatomic) double compression; // @synthesize compression=_compression;
@property(nonatomic) BOOL saveForWeb; // @synthesize saveForWeb=_saveForWeb;
@property(copy, nonatomic) NSString *format; // @synthesize format=_format;
@property(retain, nonatomic) MSImmutableDocumentData *immutableDocument; // @synthesize immutableDocument=_immutableDocument;
@property(retain, nonatomic) MSImmutableLayer *rootLayer; // @synthesize rootLayer=_rootLayer;
@property(copy, nonatomic) MSImmutableColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) BOOL shouldTrim; // @synthesize shouldTrim=_shouldTrim;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(copy, nonatomic) NSSet *includedLayerIDs; // @synthesize includedLayerIDs=_includedLayerIDs;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)objectIDsForSelfAncestorsAndChildrenOfAncestry:(id)arg1;
- (void)configureForLayerAncestry:(id)arg1 layerOptions:(unsigned long long)arg2 includedIDs:(id)arg3;
- (void)setNameFromID:(id)arg1 exportFormat:(id)arg2;
- (void)readSettingsFromDefaults;
@property(readonly, nonatomic) NSString *pasteboardType;
- (void)configureForLayer:(id)arg1 layerOptions:(unsigned long long)arg2 includedIDs:(id)arg3;

@end

@interface MSLayerRendererCG : NSObject <MSLayerRenderer>
{
}

- (void)renderLayerUncached:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;
- (void)drawCachedImage:(id)arg1 layer:(id)arg2 context:(id)arg3;
- (id)cachedImageForLayer:(id)arg1 inContext:(id)arg2;
- (void)renderLayer:(id)arg1 ignoreDrawingArea:(BOOL)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSOptionalRenderer : MSNullRenderer
{
    id _baseRenderer;
    NSString *_disableSetting;
}

@property(retain, nonatomic) NSString *disableSetting; // @synthesize disableSetting=_disableSetting;
@property(retain, nonatomic) id baseRenderer; // @synthesize baseRenderer=_baseRenderer;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL enabled;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)initWithBaseRenderer:(id)arg1 disableSetting:(id)arg2;

@end

@interface MSArtboardShadow : NSObject
{
    struct CGImage *_topLeftCorner;
    struct CGImage *_topRightCorner;
    struct CGImage *_bottomLeftCorner;
    struct CGImage *_bottomRightCorner;
    struct CGImage *_leftEdge;
    struct CGImage *_rightEdge;
    struct CGImage *_topEdge;
    struct CGImage *_bottomEdge;
}

@property(nonatomic) struct CGImage *bottomEdge; // @synthesize bottomEdge=_bottomEdge;
@property(nonatomic) struct CGImage *topEdge; // @synthesize topEdge=_topEdge;
@property(nonatomic) struct CGImage *rightEdge; // @synthesize rightEdge=_rightEdge;
@property(nonatomic) struct CGImage *leftEdge; // @synthesize leftEdge=_leftEdge;
@property(nonatomic) struct CGImage *bottomRightCorner; // @synthesize bottomRightCorner=_bottomRightCorner;
@property(nonatomic) struct CGImage *bottomLeftCorner; // @synthesize bottomLeftCorner=_bottomLeftCorner;
@property(nonatomic) struct CGImage *topRightCorner; // @synthesize topRightCorner=_topRightCorner;
@property(nonatomic) struct CGImage *topLeftCorner; // @synthesize topLeftCorner=_topLeftCorner;
- (void)drawInRect:(struct CGRect)arg1 context:(id)arg2;
- (struct CGImage *)createEdgeFromImage:(id)arg1 at:(double)arg2 axis:(unsigned long long)arg3;
- (struct CGImage *)createCornerFromImage:(id)arg1 at:(struct CGPoint)arg2;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface MSSelfContainedHighLevelExporter : MSHighLevelExporter <MSHighLevelExportDelegate>
{
    NSMutableString *_output;
    NSMutableArray *_errors;
    NSDictionary *_options;
    NSMutableDictionary *_infoRecord;
    NSMutableArray *_infoStack;
}

@property(retain, nonatomic) NSMutableArray *infoStack; // @synthesize infoStack=_infoStack;
@property(retain, nonatomic) NSMutableDictionary *infoRecord; // @synthesize infoRecord=_infoRecord;
@property(retain, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(retain, nonatomic) NSMutableArray *errors; // @synthesize errors=_errors;
@property(retain, nonatomic) NSMutableString *output; // @synthesize output=_output;
- (void).cxx_destruct;
- (void)outputErrorWithDomain:(id)arg1 code:(unsigned long long)arg2 info:(id)arg3 format:(id)arg4;
- (void)outputError:(id)arg1;
- (void)closeInfoGroup;
- (void)openInfoGroupWithKey:(id)arg1;
- (void)outputInfo:(id)arg1 withKey:(id)arg2;
- (void)outputFormat:(id)arg1;
@property(readonly, nonatomic) NSDictionary *results;
- (id)urlOptionForKey:(id)arg1 defaultingToWorkingDirectory:(BOOL)arg2;
- (double)doubleOptionForKey:(id)arg1;
- (BOOL)boolOptionForKey:(id)arg1;
- (id)stringOptionForKey:(id)arg1;
- (id)arrayOptionForKey:(id)arg1 separator:(id)arg2;
- (id)optionForKey:(id)arg1;
- (id)initWithOptions:(id)arg1 driver:(id)arg2;
- (id)initWithOptions:(id)arg1;
- (id)initWithDelegate:(id)arg1 driver:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSJPGExporter : MSExporter
{
}

- (id)data;

@end

@interface MSPDFPage : NSObject
{
    struct CGPDFPage *_pageRef;
    struct CGSize _size;
}

@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) struct CGPDFPage *pageRef; // @synthesize pageRef=_pageRef;
- (void)dealloc;
- (id)initWithPDFData:(id)arg1;

@end

@interface _SVGMask : SVGGroupElement
{
    NSSet *_masking;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSSet *masking; // @synthesize masking=_masking;
- (void).cxx_destruct;
- (void)primitiveRemoveMaskingObject:(id)arg1;
- (void)primitiveAddMaskingObject:(id)arg1;
- (void)removeMaskingObject:(id)arg1;
- (void)addMaskingObject:(id)arg1;

@end

@interface _SVGSymbolElement : SVGGroupElement
{
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;

@end

@interface SVGImporter : NSObject
{
    Class _defaultElementClass;
    NSDictionary *_elementClasses;
    SVGRootElement *_root;
    NSString *_source;
    NSMutableDictionary *_references;
    NSDictionary *_styles;
    NSURL *_url;
    unsigned long long _drawableElementCount;
    NSString *_svgNamespacePrefix;
}

@property(copy, nonatomic) NSString *svgNamespacePrefix; // @synthesize svgNamespacePrefix=_svgNamespacePrefix;
@property(nonatomic) unsigned long long drawableElementCount; // @synthesize drawableElementCount=_drawableElementCount;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSDictionary *styles; // @synthesize styles=_styles;
@property(retain, nonatomic) NSMutableDictionary *references; // @synthesize references=_references;
@property(retain, nonatomic) NSString *source; // @synthesize source=_source;
@property(retain, nonatomic) SVGRootElement *root; // @synthesize root=_root;
@property(retain, nonatomic) NSDictionary *elementClasses; // @synthesize elementClasses=_elementClasses;
@property(nonatomic) Class defaultElementClass; // @synthesize defaultElementClass=_defaultElementClass;
- (void).cxx_destruct;
@property(readonly, nonatomic) double documentHeight;
@property(readonly, nonatomic) double documentWidth;
- (id)styleAttributesForElement:(id)arg1 defaults:(id)arg2;
- (void)registerStylesheet:(id)arg1;
- (void)addedDrawableElement:(id)arg1;
- (id)relativeURLForLink:(id)arg1;
- (void)processReferences:(id)arg1 withElement:(id)arg2;
- (void)addReferenceToIdentifier:(id)arg1 type:(id)arg2 target:(id)arg3 property:(id)arg4;
- (void)registerElementWithIdentifier:(id)arg1 type:(id)arg2 element:(id)arg3;
- (id)referenceEntriesForType:(id)arg1;
- (id)elementOfType:(id)arg1 xml:(id)arg2 parent:(id)arg3;
- (void)processFile;
- (id)importObjectGraph;
- (id)initWithXMLString:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithURL:(id)arg1;

@end

@interface SVGRectangleShape : _SVGRectangleShape
{
}

- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (void)processSelf:(id)arg1;

@end

@interface SVGStyle : SVGElement
{
}

+ (id)elementOfType:(id)arg1 xml:(id)arg2 importer:(id)arg3 parent:(id)arg4;

@end

@interface SVGImage : _SVGImage
{
}

+ (void)initialize;
- (void)applyEffectsToLayer:(id)arg1;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (void)processSelf:(id)arg1;

@end

@interface SVGText : _SVGText
{
}

+ (id)styleDefaults;
- (void)applyEffectsToLayer:(id)arg1;
- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (id)svgAttributesDescription;
- (id)name;
- (void)processSelf:(id)arg1;
- (BOOL)containsDrawables;
- (double)doubleValueFromXML:(id)arg1 attributeWithName:(id)arg2 orParent:(id)arg3;

@end

@interface _SVGRootElement : SVGGroupElement
{
    double _height;
    double _width;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) double height; // @synthesize height=_height;

@end

@interface SVGMask : _SVGMask
{
}

- (BOOL)containsDrawables;
- (void)resolvedValue:(id)arg1 forProperty:(id)arg2;
- (void)processSelf:(id)arg1;

@end

@interface SVGBasicShape : _SVGBasicShape
{
}

- (id)shapeGroupForLayer:(id)arg1;

@end

@interface SVGRootElement : _SVGRootElement
{
}

- (void)processSelf:(id)arg1;

@end

@interface _SVGImage : SVGDrawableElement
{
    NSImage *_image;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;

@end

@interface SVGGradient : _SVGGradient
{
}

- (id)stopsElements;
- (id)svgAttributesDescription;
- (struct CGPoint)to;
- (struct CGPoint)from;
- (void)setupLinearGradientWithXML:(id)arg1;
- (void)setupRadialGradientWithXML:(id)arg1;
- (void)processSelf:(id)arg1;

@end

@interface SVGGradientStop : _SVGGradientStop
{
}

+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (void)processSelf:(id)arg1;

@end

@interface MSSVGOffset : MSSVGfeFilterPrimitive
{
}

+ (id)elementName;

// Remaining properties
@property(nonatomic) double dx; // @dynamic dx;
@property(nonatomic) double dy; // @dynamic dy;
@property(copy, nonatomic) NSString *in; // @dynamic in;

@end

@interface SVGSymbolElement : _SVGSymbolElement
{
}

@end

@interface _SVGText : SVGDrawableElement
{
    BOOL _adjustSpacingAndGlyphs;
    short _anchor;
    double _dx;
    double _dy;
    double _length;
    double _rotate;
    NSString *_text;
    double _x;
    double _y;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double y; // @synthesize y=_y;
@property(nonatomic) double x; // @synthesize x=_x;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) double rotate; // @synthesize rotate=_rotate;
@property(nonatomic) double length; // @synthesize length=_length;
@property(nonatomic) double dy; // @synthesize dy=_dy;
@property(nonatomic) double dx; // @synthesize dx=_dx;
@property(nonatomic) short anchor; // @synthesize anchor=_anchor;
@property(nonatomic) BOOL adjustSpacingAndGlyphs; // @synthesize adjustSpacingAndGlyphs=_adjustSpacingAndGlyphs;
- (void).cxx_destruct;

@end

@interface MSSVGColorMatrix : MSSVGfeFilterPrimitive
{
}

+ (id)colorMatrixForColor:(id)arg1;
+ (id)elementName;

// Remaining properties
@property(copy, nonatomic) NSString *in; // @dynamic in;
@property(copy, nonatomic) NSString *type; // @dynamic type;
@property(copy, nonatomic) NSString *values; // @dynamic values;

@end

@interface _SVGStroke : SVGElement
{
    SVGGradient *_gradient;
    NSSet *_usedBy;
    MSImmutableColor *_color;
    NSArray *_dashes;
    NSString *_linecap;
    NSString *_linejoin;
    double _width;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double width; // @synthesize width=_width;
@property(retain, nonatomic) NSString *linejoin; // @synthesize linejoin=_linejoin;
@property(retain, nonatomic) NSString *linecap; // @synthesize linecap=_linecap;
@property(retain, nonatomic) NSArray *dashes; // @synthesize dashes=_dashes;
@property(retain, nonatomic) MSImmutableColor *color; // @synthesize color=_color;
@property(retain, nonatomic) NSSet *usedBy; // @synthesize usedBy=_usedBy;
@property(retain, nonatomic) SVGGradient *gradient; // @synthesize gradient=_gradient;
- (void).cxx_destruct;
- (void)primitiveRemoveUsedByObject:(id)arg1;
- (void)primitiveAddUsedByObject:(id)arg1;
- (void)removeUsedByObject:(id)arg1;
- (void)addUsedByObject:(id)arg1;
- (void)primitiveSetGradient:(id)arg1;

@end

@interface _SVGEllipseShape : SVGBasicShape
{
    double _cx;
    double _cy;
    double _rx;
    double _ry;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double ry; // @synthesize ry=_ry;
@property(nonatomic) double rx; // @synthesize rx=_rx;
@property(nonatomic) double cy; // @synthesize cy=_cy;
@property(nonatomic) double cx; // @synthesize cx=_cx;

@end

@interface _SVGFill : SVGElement
{
    SVGGradient *_gradient;
    NSSet *_usedBy;
    MSImmutableColor *_color;
    double _opacity;
    NSString *_windingrule;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSString *windingrule; // @synthesize windingrule=_windingrule;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(retain, nonatomic) MSImmutableColor *color; // @synthesize color=_color;
@property(retain, nonatomic) NSSet *usedBy; // @synthesize usedBy=_usedBy;
@property(retain, nonatomic) SVGGradient *gradient; // @synthesize gradient=_gradient;
- (void).cxx_destruct;
- (void)primitiveRemoveUsedByObject:(id)arg1;
- (void)primitiveAddUsedByObject:(id)arg1;
- (void)removeUsedByObject:(id)arg1;
- (void)addUsedByObject:(id)arg1;
- (void)primitiveSetGradient:(id)arg1;

@end

@interface SVGTextSpan : NSObject
{
    NSString *_text;
    NSDictionary *_attributes;
    struct CGRect _rect;
}

@property(retain, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;

@end

@interface SVGPathShape : _SVGPathShape
{
}

- (void)nameLayer:(id)arg1;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (id)svgAttributesDescription;
- (void)processSelf:(id)arg1;
- (void)processPath:(id)arg1;

@end

@interface _SVGGradient : SVGElement
{
    BOOL _absolute;
    BOOL _radial;
    NSSet *_linkedFrom;
    SVGGradient *_linkedTo;
    NSSet *_usedByFills;
    NSSet *_usedByStrokes;
    double _fromX;
    double _fromY;
    double _toX;
    double _toY;
    NSAffineTransform *_transform;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSAffineTransform *transform; // @synthesize transform=_transform;
@property(nonatomic) double toY; // @synthesize toY=_toY;
@property(nonatomic) double toX; // @synthesize toX=_toX;
@property(nonatomic) BOOL radial; // @synthesize radial=_radial;
@property(nonatomic) double fromY; // @synthesize fromY=_fromY;
@property(nonatomic) double fromX; // @synthesize fromX=_fromX;
@property(nonatomic) BOOL absolute; // @synthesize absolute=_absolute;
@property(retain, nonatomic) NSSet *usedByStrokes; // @synthesize usedByStrokes=_usedByStrokes;
@property(retain, nonatomic) NSSet *usedByFills; // @synthesize usedByFills=_usedByFills;
@property(retain, nonatomic) SVGGradient *linkedTo; // @synthesize linkedTo=_linkedTo;
@property(retain, nonatomic) NSSet *linkedFrom; // @synthesize linkedFrom=_linkedFrom;
- (void).cxx_destruct;
- (void)primitiveRemoveUsedByStrokesObject:(id)arg1;
- (void)primitiveAddUsedByStrokesObject:(id)arg1;
- (void)removeUsedByStrokesObject:(id)arg1;
- (void)addUsedByStrokesObject:(id)arg1;
- (void)primitiveRemoveUsedByFillsObject:(id)arg1;
- (void)primitiveAddUsedByFillsObject:(id)arg1;
- (void)removeUsedByFillsObject:(id)arg1;
- (void)addUsedByFillsObject:(id)arg1;
- (void)primitiveSetLinkedTo:(id)arg1;
- (void)primitiveRemoveLinkedFromObject:(id)arg1;
- (void)primitiveAddLinkedFromObject:(id)arg1;
- (void)removeLinkedFromObject:(id)arg1;
- (void)addLinkedFromObject:(id)arg1;

@end

@interface MSXMLElementWrapper : NSObject
{
    NSXMLElement *_element;
}

+ (BOOL)resolveInstanceMethod:(SEL)arg1;
+ (id)element;
+ (id)elementName;
@property(retain, nonatomic) NSXMLElement *element; // @synthesize element=_element;
- (void).cxx_destruct;
- (void)addChildWrapper:(id)arg1;
- (void)addChild:(id)arg1;
- (id)href;
- (void)setHref:(id)arg1;
- (void)setAttributeFloat:(double)arg1 forKey:(id)arg2;
- (double)attributeFloatForKey:(id)arg1;
- (void)setAttributeString:(id)arg1 forKey:(id)arg2;
- (id)attributeStringForKey:(id)arg1;
- (id)svgAttributeNameForKey:(id)arg1;
- (id)initWithElement:(id)arg1;
- (id)initWithName:(id)arg1;
- (id)init;

// Remaining properties
@property(copy, nonatomic) NSString *style; // @dynamic style;
@property(copy, nonatomic) NSString *svgClass; // @dynamic svgClass;
@property(copy, nonatomic) NSString *svgId; // @dynamic svgId;

@end

@interface SVGCircleShape : _SVGCircleShape
{
}

- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (void)processSelf:(id)arg1;

@end

@interface _SVGBasicShape : SVGDrawableElement
{
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;

@end

@interface SVGLineShape : _SVGLineShape
{
}

- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (void)processSelf:(id)arg1;

@end

@interface SVGPolygonShape : _SVGPolygonShape
{
}

- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (void)processPath:(id)arg1;

@end

@interface MSSVGFilter : MSXMLElementWrapper
{
    MSSVGMerge *_finalMerge;
}

+ (id)filter;
+ (id)elementName;
@property(retain, nonatomic) MSSVGMerge *finalMerge; // @synthesize finalMerge=_finalMerge;
- (void).cxx_destruct;
- (void)close;
- (void)addFilterOutput:(id)arg1;
- (void)addFilterItem:(id)arg1;
@property(copy, nonatomic) NSString *href; // @dynamic href;
- (void)dealloc;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(copy, nonatomic) NSString *filterRes; // @dynamic filterRes;
@property(copy, nonatomic) NSString *filterUnits; // @dynamic filterUnits;
@property(copy, nonatomic) NSString *height; // @dynamic height;
@property(copy, nonatomic) NSString *primitiveUnits; // @dynamic primitiveUnits;
@property(copy, nonatomic) NSString *width; // @dynamic width;
@property(copy, nonatomic) NSString *x; // @dynamic x;
@property(copy, nonatomic) NSString *y; // @dynamic y;

@end

@interface DataProtocol : NSURLProtocol
{
}

+ (id)dataFromLink:(id)arg1 type:(id *)arg2 encoding:(id *)arg3;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)canInitWithRequest:(id)arg1;
- (void)stopLoading;
- (void)startLoading;

@end

@interface MSSVGUseWrapper : MSXMLElementWrapper
{
}


// Remaining properties
@property(copy, nonatomic) NSString *externalResourcesRequired; // @dynamic externalResourcesRequired;
@property(copy, nonatomic) NSString *height; // @dynamic height;
@property(copy, nonatomic) NSString *href; // @dynamic href;
@property(copy, nonatomic) NSString *transform; // @dynamic transform;
@property(copy, nonatomic) NSString *width; // @dynamic width;
@property(copy, nonatomic) NSString *x; // @dynamic x;
@property(copy, nonatomic) NSString *y; // @dynamic y;
@end

@interface SVGEllipseShape : _SVGEllipseShape
{
}

- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (void)processSelf:(id)arg1;

@end

@interface _SVGDrawableElement : SVGElement
{
    BOOL _clips;
    BOOL _hidden;
    SVGClipPath *_clip;
    SVGFill *_fill;
    SVGFont *_font;
    SVGMask *_mask;
    SVGStroke *_stroke;
    NSString *_blendMode;
    double _opacity;
    NSAffineTransform *_transform;
    struct CGRect _rect;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSAffineTransform *transform; // @synthesize transform=_transform;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) BOOL hidden; // @synthesize hidden=_hidden;
@property(nonatomic) BOOL clips; // @synthesize clips=_clips;
@property(retain, nonatomic) NSString *blendMode; // @synthesize blendMode=_blendMode;
@property(retain, nonatomic) SVGStroke *stroke; // @synthesize stroke=_stroke;
@property(retain, nonatomic) SVGMask *mask; // @synthesize mask=_mask;
@property(retain, nonatomic) SVGFont *font; // @synthesize font=_font;
@property(retain, nonatomic) SVGFill *fill; // @synthesize fill=_fill;
@property(retain, nonatomic) SVGClipPath *clip; // @synthesize clip=_clip;
- (void).cxx_destruct;
- (void)primitiveSetStroke:(id)arg1;
- (void)primitiveSetMask:(id)arg1;
- (void)primitiveSetFont:(id)arg1;
- (void)primitiveSetFill:(id)arg1;
- (void)primitiveSetClip:(id)arg1;

@end

@interface SVGFill : _SVGFill
{
}

+ (id)fillForXML:(id)arg1 element:(id)arg2 parent:(id)arg3;
+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (void)setupFromString:(id)arg1 opacity:(id)arg2;

@end

@interface MSSVGImageWrapper : MSXMLElementWrapper
{
}


// Remaining properties
@property(copy, nonatomic) NSString *externalResourcesRequired; // @dynamic externalResourcesRequired;
@property(copy, nonatomic) NSString *height; // @dynamic height;
@property(copy, nonatomic) NSString *href; // @dynamic href;
@property(copy, nonatomic) NSString *preserveAspectRatio; // @dynamic preserveAspectRatio;
@property(copy, nonatomic) NSString *transform; // @dynamic transform;
@property(copy, nonatomic) NSString *width; // @dynamic width;
@property(copy, nonatomic) NSString *x; // @dynamic x;
@property(copy, nonatomic) NSString *y; // @dynamic y;
@end

@interface SVGStroke : _SVGStroke
{
}

+ (id)strokeForXML:(id)arg1 element:(id)arg2 parent:(id)arg3;
+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (void)setupFromString:(id)arg1 opacity:(id)arg2;

@end

@interface _SVGFont : SVGElement
{
    NSSet *_usedBy;
    NSString *_family;
    double _size;
    NSString *_style;
    NSString *_variant;
    double _weight;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double weight; // @synthesize weight=_weight;
@property(retain, nonatomic) NSString *variant; // @synthesize variant=_variant;
@property(retain, nonatomic) NSString *style; // @synthesize style=_style;
@property(nonatomic) double size; // @synthesize size=_size;
@property(retain, nonatomic) NSString *family; // @synthesize family=_family;
@property(retain, nonatomic) NSSet *usedBy; // @synthesize usedBy=_usedBy;
- (void).cxx_destruct;
- (void)primitiveRemoveUsedByObject:(id)arg1;
- (void)primitiveAddUsedByObject:(id)arg1;
- (void)removeUsedByObject:(id)arg1;
- (void)addUsedByObject:(id)arg1;

@end

@interface SketchSVGExporter : NSObject
{
    NSString *_mask;
    NSString *_currentShapeDef;
    MSImmutableDocumentData *_document;
    MSSVGFilter *_currentFilterGroup;
    MSImmutableSymbolInstance *_currentSymbolInstance;
    NSXMLDocument *_doc;
    NSXMLElement *_defs;
    NSXMLElement *_root;
    NSMutableDictionary *_gradients;
    unsigned long long _nextUniqueID;
    NSMutableArray *_parentStack;
    NSSet *_includedLayerIDs;
    struct CGRect _exportBounds;
}

@property(readonly, nonatomic) NSSet *includedLayerIDs; // @synthesize includedLayerIDs=_includedLayerIDs;
@property(readonly, nonatomic) NSMutableArray *parentStack; // @synthesize parentStack=_parentStack;
@property(nonatomic) unsigned long long nextUniqueID; // @synthesize nextUniqueID=_nextUniqueID;
@property(readonly, nonatomic) NSMutableDictionary *gradients; // @synthesize gradients=_gradients;
@property(readonly, nonatomic) NSXMLElement *root; // @synthesize root=_root;
@property(readonly, nonatomic) NSXMLElement *defs; // @synthesize defs=_defs;
@property(readonly, nonatomic) NSXMLDocument *doc; // @synthesize doc=_doc;
@property(retain, nonatomic) MSImmutableSymbolInstance *currentSymbolInstance; // @synthesize currentSymbolInstance=_currentSymbolInstance;
@property(retain, nonatomic) MSSVGFilter *currentFilterGroup; // @synthesize currentFilterGroup=_currentFilterGroup;
@property(retain, nonatomic) MSImmutableDocumentData *document; // @synthesize document=_document;
@property(retain, nonatomic) NSString *currentShapeDef; // @synthesize currentShapeDef=_currentShapeDef;
@property(retain, nonatomic) NSString *mask; // @synthesize mask=_mask;
@property(readonly, nonatomic) struct CGRect exportBounds; // @synthesize exportBounds=_exportBounds;
- (void).cxx_destruct;
- (BOOL)layerIsIncluded:(id)arg1;
- (BOOL)isDrawingSymbol;
- (void)drawSymbolInstance:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (void)performWithParent:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)popParent;
- (void)pushParent:(id)arg1;
- (id)parentForLayer:(id)arg1;
- (id)ancestorsForLayer:(id)arg1;
- (id)radialGradientAttributes:(id)arg1 inRect:(id)arg2;
- (id)linearGradientAttributes:(id)arg1;
- (id)stopsForGradient:(id)arg1;
- (id)gradientElement:(id)arg1 inRect:(id)arg2;
- (void)addGradient:(id)arg1 inRect:(id)arg2;
- (id)hashForGradient:(id)arg1 inRect:(id)arg2;
- (BOOL)endFilterGroup;
- (id)beginFilterGroup;
- (id)addDefinitionWithWithName:(id)arg1 children:(id)arg2 attributes:(id)arg3;
- (id)uniqueIDForElementWithName:(id)arg1;
- (void)setDescription:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)description;
- (id)exportLayers:(id)arg1;
- (id)initWithName:(id)arg1 exportRequest:(id)arg2;
- (id)initWithImmutableDocument:(id)arg1 exportRect:(struct CGRect)arg2 layerIDs:(id)arg3;
- (id)init;
- (void)setupCommonElementsWithName:(id)arg1;
- (void)setRootSVGElementAttributes;

@end

@interface SVGPathScanner : NSObject
{
    NSScanner *_scanner;
    NSCharacterSet *_number;
    NSString *_commandBuffer;
    unsigned long long _commandPosition;
}

@property(nonatomic) unsigned long long commandPosition; // @synthesize commandPosition=_commandPosition;
@property(retain, nonatomic) NSString *commandBuffer; // @synthesize commandBuffer=_commandBuffer;
@property(retain, nonatomic) NSCharacterSet *number; // @synthesize number=_number;
@property(retain, nonatomic) NSScanner *scanner; // @synthesize scanner=_scanner;
- (void).cxx_destruct;
- (double)nextFloat;
- (BOOL)nextCommand;
- (id)initWithString:(id)arg1;

@end

@interface _SVGCircleShape : SVGBasicShape
{
    double _cx;
    double _cy;
    double _r;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double r; // @synthesize r=_r;
@property(nonatomic) double cy; // @synthesize cy=_cy;
@property(nonatomic) double cx; // @synthesize cx=_cx;

@end

@interface MSSVGfeFilterPrimitive : MSXMLElementWrapper
{
}

+ (id)filter;

// Remaining properties
@property(copy, nonatomic) NSString *result; // @dynamic result;

@end

@interface SVGTitle : SVGElement
{
}

+ (id)elementOfType:(id)arg1 xml:(id)arg2 importer:(id)arg3 parent:(id)arg4;

@end

@interface SVGDescription : SVGElement
{
}

+ (id)elementOfType:(id)arg1 xml:(id)arg2 importer:(id)arg3 parent:(id)arg4;

@end

@interface MSSVGMerge : MSSVGfeFilterPrimitive
{
}

+ (id)elementName;
- (void)addMergeNodeNamed:(id)arg1;

@end

@interface SVGTransformImporter : NSObject
{
}

+ (id)matrixTransformFromComponents:(id)arg1;
+ (id)rotateTransformFromComponents:(id)arg1;
+ (id)scaleTransformFromComponents:(id)arg1;
+ (id)translateTransformFromComponents:(id)arg1;
+ (id)transformFromName:(id)arg1 components:(id)arg2;
+ (id)transformFromString:(id)arg1;

@end

@interface MSSVGMorphology : MSSVGfeFilterPrimitive
{
}

+ (id)elementName;

// Remaining properties
@property(copy, nonatomic) NSString *in; // @dynamic in;
@property(copy, nonatomic) NSString *operator; // @dynamic operator;
@property(nonatomic) double radius; // @dynamic radius;

@end

@interface SVGElement : _SVGElement
{
    NSXMLElement *_xml;
    SVGImporter *_importer;
}

+ (id)elementOfType:(id)arg1 xml:(id)arg2 importer:(id)arg3 parent:(id)arg4;
@property(retain, nonatomic) SVGImporter *importer; // @synthesize importer=_importer;
@property(retain, nonatomic) NSXMLElement *xml; // @synthesize xml=_xml;
- (void).cxx_destruct;
- (id)makeLayerWithParentLayer:(id)arg1 progress:(CDUnknownBlockType)arg2;
- (id)adjustOwnLayer:(id)arg1 parentLayer:(id)arg2;
- (void)nameLayer:(id)arg1;
@property(readonly, nonatomic) NSString *effectiveLayerName;
- (void)adjustSizeForChildrenOfLayer:(id)arg1;
- (void)makeChildLayersWithParentLayer:(id)arg1 progress:(CDUnknownBlockType)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (BOOL)isDescendantOf:(id)arg1;
- (id)styleAttributesForElement:(id)arg1 defaults:(id)arg2;
- (id)relativeURLForLink:(id)arg1;
- (void)resolvedValue:(id)arg1 forProperty:(id)arg2;
- (id)clippingParent;
- (id)drawableParent;
- (BOOL)containsDrawables;
- (id)name;
- (void)addReferenceToIdentifier:(id)arg1 type:(id)arg2 property:(id)arg3;
- (id)svgAttributesDescription;
- (id)svgDescription;
- (id)elementOfType:(id)arg1 xml:(id)arg2 parent:(id)arg3;
- (void)processStyles:(id)arg1;
- (void)processStyles;
- (void)process;
- (void)processChildren:(id)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)processChildren:(id)arg1;
- (unsigned long long)processChild:(id)arg1 index:(unsigned long long)arg2;
- (void)processIdentifier:(id)arg1;
- (void)processSelf:(id)arg1;
- (id)initWithImporter:(id)arg1 xml:(id)arg2;

@end

@interface MSSVGComposite : MSSVGfeFilterPrimitive
{
}

+ (id)elementName;

// Remaining properties
@property(copy, nonatomic) NSString *in; // @dynamic in;
@property(copy, nonatomic) NSString *in2; // @dynamic in2;
@property(nonatomic) double k1; // @dynamic k1;
@property(nonatomic) double k2; // @dynamic k2;
@property(nonatomic) double k3; // @dynamic k3;
@property(nonatomic) double k4; // @dynamic k4;
@property(copy, nonatomic) NSString *operator; // @dynamic operator;

@end

@interface SVGCSSParser : NSObject
{
}

+ (id)mergeStylesheet:(id)arg1 withExisting:(id)arg2;
+ (id)dictionaryByMergingStyles:(id)arg1 into:(id)arg2 forKey:(id)arg3;
+ (id)parseCSSAttributeList:(id)arg1;

@end

@interface SVGPathInterpreter : NSObject
{
    BOOL _lastCommand;
    struct CGPoint _lastPoint;
    struct CGPoint _lastControl;
}

+ (id)bezierPathFromPoints:(id)arg1;
+ (id)bezierPathFromCommands:(id)arg1 isPathClosed:(char *)arg2;
@property(nonatomic) BOOL lastCommand; // @synthesize lastCommand=_lastCommand;
@property(nonatomic) struct CGPoint lastControl; // @synthesize lastControl=_lastControl;
@property(nonatomic) struct CGPoint lastPoint; // @synthesize lastPoint=_lastPoint;
- (void)appendAComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendaComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendvComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendhComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendVComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendHComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendTComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendtComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendQComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendqComponents:(id)arg1 toBezierPath:(id)arg2;
- (struct CGPoint)lastControlReflectedQuadratic;
- (void)appendSComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendsComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendsComponents:(id)arg1 toBezierPath:(id)arg2 lastPoint:(struct CGPoint)arg3;
- (void)appendCComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendcComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendcComponents:(id)arg1 toBezierPath:(id)arg2 lastPoint:(struct CGPoint)arg3;
- (struct CGPoint)lastControlReflectedCubic;
- (struct CGPoint)lastControlPointReflectedForPreviousCommandIn:(const char *)arg1;
- (struct CGPoint)reflectLastControlPoint;
- (void)appendCurveQuadPoint1:(struct CGPoint)arg1 quadPoint2:(struct CGPoint)arg2 toBezierPath:(id)arg3;
- (void)appendlComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendmComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendLComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendMComponents:(id)arg1 toBezierPath:(id)arg2;
- (id)bezierPathFromCommands:(id)arg1 isPathClosed:(char *)arg2;
- (id)bezierPathFromPoints:(id)arg1;

@end

@interface MSSVGMergeNode : MSXMLElementWrapper
{
}

+ (id)mergeNodeNamed:(id)arg1;
+ (id)elementName;

// Remaining properties
@property(copy, nonatomic) NSString *in; // @dynamic in;

@end

@interface MSSVGGaussianBlur : MSSVGfeFilterPrimitive
{
}

+ (id)elementName;

// Remaining properties
@property(copy, nonatomic) NSString *in; // @dynamic in;
@property(copy, nonatomic) NSString *stdDeviation; // @dynamic stdDeviation;

@end

@interface SVGLink : _SVGLink
{
}

- (id)effectiveLayerName;
- (void)resolvedValue:(id)arg1 forProperty:(id)arg2;
- (void)processSelf:(id)arg1;
- (id)clippingParent;

@end

@interface SVGDrawableElement : _SVGDrawableElement
{
    NSXMLElement *_deferredClipping;
}

+ (id)styleDefaults;
@property(retain, nonatomic) NSXMLElement *deferredClipping; // @synthesize deferredClipping=_deferredClipping;
- (void).cxx_destruct;
- (id)gradientFromSVGGradient:(id)arg1 layer:(id)arg2;
- (void)applyEffectsToLayer:(id)arg1;
- (void)applyScaling:(double)arg1 recursivelyToStyleOfLayer:(id)arg2 parentStyle:(id)arg3;
- (void)applyTransform:(id)arg1 toLayer:(id)arg2;
- (void)resizeLayer:(id)arg1 withoutContraintsToRect:(struct CGRect)arg2;
- (void)adjustSizeForChildrenOfLayer:(id)arg1;
- (id)adjustOwnLayer:(id)arg1 parentLayer:(id)arg2;
- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)emptyLayerWithParentLayer:(id)arg1;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (id)makeLayerGroupWithParentLayer:(id)arg1;
- (id)makeLayerWithParentLayer:(id)arg1 progress:(CDUnknownBlockType)arg2;
- (id)drawableParent;
- (BOOL)containsDrawables;
- (BOOL)dontCollapse;
- (id)svgAttributesDescription;
- (void)processStyles:(id)arg1 parent:(id)arg2;
- (void)processClipping:(id)arg1 parent:(id)arg2;
- (unsigned long long)processChild:(id)arg1 index:(unsigned long long)arg2;
- (void)processDeferredClippingAtIndex:(unsigned long long)arg1;
- (void)processStyles:(id)arg1;
- (void)processSelf:(id)arg1;
- (id)initWithImporter:(id)arg1 xml:(id)arg2;

@end

@interface SVGClipPath : _SVGClipPath
{
}

- (BOOL)dontCollapse;
- (BOOL)containsDrawables;

@end

@interface MSSVGBlendMode : NSObject
{
}

+ (id)svgFromSketchBlendMode:(long long)arg1;
+ (long long)sketchBlendModeFromSVG:(id)arg1;
+ (void)initialize;

@end

@interface SVGFont : _SVGFont
{
}

+ (id)fontForXML:(id)arg1 element:(id)arg2 parent:(id)arg3;
+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (id)representedFont;

@end

@interface _SVGRectangleShape : SVGBasicShape
{
    double _cornerRadius;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;

@end

@interface _SVGLineShape : SVGBasicShape
{
    double _x1;
    double _x2;
    double _y1;
    double _y2;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double y2; // @synthesize y2=_y2;
@property(nonatomic) double y1; // @synthesize y1=_y1;
@property(nonatomic) double x2; // @synthesize x2=_x2;
@property(nonatomic) double x1; // @synthesize x1=_x1;

@end

@interface MSExportRendererWithSVGSupport : MSExporter
{
}

- (id)previewImage;
- (id)data;

@end

@interface SVGGroupElement : _SVGGroupElement
{
}

- (BOOL)containsDrawables;
- (id)svgAttributesDescription;

@end

@interface _SVGClipPath : SVGGroupElement
{
    NSSet *_clipping;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSSet *clipping; // @synthesize clipping=_clipping;
- (void).cxx_destruct;
- (void)primitiveRemoveClippingObject:(id)arg1;
- (void)primitiveAddClippingObject:(id)arg1;
- (void)removeClippingObject:(id)arg1;
- (void)addClippingObject:(id)arg1;

@end

@interface _SVGGradientStop : SVGElement
{
    MSImmutableColor *_color;
    double _position;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double position; // @synthesize position=_position;
@property(retain, nonatomic) MSImmutableColor *color; // @synthesize color=_color;
- (void).cxx_destruct;

@end

@interface _SVGPathShape : SVGDrawableElement
{
    BOOL _closed;
    NSBezierPath *_path;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSBezierPath *path; // @synthesize path=_path;
@property(nonatomic) BOOL closed; // @synthesize closed=_closed;
- (void).cxx_destruct;

@end

@interface _SVGLink : SVGDrawableElement
{
    SVGElement *_link;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) SVGElement *link; // @synthesize link=_link;
- (void).cxx_destruct;
- (void)primitiveSetLink:(id)arg1;

@end

@interface _SVGElement : NSObject
{
    NSSet *_children;
    NSSet *_linked;
    SVGElement *_parent;
    NSString *_desc;
    NSString *_identifier;
    long long _index;
    NSString *_title;
    NSString *_type;
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) long long index; // @synthesize index=_index;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSString *desc; // @synthesize desc=_desc;
@property(retain, nonatomic) SVGElement *parent; // @synthesize parent=_parent;
@property(retain, nonatomic) NSSet *linked; // @synthesize linked=_linked;
@property(retain, nonatomic) NSSet *children; // @synthesize children=_children;
- (void).cxx_destruct;
- (void)primitiveSetParent:(id)arg1;
- (void)primitiveRemoveLinkedObject:(id)arg1;
- (void)primitiveAddLinkedObject:(id)arg1;
- (void)removeLinkedObject:(id)arg1;
- (void)addLinkedObject:(id)arg1;
- (void)primitiveRemoveChildrenObject:(id)arg1;
- (void)primitiveAddChildrenObject:(id)arg1;
- (void)removeChildrenObject:(id)arg1;
- (void)addChildrenObject:(id)arg1;

@end

@interface MSSVGPatternWrapper : MSXMLElementWrapper
{
}


// Remaining properties
@property(copy, nonatomic) NSString *height; // @dynamic height;
@property(copy, nonatomic) NSString *href; // @dynamic href;
@property(copy, nonatomic) NSString *patternContentUnits; // @dynamic patternContentUnits;
@property(copy, nonatomic) NSString *patternTransform; // @dynamic patternTransform;
@property(copy, nonatomic) NSString *patternUnits; // @dynamic patternUnits;
@property(copy, nonatomic) NSString *preserveAspectRatio; // @dynamic preserveAspectRatio;
@property(copy, nonatomic) NSString *width; // @dynamic width;
@property(copy, nonatomic) NSString *x; // @dynamic x;
@property(copy, nonatomic) NSString *y; // @dynamic y;
@end

@interface _SVGGroupElement : SVGDrawableElement
{
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;

@end

@interface _SVGPolygonShape : SVGPathShape
{
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;

@end

@interface BCCrypto : NSObject
{
}

@end

@interface NSArray (Mapping)
- (id)smk_map:(CDUnknownBlockType)arg1;
@end

@interface NSOrderedSet (Mapping)
- (id)smk_map:(CDUnknownBlockType)arg1;
@end

@interface NSDictionary (Manifest)
- (struct CGPoint)pointForXKey:(id)arg1 yKey:(id)arg2;
- (struct CGSize)sizeForWidthKey:(id)arg1 heightKey:(id)arg2;
- (id)objectForKey:(id)arg1 ofType:(Class)arg2;
@end

@interface NSNetService (SMKWebConnection)
+ (id)addressStringWithData:(id)arg1;
@property(readonly, nonatomic) NSArray *addressStrings;
@end

@interface NSBezierPath (Simplify)
- (id)fb_simplify:(double)arg1;
@end

@interface NSBezierPath (FitCurve)
- (id)fb_fitCurve:(double)arg1;
@end

@interface NSBezierPath (FitCurvePrivate)
- (struct CGPoint)fb_computeCenterTangentAtIndex:(unsigned long long)arg1;
- (struct CGPoint)fb_computeRightTangentAtIndex:(unsigned long long)arg1;
- (struct CGPoint)fb_computeLeftTangentAtIndex:(unsigned long long)arg1;
- (id)fb_estimateParametersUsingChordLengthMethodInRange:(struct _NSRange)arg1;
- (id)fb_fitBezierInRange:(struct _NSRange)arg1 withParameters:(id)arg2 leftTangent:(struct CGPoint)arg3 rightTangent:(struct CGPoint)arg4;
- (id)fb_fitBezierUsingNaiveMethodInRange:(struct _NSRange)arg1 leftTangent:(struct CGPoint)arg2 rightTangent:(struct CGPoint)arg3;
- (double)fb_findMaximumErrorForBezier:(id)arg1 inRange:(struct _NSRange)arg2 parameters:(id)arg3 maximumIndex:(unsigned long long *)arg4;
- (id)fb_refineParameters:(id)arg1 forRange:(struct _NSRange)arg2 bezier:(id)arg3;
- (id)fb_fitCubicToRange:(struct _NSRange)arg1 leftTangent:(struct CGPoint)arg2 rightTangent:(struct CGPoint)arg3 errorThreshold:(double)arg4;
@end

@interface NSBezierPath (FBUtilities)
- (void)fb_appendElement:(struct NSBezierElement)arg1;
- (void)fb_appendPath:(id)arg1;
- (void)fb_copyAttributesFrom:(id)arg1;
- (id)fb_subpathWithRange:(struct _NSRange)arg1;
- (struct NSBezierElement)fb_elementAtIndex:(unsigned long long)arg1;
- (struct CGPoint)fb_pointAtIndex:(unsigned long long)arg1;
@end

@interface NSBezierPath (Boolean)
- (id)fb_xor:(id)arg1;
- (id)fb_difference:(id)arg1;
- (id)fb_intersect:(id)arg1;
- (id)fb_union:(id)arg1;
@end

@interface NSDocumentController (Enumeration)
+ (void)enumerateOpenDocuments:(CDUnknownBlockType)arg1;
@end

@interface SCKObject (Representable)
@property(readonly, nonatomic) NSString *localizedUpdatedTimeComponentsString;
@end

@interface NSView (Block_Animation)
- (void)animateToFrameOriginX:(long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)animateToFrameOrigin:(struct CGPoint)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)animateToFrameOriginX:(long long)arg1;
@end

@interface NSView (NextKeyViewSupport)
@property(readonly, nonatomic) BOOL canBeKeyView;
@end

@interface NSSlider (NextKeyViewSupport)
- (BOOL)canBeKeyView;
@end

@interface NSButton (NextKeyViewSupport)
- (BOOL)canBeKeyView;
@end

@interface NSTextField (NextKeyViewSupport)
- (BOOL)canBeKeyView;
@end

@interface NSCursor (NSCursorResizeExtensions)
+ (id)rotateBottomCursor;
+ (id)rotateTopCursor;
+ (id)rotateRightCursor;
+ (id)rotateLeftCursor;
+ (id)rotateTopRightCursor;
+ (id)rotateTopLeftCursor;
+ (id)rotateBottomLeftCursor;
+ (id)rotateBottomRightCursor;
+ (id)resizeBottomLeftToTopRightCursor;
+ (id)resizeTopLeftToBottomRightCursor;
+ (id)resizeVerCursor;
+ (id)resizeHorCursor;
+ (id)pencilCursor;
+ (id)penCloseCursor;
+ (id)penAddCursor;
+ (id)penCursor;
+ (id)cursorWithName:(id)arg1 hotSpot:(struct CGPoint)arg2;
@end

@interface NSViewController (MSInspectorController)
- (id)inspectorController;
@end

@interface NSView (InspectorStackViewFinding)
- (id)enclosingStackView;
@end

@interface SCKEnvironment (Representable)
@property(readonly, nonatomic) NSString *suffixRepresentation;
@end

@interface NSViewController (MSNormalInspector)
- (void)reloadInspectorStack:(id)arg1;
@end

@interface NSView (PopoverDismissal)
- (BOOL)clickShouldDismissPopover:(id)arg1;
@end

@interface NSTextView (PopoverDismissal)
- (BOOL)clickShouldDismissPopover:(id)arg1;
@end

@interface NSControl (PopoverDismissal)
- (BOOL)clickShouldDismissPopover:(id)arg1;
@end

@interface NSTextField (PopoverDismissal)
- (BOOL)clickShouldDismissPopover:(id)arg1;
@end

@interface NSView (Separator)
- (BOOL)wantsSeparator;
- (BOOL)wantsSeparatorBetweenSelfAndView:(id)arg1;
@end

@interface NSBezierPath (EPS)
+ (id)bezierPathFromEPSString:(id)arg1;
+ (id)epsStringByTrimmingHeaderAndFooter:(id)arg1;
@end

@interface NSColorPanel (NSColorPanelSetColor)
- (void)setColorWithoutNotifying:(id)arg1;
- (BOOL)shouldIgnoreNonInteractiveChangeColorMessage;
- (BOOL)shouldIgnoreChangeColorMessage;
@end

@interface NSView (History)
- (id)viewHistoryMaker;
@end

@interface NSImage (WebP)
+ (id)imageWithWebPURL:(id)arg1;
+ (id)imageWithWebPData:(id)arg1;
@end

@interface NSAffineTransform (CHAffineTransform_Additions)
+ (id)transformFromStruct:(struct _CHTransformStruct)arg1 aroundPoint:(struct CGPoint)arg2 inPlace:(BOOL)arg3;
+ (id)transformFromStruct:(struct _CHTransformStruct)arg1 aroundPoint:(struct CGPoint)arg2;
+ (id)rotationTransformWithDegrees:(double)arg1 aroundPoint:(struct CGPoint)arg2;
+ (id)transformWithOffset:(struct CGPoint)arg1;
+ (id)transformByScaling:(double)arg1;
+ (id)transformByTranslatingXBy:(double)arg1 yBy:(double)arg2;
@property(readonly, nonatomic) BOOL includesFlip;
@property(readonly, nonatomic) double determinant;
- (struct CGAffineTransform)CGAffineTransform;
- (id)invertedTransform;
- (void)transactionWithBlock:(CDUnknownBlockType)arg1;
- (void)rotateWithDegrees:(double)arg1 aroundPoint:(struct CGPoint)arg2;
- (void)translateByOffset:(struct CGPoint)arg1;
@end

@interface NSViewController (Chocolat)
- (void)ensureLoaded;
- (id)rootViewController;
- (id)targetViewControllerForAction:(SEL)arg1 sender:(id)arg2;
@end

@interface NSApplication (CHApplicationAdditions)
- (BOOL)isActiveApplication;
- (id)applicationBuild;
- (id)applicationVersion;
- (id)applicationName;
@end

@interface NSScreen (MSRetina)
+ (double)highestBackingScale_bc;
+ (BOOL)isOnRetinaScreen;
- (BOOL)isOnRetinaScreen;
@end

@interface NSColor (CHColorExtensions)
+ (id)colorWithGray:(float)arg1 alpha:(float)arg2;
+ (id)colorWithGray:(float)arg1;
- (id)replacementObjectForJSONEncoder:(id)arg1;
- (id)coderSafeVersion_bc;
- (id)safeColorUsingColorSpaceName_bc:(id)arg1;
- (id)safeColorUsingColorSpace_bc:(id)arg1;
- (id)safeColorForColorSpaceConversion_bc;
- (BOOL)isWhite;
- (BOOL)fuzzyIsEqual:(id)arg1;
- (struct CGColor *)newCGColor;
@end

@interface NSCursor (CHCursorExtensions)
+ (id)cursorWithImageNamed:(id)arg1 hotSpot:(struct CGPoint)arg2;
+ (id)cursorWithImageNamed:(id)arg1;
@end

@interface NSOutlineView (Chocolat)
- (void)collapseAllItems;
- (void)expandAllItems;
- (void)restoreSimpleExpandedState;
- (void)saveSimpleExpandedState;
- (id)ms_titleForRow:(unsigned long long)arg1;
- (unsigned long long)ms_rowForTitle:(id)arg1;
- (void)setSimpleExpandedState:(id)arg1;
- (id)simpleExpandedState;
@end

@interface NSBitmapImageRep (CHBitmapRepAdditions)
+ (id)bitmapImageRepWithSize:(struct CGSize)arg1 flags:(unsigned long long)arg2 colorSpace:(id)arg3 drawingBlock:(CDUnknownBlockType)arg4;
- (BOOL)hasTransparentPixels;
- (id)bitSafeBitmapImageRep;
- (id)bitmapImageRepByFlippingVertical;
- (id)bitmapImageRepByCroppingToRect:(struct CGRect)arg1;
- (struct CGRect)bitSafeFastRectForTrimming:(char *)arg1;
- (struct CGRect)bitSafeFastRectForTrimming;
- (struct CGRect)rectForTrimming:(char *)arg1;
- (struct CGRect)rectForTrimming;
- (id)PNGRepresentationWithInterlaced:(BOOL)arg1 includeAlpha:(BOOL)arg2;
- (id)PNGRepresentationWithInterlaced:(BOOL)arg1;
- (id)JPGRepresentationWithCompression:(double)arg1 progressive:(BOOL)arg2;
@end

@interface NSColorSpace (Chocolat)
+ (id)RGBColorSpaceNamed:(id)arg1;
@end

@interface NSFileManager (Chocolat)
- (id)visibleSubpathsOfDirectoryWithoutGoingIntoPackages:(id)arg1;
- (id)visibleSubpathsOfDirectoryAtURLWithoutGoingIntoPackages:(id)arg1;
@end

@interface CIImage (CHCIImageAdditions)
- (id)imageByFlippingVertically;
- (id)PNGRepresentationWithInterlaced:(BOOL)arg1;
@end

@interface NSMenu (CHMenuAdditions)
- (void)showPopUpMenuForEvent:(id)arg1 relativeToRect:(struct CGRect)arg2 ofView:(id)arg3 deferred:(BOOL)arg4;
- (void)showPopUpMenuForEvent:(id)arg1 relativeToRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)replaceMenuItem:(id)arg1 withMenuItem_ms:(id)arg2;
- (id)replaceItemWithAction:(SEL)arg1 withMenuItem_ms:(id)arg2;
- (void)addItemsFromArray:(id)arg1;
- (void)insertItemsFromArray:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)isInMainMenu;
- (id)addItemWithTitle:(id)arg1 font:(id)arg2 target:(id)arg3 action:(SEL)arg4;
- (id)addSmallItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)addSmallItalicItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 imageNamed:(id)arg4;
- (id)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 submenu:(id)arg4;
- (id)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 representedObject:(id)arg4;
- (id)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)addItemWithTitle:(id)arg1 small:(BOOL)arg2 target:(id)arg3 action:(SEL)arg4;
- (id)addItemWithTitle:(id)arg1 action:(SEL)arg2;
@end

@interface NSMenuItem (CHMenuItemAdditions)
+ (id)menuItemWithTruncatedTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
+ (id)itemWithTitle:(id)arg1 small:(BOOL)arg2 target:(id)arg3 action:(SEL)arg4;
+ (id)itemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
+ (id)itemWithTitle:(id)arg1 action:(SEL)arg2;
- (BOOL)isInMainMenu;
@end

@interface NSMenu (NSMenu_Blocks)
+ (id)menuWithItems:(id)arg1;
@end

@interface NSObject (Chocolat)
- (id)coderSafeVersion_bc;
@end

@interface NSObject (NSObjectAddObservers)
- (void)removeObserver:(id)arg1 forKeyPaths:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPaths:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
@end

@interface NSImage (Chocolat)
+ (id)pngDataByFixingInvalidGamma:(id)arg1;
+ (id)pngDataByInvertingGammaInData:(id)arg1;
+ (id)PDFImageWithSize:(struct CGSize)arg1 flipped:(BOOL)arg2 drawingHandler:(CDUnknownBlockType)arg3;
- (id)imageWithShadow:(id)arg1 size:(struct CGSize)arg2;
- (struct CGSize)pixelSize;
- (BOOL)isImageSizeLargerThan:(struct CGSize)arg1;
- (id)imageWithPadding:(unsigned long long)arg1;
- (BOOL)isVectorImage;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 fraction:(double)arg3 respectFlipped:(BOOL)arg4 colorSpace:(id)arg5;
- (id)bitSafeBitmapImageRep;
- (id)firstBitmapImageRep;
- (id)firstBitmapImageRepOfScale:(double)arg1;
- (id)firstBitmapImageRepOrCreateIfNecessary;
- (void)drawFlippedAtPoint:(struct CGPoint)arg1 fraction:(double)arg2;
- (void)drawFlippedAtPoint:(struct CGPoint)arg1;
- (id)highlightImage;
- (id)altImage;
- (id)pressedImage;
- (id)hoverImage;
- (id)selectedImage;
- (void)drawProportionallyInRect:(struct CGRect)arg1 operation:(unsigned long long)arg2 fraction:(double)arg3;
- (id)scaledImageToSize:(struct CGSize)arg1;
- (void)drawInRect:(struct CGRect)arg1 fraction:(double)arg2;
- (void)drawAtPoint:(struct CGPoint)arg1 fraction:(double)arg2;
- (void)drawAtPoint:(struct CGPoint)arg1;
@end

@interface NSImage (NSImageBlocksDrawing)
+ (id)drawImageFlipped:(BOOL)arg1 withSize:(struct CGSize)arg2 withBlock:(CDUnknownBlockType)arg3;
+ (id)drawImageFlippedWithSize:(struct CGSize)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (id)drawImageWithSize:(struct CGSize)arg1 withBlock:(CDUnknownBlockType)arg2;
@end

@interface NSToolbar (CHToolbarExtensions)
- (id)itemWithIdentifier:(id)arg1;
@end

@interface NSCell (Chocolat)
- (long long)inheritedBackgroundStyle;
@end

@interface NSAlert (Chocolat)
+ (void)runConfirmationSheetWithLocalizedStrings:(id)arg1 format:(id)arg2 withSuppressionButton:(BOOL)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (void)runConfirmationSheetWithLocalizedStrings:(id)arg1 withSuppressionButton:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (void)runConfirmationSheetWithLocalizedStrings:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
+ (void)runSheetWithMessage:(id)arg1 info:(id)arg2;
+ (long long)runModalSessionWithMessage:(id)arg1 info:(id)arg2 buttons:(id)arg3;
+ (long long)runModalWithMessage:(id)arg1 info:(id)arg2 buttons:(id)arg3;
+ (long long)runModalWithMessage:(id)arg1 info:(id)arg2;
+ (id)alertWithMessage:(id)arg1 info:(id)arg2 buttons:(id)arg3;
@end

@interface NSView (MSDropableView)
- (void)updateDraggingItemsForDrag:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)defaultDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
@property(nonatomic) __weak NSObject<MSDropableViewDelegate> *dropDelegate_bc;
@end

@interface NSView (CHViewAdditions)
- (id)containingAncestorViewOfClass:(Class)arg1;
@property(readonly, nonatomic) NSArray *allSubviews;
- (void)beginDragFromEvent:(id)arg1 image:(id)arg2 writersBlock:(CDUnknownBlockType)arg3;
- (void)beginDragFromEvent:(id)arg1 image:(id)arg2 type:(id)arg3 data:(id)arg4;
- (id)imageRepresentation;
- (void)setNeedsDisplay;
- (void)setFrameOriginY:(double)arg1;
- (void)setFrameOriginX:(double)arg1;
- (void)setFrameWidth:(double)arg1;
- (void)setFrameHeight:(double)arg1;
@end

@interface NSWorkspace (CHWorkspaceAdditions)
- (id)applicationSupportDirectoryWithSubDirectory:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)applicationSupportDirectory;
- (void)setApplicationSupportDirectory:(id)arg1;
- (id)sharedApplicationSupportDirectory;
- (id)applicationSupportDirectoryName;
@end

@interface NSAttributedString (Chocolat)
- (id)attributedStringWithHighlightColor:(id)arg1;
@end

@interface NSFont (CHFontAttributes)
@end

@interface NSMutableAttributedString (CHMutableAttributedStringAdditions)
- (void)appendString:(id)arg1 attributes:(id)arg2;
@end

@interface NSString (UIStringDrawingCompatibility)
- (struct CGSize)sizeWithFont:(id)arg1;
- (void)drawCenteredAtPoint:(struct CGPoint)arg1 withFont:(id)arg2 color:(id)arg3;
- (void)drawAtPoint:(struct CGPoint)arg1 withFont:(id)arg2;
@end

@interface NSAttributedString (CHAttributedStringAdditions)
+ (id)attributedStringWithString:(id)arg1 font:(id)arg2;
+ (id)attributedStringWithString:(id)arg1 attributes:(id)arg2;
@end

@interface NSFont (Chocolat)
+ (id)fontPreventingAutoActivationWithName:(id)arg1 size_bc:(double)arg2;
+ (id)fontWithName:(id)arg1 size_bc:(double)arg2;
+ (void)setPreventsAutoActivation_bc:(BOOL)arg1;
+ (BOOL)preventsAutoActivation_bc;
@end

@interface NSString (NSString_Color)
+ (id)staticColorDictionary;
- (id)colorFromHSL;
- (id)colorFromHexColorWithColorSpace:(id)arg1;
- (id)sRGBColorFromHexColor;
- (id)rgbCalibratedColorFromHexColor;
- (id)colorFromRGB;
- (id)colorValue;
@end

@interface NSColor (NSColor_String)
- (id)stringValueWithAlpha:(BOOL)arg1;
- (id)hexValue;
@end

@interface NSTrackingArea (CHTrackingAreaExtensions)
+ (id)trackingAreaWithOptions:(unsigned long long)arg1 owner:(id)arg2;
+ (id)mouseEnterExitTrackingArea:(id)arg1;
@end

@interface NSView (Autolayout)
- (id)widthConstraint;
- (id)verticalConstraintsWithView:(id)arg1;
- (id)verticalConstraintWithView:(id)arg1;
- (void)showWithWidth:(double)arg1;
- (void)showWithHeight:(double)arg1;
- (void)hideWithZeroWidth;
- (void)hideWithZeroHeight;
- (id)heightConstraint;
- (void)constrainWidth:(double)arg1 priority:(float)arg2;
- (void)constrainWidth:(double)arg1;
- (void)constrainHeight:(double)arg1 priority:(float)arg2;
- (void)constrainHeight:(double)arg1;
- (void)addSubview:(id)arg1 constrainedBy:(struct NSEdgeInsets)arg2 priority:(float)arg3;
- (id)constraintWithSelfAsFirstItemBoundToAttribute:(long long)arg1;
@end

@interface NSLayoutConstraint (Utility)
- (BOOL)isRequired;
@end

@interface NSBezierPath (CHBezierPathAdditions)
+ (id)bezierCurveFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
+ (id)bezierPathFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (void)writeDebugFileNamed:(id)arg1;
- (BOOL)isClosed;
- (struct CGRect)safeBounds;
- (id)bezierPathByGrowingBy:(double)arg1;
- (void)drawInnerShadow:(id)arg1;
- (id)bezierPathWithOuterPathOfSize:(double)arg1;
- (struct CGPath *)mutableCGPathCopy;
- (struct CGPath *)createCGPath_bc;
- (id)outlinePath;
- (void)applyPropertiesToContext:(struct CGContext *)arg1;
- (void)clipInBlock:(CDUnknownBlockType)arg1;
- (void)strokeInside;
- (void)strokeOutside;
@end

@interface NSBezierPath (NSPrivate)
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;
+ (id)bezierPathWithPathFromContext:(struct CGContext *)arg1;
- (id)strokedPathHelperContext;
- (void)setCGPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
@end

@interface NSAttributedString (CHAttributedString)
- (BOOL)attributesMatch:(id)arg1 comparison:(CDUnknownBlockType)arg2;
- (BOOL)attributesMatch:(id)arg1;
- (id)attributeOrNil:(id)arg1 atIndex:(unsigned long long)arg2;
@end

@interface NSString (WordRanges)
- (id)wordRanges;
- (void)enumerateWordRanges:(CDUnknownBlockType)arg1;
@end

@interface NSView (MSInterfaceTheme) <MSInterfaceTheme>
- (BOOL)isMainWindow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSWindow (MSInterfaceTheme) <MSInterfaceTheme>

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSEvent (EventShouldDrag)
- (BOOL)isRightClick;
- (BOOL)isDoubleClick;
- (BOOL)shouldStartDrag;
@end

@interface NSWindow (Chocolat)
- (void)commitEditedTextRetainingFirstResponder;
- (BOOL)closePopovers;
- (struct CGPoint)convertPointFromScreen:(struct CGPoint)arg1;
@end

@interface NSViewController (BCPopover)
- (id)presentViewController:(id)arg1 asBCPopoverRelativeToView:(id)arg2 preferredEdge:(unsigned long long)arg3 screenEdgeBehaviour:(long long)arg4;
@end

@interface NSShadow (CHShadowExtensions)
+ (void)clearShadow;
+ (id)shadowWithColor:(id)arg1 offset:(struct CGSize)arg2 blur:(double)arg3;
@property(nonatomic) double blurRadius;
@property(nonatomic) double offsetY;
@property(nonatomic) double offsetX;
@end

@interface NSResponder (Chocolat)
+ (BOOL)supportsTouchBar;
@property(readonly, nonatomic) BOOL supportsTouchBar;
- (BOOL)followsResponder:(id)arg1;
@end

@interface SUAppcastItem (MSAssetLibraryUpdater)
@property(readonly, nonatomic) unsigned long long downloadFileSize;
@end

@interface NSBezierPath (Clockwise)
- (id)subPathsOrderedBySizeAfterOutlining;
- (int)direction;
- (id)bezierPathByMakingAntiClockwiseIfNecessary;
- (id)bezierPathByMakingClockwiseIfNecessary;
@end

@interface CATransaction (MSDisableAnimation)
+ (void)disableAnimationsInBlock:(CDUnknownBlockType)arg1;
@end

@interface NSString (Slug)
- (id)uniqueSlugUsingEarlierSlugs:(id)arg1 atIndex:(long long)arg2;
- (id)uniqueSlugUsingEarlierSlugs:(id)arg1;
@property(readonly) NSString *slug;
@end

@interface NSMenuItem (SharedObjects)
- (BOOL)generatePreviewWithColorSpace:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) NSArray *shareableObjectReferences;
@property(readonly, nonatomic) NSArray *symbolMasterReferences;
@end

@interface NSObject (MSShareableObjectReferenceExtention)
- (Class)shareableObjectReferenceClass_bc;
@end

@interface NSIndexPath (MSShapeHandles)
+ (id)indexPathForPoint:(unsigned long long)arg1 ofShape:(unsigned long long)arg2;
+ (id)indexPathForComponent:(unsigned long long)arg1 point:(unsigned long long)arg2 ofShape:(unsigned long long)arg3;
- (void)checkIfComponentIndexPath:(BOOL)arg1;
@property(readonly, nonatomic, getter=handle_ms) unsigned long long handle;
@property(readonly, nonatomic, getter=shape_ms) unsigned long long shape;
@property(readonly, nonatomic, getter=point_ms) unsigned long long point;
@property(readonly, nonatomic, getter=component_ms) unsigned long long component;
- (id)indexPathWithComponent:(unsigned long long)arg1;
@end

@interface NSBezierPath (Fitting)
- (id)bezierPathByCurveFitting;
@end

@interface NSBezierPath (Scissors)
- (id)bezierPathByCuttingBeforeIndex:(unsigned long long)arg1;
- (unsigned long long)bezierIndexForPoint:(struct CGPoint)arg1;
@end

@interface NSString (Math)
+ (id)nativeDecimalSeparator;
+ (id)numberFormatter;
- (id)mathSet;
- (BOOL)containsMathSymbols;
- (id)stringByCalculatingMath;
- (double)floatValueUsingMath;
- (double)floatValueByUsingNumberFormatter;
- (id)stringBySanitizingForNumberFormatter:(id)arg1;
- (id)stringByCalculatingPercentagesInContextOfSize:(struct CGRect)arg1 onAxis:(unsigned long long)arg2;
- (double)floatValueInContextOfSize:(struct CGRect)arg1 onAxis:(unsigned long long)arg2;
@end

@interface NSColor (Manifest)
@property(readonly, nonatomic) NSArray *manifestComponents;
@end

@interface NSDictionary (Typecheck)
- (id)objectForKey:(id)arg1 ofType:(Class)arg2;
@end

@interface NSDate (NTP)
+ (id)dateWithNTPRepresentation_bc:(unsigned long long)arg1;
+ (id)NTPEpoch_bc;
- (unsigned long long)NTPRepresentation_bc;
@end

@interface NSData (BCReceiptUtilities)
- (id)hexString;
@end

@interface NSObject (MSBaseArchiver)
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
@end

@interface NSObject (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSString (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSNumber (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSValue (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSDictionary (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSArray (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSData (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSImage (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSAttributedString (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSTextList (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSColor (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSParagraphStyle (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSTextTab (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSFont (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSDictionary (MSBaseArchiver) <MSCoding>
- (id)initWithUnarchiver:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
@end

@interface NSArray (MSBaseArchiver) <MSCoding>
- (id)initWithUnarchiver:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
@end

@interface NSString (MSBaseArchiver) <MSCoding>
- (id)initWithUnarchiver:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
@end

@interface NSAttributedString (MSBaseArchiver) <MSCoding>
- (id)initWithUnarchiver:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
@end

@interface NSData (MSBaseArchiver) <MSCoding>
- (id)initWithUnarchiver:(id)arg1;
- (void)encodeWithArchiver:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
@end

@interface NSColorSpace (Extensions)
+ (id)colorSpaceForSketchColorSpace:(unsigned long long)arg1;
@end

@interface NSBezierPath (JSON)
+ (id)bezierPathWithJSONString_ms:(id)arg1;
+ (id)bezierPathWithJSON_ms:(id)arg1;
- (id)JSONDescription_ms;
- (id)JSONRepresetation_ms;
@end

@interface NSDictionary (MSAttributedString)
- (id)dictionaryByTranslatingNSColorsToMSImmutableColorsInColorSpace:(id)arg1;
- (id)dictionaryByConvertingMSImmutableColorsToNSColorsInColorSpace:(id)arg1;
- (id)dictionaryByConvertingNSColorsToMSImmutableColorsInColorSpace:(id)arg1;
- (id)dictionaryByMappingComponentsDictionaryToMSImmutableColor;
- (id)dictionaryByMappingMSImmutableColorsToComponentsDictionary;
- (id)dictionaryByMappingFontDescriptorsToFont;
- (id)dictionaryByMappingFontToFontDescriptors;
- (id)prepareStringAttributesAfterDecoding;
- (id)prepareStringAttributesForEncoding;
@end

@interface NSArray (ModelSupport)
- (BOOL)propertiesAreEqual:(id)arg1;
- (void)enumerateDescendants:(CDUnknownBlockType)arg1 withAncestors:(id)arg2;
- (BOOL)hasDefaultValues;
@end

@interface NSString (ModelSupport)
- (BOOL)hasDefaultValues;
@end

@interface NSObject (ModelSupport)
- (BOOL)propertiesAreEqual:(id)arg1;
@end

@interface NSObject (MSKeyedUnarchiver)
- (id)initWithCoder:(id)arg1;
@end

@interface NSBezierPath (NSBezierPath_BooleanBridge)
- (id)bezierPathBySubtractingPaths:(id)arg1;
- (id)booleanExclusiveOrWith:(id)arg1;
- (id)booleanSubtractWith:(id)arg1;
- (id)booleanIntersectWith:(id)arg1;
- (id)booleanUnionWith:(id)arg1;
- (void)debugWriteBooleanOp:(long long)arg1 withPath:(id)arg2;
- (id)booleanOp:(long long)arg1 withPath:(id)arg2;
@end

@interface NSBezierPath (NaNChecks)
+ (void)nanSafeSwizzleSelector:(SEL)arg1 overrideSelector:(SEL)arg2;
+ (void)load;
- (void)bc_nan_curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)bc_nan_lineToPoint:(struct CGPoint)arg1;
- (void)bc_nan_moveToPoint:(struct CGPoint)arg1;
@end

@interface NSBezierPath (NSBezierPath_Various)
+ (id)impliedDashPatternFromDashPattern:(id)arg1 paddingToLength:(unsigned long long)arg2;
+ (id)validDashPatternFromProposedDashPattern:(id)arg1 padIfNeeded:(BOOL)arg2;
+ (double)validDashLengthFromProposedDashLength:(double)arg1;
+ (id)bezierPathWithSubPaths:(id)arg1;
+ (id)bezierCurveFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
+ (id)bezierPathFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (void)setDashPattern:(id)arg1;
- (void)clampDashPattern:(double *)arg1 count:(unsigned long long)arg2;
- (void)strokeWithWidth:(double)arg1;
- (void)fillNonZero;
- (void)fillEvenOdd;
- (id)bezierPathWithSquareLineCapStyle;
- (id)bezierPathWithLineWidth:(double)arg1;
- (id)outerPathWithRect:(struct CGRect)arg1;
- (id)insetPathBy:(double)arg1;
- (BOOL)outlinePathWithWidth:(double)arg1 containsPoint:(struct CGPoint)arg2;
- (id)outlinePathWithWidth:(double)arg1;
- (BOOL)containsRect:(struct CGRect)arg1;
- (void)debugWriteToFileNamed:(id)arg1;
- (id)simplifyWithMargin:(long long)arg1;
- (id)simplify;
- (id)subPaths;
- (id)scaleBy:(double)arg1;
@end

@interface NSBezierPath (NSBezierPath_Slopes)
- (id)bezierPathByRearrangingSubPathsIfNecessary;
- (id)bezierPathByReplacingElementAtIndexWithMoveTo:(long long)arg1;
- (id)bezierPathByReplacingClosePathByLineToComponents;
- (id)bezierPathByRemovingSubsequentMoveToComponents;
- (id)bezierPathByReplacingMoveToByLineToComponents;
- (id)bezierPathByApplyingModifierBlock:(CDUnknownBlockType)arg1;
- (id)subDivideAtPoint:(struct CGPoint)arg1;
- (void)drawDebugWithZoom:(double)arg1;
- (id)bezierPathBySmootheningSubPath:(double)arg1;
- (struct CGPoint)pointAtIndex:(long long)arg1;
- (void)appendBezierPathByRemovingMoveToPoint:(id)arg1;
- (id)bezierPathByJoiningWithBezierPath:(id)arg1;
- (BOOL)isEqualToBezierPath:(id)arg1;
- (double)lengthWithMaximumError:(double)arg1;
- (double)length;
- (id)bezierPathByTrimmingToLength:(double)arg1 withMaximumError:(double)arg2;
- (id)bezierPathByTrimmingToLength:(double)arg1;
- (id)bezierPathFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (id)bezierPathByTrimmingFromLength:(double)arg1 withMaximumError:(double)arg2;
- (id)bezierPathByTrimmingFromLength:(double)arg1;
- (struct CGPoint)pointOnPathAtLength:(double)arg1 slope:(double *)arg2;
- (struct CGPoint)pointOnPathAtLength:(double)arg1;
- (double)slopeOnPathAtLength:(double)arg1;
- (struct CGPoint)firstPoint;
- (struct CGPoint)lastPoint;
@end

@interface NSObject (ModelDefaultValueSupport)
- (BOOL)hasDefaultValues;
@end

@interface NSObject (ModelParentSupport)
- (void)breakConnectionWith:(id)arg1;
- (void)setParentObject:(id)arg1;
- (id)parentObject;
@end

@interface NSObject (TreeTraversal)
- (id)mapTreeWithLeafTransformBlock:(CDUnknownBlockType)arg1;
@end

@interface NSObject (ImmutableObjectSupport)
+ (Class)immutableClass;
+ (Class)mutableClass;
- (id)newMutableCounterpart;
- (id)immutableModelObject;
@end

@interface NSObject (ModelCopying)
- (id)copyWithOptions:(unsigned long long)arg1;
@end

@interface NSFont (ModelSyncSupport)
- (BOOL)propertiesAreEqual:(id)arg1;
@end

@interface NSDictionary (ModelSyncSupport)
- (BOOL)propertiesAreEqual:(id)arg1;
- (BOOL)fuzzyIsEqualFloatValueForKey:(id)arg1 otherDictionary:(id)arg2 precision:(double)arg3;
@end

@interface NSArray (ModelSyncSupport)
- (BOOL)propertiesAreEqual:(id)arg1;
@end

@interface NSFontDescriptor (ModelSyncSupport)
- (BOOL)propertiesAreEqual:(id)arg1;
@end

@interface NSTextList (ModelSyncSupport)
- (BOOL)propertiesAreEqual:(id)arg1;
@end

@interface NSParagraphStyle (ModelSyncSupport)
- (id)propertiesDictionary;
- (BOOL)propertiesAreEqual:(id)arg1;
@end

@interface BCJSONDecoder (MSJSONUnarchiver)
@property(nonatomic) __weak MSJSONUnarchiver *unarchiver;
@end

@interface NSObject (BCJSONDecoding)
- (id)initWithJSONDecoder:(id)arg1;
@end

@interface NSSet (BezierInterval)
- (id)lastOffsetInBezierInterval_ms;
- (id)firstOffsetInBezierInterval_ms;
- (id)sortedOffsets_ms;
- (id)sortedOffsetsInBezierInterval_ms;
- (id)offsetsInBezierInterval_ms;
@end

@interface NSMutableAttributedString (Stripping)
- (void)removeUnsupportedAttributes;
@end

@interface NSMutableParagraphStyle (Striping)
- (void)removeUnsupportedAttributes;
@end

@interface NSTextStorage (MSCalculateBounds)
- (struct CGRect)computeFlexibleLayout;
- (struct CGRect)calculateFlexibleBounds:(struct CGRect)arg1;
- (struct CGRect)computeFixedLayout;
- (struct CGRect)calculateFixedBounds:(struct CGRect)arg1;
- (struct CGRect)glyphBounds;
- (struct CGRect)boundsForTextBehaviour:(long long)arg1 original:(struct CGRect)arg2;
@end

@interface NSBezierPath (GIF)
- (id)animatedGIFRepresentation_ms;
@end

@interface NSImage (Alpha)
- (BOOL)imageHasAlpha;
@end

@interface NSImageRep (Alpha)
- (BOOL)repSupportsAlpha;
@end

@interface NSPDFImageRep (Alpha)
- (BOOL)repSupportsAlpha;
@end

@interface NSEPSImageRep (Alpha)
- (BOOL)repSupportsAlpha;
@end

@interface NSBitmapImageRep (Alpha)
- (BOOL)repSupportsAlpha;
@end

@interface NSImage (Asset)
- (BOOL)isAssetEqual:(id)arg1;
- (unsigned long long)assetType;
@end

@interface NSAttributedString (ColorSpaceConversion)
- (id)convertedToColorSpace:(id)arg1;
- (id)attributedStringWithDocumentColorSpace:(id)arg1 convert:(BOOL)arg2;
- (id)standardAttributedStringWithDocumentColorSpace:(id)arg1;
@end

@interface NSAttributedString (MSAttributedStringInternalSupport)
- (id)initWithString:(id)arg1 attributedStringAttributes:(id)arg2;
- (id)attributedStringAttributes;
- (id)attributedStringByApplyingBlock:(CDUnknownBlockType)arg1;
@end

@interface NSParagraphStyle (Chocolat) <BCJSONEncoding>
- (id)initWithJSONDecoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)propertiesToArchive;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSTextTab (BCJSONEncoding)
- (id)initWithJSONDecoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;
@end

@interface NSTextList (BCJSONEncoding)
- (id)initWithJSONDecoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;
@end

@interface NSParagraphStyle (MSFixedLineHeight)
@property(readonly, nonatomic) double fixedLineHeight_ms;
@end

@interface NSMutableParagraphStyle (MSFixedLineHeight)
@property(nonatomic) double fixedLineHeight_ms;
@end

@interface NSImage (MSSmallerArchiving)
+ (id)imageFromDataArchive:(id)arg1;
- (id)PDFImageRep;
- (id)EPSImageRep;
- (BOOL)hasEPSData;
- (id)bitmapData;
- (BOOL)hasPDFData;
- (id)dataForArchiving;
@end

@interface NSImageRep (MSSmallerArchiving)
- (id)dataForArchiving;
- (BOOL)hasEPSRepresentation;
- (BOOL)hasPDFRepresentation;
@end

@interface NSBitmapImageRep (MSSmallerArchiving)
- (id)dataForArchiving;
@end

@interface NSPDFImageRep (MSSmallerArchiving)
- (id)dataForArchiving;
- (BOOL)hasPDFRepresentation;
@end

@interface NSEPSImageRep (MSSmallerArchiving)
- (id)dataForArchiving;
- (BOOL)hasEPSRepresentation;
@end

@interface NSBezierPath (DebugTools)
- (void)appendArrowAtPoint_ms:(struct CGPoint)arg1 tangent:(struct MSTangent)arg2 size:(double)arg3 scale:(double)arg4;
- (void)appendCircleAtPoint_ms:(struct CGPoint)arg1 radius:(double)arg2 scale:(double)arg3;
- (void)appendSquareAtPoint_ms:(struct CGPoint)arg1 size:(double)arg2 scale:(double)arg3;
- (double)debugScale_ms;
@end

@interface BCJSONEncoder (MSJSONArchiver)
@property(nonatomic) __weak MSJSONArchiver *archiver;
@end

@interface NSObject (MSCoding) <MSCoding>
- (void)encodeWithArchiver:(id)arg1;
- (id)initWithUnarchiver:(id)arg1 migratingFrom:(long long)arg2 toVersion:(long long)arg3;
- (id)initWithUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSString *archiveReferenceIdentifier_bc;
@end

@interface NSBezierPath (NSBezierPath_Enumerator)
- (BOOL)customIsEqual:(id)arg1;
- (void)appendBezierPathItem:(id)arg1;
- (id)lastItem;
- (id)itemAtIndex:(long long)arg1;
- (id)bezierCurves;
- (id)reverseEnumerator;
- (id)enumerator;
@end

@interface NSMutableAttributedString (MSList)
- (id)paragraphStyle;
- (id)attributeForKey:(id)arg1;
- (id)stringByStrippingMarkers:(id)arg1 oldList:(id)arg2 index:(long long)arg3;
- (id)stringByStrippingNewlinesSpacesAndTabs:(id)arg1;
- (id)stripListMarkers:(id)arg1 oldList:(id)arg2 lineIndex:(long long)arg3;
- (id)strippedLinesFromTextStorage:(id)arg1 oldList:(id)arg2;
- (id)combineLines:(id)arg1 intoList:(id)arg2;
- (id)normalTabStops;
- (id)listTabStops;
- (void)updateListFrom:(id)arg1 toList:(id)arg2;
- (void)updateListStyle:(id)arg1;
- (id)currentListStyle;
@end

@interface NSColor (ColorTranslationWithoutConversion)
- (id)colorTranslatedToColorSpace:(id)arg1;
@end

@interface NSGradient (SketchModel)
- (id)interpolatedGradientWithExtraStops:(unsigned long long)arg1 function:(CDUnknownBlockType)arg2;
@end

@interface NSObject (MSKeyedArchiverHelper)
- (id)replacementObjectForCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSUserDefaults (NSUserDefaultsAdditions)
- (id)colorForKey:(id)arg1;
- (void)setColor:(id)arg1 forKey:(id)arg2;
@end

@interface NSFontDescriptor (JSONEncoder)
- (id)initWithJSONDecoder:(id)arg1;
- (void)encodeAsJSON:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
@end

@interface NSEPSImageRep (PDFData)
- (id)PDFRepresentation_ms;
@end

@interface NSTextStorage (SketchRenderingSupport)
- (void)applyTextColor:(id)arg1 forRange:(struct _NSRange)arg2 context:(id)arg3;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3 temporarily:(BOOL)arg4;
@end

@interface NSTextStorage (CollectAttributes)
- (void)setAttributeValuesByRange:(id)arg1 forKey:(id)arg2;
- (id)attributeValuesByRangeForKey:(id)arg1 range:(struct _NSRange)arg2;
- (id)attributeValuesByRangeForKey:(id)arg1;
@end

@interface NSLayoutManager (CollectTemporaryAttributes)
- (void)setTemporaryAttributes:(id)arg1 forKey:(id)arg2;
- (id)temporaryAttributesForKey:(id)arg1;
@end

@interface NSParagraphStyle (SVG)
- (void)addSVGAttributes:(id)arg1;
@end

@interface NSBezierPath (SVGBezierPath)
+ (id)bezierPathFromSVGString:(id)arg1;
- (id)svgPathAttribute;
- (void)addSVGArcWithAngle:(double)arg1 radius:(struct CGSize)arg2 from:(struct CGPoint)arg3 to:(struct CGPoint)arg4 largeArc:(BOOL)arg5 sweep:(BOOL)arg6;
@end

@interface NSString (SVG)
+ (id)svgStringWithPercentageFractionalValue:(double)arg1;
+ (id)svgStringWithPercentageValue:(double)arg1;
+ (id)svgStringWithNumberValue:(double)arg1;
+ (id)svgStringWithPixelValue:(double)arg1;
- (id)svgURL;
@end

@interface NSData (Base64)
+ (id)dataWithBase64Encoding_xcd:(id)arg1;
- (id)base64Encoding_xcd;
@end

@interface NSXMLNode (SVG)
+ (id)attributeWithName:(id)arg1 percentageFractionalValue:(double)arg2;
+ (id)attributeWithName:(id)arg1 percentageValue:(double)arg2;
+ (id)attributeWithName:(id)arg1 numberValue:(double)arg2;
+ (id)attributeWithName:(id)arg1 pixelValue:(double)arg2;
+ (id)numbersFromString:(id)arg1 scale:(double)arg2;
+ (id)numberFromString:(id)arg1 scale:(double)arg2;
+ (double)doubleFromString:(id)arg1 scale:(double)arg2;
- (id)cssClassNamesWithBase:(id)arg1;
- (id)simplifyAttributesIgnoringElements:(id)arg1 attributes:(id)arg2;
- (id)numberValuesWithScale:(double)arg1;
- (id)numberValues;
- (struct CGRect)rectValue;
- (long long)integerValue;
- (double)doubleValueWithScale:(double)arg1;
- (double)doubleValue;
- (id)numberValueWithScale:(double)arg1;
- (id)numberValue;
- (double)doubleValueFromAttributeWithName:(id)arg1;
@end

@interface NSMutableArray (SVGNodeAdditions)
+ (id)illegalIdentifierChars;
- (void)removeAttributeWithName:(id)arg1;
- (void)addAttributeWithName:(id)arg1 percentageFractionalValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 percentageValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 numberValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 pixelValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 stringValue:(id)arg2;
- (void)addAttributeForID:(id)arg1;
- (unsigned long long)indexOfAttributeWithName:(id)arg1;
@end

@interface NSXMLElement (SVG)
- (void)addAttributeWithName:(id)arg1 percentageFractionalValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 percentageValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 numberValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 pixelValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 stringValue:(id)arg2;
- (id)cssClassNamesWithBase:(id)arg1;
- (id)urlLink;
- (id)localLink;
- (id)simplifyAttributesIgnoringElements:(id)arg1 attributes:(id)arg2;
- (void)removeAttributesMatchingParentIgnoringAttributes:(id)arg1;
- (id)attributesWithStyleMergedDefaults:(id)arg1;
- (id)nodeOrParentNodeWithName:(id)arg1;
- (id)colorFromAttributeWithName:(id)arg1;
- (double)doubleValueFromPercentageAttributeWithName:(id)arg1 orDefault:(double)arg2;
- (double)doubleValueFromPercentageAttributeWithName:(id)arg1 alternate:(id)arg2;
- (double)doubleValueFromPercentageAttributeWithName:(id)arg1;
- (struct CGRect)rectValueWithXScale:(double)arg1 yScale:(double)arg2;
- (struct CGRect)rectValue;
- (struct CGRect)rectValueFromAttributeWithName:(id)arg1;
- (long long)intValueFromAttributeWithName:(id)arg1;
- (id)stringFromAttributeWithName:(id)arg1;
- (id)numbersFromAttributeWithName:(id)arg1 scale:(double)arg2;
- (id)numbersFromAttributeWithName:(id)arg1;
- (double)doubleValueFromAttributeWithName:(id)arg1 scale:(double)arg2;
- (double)doubleValueFromAttributeWithName:(id)arg1 alternate:(id)arg2;
- (double)doubleValueFromAttributeWithName:(id)arg1;
- (id)numberFromAttributeWithName:(id)arg1 scale:(double)arg2;
- (id)numberFromAttributeWithName:(id)arg1;
- (BOOL)gotAttributeWithName:(id)arg1;
@end

@interface NSObject (SVG)
- (id)safeCastToClass:(Class)arg1;
@end

@interface NSFont (SVG)
- (void)addSVGAttributes:(id)arg1;
@end

@interface NSImage (SketchSVG)
- (id)embeddedXlinkValue;
@end

@interface NSObject (SVGExport)
- (void)addSVGAttributes:(id)arg1 exporter:(id)arg2;
@end

@interface NSXMLDocument (SVGDocument)
+ (id)SVGDocumentWithBezierPath:(id)arg1;
- (id)bezierPathElement:(id)arg1;
- (id)data;
- (id)description;
- (id)createSVGForBezierPath:(id)arg1;
@end

@interface NSString (NSIntegerString)
+ (id)stringWithInt:(long long)arg1 suffix:(id)arg2;
@end

@interface NSString (SHA1)
- (id)sha1;
@end

@interface NSData (SHA1)
- (id)sha1AsString;
- (id)sha1;
@end

